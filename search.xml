<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>live2D看板娘设置</title>
      <link href="/posts/f571.html"/>
      <url>/posts/f571.html</url>
      
        <content type="html"><![CDATA[<h1 id="基础设置"><a href="#基础设置" class="headerlink" title="基础设置"></a>基础设置</h1><h2 id="1-模型插件"><a href="#1-模型插件" class="headerlink" title="1.模型插件"></a>1.模型插件</h2><p>在hexo根目录进入git bash，输入以下命令安装模型插件</p><pre class="line-numbers language-Text" data-language="Text"><code class="language-Text"># npm install --save hexo-helper-live2d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>卸载模型</p><pre class="line-numbers language-Text" data-language="Text"><code class="language-Text"># npm uninstall --save hexo-helper-live2d <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-挑选模型"><a href="#2-挑选模型" class="headerlink" title="2.挑选模型"></a>2.挑选模型</h2><p><a href="https://github.com/xiazeyu/live2d-widget-models">live2d模型仓库直达</a></p><h3 id="部分模型展示"><a href="#部分模型展示" class="headerlink" title="部分模型展示"></a>部分模型展示</h3><table>    <tr>        <td><center><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202401272109891.png"></center>        </td>        <td><center><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202401272122120.png"></center>        </td>    </tr></table><p>↓ 各个模型库<br>使用 npm install {packagename}&#96;安装模型</p><ul><li><code>live2d-widget-model-chitose</code></li><li><code>live2d-widget-model-epsilon2_1</code></li><li><code>live2d-widget-model-gf</code></li><li><code>live2d-widget-model-haru/01</code> (use <code>npm install --save live2d-widget-model-haru</code>)</li><li><code>live2d-widget-model-haru/02</code> (use <code>npm install --save live2d-widget-model-haru</code>)</li><li><code>live2d-widget-model-haruto</code></li><li><code>live2d-widget-model-hibiki</code></li><li><code>live2d-widget-model-hijiki</code></li><li><code>live2d-widget-model-izumi</code></li><li><code>live2d-widget-model-koharu</code></li><li><code>live2d-widget-model-miku</code></li><li><code>live2d-widget-model-ni-j</code></li><li><code>live2d-widget-model-nico</code></li><li><code>live2d-widget-model-nietzsche</code></li><li><code>live2d-widget-model-nipsilon</code></li><li><code>live2d-widget-model-nito</code></li><li><code>live2d-widget-model-shizuku</code></li><li><code>live2d-widget-model-tororo</code></li><li><code>live2d-widget-model-tsumiki</code></li><li><code>live2d-widget-model-unitychan</code></li><li><code>live2d-widget-model-wanko</code></li><li><code>live2d-widget-model-z16</code></li></ul><p>我用的是 <code>npm install live2d-widget-model-hibiki</code></p><h3 id="html实现多张图片同行"><a href="#html实现多张图片同行" class="headerlink" title="html实现多张图片同行"></a>html实现多张图片同行</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>center</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202401272109891.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>图1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>center</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>center</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202401272122120.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>图2 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>center</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>原文链接：<a href="https://blog.csdn.net/qq_33826564/article/details/81303230">https://blog.csdn.net/qq_33826564/article/details/81303230</a></p><h3 id="3-详细配置"><a href="#3-详细配置" class="headerlink" title="3.详细配置"></a>3.详细配置</h3><p>1.提前在根目录下创建 <code>live2d_models</code> 目录</p><p><img src="https://diy-sprint.top/img/cjml.png" alt="img"></p><p>2.下载好的模型库会在根目录node_modules文件夹中，在该文件夹中搜索模型库名称<code>live2d-widget-model-hibiki</code>将里面的内容复制到提前创建好的目录下<code>live2d_models</code></p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202401272129897.png" alt="img"></p><p>3.开始配置根目录下的<code>_config.yml</code> 文件在底部添加如下操作</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 看板娘</span><span class="token key atrule">live2d</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment">#enable: false</span>  <span class="token key atrule">scriptFrom</span><span class="token punctuation">:</span> local <span class="token comment"># 默认</span>  <span class="token key atrule">pluginRootPath</span><span class="token punctuation">:</span> live2dw/ <span class="token comment"># 插件在站点上的根目录(相对路径)</span>  <span class="token key atrule">pluginJsPath</span><span class="token punctuation">:</span> lib/ <span class="token comment"># 脚本文件相对与插件根目录路径</span>  <span class="token key atrule">pluginModelPath</span><span class="token punctuation">:</span> assets/ <span class="token comment"># 模型文件相对与插件根目录路径</span>  <span class="token comment"># scriptFrom: jsdelivr # jsdelivr CDN</span>  <span class="token comment"># scriptFrom: unpkg # unpkg CDN</span>  <span class="token comment"># scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url</span>  <span class="token key atrule">tagMode</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span>  <span class="token key atrule">debug</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 调试, 是否在控制台输出日志</span>  <span class="token key atrule">model</span><span class="token punctuation">:</span>    <span class="token key atrule">use</span><span class="token punctuation">:</span> live2d<span class="token punctuation">-</span>widget<span class="token punctuation">-</span>model<span class="token punctuation">-</span>hibiki    <span class="token comment"># use: live2d-widget-model-wanko # npm-module package name</span>    <span class="token comment"># use: wanko # 博客根目录/live2d_models/ 下的目录名</span>    <span class="token comment"># use: ./wives/wanko # 相对于博客根目录的路径</span>    <span class="token comment"># use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url</span>  <span class="token key atrule">display</span><span class="token punctuation">:</span>    <span class="token key atrule">position</span><span class="token punctuation">:</span> right    <span class="token key atrule">width</span><span class="token punctuation">:</span> <span class="token number">145</span>    <span class="token key atrule">height</span><span class="token punctuation">:</span> <span class="token number">315</span>    <span class="token key atrule">hOffset</span><span class="token punctuation">:</span> <span class="token number">60</span> <span class="token comment"># 水平偏移 </span>    <span class="token key atrule">vOffset</span><span class="token punctuation">:</span> <span class="token number">5</span> <span class="token comment"># 垂直偏移</span>  <span class="token key atrule">mobile</span><span class="token punctuation">:</span>    <span class="token key atrule">show</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 是否在移动设备上显示</span>    <span class="token key atrule">scale</span><span class="token punctuation">:</span> <span class="token number">0.5</span> <span class="token comment"># 移动设备上的缩放       </span>  <span class="token key atrule">react</span><span class="token punctuation">:</span>    <span class="token key atrule">opacityDefault</span><span class="token punctuation">:</span> <span class="token number">0.7</span>    <span class="token key atrule">opacityOnHover</span><span class="token punctuation">:</span> <span class="token number">0.8</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>model:  use: live2d-widget-model-hibikiuse <code># 这里填你喜欢的模型</code></p></blockquote><h1 id="增强版设置"><a href="#增强版设置" class="headerlink" title="增强版设置"></a>增强版设置</h1><h3 id="1-先卸载helper-live2d"><a href="#1-先卸载helper-live2d" class="headerlink" title="1.先卸载helper-live2d"></a>1.先卸载helper-live2d</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">npm uninstall hexo<span class="token punctuation">-</span>helper<span class="token punctuation">-</span>live2d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-下载大神的配置"><a href="#2-下载大神的配置" class="headerlink" title="2.下载大神的配置"></a>2.<a href="https://github.com/stevenjoezhang/live2d-widget">下载大神的配置</a></h3><h3 id="3-解压配置"><a href="#3-解压配置" class="headerlink" title="3.解压配置"></a>3.解压配置</h3><p>解压到<code>\themes\主题\source</code>目录并改名为<code>live2d-widget</code></p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202401272138049.png" alt="img"></p><h3 id="4-修改路径"><a href="#4-修改路径" class="headerlink" title="4.修改路径"></a>4.修改路径</h3><p>修改<code>autoload.js</code>文件，将大神路径改为相对路径</p><pre class="line-numbers language-Text" data-language="Text"><code class="language-Text">&#x2F;&#x2F; 注意：live2d_path 参数应使用绝对路径&#x2F;&#x2F;const live2d_path &#x3D; &quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;stevenjoezhang&#x2F;live2d-widget@latest&#x2F;&quot;;const live2d_path &#x3D; &quot;&#x2F;live2d-widget&#x2F;&quot;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="5-修改代码"><a href="#5-修改代码" class="headerlink" title="5.修改代码"></a>5.修改代码</h3><p>修改<code>\themes\主题\layout\_partial</code>下的<code>head.ejs</code>，next主题在&#x2F;themes&#x2F;next&#x2F;layout&#x2F;_layout.swing目录下</p><pre class="line-numbers language-Text" data-language="Text"><code class="language-Text">&lt;!--看板娘--&gt;&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;jquery&#x2F;dist&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;&lt;script src&#x3D;&quot;&#x2F;live2d-widget&#x2F;autoload.js&quot;&gt;&lt;&#x2F;script&gt;&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;font-awesome&#x2F;css&#x2F;font-awesome.min.css&quot;&#x2F;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-启用配置"><a href="#6-启用配置" class="headerlink" title="6.启用配置"></a>6.启用配置</h3><p>在<code>_config.yml</code>全局配置文末添加</p><pre class="line-numbers language-Text" data-language="Text"><code class="language-Text">#自定义看板娘动画live2d: enable: true  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>想修改看板娘大小、位置、格式、文本内容等，可查看并修改 waifu-tips.js、waifu-tips.json、waifu.css文件。</p><h3 id="7-查看并部署"><a href="#7-查看并部署" class="headerlink" title="7.查看并部署"></a>7.查看并部署</h3><pre class="line-numbers language-none"><code class="language-none">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s &amp;&amp; hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这条命令会首先清除缓存 (<code>hexo clean</code>), 然后生成静态网页 (<code>hexo g</code>), 接着启动本地服务器预览 (<code>hexo s</code>)，最后部署到远程仓库 (<code>hexo d</code>)。请注意，在部署完成后，由于<code>hexo s</code>仍在运行，本地预览将会继续提供服务，直到你手动停止它(<code>Ctrl C</code>)</p><h3 id="8-演示效果"><a href="#8-演示效果" class="headerlink" title="8.演示效果"></a>8.演示效果</h3><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202401272151637.png" alt="image-20240127215123424"></p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p>本文参考以下大神的博文：</p><p>Onlooker：</p><ul><li><a href="https://diy-sprint.top/2021/050559226.html">https://diy-sprint.top/2021/050559226.html</a></li><li><a href="https://diy-sprint.top/2021/050635991.html">添加live2d看板动画(可对话，换装互动) | Onlooker (diy-sprint.top)</a></li></ul><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/css/gallery.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/libs/fancybox/jquery.fancybox.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/libs/justifiedGallery/justifiedGallery.min.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/post-cover'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">let</span> galleries<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>site<span class="token punctuation">.</span>data <span class="token operator">&amp;&amp;</span> site<span class="token punctuation">.</span>data<span class="token punctuation">.</span>galleries<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  galleries<span class="token operator">=</span>site<span class="token punctuation">.</span>data<span class="token punctuation">.</span>galleries<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> pageTitle<span class="token operator">=</span>page<span class="token punctuation">.</span>title<span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">getCurrentGallery</span><span class="token punctuation">(</span><span class="token parameter">galleries<span class="token punctuation">,</span> pageTitle</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> galleries<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>galleries<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token operator">==</span>pageTitle<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> galleries<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> currentGallery <span class="token operator">=</span> <span class="token function">getCurrentGallery</span><span class="token punctuation">(</span>galleries<span class="token punctuation">,</span> pageTitle<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> photos <span class="token operator">=</span> currentGallery<span class="token punctuation">.</span>photos<span class="token punctuation">;</span><span class="token keyword">let</span> imageStr <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> len<span class="token operator">=</span>photos<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> photo <span class="token operator">=</span> photos<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> photoPath <span class="token operator">=</span> <span class="token string">'/medias/galleries/'</span> <span class="token operator">+</span> currentGallery<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> photo<span class="token punctuation">;</span>  imageStr <span class="token operator">+=</span> <span class="token string">"&lt;a href=\""</span> <span class="token operator">+</span> photoPath <span class="token operator">+</span> <span class="token string">"\" class=\"photo-item\" rel=\"example_group\" data-fancybox=\"images\">"</span> <span class="token operator">+</span>               <span class="token string">"&lt;img src=\""</span> <span class="token operator">+</span> photoPath <span class="token operator">+</span><span class="token string">"\" alt=\""</span> <span class="token operator">+</span> photo <span class="token operator">+</span> <span class="token string">"\">"</span> <span class="token operator">+</span>             <span class="token string">"&lt;/a>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span class="token delimiter punctuation">%></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>photo-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>waterfall<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mygallery<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> imageStr </span><span class="token delimiter punctuation">%></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/libs/fancybox/fancybox.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/libs/justifiedGallery/justifiedGallery.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 初始化 fancybox</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"[rel=example_group]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fancybox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 配置循环播放</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"[rel=example_group]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fancybox</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">loop</span><span class="token operator">:</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#mygallery"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">justifiedGallery</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">margins</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>        <span class="token literal-property property">rowHeight</span><span class="token operator">:</span> <span class="token number">150</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> live2D </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客(一) ——基础搭建</title>
      <link href="/posts/15bb.html"/>
      <url>/posts/15bb.html</url>
      
        <content type="html"><![CDATA[<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="下载git"><a href="#下载git" class="headerlink" title="下载git"></a>下载git</h3><p>安装git for windows（或者其它git客户端）<a href="https://git-scm.com/downloads">git下载</a></p><p>验证git安装命令(cmd窗口或鼠标右键菜单的git bash 窗口)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token parameter variable">--version</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="下载node-js"><a href="#下载node-js" class="headerlink" title="下载node.js"></a>下载node.js</h3><p>在<a href="https://nodejs.org/zh-cn/">官网</a>下载node.js的安装程序，根据你电脑系统的配置信息，下载对应的安装程序。</p><p>验证node安装命令 (cmd窗口或鼠标右键菜单的git bash 窗口)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">node</span> <span class="token parameter variable">--version</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="vscode安装"><a href="#vscode安装" class="headerlink" title="vscode安装"></a>vscode安装</h3><p>Visual Studio Code <a href="https://visualstudio.microsoft.com/zh-hans/">官网下载</a></p><h3 id="github账号"><a href="#github账号" class="headerlink" title="github账号"></a>github账号</h3><p>如果没有就注册一个：<a href="https://github.com/">https://github.com/</a></p><h2 id="Github-Pages创建"><a href="#Github-Pages创建" class="headerlink" title="Github Pages创建"></a>Github Pages创建</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>cuda 入门</title>
      <link href="/posts/c7d8.html"/>
      <url>/posts/c7d8.html</url>
      
        <content type="html"><![CDATA[<h1 id="CUDA入门"><a href="#CUDA入门" class="headerlink" title="CUDA入门"></a>CUDA入门</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>06年，NVIDIA公司发布了CUDA，它是建立在NVIDIA的GPU上的一个通用并行计算平台和编程模型。CUDA编程使得可以更高效地利用GPU的并行计算引擎来解决复杂的计算问题。近年来，GPU在深度学习领域取得了巨大成功，基于GPU的并行计算已成为训练深度学习模型的标准。</p><p>需要强调的是，GPU并非独立运行的计算平台，而是需要与CPU协同工作的。它可以视作CPU的协处理器，在提及GPU并行计算时，实际上指的是基于CPU+GPU的异构计算架构。在这种异构计算架构中，GPU与CPU通过PCIe总线连接在一起，协同完成计算任务。CPU所在位置被称为主机端（host），而GPU所在位置被称为设备端（device），如下图所示：</p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202312191415196.png" alt="image-20231219141540082" style="zoom:80%;" /><p>当比较GPU和CPU时，GPU拥有更多的计算核心，使其非常适合处理数据并行的计算密集型任务，例如大型矩阵运算。相比之下，CPU的核心数量较少，但它们擅长执行复杂的逻辑运算，适用于控制密集型任务。此外，CPU上的线程通常是重型的，导致较大的上下文切换开销，而GPU拥有许多轻量级线程。</p><p>因此，基于CPU+GPU的异构计算平台能够充分发挥优势。CPU负责处理串行程序中的逻辑复杂部分，而GPU则专注于处理数据密集型、并行计算的部分，这样能够实现最佳性能。</p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202312191433412.png" alt="image-20231219143336313" style="zoom:80%;" /><p>CUDA是NVIDIA公司开发的GPU编程模型，它提供了简单易用的接口，可用于构建基于GPU计算的应用程序。CUDA支持多种编程语言，如C&#x2F;C++、Python和Fortran等。下面我们将使用CUDA C&#x2F;C++接口来讲解CUDA编程。Windows系统下的CUDA安装教程可以参考给出的链接进行安装：<a href="https://blog.csdn.net/chen565884393/article/details/127905428">CUDA安装及环境配置——最新详细版-CSDN博客</a></p><h2 id="入门基础"><a href="#入门基础" class="headerlink" title="入门基础"></a>入门基础</h2><p>在CUDA编程模型中，涉及两个核心概念：host和device。</p><p>host代表着CPU及其相关内存，而device代表着GPU及其相关内存。CUDA程序中同时存在host程序和device程序，分别在CPU和GPU上运行。此外，host和device之间可以进行通信，允许数据在它们之间进行传输。</p><p>一般而言，典型的CUDA程序执行流程如下：</p><ol><li>分配host内存并对数据进行初始化</li><li>分配device内存，并将数据从host拷贝到device上</li><li>调用CUDA的核函数（kernel）在device上完成指定的并行运算</li><li>将device上计算得到的结果拷贝回host</li><li>释放device和host上分配的内存空间</li></ol><p>核函数（kernel）是CUDA中的关键概念，它是在device上并行执行的函数。核函数以 <code>__global__</code> 修饰符声明，在调用时需要使用 <code>&lt;&lt;&lt;grid, block&gt;&gt;&gt;</code> 来指定kernel要执行的线程数量。在CUDA中，每个线程都会执行核函数，并且每个线程都会有一个唯一的线程ID，可以通过核函数的内置变量 threadIdx 来获取。</p><p>由于GPU是异构计算模型，因此需要区分host和device上的代码。在CUDA中，可以通过函数类型限定词来区分host和device上的函数。主要的三种函数类型限定词如下：</p><ul><li><code>__global__</code>：在device上执行，可以从host调用（一些特定的GPU也能从device上调用）。返回类型必须是 void，不支持可变参数，也不能成为类的成员函数。需要注意的是，用 <code>__global__</code> 定义的kernel是异步执行的，这意味着host不会等待kernel执行完毕再执行下一步。</li><li><code>__device__</code>：在device上执行，仅可以从device中调用，不能与 <code>__global__</code> 同时使用。</li><li><code>__host__</code>：在host上执行，仅可以从host中调用。一般情况下，此修饰符可以省略不写。它不能与 <code>__global__</code> 同时使用，但可以与 <code>__device__</code> 结合使用，此时函数可在device和host上都编译。</li></ul><p>要深入理解kernel，需要对kernel的线程层次结构有清晰的认识。</p><ul><li>线程结构的第一层次：GPU上存在大量并行化的轻量级线程。当kernel在device上执行时，实际上是启动了大量线程，一个kernel启动的所有线程构成一个网格（grid）</li><li>第二个层次：在同一个网格内，一些线程共享相同的全局内存空间，网格被分为多个部分，每一个都是一个线程块（block）一个线程块包含多个线程。</li><li>第三个层次：在线程块内，线程被划分为更小的单元，称为线程（thread）。这是GPU上的最细粒度的并行层次。线程是执行计算的基本单元，它们共享线程块内的资源，包括寄存器文件和共享内存。通过合理的组织和协同工作，线程能够高效地执行各自的任务，实现更细致的并行化。</li></ul><p>线程的层次结构如下图所示，以二维的grid和block为例。grid和block都被定义为 dim3 类型的变量，dim3 可以看作包含三个无符号整数（x，y，z）成员的结构体变量，在定义时，缺省值默认为1。因此，grid和block可以灵活定义为1维、2维或3维结构。在CUDA编程中，这些概念和规则是关键，对于理解和利用GPU并行计算极为重要。</p><p>要调用kernel，必须通过执行配置 <code>&lt;&lt;&lt;grid, block&gt;&gt;&gt;</code> 来指定kernel所使用的线程数及结构。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">dim3 <span class="token function">grid</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>dim3 <span class="token function">block</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>kernel_fun<span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span> grid<span class="token punctuation">,</span> block <span class="token operator">>></span><span class="token operator">></span><span class="token punctuation">(</span>prams<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202312231222160.png" alt="Kernel的两层线程组织结构（2-dim）" style="zoom:67%;" /><p>所以，一个线程需要两个内置的坐标变量（blockIdx，threadIdx）来唯一标识，它们都是<code>dim3</code>类型变量，其中blockIdx指明线程所在grid中的位置，而threaIdx指明线程所在block中的位置，如图中的Thread (1,1)满足：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">threadIdx<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">1</span>threadIdx<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">1</span>blockIdx<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">1</span>blockIdx<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>在CUDA编程中，线程块（block）中的线程被分配到同一个流式多处理器（SM）上，但是每个SM的资源是有限的，因此线程块中的线程数量受到限制。现代GPU支持的线程块中的线程数量通常可达1024个。有时候，需要知道一个线程在block中的全局ID，这就需要了解block的组织结构，可以通过线程的内置变量 blockDim 来获取。它获取线程块在各个维度上的大小。对于一个2维的block( D<del>x</del>, D<del>y</del>)，线程(x, y)的ID值为 (x + y * D<del>x</del> )，如果是3维的block( D<del>x</del>, D<del>y</del>, D<del>z</del>)，线程(x, y, z)的ID值为 (x + y * D<del>x</del> + z * D<del>x</del> * D<del>y</del>)。此外，线程还具有内置变量 gridDim，用于获取网格块在各个维度上的大小。</p><p>kernel的这种线程组织结构天然适合vector、matrix等运算，如我们将利用上图2-dim结构实现两个矩阵的加法，每个线程负责处理每个位置的两个元素相加，代码如下所示。线程块大小为(16, 16)，然后将N * N大小的矩阵均分为不同的线程块来执行加法运算。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">__global__ <span class="token keyword">void</span> <span class="token function">matrixAddition</span><span class="token punctuation">(</span><span class="token keyword">float</span> <span class="token operator">*</span>a<span class="token punctuation">,</span> <span class="token keyword">float</span> <span class="token operator">*</span>b<span class="token punctuation">,</span> <span class="token keyword">float</span> <span class="token operator">*</span>c<span class="token punctuation">,</span> <span class="token keyword">int</span> N<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> row <span class="token operator">=</span> blockIdx<span class="token punctuation">.</span>y <span class="token operator">*</span> blockDim<span class="token punctuation">.</span>y <span class="token operator">+</span> threadIdx<span class="token punctuation">.</span>y<span class="token punctuation">;</span>    <span class="token keyword">int</span> col <span class="token operator">=</span> blockIdx<span class="token punctuation">.</span>x <span class="token operator">*</span> blockDim<span class="token punctuation">.</span>x <span class="token operator">+</span> threadIdx<span class="token punctuation">.</span>x<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>row <span class="token operator">&lt;</span> N <span class="token operator">&amp;&amp;</span> col <span class="token operator">&lt;</span> N<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> index <span class="token operator">=</span> row <span class="token operator">*</span> N <span class="token operator">+</span> col<span class="token punctuation">;</span>        c<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">+</span> b<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 其他代码...</span>    dim3 <span class="token function">blockSize</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    dim3 <span class="token function">gridSize</span><span class="token punctuation">(</span><span class="token punctuation">(</span>N <span class="token operator">+</span> blockSize<span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> blockSize<span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token punctuation">(</span>N <span class="token operator">+</span> blockSize<span class="token punctuation">.</span>y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> blockSize<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>    matrixAddition<span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span>gridSize<span class="token punctuation">,</span> blockSize<span class="token operator">>></span><span class="token operator">></span><span class="token punctuation">(</span>device_a<span class="token punctuation">,</span> device_b<span class="token punctuation">,</span> device_c<span class="token punctuation">,</span> N<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 其他代码...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上代码中，kernel函数 matrixAddition 实现了矩阵加法操作。通过计算每个线程的行列索引，确保每个线程仅处理有效的矩阵元素。主函数中，根据矩阵大小 N 和设定的线程块大小，计算出适当的 grid 和 block 尺寸，并调用 kernel 函数执行矩阵加法。</p><h3 id="内存模型"><a href="#内存模型" class="headerlink" title="内存模型"></a>内存模型</h3><p>这里简单介绍一下CUDA的内存模型，如下图所示：</p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202312232011569.png" alt="CUDA内存模型" style="zoom: 67%;" /><p>可以看到，每个线程有自己的私有本地内存（Local Memory），而每个线程块有包含共享内存（Shared Memory）,可以被线程块中所有线程共享，其生命周期与线程块一致。此外，所有的线程都可以访问全局内存（Global Memory）。还可以访问一些只读内存块：常量内存（Constant Memory）和纹理内存（Texture Memory）</p><p>这些内存类型的特点如下：</p><ol><li><p><strong>私有本地内存（Local Memory）</strong>：每个线程都有自己的私有本地内存，用于存储线程私有的变量和数据。这些变量通常是在寄存器不足时或者动态分配内存时使用。访问本地内存的速度较慢，因此需要尽量减少对本地内存的访问，以提高性能。</p></li><li><p><strong>共享内存（Shared Memory）</strong>：每个线程块都拥有共享内存，它可以被该线程块中的所有线程共享。共享内存的生命周期与线程块一致，对于需要在线程块内多个线程之间共享的数据，可以存储在共享内存中。共享内存的访问速度比全局内存快得多，因此可以用于提高线程块内的数据访问效率和并行计算速度。</p></li><li><p><strong>全局内存（Global Memory）</strong>：所有的线程都可以访问全局内存，它是GPU中容量最大的内存类型。全局内存通常用于存储整个程序的数据，但其访问速度相对较慢。因此，在CUDA编程中，需要谨慎优化全局内存的访问，以最大化性能。</p></li><li><p><strong>常量内存（Constant Memory）</strong>：常量内存用于存储对所有线程只读的数据，其特点是具有缓存，提供对只读内存的快速访问，适用于线程内的数据共享。</p></li><li><p><strong>纹理内存（Texture Memory）</strong>：纹理内存是一种特殊的只读内存，适用于图形处理领域，提供对数据的高效访问和插值。它通常用于图像处理等应用场景。</p></li></ol><p>CUDA内存模型中不同类型的内存具有不同的访问特性和速度，合理地利用和管理这些内存类型可以对CUDA程序的性能产生显著影响。优化内存访问是CUDA编程中的一个重要方面，能够有效地提高程序的执行效率。</p><h3 id="硬件认识"><a href="#硬件认识" class="headerlink" title="硬件认识"></a>硬件认识</h3><p>还有重要一点，你需要对GPU的硬件实现有一个基本的认识。上面说到了kernel的线程组织层次，那么一个kernel实际上会启动很多线程，这些线程是逻辑上并行的，但是在物理层却并不一定。</p><p>在GPU硬件中，一个关键组件是SM（Streaming Multiprocessor，流式多处理器）。SM包含CUDA核心、共享内存、寄存器等。SM能够同时执行数百个线程，其并发能力取决于SM拥有的资源数量。当一个kernel被执行时，其线程块被分配到SM上。一个线程块只能在一个SM上被调度，而一个SM通常能够调度多个线程块，这取决于SM本身的能力。因此，一个kernel的线程块可能被分配到多个SM上，所以grid只是逻辑层，而SM才是执行的物理层。</p><p>SM采用的是<a href="https://link.zhihu.com/?target=http://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html%23simt-architecture">SIMT</a> (Single-Instruction, Multiple-Thread，单指令多线程)架构，基本的执行单元是线程束（warps)，每个线程束包含32个线程。这些线程同时执行相同的指令，但每个线程都有自己的指令地址计数器和寄存器状态，拥有独立的执行路径。因此，尽管线程束中的线程同时执行相同的指令，但它们可能具有不同的行为，特别是在遇到分支结构时，可能导致一些线程进入分支，而其他线程不执行，这些非执行的线程只能等待，因为GPU规定线程束中所有线程在同一周期执行相同的指令，线程束分化会导致性能下降。</p><p>当一个线程块被划分到SM上时，它会进一步划分为多个线程束，因为这才是SM的基本执行单元。然而，一个SM同时并发的线程束数量是有限的，这受限于资源分配，因为SM要为每个线程块分配共享内存，并为每个线程束中的线程分配独立的寄存器。因此，SM的配置会影响其所支持的线程块和线程束的并发数量。总的来说，虽然kernel的grid和block只是逻辑上的划分，但在物理层面，一个kernel的所有线程并非一定同时并发。因此，需要注意调整grid和block的配置，以充分发挥GPU的性能。此外，由于线程束的基本大小是32，因此block大小最好设置为32的倍数。</p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202312232017228.png" alt="逻辑层和物理层" style="zoom:67%;" /><h3 id="个人配置"><a href="#个人配置" class="headerlink" title="个人配置"></a>个人配置</h3><p>在进行CUDA编程前，可以先检查一下自己的GPU硬件配置，这样才能有的放矢，通过以下代码获得GPU的配置属性：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cuda_runtime.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    cudaDeviceProp deviceProp<span class="token punctuation">;</span>    <span class="token function">cudaGetDeviceProperties</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>deviceProp<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Device 0 information:\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"设备名称与型号: %s\n"</span><span class="token punctuation">,</span> deviceProp<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"显存大小: %d MB\n"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>deviceProp<span class="token punctuation">.</span>totalGlobalMem <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"计算能力: %d.%d\n"</span><span class="token punctuation">,</span> deviceProp<span class="token punctuation">.</span>major<span class="token punctuation">,</span> deviceProp<span class="token punctuation">.</span>minor<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"含有的SM数量: %d\n"</span><span class="token punctuation">,</span> deviceProp<span class="token punctuation">.</span>multiProcessorCount<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"CUDA CORE数量: %d\n"</span><span class="token punctuation">,</span> deviceProp<span class="token punctuation">.</span>multiProcessorCount <span class="token operator">*</span> <span class="token number">192</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"每个线程块的共享内存大小: %.2f KB\n"</span><span class="token punctuation">,</span> deviceProp<span class="token punctuation">.</span>sharedMemPerBlock <span class="token operator">/</span> <span class="token number">1024.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"每个线程块的最大线程数: %d\n"</span><span class="token punctuation">,</span> deviceProp<span class="token punctuation">.</span>maxThreadsPerBlock<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"每个EM的最大线程数: %d\n"</span><span class="token punctuation">,</span> deviceProp<span class="token punctuation">.</span>maxThreadsPerMultiProcessor<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"每个SM的最大线程束数: %d\n"</span><span class="token punctuation">,</span> deviceProp<span class="token punctuation">.</span>maxThreadsPerMultiProcessor <span class="token operator">/</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="向量加法实例"><a href="#向量加法实例" class="headerlink" title="向量加法实例"></a>向量加法实例</h2><p>知道了CUDA编程基础，我们就来个简单的实战，利用CUDA编程实现两个向量的加法，在实现之前，先简单介绍一下CUDA编程中内存管理API。</p><p>在CUDA编程中，内存管理是至关重要的。以下是常用的内存管理函数的简要介绍：</p><ol><li><p><strong>cudaMalloc() 函数</strong>：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">cudaError_t <span class="token function">cudaMalloc</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token operator">*</span> devPtr<span class="token punctuation">,</span> size_t size<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>cudaMalloc</code> 用于在设备（GPU）上分配内存。它类似于C语言中的 <code>malloc()</code> 函数，但是在GPU的全局内存中分配内存。<code>devPtr</code> 是指向分配内存起始位置的指针，<code>size</code> 表示要分配的内存字节数。分配成功时返回 <code>cudaSuccess</code>，否则返回相应的错误码。需要注意，使用完内存后，必须使用 <code>cudaFree()</code> 函数释放相应的设备内存，以避免内存泄漏。</p><p>这个函数和C语言中的malloc类似，但是在device上申请一定字节大小的显存，其中devPtr是指向所分配内存的指针。</p><p>同时要释放分配的内存使用cudaFree函数，这和C语言中的free函数对应。</p></li><li><p><strong>cudaFree() 函数</strong>：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">cudaError_t <span class="token function">cudaFree</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> devPtr<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>cudaFree</code> 用于释放之前由 <code>cudaMalloc</code> 分配的设备内存。传入的参数 <code>devPtr</code> 是之前分配的设备内存的指针。释放成功时返回 <code>cudaSuccess</code>，否则返回相应的错误码。</p></li><li><p><strong>cudaMemcpy() 函数</strong>：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">cudaError_t <span class="token function">cudaMemcpy</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> dst<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">void</span><span class="token operator">*</span> src<span class="token punctuation">,</span> size_t count<span class="token punctuation">,</span> cudaMemcpyKind kind<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>cudaMemcpy</code> 用于在主机（host）和设备（device）之间进行数据传输。它可以控制数据的复制方向，例如从主机到设备、从设备到主机、设备到设备等。<code>dst</code> 和 <code>src</code> 分别是目标和源的指针，<code>count</code>表示要复制的字节数，<code>kind</code>指定了数据传输的方向。常用的传输方向有：<code>cudaMemcpyHostToHost</code>、<code>cudaMemcpyHostToDevice</code>、<code>cudaMemcpyDeviceToHost</code>、<code>cudaMemcpyDeviceToDevice</code>，根据英文即可知道传输方向。</p></li></ol><p>在CUDA程序中，合理使用这些函数进行内存分配和数据传输是保证程序正确性和性能的重要一步。</p><p>现在我们来实现一个向量加法的实例，这里grid和block都设计为1-dim，首先定义kernel如下：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">// 两个向量加法kernel，grid和block均为一维</span>__global__ <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token operator">*</span> x<span class="token punctuation">,</span> <span class="token keyword">float</span> <span class="token operator">*</span> y<span class="token punctuation">,</span> <span class="token keyword">float</span><span class="token operator">*</span> z<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">// 获取全局索引</span>    <span class="token keyword">int</span> index <span class="token operator">=</span> threadIdx<span class="token punctuation">.</span>x <span class="token operator">+</span> blockIdx<span class="token punctuation">.</span>x <span class="token operator">*</span> blockDim<span class="token punctuation">.</span>x<span class="token punctuation">;</span>    <span class="token comment">// 步长</span>    <span class="token keyword">int</span> stride <span class="token operator">=</span> blockDim<span class="token punctuation">.</span>x <span class="token operator">*</span> gridDim<span class="token punctuation">.</span>x<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> index<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i <span class="token operator">+=</span> stride<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        z<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> y<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中stride是整个grid的线程数，有时候向量的元素数很多，这时候可以将在每个线程实现多个元素（元素总数&#x2F;线程总数）的加法，相当于使用了多个grid来处理，这是一种<a href="https://link.zhihu.com/?target=https://devblogs.nvidia.com/cuda-pro-tip-write-flexible-kernels-grid-stride-loops/">grid-stride loop</a>方式，不过下面的例子一个线程只处理一个元素，所以kernel里面的循环是不执行的。</p><p>下面是一个简单的向量加法示例，使用CUDA编程中的基本概念和函数进行向量相加操作：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;math.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cuda_runtime.h></span></span><span class="token comment">// 两个向量加法kernel，grid和block均为一维</span>__global__ <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token operator">*</span> x<span class="token punctuation">,</span> <span class="token keyword">float</span><span class="token operator">*</span> y<span class="token punctuation">,</span> <span class="token keyword">float</span><span class="token operator">*</span> z<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 获取全局索引</span>    <span class="token keyword">int</span> index <span class="token operator">=</span> threadIdx<span class="token punctuation">.</span>x <span class="token operator">+</span> blockIdx<span class="token punctuation">.</span>x <span class="token operator">*</span> blockDim<span class="token punctuation">.</span>x<span class="token punctuation">;</span>    <span class="token comment">// 步长</span>    <span class="token keyword">int</span> stride <span class="token operator">=</span> blockDim<span class="token punctuation">.</span>x <span class="token operator">*</span> gridDim<span class="token punctuation">.</span>x<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> index<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i <span class="token operator">+=</span> stride<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        z<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> y<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> <span class="token comment">// 向量大小</span>    <span class="token keyword">int</span> nBytes <span class="token operator">=</span> n <span class="token operator">*</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token keyword">float</span> <span class="token operator">*</span>x<span class="token punctuation">,</span> <span class="token operator">*</span>y<span class="token punctuation">,</span> <span class="token operator">*</span>z<span class="token punctuation">;</span> <span class="token comment">// 定义主机上的向量指针</span>    <span class="token keyword">float</span> <span class="token operator">*</span>dev_x<span class="token punctuation">,</span> <span class="token operator">*</span>dev_y<span class="token punctuation">,</span> <span class="token operator">*</span>dev_z<span class="token punctuation">;</span> <span class="token comment">// 定义设备上的向量指针</span>    <span class="token comment">// 在主机上分配内存</span>    x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span>nBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>    y <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span>nBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>    z <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span>nBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 在设备上分配内存</span>    <span class="token function">cudaMalloc</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>dev_x<span class="token punctuation">,</span> nBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">cudaMalloc</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>dev_y<span class="token punctuation">,</span> nBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">cudaMalloc</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>dev_z<span class="token punctuation">,</span> nBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 初始化主机上的向量数据</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1.0f</span><span class="token punctuation">;</span>        y<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2.0f</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 将主机上的向量数据复制到设备</span>    <span class="token function">cudaMemcpy</span><span class="token punctuation">(</span>dev_x<span class="token punctuation">,</span> x<span class="token punctuation">,</span> nBytes<span class="token punctuation">,</span> cudaMemcpyHostToDevice<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">cudaMemcpy</span><span class="token punctuation">(</span>dev_y<span class="token punctuation">,</span> y<span class="token punctuation">,</span> nBytes<span class="token punctuation">,</span> cudaMemcpyHostToDevice<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 定义 grid 和 block 的大小</span>    <span class="token keyword">int</span> blockSize <span class="token operator">=</span> <span class="token number">256</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> numBlocks <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">+</span> blockSize <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> blockSize<span class="token punctuation">;</span>    <span class="token comment">// 调用 kernel 函数</span>    add<span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span>numBlocks<span class="token punctuation">,</span> blockSize<span class="token operator">>></span><span class="token operator">></span><span class="token punctuation">(</span>dev_x<span class="token punctuation">,</span> dev_y<span class="token punctuation">,</span> dev_z<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 将设备上的结果复制回主机</span>    <span class="token function">cudaMemcpy</span><span class="token punctuation">(</span>z<span class="token punctuation">,</span> dev_z<span class="token punctuation">,</span> nBytes<span class="token punctuation">,</span> cudaMemcpyDeviceToHost<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 验证结果</span>    <span class="token keyword">float</span> maxError <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        maxError <span class="token operator">=</span> <span class="token function">fmaxf</span><span class="token punctuation">(</span>maxError<span class="token punctuation">,</span> <span class="token function">fabsf</span><span class="token punctuation">(</span>z<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">3.0f</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"最大误差: %f\n"</span><span class="token punctuation">,</span> maxError<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 释放设备和主机上的内存</span>    <span class="token function">cudaFree</span><span class="token punctuation">(</span>dev_x<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">cudaFree</span><span class="token punctuation">(</span>dev_y<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">cudaFree</span><span class="token punctuation">(</span>dev_z<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">free</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">free</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">free</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这段代码实现了向量加法操作，它使用了CUDA的核函数 <code>add</code>，将两个向量 <code>x</code> 和 <code>y</code> 相加得到结果向量 <code>z</code>。在主机和设备之间进行内存分配、数据传输和核函数调用，最后将结果从设备复制回主机进行验证。这里的向量大小为1&lt;&lt;20，而block大小为256，grid大小是4096，kernel的线程层级结构如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202312232141601.png" alt="kernel的线程层次结构"></p><h2 id="nvprof"><a href="#nvprof" class="headerlink" title="nvprof"></a>nvprof</h2><p>NVIDIA nvprof &#x2F; nvvp工具是英伟达N卡GPU编程中用于观察的利器。全称是NVIDIA Visual Profiler，是由2008年起开始支持的性能分析器。交互性好，利于使用。其中记录运行日志时使用命令nvprof，可视化显示日志时使用命令nvvp。</p><p>不过在最近几年，英伟达官方推出了新的性能分析工具NSight，官方更加建议使用新的工具，给出的原因是NSight运行时消耗的资源更少，统计的数据更加贴近实际运行情况的数据。相比之下使用nvprof&#x2F;nvvp方式运行时消耗资源较多，数据统计容易不准确。</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p><code>nvprof</code> 是 NVIDIA 提供的一个用于分析 CUDA 应用程序性能的命令行工具。它可以用来收集和分析 CUDA 应用程序的性能数据，包括核函数执行时间、内存使用情况等。</p><p>使用 <code>nvprof</code> 工具来分析 CUDA 核函数运行情况的基本步骤：</p><ol><li><p><strong>编译代码</strong>：首先，确保代码已经被编译成可执行文件。</p></li><li><p>**运行 <code>nvprof</code>**：在命令行中运行 <code>nvprof</code> 并指定要分析的可执行文件。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nvprof ./your_executable<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这将启动您的 CUDA 可执行文件并开始收集性能数据。</p></li><li><p><strong>查看分析结果</strong>：<code>nvprof</code> 会输出核函数的执行时间、内存使用情况等相关信息。通常，您可以在输出中找到有关核函数执行时间、内存传输时间、资源使用情况等方面的详细信息。该输出可以帮助您确定哪些部分的代码可能需要优化或哪些操作占用了较多的时间和资源。</p></li><li><p><strong>选择特定的分析选项</strong>：<code>nvprof</code> 还提供了许多选项，可用于指定收集的数据类型、输出格式、分析范围等。您可以根据需要使用不同的选项进行详细的分析。</p></li></ol><p>例如，您可以通过以下方式使用 <code>nvprof</code> 对示例程序进行分析：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nvprof ./your_executable<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这会收集并显示有关您的 CUDA 可执行文件的基本性能数据。您还可以使用其他选项来进行更详细的分析，例如收集内存信息、指定要分析的核函数等等。可以通过 <code>nvprof --help</code> 查看更多可用选项的详细信息。</p><p>请注意，<code>nvprof</code> 是一个强大的工具，可以帮助您深入了解 CUDA 应用程序的性能瓶颈和优化机会。</p><p>使用nvprof工具可以分析kernel运行情况，结果如下所示，可以看到kernel函数费时约1.5ms。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">nvprof cuda9.exe==7244== NVPROF is profiling process 7244, command: cuda9.exe最大误差: 4.31602e+008==7244== Profiling application: cuda9.exe==7244== Profiling result:            Type  Time(%)      Time     Calls       Avg       Min       Max  Name GPU activities:   67.57%  3.2256ms         2  1.6128ms  1.6017ms  1.6239ms  [CUDA memcpy HtoD]                   32.43%  1.5478ms         1  1.5478ms  1.5478ms  1.5478ms  add(float*, float*, float*, int)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>你调整block的大小，对比不同配置下的kernel运行情况，我这里测试的是当block为128时，kernel费时约1.6ms，而block为512时kernel费时约1.7ms，当block为64时，kernel费时约2.3ms。看来不是block越大越好，而要适当选择。</p><h2 id="统一内存管理"><a href="#统一内存管理" class="headerlink" title="统一内存管理"></a>统一内存管理</h2><p>在前面的实现中，我们需要单独在host和device上进行内存分配，并且要进行数据拷贝，这是很容易出错的。好在CUDA 6.0引入统一内存（<a href="https://link.zhihu.com/?target=http://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html%23um-unified-memory-programming-hd">Unified Memory</a>）来避免这种麻烦，简单来说就是统一内存使用一个托管内存来共同管理host和device中的内存，并且自动在host和device中进行数据传输。</p><p><code>cudaMallocManaged</code>是CUDA编程中用于动态分配内存的一个函数，它为设备和主机提供统一的、可共享的内存空间。这个函数属于CUDA运行时API的一部分。</p><p>函数：</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">cudaError_t cudaMallocManaged(void **devPtr, size_t size, unsigned int flags&#x3D;0);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参数解析：</p><ol><li><p><code>void **devPtr</code>：输出参数，指向设备内存的指针。调用成功后，<code>devPtr</code>将被设置为新分配内存区域的首地址，该内存区域可供GPU和CPU访问。</p></li><li><p><code>size_t size</code>：输入参数，要分配的内存大小（以字节为单位）。</p></li><li><p><code>unsigned int flags</code>：可选输入参数，默认值为0。可以使用此参数指定内存管理行为，例如：</p><ul><li><code>cudaMemAttachHost</code>: 表示内存应该同时对主机和设备可见，并且在需要时自动同步。</li><li><code>cudaMemAttachGlobal</code>: 与<code>cudaMemAttachHost</code>类似，但不保证内存始终驻留在主机上。</li></ul></li></ol><p>返回值：</p><ul><li><code>cudaSuccess</code>：如果成功分配了内存，则返回此状态。</li><li>其他错误代码（如<code>cudaErrorMemoryAllocation</code>等）：如果发生错误，如内存不足或其他CUDA运行时错误，则返回相应的错误代码。</li></ul><p>通过<code>cudaMallocManaged</code>分配的内存会遵循统一内存（Unified Memory）模型，使得开发者无需手动管理数据在主机和设备之间的迁移，大大简化了并行计算中的内存管理复杂度。然而，需要注意的是，尽管统一内存提供了便捷性，但在某些情况下可能会影响性能，因为它依赖于CUDA驱动程序和硬件进行透明的数据迁移。</p><p>利用统一内存，可以将前面的程序简化如下：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;math.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cuda_runtime.h></span></span>__global__ <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token operator">*</span> x<span class="token punctuation">,</span> <span class="token keyword">float</span><span class="token operator">*</span> y<span class="token punctuation">,</span> <span class="token keyword">float</span><span class="token operator">*</span> z<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> index <span class="token operator">=</span> threadIdx<span class="token punctuation">.</span>x <span class="token operator">+</span> blockIdx<span class="token punctuation">.</span>x <span class="token operator">*</span> blockDim<span class="token punctuation">.</span>x<span class="token punctuation">;</span>    <span class="token keyword">int</span> stride <span class="token operator">=</span> blockDim<span class="token punctuation">.</span>x <span class="token operator">*</span> gridDim<span class="token punctuation">.</span>x<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> index<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i <span class="token operator">+=</span> stride<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        z<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> y<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> <span class="token comment">// 向量大小</span>    <span class="token keyword">int</span> nBytes <span class="token operator">=</span> n <span class="token operator">*</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">float</span> <span class="token operator">*</span>z<span class="token punctuation">;</span> <span class="token comment">// 定义统一内存中的向量指针</span>    <span class="token comment">// 在统一内存中分配内存</span>    <span class="token function">cudaMallocManaged</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>z<span class="token punctuation">,</span> nBytes <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 分配统一内存大小为三倍，包括 x, y, z</span>    <span class="token keyword">float</span> <span class="token operator">*</span>x <span class="token operator">=</span> z<span class="token punctuation">;</span> <span class="token comment">// x指针指向统一内存</span>    <span class="token keyword">float</span> <span class="token operator">*</span>y <span class="token operator">=</span> x <span class="token operator">+</span> n<span class="token punctuation">;</span> <span class="token comment">// y指针指向统一内存中x的末尾</span>    <span class="token keyword">float</span> <span class="token operator">*</span>dev_z <span class="token operator">=</span> y <span class="token operator">+</span> n<span class="token punctuation">;</span> <span class="token comment">// dev_z指针指向统一内存中y的末尾</span>    <span class="token comment">// 初始化主机上的向量数据</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1.0f</span><span class="token punctuation">;</span>        y<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2.0f</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 定义 grid 和 block 的大小</span>    <span class="token keyword">int</span> blockSize <span class="token operator">=</span> <span class="token number">256</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> numBlocks <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">+</span> blockSize <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> blockSize<span class="token punctuation">;</span>    <span class="token comment">// 调用 kernel 函数</span>    add<span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span>numBlocks<span class="token punctuation">,</span> blockSize<span class="token operator">>></span><span class="token operator">></span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> dev_z<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 同步device 保证结果能正确访问</span>    <span class="token function">cudaDeviceSynchronize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 验证结果</span>    <span class="token keyword">float</span> maxError <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        maxError <span class="token operator">=</span> <span class="token function">fmaxf</span><span class="token punctuation">(</span>maxError<span class="token punctuation">,</span> <span class="token function">fabsf</span><span class="token punctuation">(</span>dev_z<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">3.0f</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"最大误差: %f\n"</span><span class="token punctuation">,</span> maxError<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 释放统一内存</span>    <span class="token function">cudaFree</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>相比之前的代码，使用统一内存更简洁了，值得注意的是kernel执行是与host异步的，由于托管内存自动进行数据传输，这里要用cudaDeviceSynchronize()函数保证device和host同步，这样后面才可以正确访问kernel计算的结果。</p><h2 id="矩阵乘法实例"><a href="#矩阵乘法实例" class="headerlink" title="矩阵乘法实例"></a>矩阵乘法实例</h2><p>最后再实现一个稍微复杂一些的例子，就是两个矩阵的乘法，设输入矩阵为 A 和 B ，要得到 C&#x3D;A×B 。实现思路是每个线程计算 C的一个元素值 C<del>i,j</del> ，对于矩阵运算，应该选用grid和block为2-D的。首先定义矩阵的结构体：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">// 矩阵类型，行优先，M(row, col) = *(M.elements + row * M.width + col)</span><span class="token keyword">struct</span> <span class="token class-name">Matrix</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> width<span class="token punctuation">;</span>    <span class="token keyword">int</span> height<span class="token punctuation">;</span>    <span class="token keyword">float</span> <span class="token operator">*</span>elements<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202312232322858.png" alt="矩阵乘法" style="zoom: 67%;" /><p>然后实现矩阵乘法的核函数，这里定义了两个辅助的<code>__device__</code>函数分别用于获取矩阵的元素值和为矩阵元素赋值，具体代码如下：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">// 获取矩阵A的(row, col)元素</span>__device__ <span class="token keyword">float</span> <span class="token function">getElement</span><span class="token punctuation">(</span><span class="token keyword">const</span> Matrix<span class="token operator">*</span> A<span class="token punctuation">,</span> <span class="token keyword">int</span> row<span class="token punctuation">,</span> <span class="token keyword">int</span> col<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> A<span class="token operator">-></span>elements<span class="token punctuation">[</span>row <span class="token operator">*</span> A<span class="token operator">-></span>width <span class="token operator">+</span> col<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 为矩阵A的(row, col)元素赋值</span>__device__ <span class="token keyword">void</span> <span class="token function">setElement</span><span class="token punctuation">(</span>Matrix<span class="token operator">*</span> A<span class="token punctuation">,</span> <span class="token keyword">int</span> row<span class="token punctuation">,</span> <span class="token keyword">int</span> col<span class="token punctuation">,</span> <span class="token keyword">float</span> value<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    A<span class="token operator">-></span>elements<span class="token punctuation">[</span>row <span class="token operator">*</span> A<span class="token operator">-></span>width <span class="token operator">+</span> col<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 矩阵相乘kernel，2-D，每个线程计算一个元素</span>__global__ <span class="token keyword">void</span> <span class="token function">matMulKernel</span><span class="token punctuation">(</span><span class="token keyword">const</span> Matrix<span class="token operator">*</span> A<span class="token punctuation">,</span> <span class="token keyword">const</span> Matrix<span class="token operator">*</span> B<span class="token punctuation">,</span> Matrix<span class="token operator">*</span> C<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">float</span> Cvalue <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> row <span class="token operator">=</span> threadIdx<span class="token punctuation">.</span>y <span class="token operator">+</span> blockIdx<span class="token punctuation">.</span>y <span class="token operator">*</span> blockDim<span class="token punctuation">.</span>y<span class="token punctuation">;</span>    <span class="token keyword">int</span> col <span class="token operator">=</span> threadIdx<span class="token punctuation">.</span>x <span class="token operator">+</span> blockIdx<span class="token punctuation">.</span>x <span class="token operator">*</span> blockDim<span class="token punctuation">.</span>x<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> A<span class="token operator">-></span>width<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        Cvalue <span class="token operator">+=</span> <span class="token function">getElement</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span> row<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token function">getElement</span><span class="token punctuation">(</span>B<span class="token punctuation">,</span> i<span class="token punctuation">,</span> col<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">setElement</span><span class="token punctuation">(</span>C<span class="token punctuation">,</span> row<span class="token punctuation">,</span> col<span class="token punctuation">,</span> Cvalue<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后采用统一内存编写矩阵相乘的测试实例：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> width <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> height <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span>    Matrix <span class="token operator">*</span>A<span class="token punctuation">,</span> <span class="token operator">*</span>B<span class="token punctuation">,</span> <span class="token operator">*</span>C<span class="token punctuation">;</span>    <span class="token comment">// 申请托管内存</span>    <span class="token function">cudaMallocManaged</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>A<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>Matrix<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">cudaMallocManaged</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>B<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>Matrix<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">cudaMallocManaged</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>C<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>Matrix<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> nBytes <span class="token operator">=</span> width <span class="token operator">*</span> height <span class="token operator">*</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">cudaMallocManaged</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>A<span class="token operator">-></span>elements<span class="token punctuation">,</span> nBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">cudaMallocManaged</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>B<span class="token operator">-></span>elements<span class="token punctuation">,</span> nBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">cudaMallocManaged</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>C<span class="token operator">-></span>elements<span class="token punctuation">,</span> nBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 初始化数据</span>    A<span class="token operator">-></span>height <span class="token operator">=</span> height<span class="token punctuation">;</span>    A<span class="token operator">-></span>width <span class="token operator">=</span> width<span class="token punctuation">;</span>    B<span class="token operator">-></span>height <span class="token operator">=</span> height<span class="token punctuation">;</span>    B<span class="token operator">-></span>width <span class="token operator">=</span> width<span class="token punctuation">;</span>    C<span class="token operator">-></span>height <span class="token operator">=</span> height<span class="token punctuation">;</span>    C<span class="token operator">-></span>width <span class="token operator">=</span> width<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> width <span class="token operator">*</span> height<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        A<span class="token operator">-></span>elements<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">;</span>        B<span class="token operator">-></span>elements<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2.0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 定义kernel的执行配置</span>    dim3 <span class="token function">blockSize</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    dim3 <span class="token function">gridSize</span><span class="token punctuation">(</span><span class="token punctuation">(</span>width <span class="token operator">+</span> blockSize<span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> blockSize<span class="token punctuation">.</span>x<span class="token punctuation">,</span>         <span class="token punctuation">(</span>height <span class="token operator">+</span> blockSize<span class="token punctuation">.</span>y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> blockSize<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 执行kernel</span>    matMulKernel <span class="token operator">&lt;&lt;</span> <span class="token operator">&lt;</span> gridSize<span class="token punctuation">,</span> blockSize <span class="token operator">>></span> <span class="token operator">></span><span class="token punctuation">(</span>A<span class="token punctuation">,</span> B<span class="token punctuation">,</span> C<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 同步device 保证结果能正确访问</span>    <span class="token function">cudaDeviceSynchronize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 检查执行结果</span>    <span class="token keyword">float</span> maxError <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> width <span class="token operator">*</span> height<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>        maxError <span class="token operator">=</span> <span class="token function">fmax</span><span class="token punctuation">(</span>maxError<span class="token punctuation">,</span> <span class="token function">fabs</span><span class="token punctuation">(</span>C<span class="token operator">-></span>elements<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">*</span> width<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"最大误差: "</span> <span class="token operator">&lt;&lt;</span> maxError <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里矩阵大小为1024，设计的线程的block大小为(32, 32)，那么grid大小为(32, 32)，最终测试结果如下：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">nvprof cuda9.exe==16304== NVPROF is profiling process 16304, command: cuda9.exe最大误差: 0==16304== Profiling application: cuda9.exe==16304== Profiling result:            Type  Time(%)      Time     Calls       Avg       Min       Max  Name GPU activities:  100.00%  1.32752s         1  1.32752s  1.32752s  1.32752s  matMulKernel(Matrix*, Matrix*, Matrix*)      API calls:   83.11%  1.32762s         1  1.32762s  1.32762s  1.32762s  cudaDeviceSynchronize                   13.99%  223.40ms         6  37.233ms  37.341us  217.66ms  cudaMallocManaged                    2.81%  44.810ms         1  44.810ms  44.810ms  44.810ms  cudaLaunch                    0.08%  1.3300ms        94  14.149us       0ns  884.64us  cuDeviceGetAttribute                    0.01%  199.03us         1  199.03us  199.03us  199.03us  cuDeviceGetName                    0.00%  10.009us         1  10.009us  10.009us  10.009us  cuDeviceTotalMem                    0.00%  6.5440us         1  6.5440us  6.5440us  6.5440us  cudaConfigureCall                    0.00%  3.0800us         3  1.0260us     385ns  1.5400us  cudaSetupArgument                    0.00%  2.6940us         3     898ns     385ns  1.5390us  cuDeviceGetCount                    0.00%  1.9250us         2     962ns     385ns  1.5400us  cuDeviceGet==16304== Unified Memory profiling result:Device "GeForce GT 730 (0)"   Count  Avg Size  Min Size  Max Size  Total Size  Total Time  Name    2051  4.0000KB  4.0000KB  4.0000KB  8.011719MB  21.20721ms  Host To Device     270  45.570KB  4.0000KB  1.0000MB  12.01563MB  7.032508ms  Device To Host<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>CUDA编程入门相对简单，通过掌握基本的线程管理和内存操作，可以快速实现并行计算的基本应用。然而，随着问题复杂度的提升，深入CUDA领域则需面对更多挑战：例如动态并行性管理、流式多处理器的细粒度同步控制、全局内存与共享内存的有效利用（包括bank冲突处理）、纹理和常量内存优化、以及先进的并行算法设计如归约、扫瞄等。此外，针对现代GPU架构的特性进行性能调优，理解并解决内存层次结构带来的瓶颈，亦是深入CUDA技术栈的重要环节。只有不断钻研这些高级技术和最佳实践，才能在大规模并行计算中发挥出CUDA的真正威力，实现从“入门”到“精通”的跨越。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://zhuanlan.zhihu.com/p/34587739">CUDA编程入门极简教程 - 知乎 (zhihu.com)</a></p><p><a href="https://blog.csdn.net/TracelessLe/article/details/110880135">https://blog.csdn.net/TracelessLe/article/details/110880135</a></p>]]></content>
      
      
      <categories>
          
          <category> cuda </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>今日诗句-祝福前程</title>
      <link href="/posts/f97.html"/>
      <url>/posts/f97.html</url>
      
        <content type="html"><![CDATA[<h2 id="祝福前程"><a href="#祝福前程" class="headerlink" title="祝福前程"></a>祝福前程</h2><div class="ipage">   <div class="ititle">祝福前程</div>    <div class="izhengwen">      <p>        明年此日青云去，却笑人间举子忙 ——辛弃疾《鹧鸪天·送廓之秋试》<br>        莫愁前路无知己，天下谁人不识君 ——高适《别董大》<br>        天下谁非健者，我辈终为奇土 ——张翥《水调歌头·三十九年我》<br>        前程路险莫蹉跎 ——元姬翼《临江·岁月无情如电转》<br>        乘风破浪会有时，直挂云帆济沧海 ——李白《行路难》<br>        才子词人，自是白衣卿相 ——柳永《鹤冲天》<br>        大鹏一日同风起，扶摇直上九万里 ——李白《上李邕》<br>        春风得意马蹄疾，一日看尽长安花 ——孟郊《登科后》<br>        希君生羽翼，一化北溟鱼 ——李白《江夏使君叔席上赠史郎中》<br>         鹰击天风壮，鹏飞海浪春 ——司马光《之美举进士寓京师范此诗寄之》<br>         愿祝君如此山水，滔滔岌岌风云起 ——冯时行《遗夔门故书》<br>           </p>    </div> </div>      ]]></content>
      
      
      <categories>
          
          <category> 诗词 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Gmail分身</title>
      <link href="/posts/ae7f.html"/>
      <url>/posts/ae7f.html</url>
      
        <content type="html"><![CDATA[<p>今天要分享的一个方法，前面的邮箱跟原邮箱唯一的区别就是后面多了个<code>+c1</code>。我们只需要在原邮箱后面使用一个 <code>+</code> 号连接一个字符串 <code>c1</code>，后缀不变，你就有了一个新邮箱，使用该方法，你就可以开启分身大法了：</p><blockquote><p>原邮箱：t……<a href="mailto:&#100;&#64;&#x67;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#x63;&#111;&#109;">&#100;&#64;&#x67;&#x6d;&#97;&#x69;&#x6c;&#x2e;&#x63;&#111;&#109;</a><br>新邮箱一：t……<a href="mailto:&#x64;&#x2b;&#99;&#49;&#64;&#x67;&#109;&#97;&#x69;&#108;&#46;&#99;&#x6f;&#x6d;">&#x64;&#x2b;&#99;&#49;&#64;&#x67;&#109;&#97;&#x69;&#108;&#46;&#99;&#x6f;&#x6d;</a><br>新邮箱二：t……<a href="mailto:&#100;&#43;&#x63;&#x32;&#64;&#x67;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#99;&#111;&#109;">&#100;&#43;&#x63;&#x32;&#64;&#x67;&#x6d;&#x61;&#105;&#x6c;&#x2e;&#99;&#111;&#109;</a></p></blockquote><p>原理是因为在 Gmail 的邮件地址里，<code>+</code> 号是一个特殊符号，地址中的 <code>+</code> 以及加号后面的部分，会被过滤掉。其实还有一个特殊符号 <code>.</code> 也是一样的，但是不太好用实用价值不大，这里就不详细介绍了。利用这个原理，我们需要注册某个平台的多个几账号时就可以非常方便的完成(例如某 GPT)。这比市面上很多所谓的临时邮箱或者邮箱分身用起来可安全可靠太多了，并且非常方便，在一个邮箱里面就能收到所有的邮件。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>123云盘资源</title>
      <link href="/posts/5d4b.html"/>
      <url>/posts/5d4b.html</url>
      
        <content type="html"><![CDATA[<p>Adobe全家桶：<a href="https://www.123pan.com/s/yS8UVv-NkFed.html">https://www.123pan.com/s/yS8UVv-NkFed.html</a> 提取码:6666</p><p>AutoCAD：<a href="https://www.123pan.com/s/yS8UVv-2kFed.html">https://www.123pan.com/s/yS8UVv-2kFed.html</a> 提取码:6666</p><p>专业软件：<a href="https://www.123pan.com/s/yS8UVv-rkFed.html">https://www.123pan.com/s/yS8UVv-rkFed.html</a> 提取码:6666</p><p>Unity：<a href="https://www.123pan.com/s/yS8UVv-skFed.html">https://www.123pan.com/s/yS8UVv-skFed.html</a> 提取码:6666</p><p>达芬奇：<a href="https://www.123pan.com/s/yS8UVv-WkFed.html">https://www.123pan.com/s/yS8UVv-WkFed.html</a> 提取码:6666</p><p>建模类：<a href="https://www.123pan.com/s/yS8UVv-CkFed.html">https://www.123pan.com/s/yS8UVv-CkFed.html</a> 提取码:6666</p><p>VMWare虚拟机：<a href="https://www.123pan.com/s/yS8UVv-OkFed.html">https://www.123pan.com/s/yS8UVv-OkFed.html</a> 提取码:6666</p><p>编程工具：<a href="https://www.123pan.com/s/yS8UVv-RkFed.html">https://www.123pan.com/s/yS8UVv-RkFed.html</a> 提取码:6666</p><p>电脑工具：<a href="https://www.123pan.com/s/yS8UVv-DkFed.html">https://www.123pan.com/s/yS8UVv-DkFed.html</a> 提取码:6666</p><p>下载工具：<a href="https://www.123pan.com/s/yS8UVv-nkFed.html">https://www.123pan.com/s/yS8UVv-nkFed.html</a> 提取码:6666</p><p>PS2024(Beta)_25.1总索引：<a href="https://www.123pan.com/s/yS8UVv-VcFed.html">https://www.123pan.com/s/yS8UVv-VcFed.html</a> 提取码:6666【含win+mac】</p><p>Adobe全家桶总索引：<a href="https://www.123pan.com/s/yS8UVv-HiFed.html">https://www.123pan.com/s/yS8UVv-HiFed.html</a> 提取码:6666【含大师版和SP版，win+mac】</p><p>PS：Adobe全家桶如果有解压密码，密码就是@vposy</p><p>【备用：Adobe全家桶：<a href="https://www.123pan.com/s/yS8UVv-hiFed.html">https://www.123pan.com/s/yS8UVv-hiFed.html</a> 提取码:6666】</p><p>音乐软件总索引：<a href="https://www.123pan.com/s/yS8UVv-u7Fed.html">https://www.123pan.com/s/yS8UVv-u7Fed.html</a> 提取码:6666【含win+mac】</p><p>Win_Al系列软件总索引：<a href="https://www.123pan.com/s/yS8UVv-h7Fed.html">https://www.123pan.com/s/yS8UVv-h7Fed.html</a> 提取码:6666【包含HitPaw全家桶，Topaz全家桶】</p><p>Mac_Al系列软件总索引：<a href="https://www.123pan.com/s/yS8UVv-niFed.html">https://www.123pan.com/s/yS8UVv-niFed.html</a> 提取码:6666【包含HitPaw全家桶，Topaz全家桶】</p><p>远程桌面RayLink官网<a href="https://www.raylink.live/">https://www.raylink.live/</a></p><p>Mac2024：<a href="https://www.123pan.com/s/yS8UVv-uIYed.html%E3%80%90">https://www.123pan.com/s/yS8UVv-uIYed.html【</a> 提取码:6666】</p><p>Win2024：<a href="https://www.123pan.com/s/yS8UVv-rIYed.html%E3%80%90">https://www.123pan.com/s/yS8UVv-rIYed.html【</a> 提取码:6666】</p><p>更多monkrus资源：<a href="https://www.123pan.com/s/yS8UVv-8IYed.html%E3%80%90">https://www.123pan.com/s/yS8UVv-8IYed.html【</a> 提取码:6666】</p><p>👉Adobe全家桶所有🐬：<a href="https://www.123pan.com/s/yS8UVv-hiFed.html%E3%80%90">https://www.123pan.com/s/yS8UVv-hiFed.html【</a> 提取码:6666】</p><p>Adobe全家桶：</p><p>【建议去总文件夹】：<a href="https://www.123pan.com/s/yS8UVv-NkFed.html">https://www.123pan.com/s/yS8UVv-NkFed.html</a> 提取码:6666</p><p>PS：<a href="https://www.123pan.com/s/yS8UVv-bkFed.html">https://www.123pan.com/s/yS8UVv-bkFed.html</a> 提取码:6666</p><p>PR：<a href="https://www.123pan.com/s/yS8UVv-ZkFed.html">https://www.123pan.com/s/yS8UVv-ZkFed.html</a> 提取码:6666</p><p>AE：<a href="https://www.123pan.com/s/yS8UVv-ckFed.html">https://www.123pan.com/s/yS8UVv-ckFed.html</a> 提取码:6666</p><p>Ai：<a href="https://www.123pan.com/s/yS8UVv-ekFed.html">https://www.123pan.com/s/yS8UVv-ekFed.html</a> 提取码:6666</p><p>ME：<a href="https://www.123pan.com/s/yS8UVv-tkFed.html">https://www.123pan.com/s/yS8UVv-tkFed.html</a> 提取码:6666</p><p>AU：<a href="https://www.123pan.com/s/yS8UVv-ikFed.html">https://www.123pan.com/s/yS8UVv-ikFed.html</a> 提取码:6666</p><p>An：<a href="https://www.123pan.com/s/yS8UVv-zkFed.html">https://www.123pan.com/s/yS8UVv-zkFed.html</a> 提取码:6666</p><p>AdobeAcrobat：<a href="https://www.123pan.com/s/yS8UVv-LkFed.html">https://www.123pan.com/s/yS8UVv-LkFed.html</a> 提取码:6666</p><p>AdobeBridge：<a href="https://www.123pan.com/s/yS8UVv-5kFed.html">https://www.123pan.com/s/yS8UVv-5kFed.html</a> 提取码:6666</p><p>AdobeDimension：<a href="https://www.123pan.com/s/yS8UVv-qkFed.html">https://www.123pan.com/s/yS8UVv-qkFed.html</a> 提取码:6666</p><p>AdobeDreamweaver：<a href="https://www.123pan.com/s/yS8UVv-6kFed.html">https://www.123pan.com/s/yS8UVv-6kFed.html</a> 提取码:6666</p><p>AdobeFlash：<a href="https://www.123pan.com/s/yS8UVv-ykFed.html">https://www.123pan.com/s/yS8UVv-ykFed.html</a> 提取码:6666</p><p>AdobeFrameMaker：<a href="https://www.123pan.com/s/yS8UVv-VkFed.html">https://www.123pan.com/s/yS8UVv-VkFed.html</a> 提取码:6666</p><p>AdobeInCopy：<a href="https://www.123pan.com/s/yS8UVv-jkFed.html">https://www.123pan.com/s/yS8UVv-jkFed.html</a> 提取码:6666</p><p>AdobeInDesign：<a href="https://www.123pan.com/s/yS8UVv-ToFed.html">https://www.123pan.com/s/yS8UVv-ToFed.html</a> 提取码:6666</p><p>AdobePrelude：<a href="https://www.123pan.com/s/yS8UVv-voFed.html">https://www.123pan.com/s/yS8UVv-voFed.html</a> 提取码:6666</p><p>CharacterAnimator：<a href="https://www.123pan.com/s/yS8UVv-doFed.html">https://www.123pan.com/s/yS8UVv-doFed.html</a> 提取码:6666</p><p>ExperienceDesign：<a href="https://www.123pan.com/s/yS8UVv-3oFed.html">https://www.123pan.com/s/yS8UVv-3oFed.html</a> 提取码:6666</p><p>LightroomClassic：<a href="https://www.123pan.com/s/yS8UVv-hoFed.html">https://www.123pan.com/s/yS8UVv-hoFed.html</a> 提取码:6666</p><p>PhotoshopElements：<a href="https://www.123pan.com/s/yS8UVv-HoFed.html">https://www.123pan.com/s/yS8UVv-HoFed.html</a> 提取码:6666</p><p>PremiereElements：<a href="https://www.123pan.com/s/yS8UVv-AoFed.html">https://www.123pan.com/s/yS8UVv-AoFed.html</a> 提取码:6666</p><p>PremiereRush：<a href="https://www.123pan.com/s/yS8UVv-9oFed.html">https://www.123pan.com/s/yS8UVv-9oFed.html</a> 提取码:6666</p><p>Substance3DDesignater：<a href="https://www.123pan.com/s/yS8UVv-QoFed.html">https://www.123pan.com/s/yS8UVv-QoFed.html</a> 提取码:6666</p><p>VMWare虚拟机：<a href="https://www.123pan.com/s/yS8UVv-OkFed.html">https://www.123pan.com/s/yS8UVv-OkFed.html</a> 提取码:6666</p><p>包含：16，17部分版本</p><p>VisualStudioCode(官网链接)：<a href="https://www.123pan.com/s/yS8UVv-EoFed.html">https://www.123pan.com/s/yS8UVv-EoFed.html</a> 提取码:6666</p><p>VisualStudio：<a href="https://www.123pan.com/s/yS8UVv-koFed.html">https://www.123pan.com/s/yS8UVv-koFed.html</a> 提取码:6666</p><p>包含：一些社区版，专业版，企业版</p><p>JetBrains家族：<a href="https://www.123pan.com/s/yS8UVv-ooFed.html">https://www.123pan.com/s/yS8UVv-ooFed.html</a> 提取码:6666</p><p>包含：IntelliJIDEA，JetBrainsWebStorm，PyCharm</p><p>IntelliJIDEA：<a href="https://www.123pan.com/s/yS8UVv-moFed.html">https://www.123pan.com/s/yS8UVv-moFed.html</a> 提取码:6666</p><p>JetBrainsWebStorm：<a href="https://www.123pan.com/s/yS8UVv-1oFed.html">https://www.123pan.com/s/yS8UVv-1oFed.html</a> 提取码:6666</p><p>PyCharm：<a href="https://www.123pan.com/s/yS8UVv-4oFed.html">https://www.123pan.com/s/yS8UVv-4oFed.html</a> 提取码:6666</p><p>Android：<a href="https://www.123pan.com/s/yS8UVv-xoFed.html">https://www.123pan.com/s/yS8UVv-xoFed.html</a> 提取码:6666</p><p>JAVA8，11部分JDK：<a href="https://www.123pan.com/s/yS8UVv-poFed.html">https://www.123pan.com/s/yS8UVv-poFed.html</a> 提取码:6666</p><p>JetBrains全家桶2022-2023年版：<a href="https://www.123pan.com/s/yS8UVv-F6Fed.html">https://www.123pan.com/s/yS8UVv-F6Fed.html</a> 提取码：6666</p><p>JetBrains全家桶2022.2版：<a href="https://www.123pan.com/s/yS8UVv-g6Fed.html">https://www.123pan.com/s/yS8UVv-g6Fed.html</a> 提取码：6666</p><p>电脑常用工具：<a href="https://www.123pan.com/s/yS8UVv-DkFed.html">https://www.123pan.com/s/yS8UVv-DkFed.html</a> 提取码:6666</p><p>包含：Bandizip，录屏工具，分区工具，硬盘清理工具，数据恢复，7-zip</p><p>bandizip：<a href="https://www.123pan.com/s/yS8UVv-foFed.html">https://www.123pan.com/s/yS8UVv-foFed.html</a> 提取码:6666</p><p>录屏工具：<a href="https://www.123pan.com/s/yS8UVv-aoFed.html">https://www.123pan.com/s/yS8UVv-aoFed.html</a> 提取码:6666</p><p>分区工具：<a href="https://www.123pan.com/s/yS8UVv-BoFed.html">https://www.123pan.com/s/yS8UVv-BoFed.html</a> 提取码:6666</p><p>硬盘清理工具：<a href="https://www.123pan.com/s/yS8UVv-JoFed.html">https://www.123pan.com/s/yS8UVv-JoFed.html</a> 提取码:6666</p><p>数据恢复：<a href="https://www.123pan.com/s/yS8UVv-IoFed.html">https://www.123pan.com/s/yS8UVv-IoFed.html</a> 提取码:6666</p><p>7-Zip：<a href="https://www.123pan.com/s/yS8UVv-MoFed.html">https://www.123pan.com/s/yS8UVv-MoFed.html</a> 提取码:6666</p><p>达芬奇：<a href="https://www.123pan.com/s/yS8UVv-WkFed.html">https://www.123pan.com/s/yS8UVv-WkFed.html</a> 提取码:6666</p><p>包含：14，15，16，1，18部分版本</p><p>建模类：<a href="https://www.123pan.com/s/yS8UVv-CkFed.html">https://www.123pan.com/s/yS8UVv-CkFed.html</a> 提取码:6666</p><p>包含：3dsMax，Maya，C4D，Blender，ZBrush…….</p><p>3DsMax：<a href="https://www.123pan.com/s/yS8UVv-woFed.html">https://www.123pan.com/s/yS8UVv-woFed.html</a> 提取码:6666</p><p>Maya：<a href="https://www.123pan.com/s/yS8UVv-goFed.html">https://www.123pan.com/s/yS8UVv-goFed.html</a> 提取码:6666</p><p>C4D：<a href="https://www.123pan.com/s/yS8UVv-FoFed.html">https://www.123pan.com/s/yS8UVv-FoFed.html</a> 提取码:6666</p><p>Blender自用：<a href="https://www.123pan.com/s/yS8UVv-YoFed.html">https://www.123pan.com/s/yS8UVv-YoFed.html</a> 提取码:6666</p><p>ZBrush：<a href="https://www.123pan.com/s/yS8UVv-GoFed.html">https://www.123pan.com/s/yS8UVv-GoFed.html</a> 提取码:6666</p><p>SketchUp草图大师：<a href="https://www.123pan.com/s/yS8UVv-PoFed.html">https://www.123pan.com/s/yS8UVv-PoFed.html</a> 提取码:6666</p><p>VrayforSketchUp：<a href="https://www.123pan.com/s/yS8UVv-XoFed.html">https://www.123pan.com/s/yS8UVv-XoFed.html</a> 提取码:6666</p><p>VrayforRhino：<a href="https://www.123pan.com/s/yS8UVv-noFed.html">https://www.123pan.com/s/yS8UVv-noFed.html</a> 提取码:6666</p><p>MarvelousDesigne：<a href="https://www.123pan.com/s/yS8UVv-2oFed.html">https://www.123pan.com/s/yS8UVv-2oFed.html</a> 提取码:6666</p><p>Lumion：<a href="https://www.123pan.com/s/yS8UVv-soFed.html">https://www.123pan.com/s/yS8UVv-soFed.html</a> 提取码:6666</p><p>Keyshot：<a href="https://www.123pan.com/s/yS8UVv-WoFed.html">https://www.123pan.com/s/yS8UVv-WoFed.html</a> 提取码:6666</p><p>Enscape：<a href="https://www.123pan.com/s/yS8UVv-CoFed.html">https://www.123pan.com/s/yS8UVv-CoFed.html</a> 提取码:6666</p><p>CorelCAD：<a href="https://www.123pan.com/s/yS8UVv-NoFed.html">https://www.123pan.com/s/yS8UVv-NoFed.html</a> 提取码:6666</p><p>Artlantis：<a href="https://www.123pan.com/s/yS8UVv-OoFed.html">https://www.123pan.com/s/yS8UVv-OoFed.html</a> 提取码:6666</p><p>CAD：<a href="https://www.123pan.com/s/yS8UVv-2kFed.html">https://www.123pan.com/s/yS8UVv-2kFed.html</a> 提取码:6666</p><p>包含：CAD，中望CAD，浩辰CAD等等多个版本</p><p>CAD：<a href="https://www.123pan.com/s/yS8UVv-RoFed.html">https://www.123pan.com/s/yS8UVv-RoFed.html</a> 提取码:6666</p><p>CAD精简版：<a href="https://www.123pan.com/s/yS8UVv-DoFed.html">https://www.123pan.com/s/yS8UVv-DoFed.html</a> 提取码:6666</p><p>CAD建筑版：<a href="https://www.123pan.com/s/yS8UVv-roFed.html">https://www.123pan.com/s/yS8UVv-roFed.html</a> 提取码:6666</p><p>CAD电气版：<a href="https://www.123pan.com/s/yS8UVv-8oFed.html">https://www.123pan.com/s/yS8UVv-8oFed.html</a> 提取码:6666</p><p>CAD机械版：<a href="https://www.123pan.com/s/yS8UVv-0oFed.html">https://www.123pan.com/s/yS8UVv-0oFed.html</a> 提取码:6666</p><p>中望CAD：<a href="https://www.123pan.com/s/yS8UVv-KoFed.html">https://www.123pan.com/s/yS8UVv-KoFed.html</a> 提取码:6666</p><p>中望CAD建筑版：<a href="https://www.123pan.com/s/yS8UVv-uoFed.html">https://www.123pan.com/s/yS8UVv-uoFed.html</a> 提取码:6666</p><p>中望CAD机械版：<a href="https://www.123pan.com/s/yS8UVv-UoFed.html">https://www.123pan.com/s/yS8UVv-UoFed.html</a> 提取码:6666</p><p>浩辰CAD：<a href="https://www.123pan.com/s/yS8UVv-ZoFed.html">https://www.123pan.com/s/yS8UVv-ZoFed.html</a> 提取码:6666</p><p>浩辰CAD电气版：<a href="https://www.123pan.com/s/yS8UVv-coFed.html">https://www.123pan.com/s/yS8UVv-coFed.html</a> 提取码:6666</p><p>浩辰CAD电力版：<a href="https://www.123pan.com/s/yS8UVv-eoFed.html">https://www.123pan.com/s/yS8UVv-eoFed.html</a> 提取码:6666</p><p>浩辰CAD建筑版：<a href="https://www.123pan.com/s/yS8UVv-toFed.html">https://www.123pan.com/s/yS8UVv-toFed.html</a> 提取码:6666</p><p>CAD迷你画图：<a href="https://www.123pan.com/s/yS8UVv-SoFed.html">https://www.123pan.com/s/yS8UVv-SoFed.html</a> 提取码:6666</p><p>CAXA3D实体设计：<a href="https://www.123pan.com/s/yS8UVv-loFed.html">https://www.123pan.com/s/yS8UVv-loFed.html</a> 提取码:6666</p><p>CAXA电子图板：<a href="https://www.123pan.com/s/yS8UVv-7oFed.html">https://www.123pan.com/s/yS8UVv-7oFed.html</a> 提取码:6666</p><p>CAXA工艺图表：<a href="https://www.123pan.com/s/yS8UVv-boFed.html">https://www.123pan.com/s/yS8UVv-boFed.html</a> 提取码:6666</p><p>T20天正电气：<a href="https://www.123pan.com/s/yS8UVv-ioFed.html">https://www.123pan.com/s/yS8UVv-ioFed.html</a> 提取码:6666</p><p>T20天正结构：<a href="https://www.123pan.com/s/yS8UVv-zoFed.html">https://www.123pan.com/s/yS8UVv-zoFed.html</a> 提取码:6666</p><p>T20天正暖通：<a href="https://www.123pan.com/s/yS8UVv-LoFed.html">https://www.123pan.com/s/yS8UVv-LoFed.html</a> 提取码:6666</p><p>T20天正建筑：<a href="https://www.123pan.com/s/yS8UVv-5oFed.html">https://www.123pan.com/s/yS8UVv-5oFed.html</a> 提取码:6666</p><p>T20天正给排水：<a href="https://www.123pan.com/s/yS8UVv-qoFed.html">https://www.123pan.com/s/yS8UVv-qoFed.html</a> 提取码:6666</p><p>下载工具：<a href="https://www.123pan.com/s/yS8UVv-nkFed.html">https://www.123pan.com/s/yS8UVv-nkFed.html</a> 提取码:6666</p><p>包含：IDM，比特彗星和一些视频下载工具</p><p>办公软件：<a href="https://www.123pan.com/s/yS8UVv-8kFed.html">https://www.123pan.com/s/yS8UVv-8kFed.html</a> 提取码:6666</p><p>包含：Office，Wps，PDF阅读、编辑器，Visio，Project，EndNote，LaTex</p><p>Office：<a href="https://www.123pan.com/s/yS8UVv-6oFed.html">https://www.123pan.com/s/yS8UVv-6oFed.html</a> 提取码:6666</p><p>Wps：<a href="https://www.123pan.com/s/yS8UVv-yoFed.html">https://www.123pan.com/s/yS8UVv-yoFed.html</a> 提取码:6666</p><p>Visio：<a href="https://www.123pan.com/s/yS8UVv-VoFed.html">https://www.123pan.com/s/yS8UVv-VoFed.html</a> 提取码:6666</p><p>Project：<a href="https://www.123pan.com/s/yS8UVv-joFed.html">https://www.123pan.com/s/yS8UVv-joFed.html</a> 提取码:6666</p><p>EndNote：<a href="https://www.123pan.com/s/yS8UVv-TmFed.html">https://www.123pan.com/s/yS8UVv-TmFed.html</a> 提取码:6666</p><p>LaTex：<a href="https://www.123pan.com/s/yS8UVv-vmFed.html">https://www.123pan.com/s/yS8UVv-vmFed.html</a> 提取码:6666</p><p>Foxit福昕PDF编辑器：<a href="https://www.123pan.com/s/yS8UVv-dmFed.html">https://www.123pan.com/s/yS8UVv-dmFed.html</a> 提取码:6666</p><p>Foxit福昕PDF阅读器：<a href="https://www.123pan.com/s/yS8UVv-3mFed.html">https://www.123pan.com/s/yS8UVv-3mFed.html</a> 提取码:6666</p><p>PDFelement万兴PDF专家：<a href="https://www.123pan.com/s/yS8UVv-HmFed.html">https://www.123pan.com/s/yS8UVv-HmFed.html</a> 提取码:6666</p><p>PDFXChangeEditor：<a href="https://www.123pan.com/s/yS8UVv-hmFed.html">https://www.123pan.com/s/yS8UVv-hmFed.html</a> 提取码:6666</p><p>媒体工具：<a href="https://www.123pan.com/s/yS8UVv-0kFed.html">https://www.123pan.com/s/yS8UVv-0kFed.html</a> 提取码:6666</p><p>包含：nuendo，Cubase</p><p>nuendo：<a href="https://www.123pan.com/s/yS8UVv-9mFed.html">https://www.123pan.com/s/yS8UVv-9mFed.html</a> 提取码:6666</p><p>Cubase：<a href="https://www.123pan.com/s/yS8UVv-AmFed.html">https://www.123pan.com/s/yS8UVv-AmFed.html</a> 提取码:6666</p><p>图像处理：<a href="https://www.123pan.com/s/yS8UVv-KkFed.html">https://www.123pan.com/s/yS8UVv-KkFed.html</a> 提取码:6666</p><p>包含：ACDSee，AffinityPhoto，CaptureOne，CorelPainter，亿图图示，SketchBook，EasyPaintToolSAI</p><p>ACDSee：<a href="https://www.123pan.com/s/yS8UVv-QmFed.html">https://www.123pan.com/s/yS8UVv-QmFed.html</a> 提取码:6666</p><p>AffinityPhoto：<a href="https://www.123pan.com/s/yS8UVv-EmFed.html">https://www.123pan.com/s/yS8UVv-EmFed.html</a> 提取码:6666</p><p>CaptureOne：<a href="https://www.123pan.com/s/yS8UVv-kmFed.html">https://www.123pan.com/s/yS8UVv-kmFed.html</a> 提取码:6666</p><p>CorelPainter：<a href="https://www.123pan.com/s/yS8UVv-omFed.html">https://www.123pan.com/s/yS8UVv-omFed.html</a> 提取码:6666</p><p>亿图图示：<a href="https://www.123pan.com/s/yS8UVv-1mFed.html">https://www.123pan.com/s/yS8UVv-1mFed.html</a> 提取码:6666</p><p>SketchBook：<a href="https://www.123pan.com/s/yS8UVv-4mFed.html">https://www.123pan.com/s/yS8UVv-4mFed.html</a> 提取码:6666</p><p>EasyPaintToolSAI：<a href="https://www.123pan.com/s/yS8UVv-mmFed.html">https://www.123pan.com/s/yS8UVv-mmFed.html</a> 提取码:6666</p><p>仿真模拟：<a href="https://www.123pan.com/s/yS8UVv-ukFed.html">https://www.123pan.com/s/yS8UVv-ukFed.html</a> 提取码:6666</p><p>包含：COMSOLMultiphysics，ANSYSElectronicsSuite，ANSYSProducts，AltairHyperWorks，AnsysMaxwell，MSCAdams，Abaqus，VeroVisi，Tecplot360EX，AutodeskMoldflow，MidasCivil，Dynaform</p><p>COMSOLMultiphysics：<a href="https://www.123pan.com/s/yS8UVv-ImFed.html">https://www.123pan.com/s/yS8UVv-ImFed.html</a> 提取码:6666</p><p>ANSYSElectronicsSuite：<a href="https://www.123pan.com/s/yS8UVv-JmFed.html">https://www.123pan.com/s/yS8UVv-JmFed.html</a> 提取码:6666</p><p>ANSYSProducts：<a href="https://www.123pan.com/s/yS8UVv-BmFed.html">https://www.123pan.com/s/yS8UVv-BmFed.html</a> 提取码:6666</p><p>AltairHyperWorks：<a href="https://www.123pan.com/s/yS8UVv-amFed.html">https://www.123pan.com/s/yS8UVv-amFed.html</a> 提取码:6666</p><p>AnsysMaxwell：<a href="https://www.123pan.com/s/yS8UVv-fmFed.html">https://www.123pan.com/s/yS8UVv-fmFed.html</a> 提取码:6666</p><p>MSCAdams：<a href="https://www.123pan.com/s/yS8UVv-pmFed.html">https://www.123pan.com/s/yS8UVv-pmFed.html</a> 提取码:6666</p><p>Abaqus：<a href="https://www.123pan.com/s/yS8UVv-xmFed.html">https://www.123pan.com/s/yS8UVv-xmFed.html</a> 提取码:6666</p><p>VeroVisi：<a href="https://www.123pan.com/s/yS8UVv-GmFed.html">https://www.123pan.com/s/yS8UVv-GmFed.html</a> 提取码:6666</p><p>Tecplot360EX：<a href="https://www.123pan.com/s/yS8UVv-FmFed.html">https://www.123pan.com/s/yS8UVv-FmFed.html</a> 提取码:6666</p><p>AutodeskMoldflow：<a href="https://www.123pan.com/s/yS8UVv-gmFed.html">https://www.123pan.com/s/yS8UVv-gmFed.html</a> 提取码:6666</p><p>MidasCivil：<a href="https://www.123pan.com/s/yS8UVv-wmFed.html">https://www.123pan.com/s/yS8UVv-wmFed.html</a> 提取码:6666</p><p>Dynaform：<a href="https://www.123pan.com/s/yS8UVv-MmFed.html">https://www.123pan.com/s/yS8UVv-MmFed.html</a> 提取码:6666</p><p>数据分析：<a href="https://www.123pan.com/s/yS8UVv-UkFed.html">https://www.123pan.com/s/yS8UVv-UkFed.html</a> 提取码:6666</p><p>包含：Matlab，MySQL，SQLServer，TableauDesktop，Stata，IBMSPSSStatistics，Origin，Minitab，Mathematica，Maple，Amos</p><p>Matlab：<a href="https://www.123pan.com/s/yS8UVv-nmFed.html">https://www.123pan.com/s/yS8UVv-nmFed.html</a> 提取码:6666</p><p>MySQL：<a href="https://www.123pan.com/s/yS8UVv-2mFed.html">https://www.123pan.com/s/yS8UVv-2mFed.html</a> 提取码:6666</p><p>SQLServer：<a href="https://www.123pan.com/s/yS8UVv-smFed.html">https://www.123pan.com/s/yS8UVv-smFed.html</a> 提取码:6666</p><p>TableauDesktop：<a href="https://www.123pan.com/s/yS8UVv-WmFed.html">https://www.123pan.com/s/yS8UVv-WmFed.html</a> 提取码:6666</p><p>Stata：<a href="https://www.123pan.com/s/yS8UVv-CmFed.html">https://www.123pan.com/s/yS8UVv-CmFed.html</a> 提取码:6666</p><p>IBMSPSSStatistics：<a href="https://www.123pan.com/s/yS8UVv-NmFed.html">https://www.123pan.com/s/yS8UVv-NmFed.html</a> 提取码:6666</p><p>Origin：<a href="https://www.123pan.com/s/yS8UVv-OmFed.html">https://www.123pan.com/s/yS8UVv-OmFed.html</a> 提取码:6666</p><p>Minitab：<a href="https://www.123pan.com/s/yS8UVv-RmFed.html">https://www.123pan.com/s/yS8UVv-RmFed.html</a> 提取码:6666</p><p>Mathematica：<a href="https://www.123pan.com/s/yS8UVv-DmFed.html">https://www.123pan.com/s/yS8UVv-DmFed.html</a> 提取码:6666</p><p>Maple：<a href="https://www.123pan.com/s/yS8UVv-rmFed.html">https://www.123pan.com/s/yS8UVv-rmFed.html</a> 提取码:6666</p><p>Amos：<a href="https://www.123pan.com/s/yS8UVv-8mFed.html">https://www.123pan.com/s/yS8UVv-8mFed.html</a> 提取码:6666</p><p>机械设计：<a href="https://www.123pan.com/s/yS8UVv-SkFed.html">https://www.123pan.com/s/yS8UVv-SkFed.html</a> 提取码:6666</p><p>包含：Rhinoceros犀牛，UnigraphicsNX(UGNX)，SolidWorks，PowerMill，Proe，Mastercam，Inventor，Creo，CATIAComposer，CATIA</p><p>Rhinoceros犀牛：<a href="https://www.123pan.com/s/yS8UVv-0mFed.html">https://www.123pan.com/s/yS8UVv-0mFed.html</a> 提取码:6666</p><p>UnigraphicsNX(UGNX)：<a href="https://www.123pan.com/s/yS8UVv-KmFed.html">https://www.123pan.com/s/yS8UVv-KmFed.html</a> 提取码:6666</p><p>SolidWorks：<a href="https://www.123pan.com/s/yS8UVv-umFed.html">https://www.123pan.com/s/yS8UVv-umFed.html</a> 提取码:6666</p><p>PowerMill：<a href="https://www.123pan.com/s/yS8UVv-UmFed.html">https://www.123pan.com/s/yS8UVv-UmFed.html</a> 提取码:6666</p><p>Proe：<a href="https://www.123pan.com/s/yS8UVv-SmFed.html">https://www.123pan.com/s/yS8UVv-SmFed.html</a> 提取码:6666</p><p>Mastercam：<a href="https://www.123pan.com/s/yS8UVv-lmFed.html">https://www.123pan.com/s/yS8UVv-lmFed.html</a> 提取码:6666</p><p>Inventor：<a href="https://www.123pan.com/s/yS8UVv-7mFed.html">https://www.123pan.com/s/yS8UVv-7mFed.html</a> 提取码:6666</p><p>Creo：<a href="https://www.123pan.com/s/yS8UVv-bmFed.html">https://www.123pan.com/s/yS8UVv-bmFed.html</a> 提取码:6666</p><p>CATIAComposer：<a href="https://www.123pan.com/s/yS8UVv-ZmFed.html">https://www.123pan.com/s/yS8UVv-ZmFed.html</a> 提取码:6666</p><p>CATIA：<a href="https://www.123pan.com/s/yS8UVv-cmFed.html">https://www.123pan.com/s/yS8UVv-cmFed.html</a> 提取码:6666</p><p>建筑设计：<a href="https://www.123pan.com/s/yS8UVv-lkFed.html">https://www.123pan.com/s/yS8UVv-lkFed.html</a> 提取码:6666</p><p>包含：AutodeskRevit，AutoCADCivil3D，NavisworksManage，TeklaStructures，Vectorworks</p><p>AutodeskRevit：<a href="https://www.123pan.com/s/yS8UVv-imFed.html">https://www.123pan.com/s/yS8UVv-imFed.html</a> 提取码:6666</p><p>AutoCADCivil3D：<a href="https://www.123pan.com/s/yS8UVv-emFed.html">https://www.123pan.com/s/yS8UVv-emFed.html</a> 提取码:6666</p><p>NavisworksManage：<a href="https://www.123pan.com/s/yS8UVv-tmFed.html">https://www.123pan.com/s/yS8UVv-tmFed.html</a> 提取码:6666</p><p>TeklaStructures：<a href="https://www.123pan.com/s/yS8UVv-zmFed.html">https://www.123pan.com/s/yS8UVv-zmFed.html</a> 提取码:6666</p><p>Vectorworks：<a href="https://www.123pan.com/s/yS8UVv-LmFed.html">https://www.123pan.com/s/yS8UVv-LmFed.html</a> 提取码:6666</p><p>电子电路：<a href="https://www.123pan.com/s/yS8UVv-7kFed.html">https://www.123pan.com/s/yS8UVv-7kFed.html</a> 提取码:6666</p><p>包含：Proteus，Multisim，AltiumDesigner</p><p>Proteus：<a href="https://www.123pan.com/s/yS8UVv-6mFed.html">https://www.123pan.com/s/yS8UVv-6mFed.html</a> 提取码:6666</p><p>Multisim：<a href="https://www.123pan.com/s/yS8UVv-qmFed.html">https://www.123pan.com/s/yS8UVv-qmFed.html</a> 提取码:6666</p><p>AltiumDesigner：<a href="https://www.123pan.com/s/yS8UVv-5mFed.html">https://www.123pan.com/s/yS8UVv-5mFed.html</a> 提取码:6666</p><p>MSDN：<a href="https://www.123pan.com/s/yS8UVv-ymFed.html">https://www.123pan.com/s/yS8UVv-ymFed.html</a> 提取码:6666</p><hr><p>Mac总索引：<a href="https://www.123pan.com/s/yS8UVv-bqged.html%E3%80%90">https://www.123pan.com/s/yS8UVv-bqged.html【</a> 提取码:6666】</p><p>ISO文件：<a href="https://www.123pan.com/s/yS8UVv-66Fed.html%E3%80%90">https://www.123pan.com/s/yS8UVv-66Fed.html【</a> 提取码:6666】</p><p>VMvare：<a href="https://www.123pan.com/s/yS8UVv-OkFed.html%E3%80%90">https://www.123pan.com/s/yS8UVv-OkFed.html【</a> 提取码:6666】</p><p>unlocker：<a href="https://www.123pan.com/s/yS8UVv-y6Fed.html%E3%80%90">https://www.123pan.com/s/yS8UVv-y6Fed.html【</a> 提取码:6666】</p><hr><p>MSDN新网站：next.itellyou.cn</p><p>提示：</p><p>Windows变正版工具KMS：<a href="https://wwi.lanzout.com/igcDdyru6if">https://wwi.lanzout.com/igcDdyru6if</a></p><p>我的蓝筹云KMS：<a href="https://wwcv.lanzouw.com/iyJBM0y2vtwj%E5%AF%86%E7%A0%81:crce">https://wwcv.lanzouw.com/iyJBM0y2vtwj密码:crce</a></p><p>其他正版工具参考：rjctx.com</p><p>必须注意：下载的系统文件必须校验，校验工具和Hash校验值，每个文件夹下都有</p><p>不校验，寄了又得重装系统。。。</p><p>【Windows系统】：</p><p>Win11：<a href="https://www.123pan.com/s/yS8UVv-sqged.html">https://www.123pan.com/s/yS8UVv-sqged.html</a> 提取码:6666</p><p>Win10：<a href="https://www.123pan.com/s/yS8UVv-Wqged.html">https://www.123pan.com/s/yS8UVv-Wqged.html</a> 提取码:6666</p><p>Win8.1：<a href="https://www.123pan.com/s/yS8UVv-Nqged.html">https://www.123pan.com/s/yS8UVv-Nqged.html</a> 提取码:6666</p><p>Win8：<a href="https://www.123pan.com/s/yS8UVv-Oqged.html">https://www.123pan.com/s/yS8UVv-Oqged.html</a> 提取码:6666</p><p>WinVista：<a href="https://www.123pan.com/s/yS8UVv-Dqged.html">https://www.123pan.com/s/yS8UVv-Dqged.html</a> 提取码:6666</p><p>Win7：<a href="https://www.123pan.com/s/yS8UVv-Cqged.html">https://www.123pan.com/s/yS8UVv-Cqged.html</a> 提取码:6666</p><p>WinXP：<a href="https://www.123pan.com/s/yS8UVv-Rqged.html">https://www.123pan.com/s/yS8UVv-Rqged.html</a> 提取码:6666</p><p>【Windows服务器】</p><p>WindowsServer2022：<a href="https://www.123pan.com/s/yS8UVv-rqged.html">https://www.123pan.com/s/yS8UVv-rqged.html</a> 提取码:6666</p><p>WindowsServer2019：<a href="https://www.123pan.com/s/yS8UVv-8qged.html">https://www.123pan.com/s/yS8UVv-8qged.html</a> 提取码:6666</p><p>WindowsServer2016：<a href="https://www.123pan.com/s/yS8UVv-0qged.html">https://www.123pan.com/s/yS8UVv-0qged.html</a> 提取码:6666</p><hr><p>Windows汇总：<a href="https://www.123pan.com/s/yS8UVv-cqged.html">https://www.123pan.com/s/yS8UVv-cqged.html</a> 提取码:6666</p><p>【Linux系统】：</p><p>CentOS：<a href="https://www.123pan.com/s/yS8UVv-lqged.html">https://www.123pan.com/s/yS8UVv-lqged.html</a> 提取码:6666</p><p>Ubuntu：<a href="https://www.123pan.com/s/yS8UVv-Sqged.html">https://www.123pan.com/s/yS8UVv-Sqged.html</a> 提取码:6666</p><p>Fedora：<a href="https://www.123pan.com/s/yS8UVv-7qged.html">https://www.123pan.com/s/yS8UVv-7qged.html</a> 提取码:6666</p><p>UOS：<a href="https://www.123pan.com/s/yS8UVv-Uqged.html">https://www.123pan.com/s/yS8UVv-Uqged.html</a> 提取码:6666</p><p>Deepin：<a href="https://www.123pan.com/s/yS8UVv-uqged.html">https://www.123pan.com/s/yS8UVv-uqged.html</a> 提取码:6666</p><hr><p>Linux汇总：<a href="https://www.123pan.com/s/yS8UVv-Zqged.html">https://www.123pan.com/s/yS8UVv-Zqged.html</a> 提取码:6666</p><p>【MacOS系统】：</p><p>MacOS汇总：<a href="https://www.123pan.com/s/yS8UVv-bqged.html">https://www.123pan.com/s/yS8UVv-bqged.html</a> 提取码:6666</p><p>【ChromiumOS系统】：</p><p>ChromiumOS汇总：<a href="https://www.123pan.com/s/yS8UVv-eqged.html">https://www.123pan.com/s/yS8UVv-eqged.html</a> 提取码:6666</p><p>【BSD系统】：</p><p>FreeBSD：<a href="https://www.123pan.com/s/yS8UVv-iqged.html">https://www.123pan.com/s/yS8UVv-iqged.html</a> 提取码:6666</p><p>NetBSD：<a href="https://www.123pan.com/s/yS8UVv-zqged.html">https://www.123pan.com/s/yS8UVv-zqged.html</a> 提取码:6666</p><p>OpenBSD：<a href="https://www.123pan.com/s/yS8UVv-Lqged.html">https://www.123pan.com/s/yS8UVv-Lqged.html</a> 提取码:6666</p><p>DragonFlyBSD：<a href="https://www.123pan.com/s/yS8UVv-5qged.html">https://www.123pan.com/s/yS8UVv-5qged.html</a> 提取码:6666</p><hr><p>BSD汇总：<a href="https://www.123pan.com/s/yS8UVv-tqged.html">https://www.123pan.com/s/yS8UVv-tqged.html</a> 提取码:6666</p><p>【【【PS：123网盘分享，全是文件夹，点进去自己选择下载版本】】】</p><p>软件主要来源：</p><p>考拉：rjctx.com，脚本之家：<a href="https://www.jb51.net，系统搬运自MSDN：https://msdn.itellyou.cn/，next.itellyou.cn">https://www.jb51.net，系统搬运自MSDN：https://msdn.itellyou.cn/，next.itellyou.cn</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>汇编语言</title>
      <link href="/posts/ec85.html"/>
      <url>/posts/ec85.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>我曾七次鄙视自己的灵魂</title>
      <link href="/posts/essay-demo.html"/>
      <url>/posts/essay-demo.html</url>
      
        <content type="html"><![CDATA[<h3 id="随笔板块，后续会更新文章，目前弄好了模板格式"><a href="#随笔板块，后续会更新文章，目前弄好了模板格式" class="headerlink" title="随笔板块，后续会更新文章，目前弄好了模板格式~"></a>随笔板块，后续会更新文章，目前弄好了模板格式~</h3><div class="ipage">   <div class="ititle">节选自《Seven times have I despised my soul》- Kahlil Gibran</div>   <div class="izhengwen">     <p>    我曾七次鄙视自己的灵魂 - 纪伯伦<br>    The first time when I saw her being meek that she might attain height.<br>    第一次, 当它本可进取时, 却故作谦卑<br>    The second time when I saw her limping before the crippled.<br>    第二次, 当它空虚时, 用爱欲来填充<br>    The third time when she was given to choose between the hard and the easy, and she chose the easy.<br>    第三次, 在堕落和努力之间, 它选择了堕落<br>    The fourth time when she committed a wrong, and comforted herself that others also commit wrong.<br>    第四次, 它犯了错, 却藉由别人的错来宽慰自己<br>     The fifth time when she forbore for weakness, and attributed her patience to strength.<br>    第五次, 它自由软弱，却把它认为是生命的坚韧<br>    The sixth time when she despised the ugliness of a face and knew not that it was one of her own masks.<br>    第六次, 当它嘲笑他人愚蠢时, 却不知自己更是蠢材<br>    The seventh time when she sang a song of praise and deemed it a virtue.<br>    第七次, 它在泥潭时既彻底摆不了烂也不彻底甘心<br>    </p>   </div> </div>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo基础命令</title>
      <link href="/posts/ec85.html"/>
      <url>/posts/ec85.html</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-基础命令"><a href="#Hexo-基础命令" class="headerlink" title="Hexo 基础命令"></a>Hexo 基础命令</h1><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><pre class="line-numbers language-none"><code class="language-none">hexo new&quot;postName&quot;      新建文章 hexo new page&quot;pageName&quot; 新建页面 hexo generate           生成静态页面至public目录 hexo clean              清除生成内容 hexo server             开启预览访问（默认端口4000，&#39;ctrl + c&#39;关闭server） hexo deploy             将.deploy目录部署到指定空间 hexo help               查看帮助 hexo version            查看hexo的版本hexo server -p 5000 更改端口<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="缩写"><a href="#缩写" class="headerlink" title="缩写"></a>缩写</h2><pre class="line-numbers language-text" data-language="text"><code class="language-text">hexo g： hexo generatehexo cl：hexo cleanhexo s： hexo serverhexo d： hexo deployhexo n "我的博客"      hexo new "我的博客"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="组合"><a href="#组合" class="headerlink" title="组合"></a>组合</h2><pre class="line-numbers language-text" data-language="text"><code class="language-text">hexo s -g    生成并本地预览hexo d -g    生成并上传hexo clean &amp;&amp; hexo g -s 清除、生成、启动hexo clean &amp;&amp; hexo g -d 清除、生成、部署<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/3eeb.html"/>
      <url>/posts/3eeb.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>md语法</title>
      <link href="/posts/ec85.html"/>
      <url>/posts/ec85.html</url>
      
        <content type="html"><![CDATA[<h1 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h1><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>在单词或短语前面添加井号 (<code>#</code>) ：<code>#</code> 的数量代表了标题的级别。如，三个 <code>#</code> 表示三级标题 (<code>&lt;h3&gt;</code>)</p><pre class="line-numbers language-none"><code class="language-none"># 一级标题## 二级标题###### 六级标题<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h2><p>在行末添加两个或多个空格，然后按回车键，即可换行(<code>&lt;br&gt;</code>)<br>有争议的，因为很难在编辑器中直接看到空格，并且很多人在每个句子后面都会有意或无意地添加两个空格。由于这个原因，你可能要使用除结尾空格以外的其它方式来换行。幸运的是，几乎每个 Markdown 应用程序都支持另一种换行方式：HTML 的 <code>&lt;br&gt;</code> 标签。<br>为了兼容性，请在行尾添加“结尾空格”或 HTML 的 <code>&lt;br&gt;</code> 标签来实现换行。</p><pre class="line-numbers language-none"><code class="language-none">弃我去者昨日之日不可留&lt;br&gt;乱我心者今日之日多烦忧<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>弃我去者昨日之日不可留<br>乱我心者今日之日多烦忧</p><h2 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h2><h3 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a>粗体</h3><p>在需要加粗的部分<code>前后</code>各添加<code>两个</code>星号（asterisks）或下划线（underscores）</p><p>为兼容考虑，请使用星号（asterisks）</p><pre class="line-numbers language-none"><code class="language-none">**粗体**<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>粗体</strong></p><h3 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h3><p>在需要斜体的部分<code>前后</code>各添加<code>一个</code>星号（asterisks）或下划线（underscores）</p><p>为兼容考虑，请使用星号（asterisks）</p><pre class="line-numbers language-none"><code class="language-none">*斜体*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><em>斜体</em></p><h3 id="斜体加粗"><a href="#斜体加粗" class="headerlink" title="斜体加粗"></a>斜体加粗</h3><p>在需要加粗的部分<code>前后</code>各添加<code>三个</code>星号（asterisks）或下划线（underscores）</p><p>为兼容考虑，请使用星号（asterisks）</p><pre class="line-numbers language-none"><code class="language-none">***斜体加粗***<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong><em>斜体加粗</em></strong></p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>要创建块引用，请在段落前添加一个 <code>&gt;</code> 符号</p><pre class="line-numbers language-none"><code class="language-none">&gt; 块引用<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>块引用</p></blockquote><h3 id="嵌套块引用"><a href="#嵌套块引用" class="headerlink" title="嵌套块引用"></a>嵌套块引用</h3><pre class="line-numbers language-none"><code class="language-none">&gt; 块引用&gt; 块引用<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>块引用</p><blockquote><p>块引用</p></blockquote></blockquote><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>在行头添加一个数字和一个英文句点，然后空格。数字不必按数学顺序排列，但是列表应当以数字 1 起始</p><ol><li>第一</li><li>第二</li><li>第三</li></ol><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>添加破折号 (-)、星号 (*) 或加号 (+) ，然后空格</p><ul><li>一花</li><li>二乃</li><li>三玖</li><li>四叶</li><li>五月</li></ul><h3 id="嵌套列表"><a href="#嵌套列表" class="headerlink" title="嵌套列表"></a>嵌套列表</h3><p>在列表项之下，输入<code>数字 英文句点</code> 或 <code>-</code> 、 <code>+</code> 、 <code>-</code>，然后输入 Tab 键缩进</p><pre class="line-numbers language-none"><code class="language-none">1. 五等分的花嫁- 一花- 二乃- 五等分的花嫁1. 三玖2. 四叶3. 五月<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>五等分的花嫁<ul><li>一花</li><li>二乃</li></ul></li></ol><ul><li>五等分的花嫁 <ol start="3"><li>三玖 </li><li>四叶</li><li>五月</li></ol></li></ul><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><h3 id="单行"><a href="#单行" class="headerlink" title="单行"></a>单行</h3><p>将单行代码放入两个反引号&#96;&#96;中</p><pre class="line-numbers language-none"><code class="language-none">&#96;print(&quot;Hello World!&quot;)&#96;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>print(&quot;Hello World!&quot;)</code></p><h3 id="多行"><a href="#多行" class="headerlink" title="多行"></a>多行</h3><p>代码块之前和之后的行上使用三个反引号**&#96;&#96;&#96;**或三个波浪号~ ~ ~,然后在后面跟上代码语言</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Hello World!"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="math公式"><a href="#math公式" class="headerlink" title="math公式"></a>math公式</h2><h3 id="行内公式"><a href="#行内公式" class="headerlink" title="行内公式"></a>行内公式</h3><p>在<code>$ $</code>之中填写公式</p><pre class="line-numbers language-wolfram" data-language="wolfram"><code class="language-wolfram">$<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>$<span class="token global-variable variable">$e</span><span class="token operator">^</span><span class="token punctuation">&#123;</span>x<span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">&#125;</span>\neq<span class="token punctuation">&#123;</span>e<span class="token operator">^</span>x<span class="token punctuation">&#125;</span><span class="token operator">^</span><span class="token number">2</span>$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>$e^{x^2}\neq{e^x}^2$</p><h3 id="块公式"><a href="#块公式" class="headerlink" title="块公式"></a>块公式</h3><p>在<code>$$ $$</code>中填写公式</p><pre class="line-numbers language-wolfram" data-language="wolfram"><code class="language-wolfram">$$<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>$$$<span class="token global-variable variable">$e</span><span class="token operator">^</span><span class="token punctuation">&#123;</span>x<span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">&#125;</span>\neq<span class="token punctuation">&#123;</span>e<span class="token operator">^</span>x<span class="token punctuation">&#125;</span><span class="token operator">^</span><span class="token number">2</span>$$$<span class="token global-variable variable">$H</span><span class="token punctuation">(</span>D_2<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span>\frac<span class="token punctuation">&#123;</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token number">4</span><span class="token punctuation">&#125;</span>\ log_2 \frac<span class="token punctuation">&#123;</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token number">4</span><span class="token punctuation">&#125;</span> <span class="token operator">+</span> \frac<span class="token punctuation">&#123;</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token number">4</span><span class="token punctuation">&#125;</span>\ log_2 \frac<span class="token punctuation">&#123;</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token number">4</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span>$$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>$$e^{x^2}\neq{e^x}^2$$<br>$$H(D_2) &#x3D; -(\frac{2}{4}\ log_2 \frac{2}{4} + \frac{2}{4}\ log_2 \frac{2}{4}) &#x3D; 1$$</p><h3 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h3><pre class="line-numbers language-wolfram" data-language="wolfram"><code class="language-wolfram">$$\begin<span class="token punctuation">&#123;</span>pmatrix<span class="token punctuation">&#125;</span>        <span class="token number">1</span> <span class="token operator">&amp;</span> a_1 <span class="token operator">&amp;</span> a_1<span class="token operator">^</span><span class="token number">2</span> <span class="token operator">&amp;</span> \cdots <span class="token operator">&amp;</span> a_1<span class="token operator">^</span>n \\        <span class="token number">1</span> <span class="token operator">&amp;</span> a_2 <span class="token operator">&amp;</span> a_2<span class="token operator">^</span><span class="token number">2</span> <span class="token operator">&amp;</span> \cdots <span class="token operator">&amp;</span> a_2<span class="token operator">^</span>n \\        \vdots <span class="token operator">&amp;</span> \vdots <span class="token operator">&amp;</span> \vdots <span class="token operator">&amp;</span> \ddots <span class="token operator">&amp;</span> \vdots \\        <span class="token number">1</span> <span class="token operator">&amp;</span> a_m <span class="token operator">&amp;</span> a_m<span class="token operator">^</span><span class="token number">2</span> <span class="token operator">&amp;</span> \cdots <span class="token operator">&amp;</span> a_m<span class="token operator">^</span>n \\        \end<span class="token punctuation">&#123;</span>pmatrix<span class="token punctuation">&#125;</span>$$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$$<br>\begin{pmatrix}<br>    1 &amp; a_1 &amp; a_1^2 &amp; \cdots &amp; a_1^n \<br>    1 &amp; a_2 &amp; a_2^2 &amp; \cdots &amp; a_2^n \<br>    \vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots \<br>    1 &amp; a_m &amp; a_m^2 &amp; \cdots &amp; a_m^n \<br>    \end{pmatrix}<br>$$</p><h3 id="行列式"><a href="#行列式" class="headerlink" title="行列式"></a>行列式</h3><pre class="line-numbers language-wolfram" data-language="wolfram"><code class="language-wolfram">$$\mathbf<span class="token punctuation">&#123;</span>V<span class="token punctuation">&#125;</span>_1 \times \mathbf<span class="token punctuation">&#123;</span>V<span class="token punctuation">&#125;</span>_2 <span class="token operator">=</span>  \begin<span class="token punctuation">&#123;</span>vmatrix<span class="token punctuation">&#125;</span>\mathbf<span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span> <span class="token operator">&amp;</span> \mathbf<span class="token punctuation">&#123;</span>j<span class="token punctuation">&#125;</span> <span class="token operator">&amp;</span> \mathbf<span class="token punctuation">&#123;</span>k<span class="token punctuation">&#125;</span> \\\frac<span class="token punctuation">&#123;</span>\partial X<span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>\partial u<span class="token punctuation">&#125;</span> <span class="token operator">&amp;</span>  \frac<span class="token punctuation">&#123;</span>\partial Y<span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>\partial u<span class="token punctuation">&#125;</span> <span class="token operator">&amp;</span> <span class="token number">0</span> \\\frac<span class="token punctuation">&#123;</span>\partial X<span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>\partial v<span class="token punctuation">&#125;</span> <span class="token operator">&amp;</span>  \frac<span class="token punctuation">&#123;</span>\partial Y<span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>\partial v<span class="token punctuation">&#125;</span> <span class="token operator">&amp;</span> <span class="token number">0</span> \\\end<span class="token punctuation">&#123;</span>vmatrix<span class="token punctuation">&#125;</span>$$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$$<br>\mathbf{V}_1 \times \mathbf{V}_2 &#x3D; \begin{vmatrix}<br>\mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \<br>\frac{\partial X}{\partial u} &amp; \frac{\partial Y}{\partial u} &amp; 0 \<br>\frac{\partial X}{\partial v} &amp; \frac{\partial Y}{\partial v} &amp; 0 \<br>\end{vmatrix}<br>$$</p><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>在单独一行上使用三个或多个星号 (<code>***</code>)、破折号 (<code>---</code>) 或下划线 (<code>___</code>) ，然后回车</p><p>为了兼容性，请在分隔线的前后均添加空白行</p><pre class="line-numbers language-none"><code class="language-none">***---___<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><hr><hr><h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h2><pre class="line-numbers language-text" data-language="text"><code class="language-text">~~明天开始努力~~ 现在开始！<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><del>明天开始努力</del> 现在开始！</p><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p>链接名放在中括号内，链接地址放在后面的括号中，链接 title 可选</p><p>超链接语法：<code>[超链接显示名](超链接地址 &quot;超链接title&quot;)</code></p><pre class="line-numbers language-none"><code class="language-none">[loyehのblog](https:&#x2F;&#x2F;lo-y-eh.github.io)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这是 <a href="https://lo-y-eh.github.io/">loyeh の blog</a></p><h3 id="title"><a href="#title" class="headerlink" title="title"></a>title</h3><p>链接 title 是当鼠标悬停在链接上时会出现的文字，是可选的，它放在圆括号中链接地址后面，跟链接地址之间以空格分隔</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">[Markdown语法](https://markdown.com.cn)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>[markdown 官方文档](<a href="https://markdown.com.cn/">Markdown 官方教程</a> “最好的 markdown 教程”)</p><h3 id="网址和-Email-地址"><a href="#网址和-Email-地址" class="headerlink" title="网址和 Email 地址"></a>网址和 Email 地址</h3><p>使用尖括号可以很方便地把 URL 或者 email 地址变成可点击的链接</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">&lt;https://markdown.com.cn>&lt;fake@example.com><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><a href="https://markdown.com.cn/">https://markdown.com.cn</a></p><p><a href="mailto:&#102;&#97;&#107;&#101;&#x40;&#x65;&#x78;&#x61;&#109;&#x70;&#x6c;&#101;&#x2e;&#99;&#x6f;&#109;">&#102;&#97;&#107;&#101;&#x40;&#x65;&#x78;&#x61;&#109;&#x70;&#x6c;&#101;&#x2e;&#99;&#x6f;&#109;</a></p><h3 id="带格式化的链接"><a href="#带格式化的链接" class="headerlink" title="带格式化的链接"></a>带格式化的链接</h3><blockquote><p>不同的 Markdown 应用程序处理 URL 中间的空格方式不一样。为了兼容，请尽量使用%20 代替空格</p></blockquote><ul><li><p>强调链接, 在链接语法前后增加星号</p><pre class="line-numbers language-none"><code class="language-none">This is the *[Markdown Guide](https:&#x2F;&#x2F;www.markdownguide.org)*.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>This is the <em><a href="https://www.markdownguide.org/">Markdown Guide</a></em></p></li><li><p>要将链接表示为代码，请在方括号中添加反引号</p><pre class="line-numbers language-none"><code class="language-none">See the section on [&#96;code&#96;](#code)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>See the section on <a href="https://markdown.com.cn/basic-syntax/links.html#code"><code>code</code></a>.</p></li></ul><h3 id="引用类型链接"><a href="#引用类型链接" class="headerlink" title="引用类型链接"></a>引用类型链接</h3><p>引用样式链接是一种特殊的链接，它使 URL 在 Markdown 中更易于显示和阅读</p><p>参考样式链接分为两部分：与文本保持内联的部分以及存储在文件中其他位置的部分，以使文本易于阅读</p><h4 id="链接的第一部分格式"><a href="#链接的第一部分格式" class="headerlink" title="链接的第一部分格式"></a>链接的第一部分格式</h4><p>引用类型的链接的第一部分使用两组括号进行格式设置。第一组方括号包围应显示为链接的文本。第二组括号显示了一个标签，该标签用于指向您存储在文档其他位置的链接。</p><p>尽管不是必需的，可以在第一组和第二组括号之间包含一个空格。第二组括号中的标签不区分大小写，可以包含字母，数字，空格或标点符号。</p><p>以下示例格式对于链接的第一部分效果相同：</p><ul><li><code>[hobbit-hole][1]</code></li><li><code>[hobbit-hole] [1]</code></li></ul><h4 id="链接的第二部分格式"><a href="#链接的第二部分格式" class="headerlink" title="链接的第二部分格式"></a>链接的第二部分格式</h4><p>引用类型链接的第二部分使用以下属性设置格式：</p><ol><li>放在括号中的标签，其后紧跟一个冒号和至少一个空格（例如<code>[label]:</code>）。</li><li>链接的 URL，可以选择将其括在尖括号中。</li><li>链接的可选标题，可以将其括在双引号，单引号或括号中。</li></ol><p>以下示例格式对于链接的第二部分效果相同：</p><ul><li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle</code></li><li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle &quot;Hobbit lifestyles&quot;</code></li><li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle &#39;Hobbit lifestyles&#39;</code></li><li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle (Hobbit lifestyles)</code></li><li><code>[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; &quot;Hobbit lifestyles&quot;</code></li><li><code>[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; &#39;Hobbit lifestyles&#39;</code></li><li><code>[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; (Hobbit lifestyles)</code></li></ul><p>可以将链接的第二部分放在 Markdown 文档中的任何位置。有些人将它们放在出现的段落之后，有些人则将它们放在文档的末尾（例如尾注或脚注）</p><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>要添加图像，请使用感叹号 (<code>!</code>)，然后在方括号增加替代文本，图片链接放在圆括号里，括号里的链接后可以增加一个可选的图片标题文本。</p><p>插入图片 Markdown 语法代码：<code>![图片alt](图片链接 &quot;图片title&quot;)</code>。</p><p>对应的 HTML 代码：<code>&lt;img src=&quot;图片链接&quot; alt=&quot;图片alt&quot; title=&quot;图片title&quot;&gt;</code></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">![这是图片](https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202310012338379.webp "Magic Gardens")<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202310012338379.webp" alt="这是图片" title="Bamboo"></p><h3 id="链接图片"><a href="#链接图片" class="headerlink" title="链接图片"></a>链接图片</h3><p>给图片增加链接，请将图像的 Markdown 括在方括号中，然后将链接添加在圆括号中。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">[![竹子图片](/assets/img/bamboo.jpg "bamboo")](https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202310012338379.webp)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202310012338379.webp"><img src="/assets/img/bamboo.jpg" alt="竹子图片" title="bamboo"></a></p><h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><p>以下字符都可以通过反斜杠字符达到转义目的</p><table><thead><tr><th align="center">character</th></tr></thead><tbody><tr><td align="center">\</td></tr><tr><td align="center">&#96;</td></tr><tr><td align="center">**</td></tr><tr><td align="center">_</td></tr><tr><td align="center">{}</td></tr><tr><td align="center">[]</td></tr><tr><td align="center">()</td></tr><tr><td align="center">#</td></tr><tr><td align="center">+</td></tr><tr><td align="center">-</td></tr><tr><td align="center">.</td></tr><tr><td align="center">!</td></tr><tr><td align="center">|</td></tr></tbody></table><h2 id="内嵌-HTML-标签"><a href="#内嵌-HTML-标签" class="headerlink" title="内嵌 HTML 标签"></a>内嵌 HTML 标签</h2><p>对于 Markdown 涵盖范围之外的标签，都可以直接在文件里面用 HTML 本身。如需使用 HTML，不需要额外标注这是 HTML 或是 Markdown，只需 HTML 标签添加到 Markdown 文本中即可。</p><h3 id="行级內联标签"><a href="#行级內联标签" class="headerlink" title="行级內联标签"></a>行级內联标签</h3><p>HTML 的行级內联标签如 <code>&lt;span&gt;</code>、<code>&lt;cite&gt;</code>、<code>&lt;del&gt;</code> 不受限制，可以在 Markdown 的段落、列表或是标题里任意使用。依照个人习惯，甚至可以不用 Markdown 格式，而采用 HTML 标签来格式化。例如：如果比较喜欢 HTML 的 <code>&lt;a&gt;</code> 或 <code>&lt;img&gt;</code> 标签，可以直接使用这些标签，而不用 Markdown 提供的链接或是图片语法。当你需要更改元素的属性时（例如为文本指定颜色或更改图像的宽度），使用 HTML 标签更方便些。</p><p>HTML 行级內联标签和区块标签不同，在內联标签的范围内， Markdown 的语法是可以解析的。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">This **word** is bold. This &lt;em>word&lt;/em> is italic.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>渲染效果如下:</p><p>This <strong>word</strong> is bold. This <em>word</em> is italic.</p><h3 id="区块标签"><a href="#区块标签" class="headerlink" title="区块标签"></a>区块标签</h3><p>区块元素 ── 比如 <code>&lt;div&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;pre&gt;</code>、<code>&lt;p&gt;</code> 等标签，必须在前后加上空行，以便于内容区分。而且这些元素的开始与结尾标签，不可以用 tab 或是空白来缩进。Markdown 会自动识别这区块元素，避免在区块标签前后加上没有必要的 <code>&lt;p&gt;</code> 标签。</p><p>例如，在 Markdown 文件里加上一段 HTML 表格：</p><pre class="line-numbers language-none"><code class="language-none">This is a regular paragraph.&lt;table&gt;    &lt;tr&gt;        &lt;td&gt;Foo&lt;&#x2F;td&gt;    &lt;&#x2F;tr&gt;&lt;&#x2F;table&gt;This is another regular paragraph.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>This is a regular paragraph.</p><table>    <tr>        <td>Foo</td>    </tr></table><p>This is another regular paragraph.</p><p>请注意，Markdown 语法在 HTML 区块标签中将不会被进行处理。例如，你无法在 HTML 区块内使用 Markdown 形式的<code>*强调*</code>。</p><h3 id="HTML-用法最佳实践"><a href="#HTML-用法最佳实践" class="headerlink" title="HTML 用法最佳实践"></a>HTML 用法最佳实践</h3><p>出于安全原因，并非所有 Markdown 应用程序都支持在 Markdown 文档中添加 HTML。如有疑问，请查看相应 Markdown 应用程序的手册。某些应用程序只支持 HTML 标签的子集。</p><p>对于 HTML 的块级元素 <code>&lt;div&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;pre&gt;</code> 和 <code>&lt;p&gt;</code>，请在其前后使用空行（blank lines）与其它内容进行分隔。尽量不要使用制表符（tabs）或空格（spaces）对 HTML 标签做缩进，否则将影响格式。</p><p>在 HTML 块级标签内不能使用 Markdown 语法。例如 <code>&lt;p&gt;italic and **bold**&lt;/p&gt;</code> 将不起作用。</p><h1 id="扩展语法"><a href="#扩展语法" class="headerlink" title="扩展语法"></a>扩展语法</h1><p><a href="https://markdown.com.cn/basic_syntax">基本语法</a>主要是为了应付大多数情况下的日常所需元素，但对于某些人来说还不够，这就是扩展语法的用武之地</p><h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h2><h3 id="可用性"><a href="#可用性" class="headerlink" title="可用性"></a>可用性</h3><p>并非所有Markdown应用程序都支持扩展语法元素。您需要检查您的应用程序所使用的轻量级标记语言是否支持您要使用的扩展语法元素。如果没有，那么仍然有可能在Markdown处理器中启用扩展。</p><h3 id="轻量标记语言"><a href="#轻量标记语言" class="headerlink" title="轻量标记语言"></a>轻量标记语言</h3><p>有几种轻量级标记语言是Markdown的超集。它们包含Gruber的基本语法，并通过添加其他元素（例如表，代码块，语法突出显示，URL自动链接和脚注）在此基础上构建。许多最受欢迎的Markdown应用程序使用以下轻量级标记语言之一：</p><ul><li><a href="https://commonmark.org/">CommonMark</a></li><li><a href="https://github.github.com/gfm/">GitHub Flavored Markdown (GFM)</a></li><li><a href="https://michelf.ca/projects/php-markdown/extra/">Markdown Extra</a></li><li><a href="https://fletcherpenney.net/multimarkdown/">MultiMarkdown</a></li><li><a href="https://rmarkdown.rstudio.com/">R Markdown</a></li></ul><h3 id="Markdown-处理器"><a href="#Markdown-处理器" class="headerlink" title="Markdown 处理器"></a>Markdown 处理器</h3><p>有许多<a href="https://github.com/markdown/markdown.github.com/wiki/Implementations">Markdown处理器</a>可用，它们中的许多允许您添加启用扩展语法元素的扩展。查看您所使用处理器的文档以获取更多信息。</p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>添加表格，使用三个或多个连字符（<code>---</code>）创建每列的标题，并使用管道（<code>|</code>）分隔每列。</p><pre class="line-numbers language-none"><code class="language-none">| Syntax      | Description || ----------- | ----------- || Header      | Title       || Paragraph   | Text        |<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th align="left">Syntax</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left">Header</td><td align="left">Title</td></tr><tr><td align="left">Paragraph</td><td align="left">Text</td></tr></tbody></table><p>单元格宽度可以变化，如下所示。呈现的输出将看起来相同。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">| Syntax | Description || --- | ----------- || Header | Title || Paragraph | Text |<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>Syntax</th><th>Description</th></tr></thead><tbody><tr><td>Header</td><td>Title</td></tr><tr><td>Paragraph</td><td>Text</td></tr></tbody></table><h3 id="对齐"><a href="#对齐" class="headerlink" title="对齐"></a>对齐</h3><p>您可以通过在标题行中的连字符的左侧，右侧或两侧添加冒号（<code>:</code>），将列中的文本对齐到左侧，右侧或中心。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">| Syntax      | Description | Test Text     || :---        |    :----:   |          ---: || Header      | Title       | Here's this   || Paragraph   | Text        | And more      |<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th align="left">Syntax</th><th align="center">Description</th><th align="right">Test Text</th></tr></thead><tbody><tr><td align="left">Header</td><td align="center">Title</td><td align="right">Here’s this</td></tr><tr><td align="left">Paragraph</td><td align="center">Text</td><td align="right">And more</td></tr></tbody></table><h3 id="表格中的文字"><a href="#表格中的文字" class="headerlink" title="表格中的文字"></a>表格中的文字</h3><p>可以在表格中设置文本格式。例如，可以添加链接，单行代码（仅反引号 &#96;&#96; ）和强调。</p><p>不能添加标题，块引用，列表，水平规则，图像或HTML标签。</p><h3 id="表中转义-“-”"><a href="#表中转义-“-”" class="headerlink" title="表中转义 “|”"></a>表中转义 “|”</h3><p>可以使用表格的HTML字符代码（<code>|</code>）在表中显示竖线（<code>|</code>）字符。</p><h2 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h2><p>脚注使您可以添加注释和参考，而不会使文档正文混乱。当您创建脚注时，带有脚注的上标数字会出现在您添加脚注参考的位置。读者可以单击链接以跳至页面底部的脚注内容。</p><p>要创建脚注参考，请在方括号（<code>[^1]</code>）内添加插入符号和标识符。标识符可以是数字或单词，但不能包含空格或制表符。标识符仅将脚注参考与脚注本身相关联-在输出中，脚注按顺序编号。</p><p>在括号内使用另一个插入符号和数字添加脚注，并用冒号和文本（<code>[^1]: My footnote.</code>）。您不必在文档末尾添加脚注。您可以将它们放在除列表，块引号和表之类的其他元素之外的任何位置。</p><pre class="line-numbers language-none"><code class="language-none">这是一个简单的脚注，[^1] [^1]: 这是第一个脚注这是一个更长的脚注，[^bignote][^bignote]: Here&#39;s one with multiple paragraphs and code.    Indent paragraphs to include them in the footnote.    &#96;&#123; my code &#125;&#96;    Add as many paragraphs as you like.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这是一个简单的脚注，<a href="%E8%BF%99%E6%98%AF%E7%AC%AC%E4%B8%80%E4%B8%AA%E8%84%9A%E6%B3%A8">^1</a> </p><p>这是一个更长的脚注，[^bignote]</p><p>[^bignote]: Here’s one with multiple paragraphs and code.</p><pre><code>Indent paragraphs to include them in the footnote.`&#123; my code &#125;`Add as many paragraphs as you like.</code></pre><h2 id="标题ID"><a href="#标题ID" class="headerlink" title="标题ID"></a>标题ID</h2><p>许多Markdown处理器支持<code>标题</code>自定义ID，一些Markdown处理器会自动添加它们。添加自定义ID允许你直接链接到标题并使用CSS对其进行修改。要添加自定义标题ID，请在与标题相同的行上用大括号括起该自定义ID。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">### My Great Heading &#123;#custom-id&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>HTML看起来像这样：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>custom-id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>My Great Heading<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="链接到标题ID"><a href="#链接到标题ID" class="headerlink" title="链接到标题ID"></a>链接到标题ID</h3><p>通过创建带有数字符号（<code>#</code>）和自定义标题ID的<a href="(/basic-syntax/links.html">标准链接</a>，可以链接到文件中具有自定义ID的标题。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>预览效果</th></tr></thead><tbody><tr><td><code>[Heading IDs](#heading-ids)</code></td><td><code>&lt;a href=&quot;#heading-ids&quot;&gt;Heading IDs&lt;/a&gt;</code></td><td><a href="https://markdown.com.cn/extended-syntax/heading-ids.html#heading-ids">Heading IDs</a></td></tr></tbody></table><p>其他网站可以通过将自定义标题ID添加到网页的完整URL</p><h2 id="任务表"><a href="#任务表" class="headerlink" title="任务表"></a>任务表</h2><p>创建任务列表，在任务列表项之前添加破折号<code>-</code>和方括号<code>[ ]</code>，并在<code>[ ]</code>前面加上空格。要选择一个复选框，请在方括号<code>[x]</code>之间添加 x </p><pre class="line-numbers language-text" data-language="text"><code class="language-text">- [x] Write the press release- [ ] Update the website- [ ] Contact the media<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><input checked="" disabled="" type="checkbox"> Write the press release</li><li><input disabled="" type="checkbox"> Update the website</li><li><input disabled="" type="checkbox"> Contact the media</li></ul><h2 id="Emoji"><a href="#Emoji" class="headerlink" title="Emoji"></a>Emoji</h2><p>有两种方法可以将表情符号添加到Markdown文件中：将表情符号复制并粘贴到Markdown格式的文本中，或者键入<em>emoji shortcodes</em>。</p><p>###复制和粘贴表情符号</p><p>在大多数情况下，您可以简单地从<a href="https://emojipedia.org/">Emojipedia</a> 等来源复制表情符号并将其粘贴到文档中。许多Markdown应用程序会自动以Markdown格式的文本显示表情符号。从Markdown应用程序导出的HTML和PDF文件应显示表情符号。</p><p><strong>Tip:</strong> 如果您使用的是静态网站生成器，请确保将HTML页面编码为UTF-8。.</p><p>###使用表情符号简码</p><p>一些Markdown应用程序允许您通过键入表情符号短代码来插入表情符号。这些以冒号开头和结尾，并包含表情符号的名称。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">去露营了！ :tent: 很快回来。真好笑！ :joy:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>效果如下：</p><p>去露营了！⛺很快回来。</p><p>真好笑！😂</p><p><strong>Note:</strong> 注意：您可以使用此<a href="https://gist.github.com/rxaviers/7360908">表情符号简码列表</a>，但请记住，表情符号简码因应用程序而异。</p><h1 id="自动网址链接"><a href="#自动网址链接" class="headerlink" title="自动网址链接"></a>自动网址链接</h1><p>许多Markdown处理器会自动将URL转换为链接。这意味着如果输入<a href="http://www.example.com，即使未[使用方括号](https://markdown.com.cn/basic-syntax/links.html)，也会自动将其转换为链接。">http://www.example.com，即使未[使用方括号](https://markdown.com.cn/basic-syntax/links.html)，也会自动将其转换为链接。</a></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">http://www.example.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>呈现的输出如下所示：</p><p><a href="http://www.example.com/">http://www.example.com</a></p><h3 id="禁用自动URL链接"><a href="#禁用自动URL链接" class="headerlink" title="禁用自动URL链接"></a>禁用自动URL链接</h3><p>如果不希望自动链接URL，则可以使用反引号来禁止</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">`http://www.example.com`<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>呈现的输出如下所示：</p><p><code>http://www.example.com</code></p><h2 id="Diagrams"><a href="#Diagrams" class="headerlink" title="Diagrams"></a>Diagrams</h2>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> typora </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
