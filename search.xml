<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>十大排序算法</title>
      <link href="/posts/564c.html"/>
      <url>/posts/564c.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、冒泡排序（Bubble-Sort）"><a href="#一、冒泡排序（Bubble-Sort）" class="headerlink" title="一、冒泡排序（Bubble Sort）"></a>一、冒泡排序（Bubble Sort）</h2><p>1.基本思想<br>2.动图演示<br>3.算法描述<br>4.代码实现</p><h2 id="二、快速排序（Quick-Sort）☆"><a href="#二、快速排序（Quick-Sort）☆" class="headerlink" title="二、快速排序（Quick Sort）☆"></a>二、快速排序（Quick Sort）☆</h2><p>1.基本思想<br>2.动图演示<br>3.算法描述<br>4.代码实现</p><h2 id="三、选择排序（Selection-Sort）"><a href="#三、选择排序（Selection-Sort）" class="headerlink" title="三、选择排序（Selection Sort）"></a>三、选择排序（Selection Sort）</h2><p>1.基本思想<br>2.动图演示<br>3.算法描述<br>4.代码实现</p><h2 id="四、堆排序（Heap-Sort）"><a href="#四、堆排序（Heap-Sort）" class="headerlink" title="四、堆排序（Heap Sort）"></a>四、堆排序（Heap Sort）</h2><p>1.基本思想<br>2.动图演示<br>3.算法描述<br>4.代码实现</p><h2 id="五、插入排序（Insertion-Sort）"><a href="#五、插入排序（Insertion-Sort）" class="headerlink" title="五、插入排序（Insertion Sort）"></a>五、插入排序（Insertion Sort）</h2><p>在要排序的一组数中，假定前n-1个数已经排好序，将第n个数插到前面的有序数列中，使得这n个数也是排好顺序的。如此反复循环，直到全部排好顺序。</p><p>2.动图演示<br>3.算法描述<br>4.代码实现</p><h3 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h3><h4 id="使用哨兵"><a href="#使用哨兵" class="headerlink" title="使用哨兵"></a>使用哨兵</h4><h4 id="折半插入排序"><a href="#折半插入排序" class="headerlink" title="折半插入排序"></a>折半插入排序</h4><h2 id="六、希尔排序（Shell-Sort）"><a href="#六、希尔排序（Shell-Sort）" class="headerlink" title="六、希尔排序（Shell Sort）"></a>六、希尔排序（Shell Sort）</h2><p>1.基本思想<br>2.动图演示<br>3.算法描述<br>4.代码实现</p><h2 id="七、归并排序（Merge-Sort）"><a href="#七、归并排序（Merge-Sort）" class="headerlink" title="七、归并排序（Merge Sort）"></a>七、归并排序（Merge Sort）</h2><p>1.基本思想<br>2.动图演示<br>3.算法描述<br>4.代码实现</p><h2 id="八、基数排序（Radix-Sort）"><a href="#八、基数排序（Radix-Sort）" class="headerlink" title="八、基数排序（Radix Sort）"></a>八、基数排序（Radix Sort）</h2><p>1.基本思想<br>2.动图演示<br>3.算法描述<br>4.代码实现</p><h2 id="九、计数排序（Counting-sort）"><a href="#九、计数排序（Counting-sort）" class="headerlink" title="九、计数排序（Counting sort）"></a>九、计数排序（Counting sort）</h2><p>1.基本思想<br>2.动图演示<br>3.算法描述<br>4.代码实现</p><h2 id="十、桶排序（Bucket-sorting）"><a href="#十、桶排序（Bucket-sorting）" class="headerlink" title="十、桶排序（Bucket sorting）"></a>十、桶排序（Bucket sorting）</h2><p>1.基本思想<br>2.动图演示<br>3.算法描述<br>4.代码实现</p><h2 id="十一、外部排序小专题"><a href="#十一、外部排序小专题" class="headerlink" title="十一、外部排序小专题"></a>十一、外部排序小专题</h2><p>1.外部排序原理<br>2.外部排序开销及应用场景<br>2.多路归并（提高外排效率）<br>3.多路平衡归并与多路归并区别<br>4.败者树（优化关键字对比次数）<br>5.置换-选择排序（优化初始构造归并段的数量）<br>6.最佳归并树（本质：多元哈弗曼树）</p><h2 id="十二、根据算法的特性划分"><a href="#十二、根据算法的特性划分" class="headerlink" title="十二、根据算法的特性划分"></a>十二、根据算法的特性划分</h2><p>1.根据算法是否稳定划分<br>2.根据内&#x2F;外部排序划分<br>3.初始序列对算法有影响<br>4.是否是比较型</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><p>排序算法学习工具：usf算法动画演示</p><p>参考链接：<a href="https://blog.csdn.net/apple_51931783/article/details/134647970">https://blog.csdn.net/apple_51931783/article/details/134647970</a></p><p><a href="https://blog.csdn.net/apple_51931783/article/details/134647970">十大排序算法及其特性最全总结，以408考察特性为基准_排序算法特点-CSDN博客</a></p><p><a href="https://developer.aliyun.com/article/1434703">【数据结构入门精讲 | 第十篇】考研408排序算法专项练习（二）-阿里云开发者社区 (aliyun.com)</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CORS跨域问题</title>
      <link href="/posts/887a.html"/>
      <url>/posts/887a.html</url>
      
        <content type="html"><![CDATA[<p> 这几天在调试网站的弹幕功能的过程中遇到了下面的问题，不太懂前端的鼠鼠看的一脸懵</p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/CORS.png" alt="CORS"></p><h1 id="CORS跨域"><a href="#CORS跨域" class="headerlink" title="CORS跨域"></a>CORS跨域</h1><p>![CORS错误](<a href="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/Access">https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/Access</a> to XMLHttpRequest has been blocked by CORS policy.png)</p><p>首先了解什么是CORS跨域，再来解决问题，会让你更加深入的理解，参考这篇博客：<a href="https://blog.csdn.net/qq_37896194/article/details/102834574">浅谈CORS跨域_巴卡巴卡哇的博客-CSDN博客</a></p><h2 id="Access-to-XMLHttpRequest-has-been-blocked-by-CORS-policy"><a href="#Access-to-XMLHttpRequest-has-been-blocked-by-CORS-policy" class="headerlink" title="Access to XMLHttpRequest has been blocked by CORS policy"></a>Access to XMLHttpRequest has been blocked by CORS policy</h2><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://segmentfault.com/a/1190000022506474">前端 - 【译】3种解决CORS错误的方式与Access-Control-Allow-Origin的作用原理 - 个人文章 - SegmentFault 思否</a></li><li><a href="https://zhuanlan.zhihu.com/p/165942717">has been blocked by CORS policy: Response 解决 - 知乎 (zhihu.com)</a></li><li><a href="https://www.cnblogs.com/xuanmanstein/p/10574805.html">解决跨域No ‘Access-Control-Allow-Origin’ header is present on the requested resource. - 永远的幻想 - 博客园 (cnblogs.com)</a></li><li><a href="https://blog.csdn.net/qq_37896194/article/details/102833430">解决CORS跨域问题：No ‘Access-Control-Allow-Origin‘ header is present on the requested resource_cors policy: no ‘access-control-allow-origin’ head-CSDN博客</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CORS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>valine评论失效解决</title>
      <link href="/posts/2292.html"/>
      <url>/posts/2292.html</url>
      
        <content type="html"><![CDATA[<h1 id="valine评论失效解决"><a href="#valine评论失效解决" class="headerlink" title="valine评论失效解决"></a>valine评论失效解决</h1><p>博客大概有十多天无法显示评论也无法提交新评论，而我这段时间并未对博客评论进行过修改。（不是我的锅）</p><p>我寻思着该不会是Valine更新了什么把自己给更没了吧？（强行背锅）</p><p>后来在Valine的官方群中，有部分网友表示最近遇到相同问题，共性是都使用的LeadCloud国际版。</p><p>哦，原来是LeadCloud的锅。</p><p>查看控制台</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Failed to load resource: net::ERR_EMPTY_RESPONSEus-api.leancloud.cn/后面还有一长串<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>调试过程中还报过别的错，我没有记录，但总之，都是围绕这个域名解析的问题。反正就是这个域名无法正确得到结果。</p><p>那怎么办呢？根据群里大佬讨论可得，似乎是现在国际版对这个域名不再支持了，也有人说是不稳定，推荐自定义服务器URL。</p><p>那就换呗。</p><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>法一：导出数据，更换到国内节点，快准狠。</p><p>法二：</p><p>在站点目录下的<code>_config.yaml</code>中找到Valine配置，修改<code>severURLs</code>，把xxxxxxxx替换为AppID的前8位字符。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">serverURLs: https://xxxxxxxx.api.lncldglobal.com <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果主题未配置该参数，就需要找到<code>valine.ejs</code>文件</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs">new Valine(&#123;    el: '#comments',    notify: '<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>notify </span><span class="token delimiter punctuation">%></span></span>' == 'true',    verify: '<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>verify </span><span class="token delimiter punctuation">%></span></span>' == 'true',    appId: "<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>appId </span><span class="token delimiter punctuation">%></span></span>",    appKey: "<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>appKey </span><span class="token delimiter punctuation">%></span></span>",    avatar: "<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>avatar </span><span class="token delimiter punctuation">%></span></span>",    placeholder: "<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>placeholder </span><span class="token delimiter punctuation">%></span></span>",    guest_info: guest_info.length == 0 ? GUEST_INFO : guest_info,    pageSize: "<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>pageSize </span><span class="token delimiter punctuation">%></span></span>",    serverURLs: '<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>serverURLs </span><span class="token delimiter punctuation">%></span></span>'  // 增加这一行！！！&#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然而我在配置完这一步后，仍然不能显示正确的评论，控制台查看发现评论这块并没有跳转到设定的serverURLs，还是us-api.leancloud.cn</p><p>在Valine的Github的Issues区，一个大佬提出的Issue发现了端倪。详见：<a href="https://github.com/xCss/Valine/issues/376">https://github.com/xCss/Valine/issues/376</a><br>这个大佬提问说这个av.js是不是有bug啊？</p><p>看了大佬的截图，我懂了。</p><p>这个cdn是版本不对了吧？</p><p>于是我找到LeadClond官网手册，查询最新的CDN链接。<a href="https://leancloud.cn/docs/sdk_setup-js.html">https://leancloud.cn/docs/sdk_setup-js.html</a></p><p>将这一行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>script <span class="token assign-left variable">src</span><span class="token operator">=</span><span class="token string">"//cdn1.lncld.net/static/js/3.0.4/av-min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span>/script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>替换为</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">&lt;</span>script <span class="token assign-left variable">src</span><span class="token operator">=</span><span class="token string">"//code.bdstatic.com/npm/leancloud-storage@4.12.0/dist/av-min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span>/script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再重新部署，评论已经能成功显示了。</p><p>回顾三部曲：</p><ol><li>设置serverURLs</li><li>若Valine的js文件未定义，需增加定义serverURLs</li><li>更新av-min.js文件</li></ol><h2 id="二"><a href="#二" class="headerlink" title="二"></a>二</h2><p>valine评论不显示</p><p>替换Valine.min.js的以下代码：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">src</span><span class="token operator">:</span><span class="token string">"//cdn.jsdelivr.net/npm/leancloud-storage/dist/av-min.js"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>为</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">src</span><span class="token operator">:</span><span class="token string">"//code.bdstatic.com/npm/leancloud-storage@4.12.0/dist/av-min.js"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://github.com/xCss/Valine/issues/340">https://github.com/xCss/Valine/issues/340</a><br><a href="https://github.com/xCss/Valine/issues/376">https://github.com/xCss/Valine/issues/376</a></p><p><a href="https://blog.csdn.net/hubojing/article/details/121770387">【解决方法】valine不显示-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> valine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客自动发布</title>
      <link href="/posts/79d9.html"/>
      <url>/posts/79d9.html</url>
      
        <content type="html"><![CDATA[<h1 id="博客自动发布"><a href="#博客自动发布" class="headerlink" title="博客自动发布"></a>博客自动发布</h1><p><a href="https://haoqi7.github.io/posts/6c0cf188.html">GitHub Actions实现博客自动发布 | HaoQi (haoqi7.github.io)</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用说说功能</title>
      <link href="/posts/4d8d.html"/>
      <url>/posts/4d8d.html</url>
      
        <content type="html"><![CDATA[<h1 id="使用说说功能"><a href="#使用说说功能" class="headerlink" title="使用说说功能"></a>使用说说功能</h1><p><a href="https://blog.csdn.net/qq_38157825/article/details/112783238">在 Hexo 中使用 artitalk 新增说说功能_hexo matery添加说说-CSDN博客</a></p><p><a href="https://blog.csdn.net/weixin_44659458/article/details/119277195">使用 artitalk + LeanCloud 配置给个人博客搭建说说_artitalk3.x版本更新需要修改一下配置-CSDN博客</a></p><p><a href="https://blog.csdn.net/cungudafa/article/details/106224223">https://blog.csdn.net/cungudafa/article/details/106224223</a></p><p><a href="https://blog.csdn.net/cungudafa/article/details/106208556">https://blog.csdn.net/cungudafa/article/details/106208556</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 说说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人简介页面更新</title>
      <link href="/posts/9617.html"/>
      <url>/posts/9617.html</url>
      
        <content type="html"><![CDATA[<h2 id="个人简介页面更新"><a href="#个人简介页面更新" class="headerlink" title="个人简介页面更新"></a>个人简介页面更新</h2><p><a href="https://blog.dyfa.top/about/">关于 | itsNeko「生活日志」 (dyfa.top)</a></p><p><code>about.ejs</code></p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/bg-cover'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">  <span class="token comment">/* don't remove. */</span>  <span class="token selector">.about-cover</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 75vh<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">.sitemapss</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 27px auto<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token atrule"><span class="token rule">@media</span> <span class="token keyword">only</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 601px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>    <span class="token selector">#switchspring</span> <span class="token punctuation">&#123;</span>      <span class="token property">bottom</span><span class="token punctuation">:</span> 178px <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">#sma</span> <span class="token punctuation">&#123;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 139.25px<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">.comment-scroll</span> <span class="token punctuation">&#123;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 79.25px<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">.bg-cover::before</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>https://cdn.jsdelivr.net/gh/moezx/cdn@3.1.9/img/Sakura/images/grid.png<span class="token punctuation">)</span></span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">.about-cover</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 110vh<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token atrule"><span class="token rule">@media</span> <span class="token keyword">only</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 600px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>    <span class="token selector">.about-cover</span> <span class="token punctuation">&#123;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 64vh<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">iframe</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 60%<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">body.dark iframe</span> <span class="token punctuation">&#123;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0.7<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">  <span class="token atrule"><span class="token rule">@media</span> <span class="token keyword">only</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 800px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>    <span class="token selector">.swbk</span> <span class="token punctuation">&#123;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> 26px 2px <span class="token important">!important</span><span class="token punctuation">;</span>      <span class="token property">margin</span><span class="token punctuation">:</span> 0 <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.swbk ol</span> <span class="token punctuation">&#123;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> 2px 10px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">.swbk</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 26px 20px<span class="token punctuation">;</span>    <span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 10px 0px<span class="token punctuation">;</span>    <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 14px 38px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> .08<span class="token punctuation">)</span><span class="token punctuation">,</span> 0 3px 8px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> .06<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 14px 38px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> .08<span class="token punctuation">)</span><span class="token punctuation">,</span> 0 3px 8px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> .06<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">-webkit-transition</span><span class="token punctuation">:</span> all .3s ease 0s<span class="token punctuation">,</span> -webkit-transform .6s <span class="token function">cubic-bezier</span><span class="token punctuation">(</span>.6<span class="token punctuation">,</span> .2<span class="token punctuation">,</span> .1<span class="token punctuation">,</span> 1<span class="token punctuation">)</span> 0s<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all .3s ease 0s<span class="token punctuation">,</span> -webkit-transform .6s <span class="token function">cubic-bezier</span><span class="token punctuation">(</span>.6<span class="token punctuation">,</span> .2<span class="token punctuation">,</span> .1<span class="token punctuation">,</span> 1<span class="token punctuation">)</span> 0s<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all .3s ease 0s<span class="token punctuation">,</span> transform .6s <span class="token function">cubic-bezier</span><span class="token punctuation">(</span>.6<span class="token punctuation">,</span> .2<span class="token punctuation">,</span> .1<span class="token punctuation">,</span> 1<span class="token punctuation">)</span> 0s<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all .3s ease 0s<span class="token punctuation">,</span> transform .6s <span class="token function">cubic-bezier</span><span class="token punctuation">(</span>.6<span class="token punctuation">,</span> .2<span class="token punctuation">,</span> .1<span class="token punctuation">,</span> 1<span class="token punctuation">)</span> 0s<span class="token punctuation">,</span> -webkit-transform .6s <span class="token function">cubic-bezier</span><span class="token punctuation">(</span>.6<span class="token punctuation">,</span> .2<span class="token punctuation">,</span> .1<span class="token punctuation">,</span> 1<span class="token punctuation">)</span> 0s<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">.swbk:hover</span> <span class="token punctuation">&#123;</span>    <span class="token property">-webkit-transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-4px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-4px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 14px 38px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> .14<span class="token punctuation">)</span><span class="token punctuation">,</span> 0 3px 8px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> .12<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 14px 38px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> .14<span class="token punctuation">)</span><span class="token punctuation">,</span> 0 3px 8px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> .12<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">.swbk:before</span> <span class="token punctuation">&#123;</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">" “ "</span><span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 56px<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> -14px<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">.swbk:after</span> <span class="token punctuation">&#123;</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">" ” "</span><span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">.swbk:after,  .swbk:before</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">font-style</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 600<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 42px<span class="token punctuation">;</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">.biography .swbk:after,  .biography .swbk:before</span> <span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">body.dark .swbk:after,  body.dark .swbk:before</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #d2c9c9<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">.swbk p</span> <span class="token punctuation">&#123;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 19px <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 2.4rem<span class="token punctuation">;</span>    <span class="token property">text-indent</span><span class="token punctuation">:</span> 2rem<span class="token punctuation">;</span>    <span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'Architects Daughter'</span><span class="token punctuation">,</span> cursive <span class="token important">!important</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">.swbk .label</span> <span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0 14px 0 32px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 32px<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 32px<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 0 3px 3px 0<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> currentColor<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">.swbk .label span</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">.swbk .label:after</span> <span class="token punctuation">&#123;</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>    <span class="token property">border-style</span><span class="token punctuation">:</span> solid<span class="token punctuation">;</span>    <span class="token property">border-width</span><span class="token punctuation">:</span> 0 16px 16px 0<span class="token punctuation">;</span>    <span class="token property">border-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>    <span class="token property">border-right-color</span><span class="token punctuation">:</span> currentColor<span class="token punctuation">;</span>    <span class="token property">-webkit-filter</span><span class="token punctuation">:</span> <span class="token function">brightness</span><span class="token punctuation">(</span>120%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">brightness</span><span class="token punctuation">(</span>120%<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 768px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>    <span class="token selector">.swbk .label</span> <span class="token punctuation">&#123;</span>      <span class="token property">left</span><span class="token punctuation">:</span> -37px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token atrule"><span class="token rule">@media</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 767px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>    <span class="token selector">.swbk .label</span> <span class="token punctuation">&#123;</span>      <span class="token property">left</span><span class="token punctuation">:</span> -18px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.swbk p</span> <span class="token punctuation">&#123;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> 2px 8px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>aboutme<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container about-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post-statis col l4 hide-on-med-and-down<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/post-statis'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col s12 m12 l4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>profile center-align<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>avatar toupic<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>jsDelivr<span class="token punctuation">.</span>url </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span>profile<span class="token punctuation">.</span>avatar<span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> config<span class="token punctuation">.</span>author </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span>                  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>circle responsive-img avatar-img<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>author<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post-statis hide-on-large-only<span class="token punctuation">"</span></span> <span class="token attr-name">data-aos</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zoom-in-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                  <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/post-statis'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> config<span class="token punctuation">.</span>author </span><span class="token delimiter punctuation">%></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>career<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>profile<span class="token punctuation">.</span>career </span><span class="token delimiter punctuation">%></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>social-link hide-on-large-only<span class="token punctuation">"</span></span> <span class="token attr-name">data-aos</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zoom-in-left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                  <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/social-link'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col l4 hide-on-med-and-down<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>social-link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/social-link'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>introduction center-align<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>profile<span class="token punctuation">.</span>introduction </span><span class="token delimiter punctuation">%></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>biography<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>aboutlist first_about<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>🏡 关于我<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swbk<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>label<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>178<span class="token punctuation">,</span> 143<span class="token punctuation">,</span> 206<span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>十万伏特皮卡丘<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>AKA十万伏特皮卡丘，想要成为优秀的Web Front-end Developer，梦想是世界和平，想要发光发热，不止于此。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swbk<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>关于网站名称，取名为 “ NekoDeng ”，原因是当初注册Google邮箱的时候需要一个英文名，想了好久才取名叫neko，然后再加上我的姓氏，很土啦，就这样。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swbk<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>天蝎座，喜欢篮球，<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span>                                <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://nekodeng.gitee.io/lakers-championship/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>湖人总冠军<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>，从热火时期开始关注Lebron                            James，<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span>                                <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://nekodeng.gitee.io/musics/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>宝藏歌曲<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>《达尔文》，                            还喜欢好多东西，偶尔会发一些<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span>                                <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://nekodeng.gitee.io/videos/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>vlog<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>，                            或者灵感来了写写<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span>                                <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://nekodeng.gitee.io/essay/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>随笔<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>啥的，                            会用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span>                                <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://nekodeng.gitee.io/gallery/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>code</span><span class="token punctuation">></span></span>相册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>code</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>记录生活，待续...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">marginwidth</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">marginheight</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>330<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>86<span class="token punctuation">"</span></span>                            <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//music.163.com/outchain/player?type=2<span class="token entity named-entity" title="&amp;">&amp;amp;</span>id=5248060<span class="token entity named-entity" title="&amp;">&amp;amp;</span>height=66<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>博主的宝藏歌曲<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swbk<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token important">!important</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>                            以前我不懂，种一棵树最好的时间是十年前，其次呢就是现在，就好比纽约的时间，比加州快了3个小时，但加州并没有变慢，每个人都有自己的时区，有些人看似走在你的前面，有些人看似走在你的后面，但是每个人的时区和路程，是相互独立的，所以不用去羡慕或者嫉妒，爱情里面，年龄不是问题，学习也不是。                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>aboutlist<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>columnlist<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>🕛 为什么写博客<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swbk<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>label<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>188<span class="token punctuation">,</span> 159<span class="token punctuation">,</span> 119<span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>风花雪月之事<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>                            很长时间了，总是想写点什么，无关风月，就是想写点什么。无论是记录知识点，总结技能树，人生长谈，风花雪月之事，都可以有一个存档的地方，对于复盘，回忆，都是一个极好的方谭。                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>columnlist<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>📬 我的联系方式<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swbk<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>label<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>251<span class="token punctuation">,</span> 150<span class="token punctuation">,</span> 110<span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>在这里找到我<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>可在评论区留言，看到了会尽快回复哒~<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>微信公众号: itsNeko<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>邮 箱：nekodeng@qq.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>columnlist<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>🗳 本博客主题开源投票<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swbk<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>label<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>245<span class="token punctuation">,</span> 150<span class="token punctuation">,</span> 170<span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>热爱开源的Neko<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>最近在考虑本博客主题开源，大家可以在投票页面评论，投票链接 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/vote/<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hurens<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>开源vote<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> ~<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>columnlist<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>💴 关于资助本博主<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swbk<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>label<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>178<span class="token punctuation">,</span> 143<span class="token punctuation">,</span> 206<span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>买个馒头吃吧<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>维护博客不易，憨憨叹气，考虑到后续开源博客还挺费时费力的，服务器费用真的累计起来挺高的，所以可以给博主买个馒头吃吗，卟卟 ~                            路人甲：哎，博主好可怜，一定支持一下。链接：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/donate<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>资助博主 ~<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>aboutlist<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>columnlist<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>🎨 我的其它站点<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swbk<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>label<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>134<span class="token punctuation">,</span> 193<span class="token punctuation">,</span> 102<span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>在这里也可找到我<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>域名已购买：腾讯云，https://dyfa.top ~<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>🏷️ CSDN：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span>                                <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://blog.csdn.net/weixin_42529972<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>itsNekoDeng<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>🏷️ 掘金：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span>                                <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://juejin.im/user/3131038656901591/posts<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>itsNekoDeng<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>🏷️ gitee：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span>                                <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://nekodeng.gitee.io<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>https://nekodeng.gitee.io<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>（原）<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>🏷️ 微信公众号：名称" itsNekoDeng博客 "，扫一扫订阅我，这样你就能准时收到我的文章更新啦。                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/medias/qrcode_for_gh.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>150<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>150<span class="token punctuation">"</span></span>                                <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token comment">&lt;!-- 关于programmer搭博客 --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>columnlist<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>🐒 关于programmer搭博客<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swbk<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>label<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>249<span class="token punctuation">,</span> 191<span class="token punctuation">,</span> 69<span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>一种神秘生物<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>                            个人网站博主是一种有点神秘的动物，大部分隐身在互联网的丛林中，                            很少有人观察到。                            其他没有经验的用户可能会认为，个人网站已经像恐龙那样灭绝。                            事实是野外还存在许多标本，只有了解该物种习性的猎人才能发现它们。                            --<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span>                                <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cheapskatesguide.org/articles/personal-website-hunting.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>《搜寻几乎不可见的个人网站》<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token comment">&lt;!-- 仿聊天框模块 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">            <span class="token comment">/* 暗色模式 和添加小屏幕响应式 */</span>            <span class="token selector">body.dark .triangle</span> <span class="token punctuation">&#123;</span>                <span class="token property">background-color</span><span class="token punctuation">:</span> #2e323b<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>                    <span class="token selector">body.dark .triangle .textLeft span</span> <span class="token punctuation">&#123;</span>                <span class="token property">background-color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>                    <span class="token selector">body.dark .triangle li.textLeft span:before</span> <span class="token punctuation">&#123;</span>                <span class="token property">border-right</span><span class="token punctuation">:</span> 8px solid black<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>                    <span class="token selector">body.dark .triangle .textRight span</span> <span class="token punctuation">&#123;</span>                <span class="token property">background-color</span><span class="token punctuation">:</span> #64982e<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>                    <span class="token selector">body.dark .triangle li.textRight span:after</span> <span class="token punctuation">&#123;</span>                <span class="token property">border-left</span><span class="token punctuation">:</span> 8px solid #64982e<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>                    <span class="token atrule"><span class="token rule">@media</span> <span class="token keyword">only</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 322px<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 450px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>                <span class="token selector">.triangle li:nth-last-of-type(1)</span> <span class="token punctuation">&#123;</span>                    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 60px <span class="token important">!important</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>                    <span class="token atrule"><span class="token rule">@media</span> <span class="token keyword">only</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 452px<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 900px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>                <span class="token selector">.triangle li:nth-last-of-type(1)</span> <span class="token punctuation">&#123;</span>                    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 42px <span class="token important">!important</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>                    <span class="token atrule"><span class="token rule">@media</span> <span class="token keyword">only</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>                <span class="token selector">.triangle li span</span> <span class="token punctuation">&#123;</span>                    <span class="token property">font-size</span><span class="token punctuation">:</span> 14px <span class="token important">!important</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>                    <span class="token atrule"><span class="token rule">@media</span> <span class="token keyword">only</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 321px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>                <span class="token selector">.triangle li:nth-last-of-type(1)</span> <span class="token punctuation">&#123;</span>                    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 80px <span class="token important">!important</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                        <span class="token selector">.triangle li:nth-last-of-type(2)</span> <span class="token punctuation">&#123;</span>                    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 42px <span class="token important">!important</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">            <span class="token selector">.triangle</span> <span class="token punctuation">&#123;</span>                <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>                <span class="token property">background-color</span><span class="token punctuation">:</span> #ebebe9<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>                    <span class="token selector">.triangle ul</span> <span class="token punctuation">&#123;</span>                <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>                    <span class="token selector">.triangle li</span> <span class="token punctuation">&#123;</span>                <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>                <span class="token property">padding</span><span class="token punctuation">:</span> 10px 15px<span class="token punctuation">;</span>                <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>                    <span class="token selector">.triangle li span</span> <span class="token punctuation">&#123;</span>                <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>                <span class="token property">border-radius</span><span class="token punctuation">:</span> 7px<span class="token punctuation">;</span>                <span class="token property">padding</span><span class="token punctuation">:</span> 20px 15px 20px 15px<span class="token punctuation">;</span>                <span class="token property">z-index</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>                <span class="token property">font-size</span><span class="token punctuation">:</span> 18px<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>                    <span class="token selector">.triangle .textLeft span</span> <span class="token punctuation">&#123;</span>                <span class="token property">background-color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>                <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>                <span class="token property">top</span><span class="token punctuation">:</span> 18px<span class="token punctuation">;</span>                <span class="token property">left</span><span class="token punctuation">:</span> 86px<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>                    <span class="token selector">.triangle .textRight span</span> <span class="token punctuation">&#123;</span>                <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>                <span class="token property">background-color</span><span class="token punctuation">:</span> #a6e860<span class="token punctuation">;</span>                <span class="token property">top</span><span class="token punctuation">:</span> 18px<span class="token punctuation">;</span>                <span class="token property">right</span><span class="token punctuation">:</span> 86px<span class="token punctuation">;</span>                <span class="token property">text-align</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>                    <span class="token selector">.triangle li.textLeft:before</span> <span class="token punctuation">&#123;</span>                <span class="token property">content</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"/medias/itsneko.jpg"</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span>                <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>                <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>                <span class="token property">left</span><span class="token punctuation">:</span> -10px<span class="token punctuation">;</span>                <span class="token property">top</span><span class="token punctuation">:</span> 9px<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>                    <span class="token selector">.triangle li.textLeft span:before</span> <span class="token punctuation">&#123;</span>                <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>                <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>                <span class="token property">width</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>                <span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>                <span class="token property">border</span><span class="token punctuation">:</span> 8px solid transparent<span class="token punctuation">;</span>                <span class="token property">border-right</span><span class="token punctuation">:</span> 8px solid white<span class="token punctuation">;</span>                <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>                <span class="token property">top</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>                <span class="token property">left</span><span class="token punctuation">:</span> -16px<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>                    <span class="token selector">.triangle li.textRight:after</span> <span class="token punctuation">&#123;</span>                <span class="token property">content</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"/medias/qqavatar.jpg"</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span>                <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>                <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>                <span class="token property">right</span><span class="token punctuation">:</span> -10px<span class="token punctuation">;</span>                <span class="token property">top</span><span class="token punctuation">:</span> 9px<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>                    <span class="token selector">.triangle li.textRight span:after</span> <span class="token punctuation">&#123;</span>                <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>                <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>                <span class="token property">width</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>                <span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>                <span class="token property">border</span><span class="token punctuation">:</span> 8px solid transparent<span class="token punctuation">;</span>                <span class="token property">border-left</span><span class="token punctuation">:</span> 8px solid #a6e860<span class="token punctuation">;</span>                <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>                <span class="token property">top</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>                <span class="token property">right</span><span class="token punctuation">:</span> -16px<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>                    <span class="token selector">li</span> <span class="token punctuation">&#123;</span>                <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>                    <span class="token selector">.textRight</span> <span class="token punctuation">&#123;</span>                <span class="token property">text-align</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>triangle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>textLeft<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>“ 你买的什么书 ？ ”<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>textRight<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>“ 编程 ”<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>textLeft<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>“ C++还是JAVA ？ ”<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>textRight<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>“ 沈从文 ”<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>textLeft<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>“ 哈 ？ ”<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>textRight<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>“ 害，这大概就是古人云文人骚客吧 ”<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>textLeft<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>“ 曾粗浅地认为只有programmer才搭博客，后来发现了什么才是大千世界 ”<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>livere <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>livere<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/livere'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>valine <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/valine'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>minivaline <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>minivaline<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/minivaline'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> about </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚拟机设置共享文件夹</title>
      <link href="/posts/ebbb.html"/>
      <url>/posts/ebbb.html</url>
      
        <content type="html"><![CDATA[<h1 id="虚拟机与win10文件共享"><a href="#虚拟机与win10文件共享" class="headerlink" title="虚拟机与win10文件共享"></a>虚拟机与win10文件共享</h1><p><a href="https://blog.csdn.net/YiYeZhiNian/article/details/92700377">虚拟机与win10系统文件共享_vmware windows10共享文件有几种方法-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>互联网下载指南：BT、磁力、种子、直链与PT详解</title>
      <link href="/posts/1e4.html"/>
      <url>/posts/1e4.html</url>
      
        <content type="html"><![CDATA[<p>互联网下载指南：BT、磁力、种子、直链与PT详解</p><p>BT、磁力、种子、直链、PT在互联网下载领域中各有其特定含义：</p><ol><li><p><strong>BT (BitTorrent)</strong>:<br>BT是一种点对点文件共享协议，允许用户通过互联网下载大体积文件。它的工作原理是将文件分割成多个小块，下载者可以从多个拥有该文件不同部分的用户那里同时下载，同时自己也作为“种子”上传已下载的部分给其他用户，从而实现高效分发。</p></li><li><p><strong>磁力链接 (Magnet URI)</strong>:<br>磁力链接是一种基于URI（统一资源标识符）的超链接形式，它不直接链接到文件，而是包含了解析和下载文件所需的散列值、 trackers信息等元数据。用户可以通过点击磁力链接开始使用支持此协议的客户端软件（如BitTorrent客户端）下载文件，无需先下载一个.torrent文件。</p></li><li><p><strong>种子 (Torrent Seed)</strong>:<br>在BitTorrent上下文中，“种子”指的是拥有完整文件并正在上传文件片段给其他用户的客户端。一个健康的BT下载环境依赖于足够的种子来保证文件的可获取性。种子也可以指代包含文件元数据的.torrent文件，用户需要先下载这个小文件来开始下载实际的内容。</p></li><li><p><strong>直链 (Direct Link &#x2F; Direct Download Link)</strong>:<br>直链是指直接指向存储在服务器上的文件的链接，用户可以通过标准的HTTP或HTTPS协议直接从服务器下载文件，而不需要额外的软件或协议支持。这是最简单直接的下载方式。</p></li><li><p><strong>PT (Private Tracker)</strong>:<br>PT即私人Tracker，是相对于公有Tracker而言的。私人Tracker站点通常需要注册和邀请才能加入，提供更稳定的下载速度、更高的文件完整性以及更严格的用户管理规则。PT站点通常会对用户的上传和下载进行严格的比例控制，以确保所有用户都能积极地贡献上传量，维护站点的健康运行。</p></li></ol><p>这些概念涵盖了互联网上常见的几种文件分享和下载方式，每种都有其特定的适用场景和特点。</p><p><a href="https://www.bilibili.com/video/BV1tm421W7Fv/">https://www.bilibili.com/video/BV1tm421W7Fv/</a></p><h3 id="torrent文件如何打开？"><a href="#torrent文件如何打开？" class="headerlink" title=".torrent文件如何打开？"></a>.torrent文件如何打开？</h3><p>.torrent文件属于bt文件，也就是我们常说的种子。很多朋友下载到以.torrent为后缀的文件时，发现它很小只有几十至几百KB，而且无法直接解压或打开，都以为自己下错了，其实不是的，虽然只有不到1M，但是里面却有非常多的东西。接下来我简单为大家讲解下如何用百度网盘打开.torrent文件。</p><ol><li><p>找到.torrent结尾的文件，并上传到百度网盘</p></li><li><p>点击种子</p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/%E7%A7%8D%E5%AD%90.png" alt="种子" style="zoom: 67%;" /></li><li><p>点击后会弹出下载界面，修改文件的保存路径，点击下载</p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/%E4%B8%8B%E8%BD%BD.png" alt="下载"  /></li><li><p>下载完后查看即可</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PCDN</title>
      <link href="/posts/e053.html"/>
      <url>/posts/e053.html</url>
      
        <content type="html"><![CDATA[<h1 id="PSDN"><a href="#PSDN" class="headerlink" title="PSDN"></a>PSDN</h1><p>运营商发文严格排查 PCDN 的新闻，引起了行业内外的广泛关注。</p><p>该运营商表示：当用户宽带账户存在“异常大流量上行宽带占用”情况时，可能会对账户进行封禁。如果用户申诉，则客服将会安排宽带师傅，上门进行 “取证”，再根据情况予以解封。本次核查行动，要做到 ——“应查尽查、应停尽停、应拆尽拆”。</p><p>究竟是什么原因导致的“异常大流量上行宽带占用”，会让运营商如此兴师动众？</p><p>答案就是 ——PCDN。</p><h2 id="什么是-PCDN"><a href="#什么是-PCDN" class="headerlink" title="什么是 PCDN"></a>什么是 PCDN</h2><p>PCDN 到底是个啥？为什么会被运营商封杀？</p><p>简单来说，PCDN 就是 P2P+CDN。英文全称：Peer to Peer Content Delivery Network，中文全称：点对点内容分发网络。</p><p>P2P，大家应该都很熟悉。前几年臭名昭著的 P2P 理财，还有更早时候火遍全网的 P2P 下载，都是基于 P2P。</p><p>P2P 是一种典型的去中心化理念。它讲究的是个体与个体之间的业务关系。</p><p>以 P2P 下载为例。</p><p>传统下载，都是一个服务器，N 个客户端。所有客户端，都去服务器下载数据（电影）。</p><p><a href="https://www.ithome.com/0/748/924.htm">运营商拼命封杀的 PCDN，到底是个啥？ - IT之家 (ithome.com)</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> PCDN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>申请免费永久域名</title>
      <link href="/posts/45c5.html"/>
      <url>/posts/45c5.html</url>
      
        <content type="html"><![CDATA[<h1 id="申请免费永久域名"><a href="#申请免费永久域名" class="headerlink" title="申请免费永久域名"></a>申请免费永久域名</h1><h2 id="freenom"><a href="#freenom" class="headerlink" title="freenom"></a>freenom</h2><p>提供免费域名的机构很多，比较著名的是freenom，但可惜的是freenom由于因为顶级域名被滥用成为钓鱼和诈骗网站而被起诉，所以现在基本是很难申请了。所以就只剩eu.org比较推荐了。</p><h2 id="euorg"><a href="#euorg" class="headerlink" title="euorg"></a>euorg</h2><p><a href="https://link.zhihu.com/?target=http://EU.org">EU.org</a>是一个从1996开始提供免费域名的组织, 帮助学生、爱好者或者非营利组织不用花费购买域名就可能拥有自己的免费域名，虽然切确来说这是一个二级域名，但是根据一些网站的资讯，有许多大型互联网公司，像是 Google, Cloudflare, Bing 等厂商都已经将其当成是一个顶级网域了。</p><p>虽然可以进行免费申请，但是不要滥用申请，申请者必须遵守互联网标准(Rfc)，不要利用其来发送垃圾邮件或网络钓鱼以及分发恶意软件，毕竟提供免费的域名的组织，谁也不想其取消免费服务，其次不要多次注册申请占用域名，尽量只是注册需要的域名，通常来说注册两个域名基本就满足日常使用，一个正式站点域名和一个测试站点域名。</p><p><a href="https://nic.eu.org/opendomains.html">EUORG开域和政策</a>参考地址</p><p>去年7月申请了一次，到现在都还没通过，悲&#96;(<em>&gt;﹏&lt;</em>)′。所以决定重新再申请一个。</p><h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><p>注册前，需事先准备<code>邮箱</code>和<code>一个Hostry账号</code></p><ul><li>邮箱: google Gmail 、foxmail、QQ 都可以</li><li>注册Hostry账号以获取免费DNS解析服务（不建议采用 dnspod ）</li></ul><h3 id="Hostry"><a href="#Hostry" class="headerlink" title="Hostry"></a>Hostry</h3><p>HOSTRY 作为一家可靠且成熟的托管服务提供商，HOSTRY为在线企业提供了大量不同的托管选项，专注于内容交付网络（CDN）、虚拟专用服务器（VPS）、专用服务器和其他解决方案，以确保为客户提供高质量的web托管服务。<br>此处我们主要使用 HOSTRY 其 DNS 解析服务来加快域名申请所占用审核的时间，没有选择 dnspod 是因为有可能在申请免费域名验证解析时会产生错误从而增加审核时间，其次是使用 dnspod 需要进行实名认证，所以推荐使用 HOSTRY 在域名审批通过后再使用 dnspod 来进行解析。</p><ol><li><a href="https://hostry.com/register/">点击注册</a>，输入注册邮箱以及相关的注册信息（反正只用一次信息不一定填真的），然后你再邮箱中会收到一条激活信息进行（<code>ACTIVATE ACCOUNT</code>），注册地址邮编自行Google、百度即可。</li><li>需要验证要注册的域名是否被注册过，<a href="https://tool.dnspod.cn/">点击检测</a>，如果出现如下图片中的情况表示已注册</li></ol><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202404291945808.png" alt="检测" style="zoom:67%;" /><ol start="3"><li><a href="https://hostry.com/products/dns/">点击创建免费的DNS解析</a>，其无主机DNS更快、更安全，并且对条目或请求的数量没有限制。</li></ol><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202404291945622.png" alt="创建DNS解析" style="zoom:67%;" /><ol start="4"><li><a href="https://nic.eu.org/">注册eu.org域名</a>，(⊙o⊙)…因为我是去年注册的，邮箱收到的邮件也没有保存&#96;(<em>&gt;﹏&lt;</em>)′，这里就拿不出演示图片了。希望大家能吸取博主的教训，邮件里存放的是登录必须的句柄，博主能重新登录上这个网站也纯属运气。注意：输入Name时姓名<strong>首字母大写</strong>，并且<strong>中间有空格</strong>，地址随意在百度中找寻一个英文地址即可。</li><li>注册成功登录后，点击 <code>new Domain</code> 创建自定义的域名，填写如下信息以及NameServers信息，填写完毕后点击submit进行提交。</li></ol><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202404291945587.png" alt="New1" style="zoom:67%;" /><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202404291945790.png" alt="New2" style="zoom: 50%;" /><ol start="6"><li>提交后将进行域名认证记录，如出现下图所示则表示成功审核，后面记得经常查看邮箱是否收到信息（可能会出现在垃圾邮件中）</li></ol><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202404291945974.png" alt="成功！" style="zoom: 80%;" /><h2 id="域名解析改为Cloudflare并指向GithubPages"><a href="#域名解析改为Cloudflare并指向GithubPages" class="headerlink" title="域名解析改为Cloudflare并指向GithubPages"></a>域名解析改为Cloudflare并指向GithubPages</h2><p>描述：此处dnspod实名认证不在累述，你不一定要选择dnspod你也可以继续使用HOSTRY提供的免费DNS服务，或者选择Cloudflare提供的DNS解析服务都是可以的，此处以Cloudflare为例（此处假设你已经有了Cloudflare账号，没有的朋友去注册一个即可）。</p><ol><li>访问并登录 cloudflare 面板，地址：<a href="https://link.zhihu.com/?target=https://dash.cloudflare.com/login">https://dash.cloudflare.com/login</a>, 然后添加刚才注册的站点，选择 Free 套餐即可，点击继续。</li></ol><p>参考文章</p><p><a href="https://zhuanlan.zhihu.com/p/571929772">免费注册申请永久的eu.org域名创建属于自己的域名</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> euorg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sublime配置</title>
      <link href="/posts/cd41.html"/>
      <url>/posts/cd41.html</url>
      
        <content type="html"><![CDATA[<h1 id="sublime配置"><a href="#sublime配置" class="headerlink" title="sublime配置"></a>sublime配置</h1>]]></content>
      
      
      
        <tags>
            
            <tag> sublime </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WireShark抓包微信视频</title>
      <link href="/posts/d70a.html"/>
      <url>/posts/d70a.html</url>
      
        <content type="html"><![CDATA[<h1 id="WireShark抓包微信视频"><a href="#WireShark抓包微信视频" class="headerlink" title="WireShark抓包微信视频"></a>WireShark抓包微信视频</h1><p>微信视频由于……，使得其下载一直是一个问题</p><h2 id="其他方法"><a href="#其他方法" class="headerlink" title="其他方法"></a>其他方法</h2><p><a href="https://mp.weixin.qq.com/s/qyUGT-1wBFuZNrm8_48S2w">好用的微信视频号视频下载方法（2024年）</a></p>]]></content>
      
      
      <categories>
          
          <category> 抓包 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信视频下载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重温灌篮</title>
      <link href="/posts/d827.html"/>
      <url>/posts/d827.html</url>
      
        <content type="html"><![CDATA[<p>今天重温了童年经典——灌篮高手，终于等来了最后的时刻：称霸全国！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>npm损坏修复</title>
      <link href="/posts/88ea.html"/>
      <url>/posts/88ea.html</url>
      
        <content type="html"><![CDATA[<h1 id="npm损坏修复"><a href="#npm损坏修复" class="headerlink" title="npm损坏修复"></a>npm损坏修复</h1><p>最近我hexo项目里的npm出现了问题，具体问题是：使用npm下载组件的时候突然就出现了<code>Cannot find module &#39;E:\nodejs\node_modules\npm\bin\npm-cli.js&#39;</code>，</p><p>找过很多教程，发现使用npm命令全部无效，依然会报错。</p><p>最后发现还是官方修复最管用，点击之前下载的安装包<code>.msi</code>文件，然后选择里面的repair选项，等待修复完成，大功告成！</p><blockquote><p>另外：</p><p>从搜索框搜索“环境变量”进入环境变量设置，是不能对系统变量进行设置的，直接搜索进入的话是以<code>user</code>身份进入的，所以只能设置用户环境变量。</p><p>win+i→系统→高级系统设置→环境变量，这样是以管理员身份进入的，就可以设置系统环境变量了</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>配置欧路词典</title>
      <link href="/posts/159f.html"/>
      <url>/posts/159f.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>解决自定义模板不能生成abbrlink</title>
      <link href="/posts/50a6.html"/>
      <url>/posts/50a6.html</url>
      
        <content type="html"><![CDATA[<h1 id="解决自定义模板不能生成abbrlink"><a href="#解决自定义模板不能生成abbrlink" class="headerlink" title="解决自定义模板不能生成abbrlink"></a>解决自定义模板不能生成abbrlink</h1><p>hexo博客可以在站点目录的<code>scaffolds</code>下自定义文章模版，为文章撰写提供方便。</p><p><code>scaffolds</code>下默认有三种模版：</p><ul><li>draft</li><li>post</li><li>page</li></ul><p>但是站主在使用自定义的模版新建文章时，却发现了一个问题：使用自定义模板新建文章不能自动生成abbrlink短链。</p><blockquote><p>这里补充一下短链相关知识，以及为什么要使用短链。</p></blockquote><p>Hexo默认的静态URL格式是 <code>:year/:month/:day/:title</code>，即按年、月、日、标题的形式生成固定链接。例如：<code>http://www.xxx.com/2022/11/11/hello-world</code></p><p>默认URL的格式会产生很多斜杠，百度蜘蛛在抓取网页时会根据网页权重抓取网页，比如最先抓取的首页（一般都是自己的域名，比较简短），因此在链接里不宜出现过多的斜杠，最好不要超过两个。还有一个问题就是，如果文章的标题使用了中文，经过转码后，URL会变得特别长。</p><p>使用<code>hexo-abbrlink</code>或<code>hexo-abbrlink2</code>插件便可解决以上问题，以往修改标题会导致原始链接失效，使用这个插件后只要不更改文章中的abbrlink值，文章的链接就会是持久的。</p><p>相较于<code>hexo-abbrlink</code>，<code>hexo-abbrlink2</code>可以从1开始依次增长。</p><p>回归正题，上网查找资料后发现：一些插件默认只针对<code>post</code>模版，如<code>hexo-abbrlink</code>，而我使用的是自定义模板<code>essay</code>创建文章，不被<code>hexo-abbrlink</code>所支持，所以不会自动生成abbrlink。</p><p>本想自己试试基于<code>hexo-abbrlink</code>插件修改原代码逻辑，使之支持更多的模版，但是上网看到已经有大佬遇到了这个问题并给出解决方法，大佬已经基于原插件开发了[hexo-abbrlink3](<a href="https://github.com/JunKuangKuang/hexo-abbrlink3">JunKuangKuang&#x2F;hexo-abbrlink3: create one and only link for every post for hexo (github.com)</a>)，所以就不重复造轮子了。</p><p>后续就是跟着大佬的<a href="%5BHexo%E5%8E%86%E9%99%A9%E8%AE%B0%E4%B9%8B%E5%8D%81%E4%BA%8C%E5%BC%80%E5%8F%91hexo-abbrlink3%E6%8F%92%E4%BB%B6_hexo-abbrlink%E4%B8%8D%E7%94%9F%E6%95%88-CSDN%E5%8D%9A%E5%AE%A2%5D(https://blog.csdn.net/qq_41461536/article/details/126456286)">博客</a>操作就行。</p><blockquote><p>注意：在新建文章时，hexo-abbrlink插件不会立即给文章自动填充abbrlink，只有在你使用hexo g命令后，就会发现文章的abbrlink已经被自动填充了。</p></blockquote><p>升级：</p><ol><li>新建文章好像不能包含front-matter的关键词，否则会出问题？</li><li>能否设置插件代码自动识别scaffolds下的所有模版？</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>时来天地皆同力</title>
      <link href="/posts/sltdjtl.html"/>
      <url>/posts/sltdjtl.html</url>
      
        <content type="html"><![CDATA[<h1 id="时来天地皆同力"><a href="#时来天地皆同力" class="headerlink" title="时来天地皆同力"></a>时来天地皆同力</h1><div class="ipage">   <div class="ititle"> </div>   <div class="izhengwen">     <p>      天不得时，日月无光；<br>      地不得时，草木不生；<br>      水不得时，风浪不平；<br>      人不得时，利运不通。<br>      时也，运也，命也。<br>      人有冲天之志，非运不可自通。<br>      时来天地皆同力，运到万物皆同行。<br>      十年运到龙困井，一朝得势入青云。<br>      择一业以谋时养命，等一运以扭转乾坤。<br>    </p>   </div> </div>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Alist挂载</title>
      <link href="/posts/6c3d.html"/>
      <url>/posts/6c3d.html</url>
      
        <content type="html"><![CDATA[<h1 id="Alist挂载网盘"><a href="#Alist挂载网盘" class="headerlink" title="Alist挂载网盘"></a>Alist挂载网盘</h1><p>[<a href="https://xyzbz.cn/archives/803/">保姆级教程]使用宝塔搭建Alist文件列表程序 - 网友小宋 (xyzbz.cn)</a></p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Alist </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云域名购买及解析</title>
      <link href="/posts/52cd.html"/>
      <url>/posts/52cd.html</url>
      
        <content type="html"><![CDATA[<p> 市面上有很多域名提供商可供选择，价格不尽相同，续费服务也不同…… 由于我的服务器是在阿里云购买的，为了方便管理，所以我选择了阿里云购买域名。服务器买了这么久了，终于开始配置域名了(p≧w≦q)</p><h2 id="域名购买"><a href="#域名购买" class="headerlink" title="域名购买"></a>域名购买</h2><p>主要步骤如下：</p><ol><li>校验域名是否已被注册（阿里云域名注册地址：<a href="https://www.aliyun.com/minisite/goods?userCode=rjqh3xdh">https://wanwang.aliyun.com/</a>）</li><li>选择钟意的域名，添加到购物车</li><li>购买域名前**必须必须必须**要看清楚重要提醒，因为域名后面涉及到网站备案，尽量选择所在地可备案，</li><li>创建信息模板<br><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202404291942375.png" alt="创建模版"></li><li></li></ol><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p>参考文档</p><p><a href="https://blog.csdn.net/pang_ping/article/details/101279960">如何购买阿里云域名教程（域名购买+配置）~_阿里云购买域名的步骤-CSDN博客</a></p><p><a href="https://developer.aliyun.com/article/771535">阿里云域名申请+服务器购买+备案教程（图文讲解版）-阿里云开发者社区 (aliyun.com)</a></p><p><a href="https://developer.aliyun.com/article/768090?spm=5176.21213303.J_qCOwPWspKEuWcmp8qiZNQ.27.247f2f3dhxwyba&scm=20140722.S_community@@%E6%96%87%E7%AB%A0@@768090._.ID_community@@%E6%96%87%E7%AB%A0@@768090-RL_%E5%9F%9F%E5%90%8D%E8%B4%AD%E4%B9%B0%E5%92%8C%E8%A7%A3%E6%9E%90-LOC_llm-OR_ser-V_3-RE_new3-P0_1">阿里云域名购买和域名解析教程-阿里云开发者社区 (aliyun.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 阿里云 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 域名解析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>跨平台互联工具</title>
      <link href="/posts/3296.html"/>
      <url>/posts/3296.html</url>
      
        <content type="html"><![CDATA[<h1 id="跨平台互联工具"><a href="#跨平台互联工具" class="headerlink" title="跨平台互联工具"></a>跨平台互联工具</h1><p>在日常生活中，大家都会使用到手机、电脑、平板之类的产品，那么三端产品的互动和协同就是一个让人头痛的问题。当然如果你使用的是一个品牌的手机、电脑和品牌的话，一般依靠该品牌提供的生态，可以很好的解决三端跨屏互动的问题。但是三端不是同一个品牌的情况才是常态&#96;(<em>&gt;﹏&lt;</em>)′。虽然市面上有很多用来实现跨屏互动的软件，但大多数效果不是很好。最后我找到了一款个人认为表现最好的一款软件——KDE Connect，Linux，Windows，MacOS，Android，iOS之间的都可以得到支持。</p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote><p>KDE connect是什么？</p></blockquote><p><a href="https://link.zhihu.com/?target=https://kdeconnect.kde.org/">KDE Connect</a> 是由 KDE 桌面团队开发的，提供了 Linux 系统与其他系统，如 Windows、MacOS、Android 及 Linux，的无缝连接。</p><p>KDE Connect 安装后会使你拥有接收电话的通知、发送或接受短信、浏览文件、发送或接受文件等许多功能。</p><p>此外，KDE Connect 在无线网络上遵循安全协议，以防止任何隐私泄露。它是自由开源的软件，出现任何隐患的可能性微乎其微。组合了这些优良特性，KDE Connect 是一款出色的工具。</p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p><a href="https://sspai.com/post/68779">通知推送、文件互传…… 免费好用的桌面 &#x2F; 移动端协同工具：KDE Connect - 少数派 (sspai.com)</a></p><p><a href="https://sspai.com/post/59508#!">KDE Connect : Linux 下的设备互联 - 少数派 (sspai.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> KDE Connect </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>词缀pan-</title>
      <link href="/posts/fdde.html"/>
      <url>/posts/fdde.html</url>
      
        <content type="html"><![CDATA[<p> 今日单词学习之panorama(全景)，pan（全部）-orama（看见）→全部看见→全景</p><h2 id="pan"><a href="#pan" class="headerlink" title="pan-"></a>pan-</h2><p>pan-这个词根源于</p><h2 id="orama"><a href="#orama" class="headerlink" title="-orama"></a>-orama</h2>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 词缀 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>站长必会</title>
      <link href="/posts/3338.html"/>
      <url>/posts/3338.html</url>
      
        <content type="html"><![CDATA[<h1 id="站长必会"><a href="#站长必会" class="headerlink" title="站长必会"></a>站长必会</h1><p>作为一个合格的站长需要会那些东西？</p><p>一个站长需要学习的东西非常广泛且多样化，这包括但不限于以下几个方面：</p><p><strong>一、网站设计与开发基础</strong></p><ol><li>HTML、CSS和JavaScript等前端技术，用于构建和优化网页。</li><li>后端开发技术，如PHP、Python、Java等，用于实现网站的功能和数据处理。</li><li>数据库管理知识，如MySQL、MongoDB等，用于存储和检索网站数据。</li></ol><p><strong>二、内容创作与编辑</strong></p><ol><li>学习如何撰写高质量、符合SEO规范的内容，提升网站的内容质量。</li><li>掌握内容策划、编辑和发布流程，确保内容符合网站定位和用户需求。</li></ol><p><strong>三、网站运营与管理</strong></p><ol><li>网站性能优化技术，如提升加载速度、确保稳定性等。</li><li>网站安全知识，包括防火墙设置、数据加密等，确保网站安全无虞。</li><li>使用网站数据分析工具，分析用户行为、流量来源等数据，指导网站优化。</li></ol><p><strong>四、SEO优化与市场推广</strong></p><ol><li>SEO技术，包括关键词优化、链接建设、内容优化等，提高网站在搜索引擎中的排名。</li><li>社交媒体营销策略，利用社交媒体平台推广网站内容，增加网站曝光度和流量。</li><li>学习使用广告平台，如Google Ads等，进行有针对性的广告投放。</li></ol><p><strong>五、法律法规与合规性</strong></p><ol><li>了解互联网相关法律法规，确保网站内容合法合规。</li><li>学习数据保护知识，保护用户隐私和数据安全。</li><li>知识产权问题，避免侵犯他人版权或商标权。</li></ol><p><strong>六、用户体验与交互设计</strong></p><ol><li>用户行为心理学和交互设计原则，设计易于使用且吸引人的网站界面。</li><li>优化网站导航、布局和按钮设计，提高用户的浏览体验。</li></ol><p><strong>七、数据分析与挖掘</strong></p><ol><li>使用数据分析工具收集并分析网站数据，了解用户行为、流量来源等关键指标。</li><li>解读数据报告，为网站的决策提供支持。</li></ol><p><strong>八、持续学习与创新能力</strong></p><ol><li>站长需要具备持续学习的能力，不断关注互联网行业的新动态和趋势。</li><li>培养创新思维，探索新的网站运营策略和优化方法。</li></ol><p>通过不断学习和实践，站长可以逐步提升自己的专业素养和综合能力，为网站的成功运营提供有力保障。同时，站长还需要具备团队协作和沟通能力，以便更好地协调各方面资源，推动网站的发展。</p><p><a href="https://zhuanlan.zhihu.com/p/91507285">（1）要成为一个合格的站长咱们应该懂这些 - 知乎 (zhihu.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 站长必会 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 站长必会 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站安全</title>
      <link href="/posts/bd47.html"/>
      <url>/posts/bd47.html</url>
      
        <content type="html"><![CDATA[<h1 id="网站安全"><a href="#网站安全" class="headerlink" title="网站安全"></a>网站安全</h1><p>DDoS 防护，CC 防护，网站安全防护，SQL 注入防护，XSS 攻击防护等</p><p><a href="https://help.aliyun.com/document_detail/153593.html?spm=5176.28426678.J_HeJR_wZokYt378dwP-lLl.577.405f5181hvjEeB&scm=20140722.S_help@@%E6%96%87%E6%A1%A3@@153593.S_BB1@bl+BB2@bl+RQW@ag0+os0.ID_153593-RL_%E7%BD%91%E7%AB%99%E5%AE%89%E5%85%A8-LOC_search~UND~helpdoc~UND~item-OR_ser-V_3-P0_17">云效2020有哪些安全类常见问题_云效(Apsara Devops)-阿里云帮助中心 (aliyun.com)</a></p><p><a href="https://help.aliyun.com/zh/govcloud/getting-started/ecs-security-configurations?spm=5176.28426678.J_HeJR_wZokYt378dwP-lLl.589.405f5181hvjEeB&scm=20140722.S_help@@%E6%96%87%E6%A1%A3@@98822.S_os0.ID_98822-RL_%E7%BD%91%E7%AB%99%E5%AE%89%E5%85%A8-LOC_search~UND~helpdoc~UND~item-OR_ser-V_3-P0_19">政务云ECS有哪些安全配置_阿里云电子政务云-阿里云帮助中心 (aliyun.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 站长必会 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对象存储</title>
      <link href="/posts/ce5b.html"/>
      <url>/posts/ce5b.html</url>
      
        <content type="html"><![CDATA[<h1 id="对象存储"><a href="#对象存储" class="headerlink" title="对象存储"></a>对象存储</h1><p><a href="https://juejin.cn/post/7132672752963551239">什么是对象存储？3000字给你整明明白白！ - 掘金 (juejin.cn)</a></p><p><a href="https://help.aliyun.com/zh/oss/product-overview/what-is-oss">什么是对象存储OSS_对象存储(OSS)-阿里云帮助中心 (aliyun.com)</a></p><p><a href="https://blog.csdn.net/DecadeLive/article/details/105094939">对象存储3：对象存储的原理、构造和详解-CSDN博客</a></p><p><a href="https://aws.amazon.com/cn/what-is/object-storage/">什么是对象存储？- 对象存储简介 - AWS (amazon.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 站长必会 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 对象存储 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SEO</title>
      <link href="/posts/7583.html"/>
      <url>/posts/7583.html</url>
      
        <content type="html"><![CDATA[<h1 id="站长必会之SEO"><a href="#站长必会之SEO" class="headerlink" title="站长必会之SEO"></a>站长必会之SEO</h1><h2 id="什么是SEO"><a href="#什么是SEO" class="headerlink" title="什么是SEO"></a>什么是SEO</h2><h2 id="SEO有什么用"><a href="#SEO有什么用" class="headerlink" title="SEO有什么用"></a>SEO有什么用</h2><h2 id="怎么做SEO"><a href="#怎么做SEO" class="headerlink" title="怎么做SEO"></a>怎么做SEO</h2><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://blog.csdn.net/weixin_46653360/article/details/129549920">前端开发之SEO（搜索引擎优化）_前端seo优化-CSDN博客</a></p><p><a href="https://zhuanlan.zhihu.com/p/210428775">什么是SEO？如何进行SEO优化？ - 知乎 (zhihu.com)</a></p><p><a href="https://help.aliyun.com/document_detail/157011.html?spm=5176.28426678.J_HeJR_wZokYt378dwP-lLl.7.405f5181hvjEeB&scm=20140722.S_help@@%E6%96%87%E6%A1%A3@@157011.S_BB1@bl+BB2@bl+RQW@ag0+hot+os0.ID_157011-RL_seo-LOC_search~UND~helpdoc~UND~item-OR_ser-V_3-P0_1">解答SEO相关问题_云·速成美站-阿里云帮助中心 (aliyun.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 站长必会 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SEO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计网62问</title>
      <link href="/posts/a329.html"/>
      <url>/posts/a329.html</url>
      
        <content type="html"><![CDATA[<h1 id="计网62问"><a href="#计网62问" class="headerlink" title="计网62问"></a>计网62问</h1><p><a href="https://mp.weixin.qq.com/s/yAlErlC09GnjaVvwUo3Acg">面渣逆袭：计算机网络六十二问，三万字图文详解！速收藏！ (qq.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 面经 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>宝塔安装docker和青龙面板</title>
      <link href="/posts/aa4a.html"/>
      <url>/posts/aa4a.html</url>
      
        <content type="html"><![CDATA[<h1 id="宝塔安装docker和青龙面板"><a href="#宝塔安装docker和青龙面板" class="headerlink" title="宝塔安装docker和青龙面板"></a>宝塔安装docker和青龙面板</h1><h2 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h2><p>一台服务器：华为云、阿里云、腾讯云等</p><p>shell连接工具：[Xshell](<a href="https://pan.baidu.com/share/init?surl=HWXsGGQIK8Hlor0fJTK84Q&pwd=vcur">百度网盘 请输入提取码 (baidu.com)</a>)、Xterm等</p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p>我这里以centos7.9为例，由于宝塔面板已经安装好，就不再赘述</p><h3 id="docker安装"><a href="#docker安装" class="headerlink" title="docker安装"></a>docker安装</h3><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202404032032919.png" alt="docker安装" style="zoom: 67%;" /><p>也可以使用命令安装</p><p>使用命令安装docker （嫌麻烦的直接在宝塔上安装就行）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">bash</span> <span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token function">curl</span> <span class="token parameter variable">-sSL</span> https://linuxmirrors.cn/docker.sh<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看docker版本</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> <span class="token parameter variable">-v</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看docker是否安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum list installed <span class="token operator">|</span> <span class="token function">grep</span> <span class="token function">docker</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="安装青龙面板"><a href="#安装青龙面板" class="headerlink" title="安装青龙面板"></a>安装青龙面板</h3><p>安装命令（注意如果不是以root登陆需要在前面加上<code>sudo</code>）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> <span class="token parameter variable">-q</span> https://git.metauniverse-cn.com/https://raw.githubusercontent.com/yanyuwangluo/VIP/main/Scripts/sh/ql.sh <span class="token parameter variable">-O</span> ql.sh <span class="token operator">&amp;&amp;</span> <span class="token function">bash</span> ql.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202404032043494.png" alt="ql安装"></p><p><strong>青龙路径 （不建议放在root下），以防后边出问题找不到</strong></p><p><strong>docker容器名 ：ql  （一路回车默认！别太快！等下端口设置）</strong></p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202404032102665.png" alt="过程1" style="zoom:67%;" /><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202404032107012.png" alt="过程2" style="zoom:80%;" /><blockquote><p>输入你的公网IP:5711登录青龙面板</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202404032106691.png" alt="过程3"></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>本文只是简要记录青龙面板的安装过程，如果想了解通过vmware、安装宝塔面板、xshell使用等详见<a href="https://blog.csdn.net/xiaoquanz/article/details/136713365">搭建宝塔、docker、青龙（2024 3&#x2F;14更新）</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 青龙面板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于xshell使用的系列问题及解决</title>
      <link href="/posts/4fdb.html"/>
      <url>/posts/4fdb.html</url>
      
        <content type="html"><![CDATA[<h2 id="不能使用退格键"><a href="#不能使用退格键" class="headerlink" title="不能使用退格键"></a>不能使用退格键</h2><p>xshell在输入命令时，敲错字母了，想通过按退格键删除敲错的字母，却在屏幕显示出<code>^H</code>，退格不行，再按删除键，却显示出<code>^[[3~</code>，就是删除不了输错的字母。</p><p>解决方法：</p><p>ALT+P打开xshell属性设置，选择<code>终端-键盘</code>，把<code>delete</code>和<code>backspace</code>序列改为 ASCII 127即可</p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202404031742271.png" alt="xshell设置"></p><h2 id="设置左键复制，右键粘贴"><a href="#设置左键复制，右键粘贴" class="headerlink" title="设置左键复制，右键粘贴"></a>设置左键复制，右键粘贴</h2><ol><li>打开 Xshell 的菜单栏（如果没有显示菜单栏则按下Alt键），点击工具–选项。</li><li>打开选项中的键盘和鼠标。选择向右按钮中的<code>Paste the clipboard contents</code>，并且勾上<code>将选定的文本自动复制到剪贴板</code>，最后点击确定即可。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202404032002459.png" alt="粘贴设置"></p><h2 id="按方向键出现-A-B-C-D"><a href="#按方向键出现-A-B-C-D" class="headerlink" title="按方向键出现^[[A^[[B^[[C^[[D"></a>按方向键出现<code>^[[A^[[B^[[C^[[D</code></h2><p>当我们点击<code>↑</code>、<code>↓</code>  想要找到之间输入的指令时，却出现了<code>^[[A</code>和<code>[[B</code>，点击<code>←</code>、<code>→</code>  却出现了<code>^[[C</code>和<code>[[D</code></p><p>即：无法按上下键来找到之间输入的指令，无法按左右键来调整光标位置</p><p>这个问题有两种可能：</p><ol><li><p>一种是由于当前用户使用的shell是&#x2F;bin&#x2F;sh的原因。在添加用户的时候没有添加用户的指定shell类型，因此默认为&#x2F;bin&#x2F;sh。 可以用如下命令查看当前用户的shell类型：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">echo  $SHELL<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果显示是&#x2F;bin&#x2F;sh，使用以下代码来修改shell类型：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">chsh  <span class="token parameter variable">-s</span>  /bin/bash  username或<span class="token function">usermod</span>  <span class="token parameter variable">-s</span>  /bin/bash  username<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>另一种是当前用户的shell类型是&#x2F;bin&#x2F;bash但是还是会有这个问题，这时可以在终端输入：export TERM&#x3D;linux。这个好像是因为ubuntu的版本的TERM的问题。</p></li></ol><h2 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h2><ol><li><p>设置外观：ALT+P——&gt;选择<code>外观</code></p></li><li><p>防止乱码：ALT+P——&gt;选择<code>终端</code>——&gt;<code>转换</code>，设置转换为<code>UTF-8</code></p></li><li><p>远程连接不断开：ALT+P——&gt;选择<code>连接</code>下的<code>保持活跃状态</code>，设置间隔时间</p></li><li><p>数据传输：本地与服务器，服务器与服务器，本地与跳板机代理服务器之间传输数据的问题，小于4G的文件都是可以直接通过rz或者sz进行传输的，但是文件过大就没办法传输了，需要安装<code>xftp</code>之类的传输文件的软件</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> xshell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网穿透</title>
      <link href="/posts/1b14.html"/>
      <url>/posts/1b14.html</url>
      
        <content type="html"><![CDATA[<h1 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h1>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内网穿透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>凯利公式</title>
      <link href="/posts/8617.html"/>
      <url>/posts/8617.html</url>
      
        <content type="html"><![CDATA[<h1 id="凯利公式"><a href="#凯利公式" class="headerlink" title="凯利公式"></a>凯利公式</h1><blockquote><p><strong>凯利，是谁？</strong></p></blockquote><p>约翰·拉里·凯利（John larry  Kelly 1923-1965）1923 年出生于美国德克萨斯州，在第二次世界大战中加入美国海军当了一名飞行员。</p><p>退役后，进入得克萨斯州奥斯汀分校念物理学。1953年获得物理学博士学位，毕业后去了号称诺奖批发部的贝尔实验室工作。</p><p>在贝尔实验室中，他认识了好友兼同事，著名信息论创始人的克劳德·香农。1956年凯利受到香农信息论的启发，在内部期刊《贝尔技术系统期刊》中发表了一篇名为《对信息传输速率的新解释》的论文。</p><p>然而这并不是论文原来的标题，原标题更有意思，叫《信息论与赌博》。因为公司高层觉得这样的标题有损公司道德形象，才被迫他换了一个新名字。</p><p>但凯利的初衷确实是以一个棒球比赛的赌徒视角，去思考如何合理押注才能让资产得到最大指数的增长。虽然标题不严肃，但论文的证明过程却相当严谨。后来，香农指导另一个数学大神应用凯利的研究，吊打拉斯维加斯的各个赌场。</p><p>这个数学大神就是爱德华·索普。</p><p>爱德华·索普，一个数学怪才，作为加州大学洛杉矶分校的物理系研究生，却对轮盘游戏念念不忘。他一直认为根据小球的投入角度和运动轨迹可以预测小球的落点，所以他想设计一个基于变量计算的轮盘预测系统。</p><p>但现实条件却制止了他，由于手上的轮盘模型太简单，又恰巧马上要毕业了论文还没写完，于是对轮盘的研究就停止了。</p><p>毕业后，索普对轮盘念念不忘，于是动身去了拉斯维加斯。出发前，他在《美国统计学会会刊》上读到了一篇关于如何赢得 「21 点」游戏的论文。</p><p>此时，索普觉得 21点 这个看似比轮盘更有意思，自己也有必要尝试验证一下这个论文里的内容。于是，索普应用论文中的理论去了赌场，可结果输得很惨。</p><p>于是索普开始自己研究「21点」游戏，不久也原创了自己的一套理论，基于此理论写了一篇论文叫《21点的常胜策略》。为了顺利发表论文，他求助了香农，而香农不但同意帮助索普发表论文，还建议他把题目改成《21点的有利策略》，他表示：「科学院的那些人都很传统，所以，要低调。」</p><p>但论文有个不完善的地方，因为只是思考「21点」游戏本身的策略，却没有涉及到如何在游戏过程中如何下注的问题。这时巧合来了，香农告诉他之前有个叫约翰·凯利的同事早就研究完了。</p><p>两个数学大神的思想碰撞在了一起，一个研究怎么「赢得多」，一个研究怎么「输得少」。</p><p>于是索普利用凯利公式，对「21点」游戏进行量化计算，通俗的解释就是：胜算大的适合多下注，胜算小的时候少下注。凭此理论，索普「血洗」拉斯维加斯各大赌场，又把所有制胜手法写入了《战胜庄家》这本书里，最终被赌场所封杀。之后索普不断完善理论，在金融市场做量化交易，这是后话。</p><p>凯利呢？很遗憾，也许是天妒英才，凯利突发脑溢血而亡，享年41岁，他至死也没能被大众熟知。</p><p>但凯利公式，却在未来慢慢的展现了威力，在 60 多年的发展中，凯利公式被投资界和博彩界奉为经典。</p><blockquote><p><strong>那凯利到底怎么用呢？</strong></p></blockquote><p>F &#x3D; (bp - q) &#x2F; b</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>学习自</p><p><a href="https://mp.weixin.qq.com/s/0hvjfGUyADoRZrnkUCgwwQ">对学渣最友好的公式：凯利公式 (qq.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/417515601">深度理解凯利公式（交易员必读 - 知乎 (zhihu.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 今日学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 凯利公式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>留言板更新</title>
      <link href="/posts/7f1d.html"/>
      <url>/posts/7f1d.html</url>
      
        <content type="html"><![CDATA[<h1 id="留言板更新"><a href="#留言板更新" class="headerlink" title="留言板更新"></a>留言板更新</h1><p>原来的留言板实属一些简陋，于是决定更新一下，这里记录一下更新的过程。</p><h2 id="效果显示"><a href="#效果显示" class="headerlink" title="效果显示"></a>效果显示</h2><p>原样式</p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202404051129915.png" alt="原样式" style="zoom: 33%;" /><p>新样式</p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/new_contact.png" alt="新样式" style="zoom: 33%;" /><p>留言板</p><h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><p>修改<code>valine.ejs</code></p><p>原代码：</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">.valine-card</span> <span class="token punctuation">&#123;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> 1.5rem auto<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.valine-card .card-content</span> <span class="token punctuation">&#123;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 20px 20px 5px 20px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments textarea</span> <span class="token punctuation">&#123;</span>        <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>        <span class="token comment">/* valine评论背景图 */</span>        <span class="token comment">/* background: url("https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202310020019240.gif") 100% 100% no-repeat; */</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>background<span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>"</span><span class="token punctuation">)</span></span> 100% 100% no-repeat<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments p</span> <span class="token punctuation">&#123;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> 2px 2px 10px<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 1.25rem<span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> 1.78rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments blockquote p</span> <span class="token punctuation">&#123;</span>        <span class="token property">text-indent</span><span class="token punctuation">:</span> 0.2rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments a</span> <span class="token punctuation">&#123;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 0 2px<span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> #4cbf30<span class="token punctuation">;</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span> 500<span class="token punctuation">;</span>        <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments img</span> <span class="token punctuation">&#123;</span>        <span class="token property">max-width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>        <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments ol li</span> <span class="token punctuation">&#123;</span>        <span class="token property">list-style-type</span><span class="token punctuation">:</span> decimal<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments ol,    ul</span> <span class="token punctuation">&#123;</span>        <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>        <span class="token property">padding-left</span><span class="token punctuation">:</span> 2em<span class="token punctuation">;</span>        <span class="token property">word-spacing</span><span class="token punctuation">:</span> 0.05rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments ul li,    ol li</span> <span class="token punctuation">&#123;</span>        <span class="token property">display</span><span class="token punctuation">:</span> list-item<span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> 1.8rem<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 1rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments ul li</span> <span class="token punctuation">&#123;</span>        <span class="token property">list-style-type</span><span class="token punctuation">:</span> disc<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments ul ul li</span> <span class="token punctuation">&#123;</span>        <span class="token property">list-style-type</span><span class="token punctuation">:</span> circle<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments table,    th,    td</span> <span class="token punctuation">&#123;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 12px 13px<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #dfe2e5<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments table,    th,    td</span> <span class="token punctuation">&#123;</span>        <span class="token property">border</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">table tr:nth-child(2n),    thead</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> #fafafa<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments table th</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> #f2f2f2<span class="token punctuation">;</span>        <span class="token property">min-width</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments table td</span> <span class="token punctuation">&#123;</span>        <span class="token property">min-width</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments h1</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 1.85rem<span class="token punctuation">;</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> 2.2rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments h2</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 1.65rem<span class="token punctuation">;</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> 1.9rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments h3</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 1.45rem<span class="token punctuation">;</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> 1.7rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments h4</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 1.25rem<span class="token punctuation">;</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> 1.5rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments h5</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 1.1rem<span class="token punctuation">;</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> 1.4rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments h6</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 1rem<span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> 1.3rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments p</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 1rem<span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> 1.5rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments hr</span> <span class="token punctuation">&#123;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> 12px 0<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token property">border-top</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments blockquote</span> <span class="token punctuation">&#123;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> 15px 0<span class="token punctuation">;</span>        <span class="token property">border-left</span><span class="token punctuation">:</span> 5px solid #42b983<span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 1rem 0.8rem 0.3rem 0.8rem<span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> #666<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>66<span class="token punctuation">,</span> 185<span class="token punctuation">,</span> 131<span class="token punctuation">,</span> .1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments pre</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-family</span><span class="token punctuation">:</span> monospace<span class="token punctuation">,</span> monospace<span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 1.2em<span class="token punctuation">;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> .5em 0<span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> #272822<span class="token punctuation">;</span>        <span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> 0.3em<span class="token punctuation">;</span>        <span class="token property">tab-size</span><span class="token punctuation">:</span> 4<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments code</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-family</span><span class="token punctuation">:</span> monospace<span class="token punctuation">,</span> monospace<span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 1px 3px<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 0.92rem<span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> #e96900<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> #f8f8f8<span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> 2px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments pre code</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-family</span><span class="token punctuation">:</span> monospace<span class="token punctuation">,</span> monospace<span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> #e8eaf6<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> #272822<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments pre[class*="language-"]</span> <span class="token punctuation">&#123;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 1.2em<span class="token punctuation">;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> .5em 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments code[class*="language-"],    pre[class*="language-"]</span> <span class="token punctuation">&#123;</span>        <span class="token property">color</span><span class="token punctuation">:</span> #e8eaf6<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments [type="checkbox"]:not(:checked),    [type="checkbox"]:checked</span> <span class="token punctuation">&#123;</span>        <span class="token property">position</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>        <span class="token property">margin-left</span><span class="token punctuation">:</span> -1.3rem<span class="token punctuation">;</span>        <span class="token property">margin-right</span><span class="token punctuation">:</span> 0.4rem<span class="token punctuation">;</span>        <span class="token property">margin-top</span><span class="token punctuation">:</span> -1px<span class="token punctuation">;</span>        <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> unset<span class="token punctuation">;</span>        <span class="token property">visibility</span><span class="token punctuation">:</span> visible<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments b,    strong</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments dfn</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments small</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 85%<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments cite</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-style</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments mark</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> #fcf8e3<span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> .2em<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments table,    th,    td</span> <span class="token punctuation">&#123;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 12px 13px<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #dfe2e5<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">table tr:nth-child(2n),    thead</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> #fafafa<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments table th</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> #f2f2f2<span class="token punctuation">;</span>        <span class="token property">min-width</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments table td</span> <span class="token punctuation">&#123;</span>        <span class="token property">min-width</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments [type="checkbox"]:not(:checked),    [type="checkbox"]:checked</span> <span class="token punctuation">&#123;</span>        <span class="token property">position</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>        <span class="token property">margin-left</span><span class="token punctuation">:</span> -1.3rem<span class="token punctuation">;</span>        <span class="token property">margin-right</span><span class="token punctuation">:</span> 0.4rem<span class="token punctuation">;</span>        <span class="token property">margin-top</span><span class="token punctuation">:</span> -1px<span class="token punctuation">;</span>        <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> unset<span class="token punctuation">;</span>        <span class="token property">visibility</span><span class="token punctuation">:</span> visible<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card valine-card<span class="token punctuation">"</span></span> <span class="token attr-name">data-aos</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fade-up<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>comment_headling<span class="token punctuation">"</span></span>        <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span> <span class="token property">font-weight</span><span class="token punctuation">:</span> 700<span class="token punctuation">;</span> <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span> <span class="token property">padding-left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span> <span class="token property">top</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span> <span class="token property">padding-bottom</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-comments fa-fw<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>评论<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vcomments<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-content<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span> grid</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>jsDelivr<span class="token punctuation">.</span>url </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span><span class="token string">'/libs/valine/av-min.js'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>jsDelivr<span class="token punctuation">.</span>url </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span>libs<span class="token punctuation">.</span>js<span class="token punctuation">.</span>valine<span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">new</span> <span class="token class-name">Valine</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#vcomments'</span><span class="token punctuation">,</span>        <span class="token literal-property property">appId</span><span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>appId </span><span class="token delimiter punctuation">%></span></span>'</span><span class="token punctuation">,</span>        <span class="token literal-property property">appKey</span><span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>appKey </span><span class="token delimiter punctuation">%></span></span>'</span><span class="token punctuation">,</span>        <span class="token literal-property property">notify</span><span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>notify </span><span class="token delimiter punctuation">%></span></span>'</span> <span class="token operator">===</span> <span class="token string">'true'</span><span class="token punctuation">,</span>        <span class="token literal-property property">verify</span><span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>verify </span><span class="token delimiter punctuation">%></span></span>'</span> <span class="token operator">===</span> <span class="token string">'true'</span><span class="token punctuation">,</span>        <span class="token literal-property property">visitor</span><span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>visitor </span><span class="token delimiter punctuation">%></span></span>'</span> <span class="token operator">===</span> <span class="token string">'true'</span><span class="token punctuation">,</span>        <span class="token literal-property property">avatar</span><span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>avatar </span><span class="token delimiter punctuation">%></span></span>'</span><span class="token punctuation">,</span>        <span class="token literal-property property">pageSize</span><span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>pageSize </span><span class="token delimiter punctuation">%></span></span>'</span><span class="token punctuation">,</span>        <span class="token literal-property property">lang</span><span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>language <span class="token operator">==</span> <span class="token string">"zh-CN"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  </span><span class="token delimiter punctuation">%></span></span>zh-cn<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>en<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>'</span><span class="token punctuation">,</span>        <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>placeholder </span><span class="token delimiter punctuation">%></span></span>'</span><span class="token punctuation">,</span>        <span class="token literal-property property">enableQQ</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token literal-property property">serverURLs</span><span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>serverURLs </span><span class="token delimiter punctuation">%></span></span>'</span><span class="token punctuation">,</span>  <span class="token comment">// 增加这一行！！！</span>        <span class="token literal-property property">emojiCDN</span><span class="token operator">:</span> <span class="token string">'//i0.hdslb.com/bfs/emote/'</span><span class="token punctuation">,</span>        <span class="token comment">// 表情title和图片映射</span>        <span class="token literal-property property">requiredFields</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'nick'</span><span class="token punctuation">,</span> <span class="token string">'mail'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">//设置必填项</span>        <span class="token literal-property property">emojiMaps</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token string-property property">"tv_doge"</span><span class="token operator">:</span> <span class="token string">"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_亲亲"</span><span class="token operator">:</span> <span class="token string">"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_偷笑"</span><span class="token operator">:</span> <span class="token string">"bb690d4107620f1c15cff29509db529a73aee261.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_再见"</span><span class="token operator">:</span> <span class="token string">"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_冷漠"</span><span class="token operator">:</span> <span class="token string">"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_发怒"</span><span class="token operator">:</span> <span class="token string">"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_发财"</span><span class="token operator">:</span> <span class="token string">"34db290afd2963723c6eb3c4560667db7253a21a.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_可爱"</span><span class="token operator">:</span> <span class="token string">"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_吐血"</span><span class="token operator">:</span> <span class="token string">"09dd16a7aa59b77baa1155d47484409624470c77.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_呆"</span><span class="token operator">:</span> <span class="token string">"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_呕吐"</span><span class="token operator">:</span> <span class="token string">"9f996894a39e282ccf5e66856af49483f81870f3.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_困"</span><span class="token operator">:</span> <span class="token string">"241ee304e44c0af029adceb294399391e4737ef2.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_坏笑"</span><span class="token operator">:</span> <span class="token string">"1f0b87f731a671079842116e0991c91c2c88645a.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_大佬"</span><span class="token operator">:</span> <span class="token string">"093c1e2c490161aca397afc45573c877cdead616.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_大哭"</span><span class="token operator">:</span> <span class="token string">"23269aeb35f99daee28dda129676f6e9ea87934f.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_委屈"</span><span class="token operator">:</span> <span class="token string">"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_害羞"</span><span class="token operator">:</span> <span class="token string">"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_尴尬"</span><span class="token operator">:</span> <span class="token string">"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_微笑"</span><span class="token operator">:</span> <span class="token string">"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_思考"</span><span class="token operator">:</span> <span class="token string">"90cf159733e558137ed20aa04d09964436f618a1.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_惊吓"</span><span class="token operator">:</span> <span class="token string">"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_打脸"</span><span class="token operator">:</span> <span class="token string">"56ab10b624063e966bfcb76ea5dc4794d87dfd47.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_抓狂"</span><span class="token operator">:</span> <span class="token string">"fe31c08edad661d63762b04e17b8d5ae3c71a757.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_抠鼻"</span><span class="token operator">:</span> <span class="token string">"c666f55e88d471e51bbd9fab9bb308110824a6eb.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_斜眼笑"</span><span class="token operator">:</span> <span class="token string">"911f987aa8bc1bee12d52aafe62bc41ef4474e6c.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_无奈"</span><span class="token operator">:</span> <span class="token string">"ea8ed89ee9878f2fece2dda0ea8a5dbfe21b5751.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_晕"</span><span class="token operator">:</span> <span class="token string">"5443c22b4d07fb1907ccc610c8e6db254f2461b7.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_流汗"</span><span class="token operator">:</span> <span class="token string">"cead1c351ab8d79e9f369605beb90148db0fbed3.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_流泪"</span><span class="token operator">:</span> <span class="token string">"7e71cde7858f0cd50d74b0264aa26db612a8a167.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_流鼻血"</span><span class="token operator">:</span> <span class="token string">"c32d39db2737f89b904ca32700d140a9241b0767.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_点赞"</span><span class="token operator">:</span> <span class="token string">"f85c354995bd99e28fc76c869bfe42ba6438eff4.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_生气"</span><span class="token operator">:</span> <span class="token string">"26702dcafdab5e8225b43ffd23c94ac1ff932654.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_生病"</span><span class="token operator">:</span> <span class="token string">"8b0ec90e6b86771092a498c54f09fc94621c1900.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_疑问"</span><span class="token operator">:</span> <span class="token string">"0793d949b18d7be716078349c202c15ff166f314.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_白眼"</span><span class="token operator">:</span> <span class="token string">"c1d59f439e379ee50eef488bcb5e5378e5044ea4.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_皱眉"</span><span class="token operator">:</span> <span class="token string">"72ccad6679fea0d14cce648b4d818e09b8ffea2d.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_目瞪口呆"</span><span class="token operator">:</span> <span class="token string">"0b8cb81a68de5d5365212c99375e7ace3e7891b7.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_睡着"</span><span class="token operator">:</span> <span class="token string">"8b196675b53af58264f383c50ad0945048290b33.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_笑哭"</span><span class="token operator">:</span> <span class="token string">"1abc628f6d4f4caf9d0e7800878f4697abbc8273.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_腼腆"</span><span class="token operator">:</span> <span class="token string">"89712c0d4af73e67f89e35cbc518420380a7f6f4.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_色"</span><span class="token operator">:</span> <span class="token string">"61822c7e9aae5da76475e7892534545336b23a6f.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_调侃"</span><span class="token operator">:</span> <span class="token string">"4bc022533ef31544ca0d72c12c808cf4a1cce3e3.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_调皮"</span><span class="token operator">:</span> <span class="token string">"b9c41de8e82dd7a8515ae5e3cb63e898bf245186.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_鄙视"</span><span class="token operator">:</span> <span class="token string">"6e72339f346a692a495b123174b49e4e8e781303.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_闭嘴"</span><span class="token operator">:</span> <span class="token string">"c9e990da7f6e93975e25fd8b70e2e290aa4086ef.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_难过"</span><span class="token operator">:</span> <span class="token string">"87f46748d3f142ebc6586ff58860d0e2fc8263ba.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_馋"</span><span class="token operator">:</span> <span class="token string">"fc7e829b845c43c623c8b490ee3602b7f0e76a31.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_鬼脸"</span><span class="token operator">:</span> <span class="token string">"0ffbbddf8a94d124ca2f54b360bbc04feb6bbfea.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_黑人问号"</span><span class="token operator">:</span> <span class="token string">"45821a01f51bc867da9edbaa2e070410819a95b2.png"</span><span class="token punctuation">,</span>            <span class="token string-property property">"tv_鼓掌"</span><span class="token operator">:</span> <span class="token string">"1d21793f96ef4e6f48b23e53e3b9e42da833a0f6.png"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 直达评论 --></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/back-comment.ejs'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改为：</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">.valine-card</span> <span class="token punctuation">&#123;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> 1.5rem auto<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.v[data-class=v] .emoji,    .v[data-class=v] .vemoji</span> <span class="token punctuation">&#123;</span>        <span class="token property">max-height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>        <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>        <span class="token property">max-width</span><span class="token punctuation">:</span> 30px <span class="token important">!important</span><span class="token punctuation">;</span>        <span class="token property">transition</span><span class="token punctuation">:</span> all .6s<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.v[data-class=v] .vwrap .vemojis</span> <span class="token punctuation">&#123;</span>        <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token property">padding-top</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>        <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments .vemoji:hover</span> <span class="token punctuation">&#123;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>1.3<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">body.dark .v[data-class=v] .vwrap .vemojis i</span> <span class="token punctuation">&#123;</span>        <span class="token property">background</span><span class="token punctuation">:</span> #312f2f<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.v[data-class=v] .vwrap .vemojis i</span> <span class="token punctuation">&#123;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> 4px 8px<span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> #f7f7f7<span class="token punctuation">;</span>        <span class="token property">padding-top</span><span class="token punctuation">:</span> 0 <span class="token important">!important</span><span class="token punctuation">;</span>        <span class="token property">padding-bottom</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> 2px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.roboterbb</span> <span class="token punctuation">&#123;</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">right</span><span class="token punctuation">:</span> 87px<span class="token punctuation">;</span>        <span class="token property">padding-top</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.robot-check-text:hover</span> <span class="token punctuation">&#123;</span>        <span class="token property">color</span><span class="token punctuation">:</span> #26a69a<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.roboter:hover .robot-check-text::before</span> <span class="token punctuation">&#123;</span>        <span class="token property">border</span><span class="token punctuation">:</span> 2px solid #5a5a5a<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.robotxian</span> <span class="token punctuation">&#123;</span>        <span class="token property">background</span><span class="token punctuation">:</span> #5a5a5a<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> 21px<span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> 11px <span class="token important">!important</span><span class="token punctuation">;</span>        <span class="token property">transform-origin</span><span class="token punctuation">:</span> 50% -17px<span class="token punctuation">;</span>        <span class="token property">animation</span><span class="token punctuation">:</span> swing 3.5s infinite ease-in-out<span class="token punctuation">;</span>        <span class="token property">-webkit-transform-origin</span><span class="token punctuation">:</span> 50% -17px<span class="token punctuation">;</span>        <span class="token property">-webkit-animation</span><span class="token punctuation">:</span> swing 2.85s infinite ease-in-out<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.v[data-class=v] .vwrap</span> <span class="token punctuation">&#123;</span>        <span class="token property">padding-bottom</span><span class="token punctuation">:</span> 23px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.robotimg</span> <span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 28px <span class="token important">!important</span><span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 28px <span class="token important">!important</span><span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> 14px <span class="token important">!important</span><span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> -13px <span class="token important">!important</span><span class="token punctuation">;</span>        <span class="token property">max-width</span><span class="token punctuation">:</span> none <span class="token important">!important</span><span class="token punctuation">;</span>        <span class="token property">z-index</span><span class="token punctuation">:</span> 99<span class="token punctuation">;</span>        <span class="token property">cursor</span><span class="token punctuation">:</span> none <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.v[data-class=v] .vbtn:disabled</span> <span class="token punctuation">&#123;</span>        <span class="token property">color</span><span class="token punctuation">:</span> #b2b2b5<span class="token punctuation">;</span>        <span class="token property">border-color</span><span class="token punctuation">:</span> #b2b2b5<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.v[data-class=v] .vbtn:disabled</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.valine-card .card-content</span> <span class="token punctuation">&#123;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 20px 20px 5px 20px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.v[data-class=v] .vwrap</span> <span class="token punctuation">&#123;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/* #vcomments textarea &#123;                box-sizing: border-box;                background: url("/medias/comment_bg1.webp") 100% 100% no-repeat;            &#125; */</span>    <span class="token selector">#vcomments textarea</span> <span class="token punctuation">&#123;</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>/medias/comment_bg.png<span class="token punctuation">)</span></span> no-repeat<span class="token punctuation">;</span>        <span class="token property">background-size</span><span class="token punctuation">:</span> contain<span class="token punctuation">;</span>        <span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>        <span class="token property">background-position</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">resize</span><span class="token punctuation">:</span> vertical<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments p</span> <span class="token punctuation">&#123;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> 2px 2px 10px<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 1.05rem<span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> 1.78rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments blockquote p</span> <span class="token punctuation">&#123;</span>        <span class="token property">text-indent</span><span class="token punctuation">:</span> 0.2rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments a</span> <span class="token punctuation">&#123;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 0 2px<span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> #4cbf30<span class="token punctuation">;</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span> 500<span class="token punctuation">;</span>        <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments img</span> <span class="token punctuation">&#123;</span>        <span class="token property">max-width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>        <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments ol li</span> <span class="token punctuation">&#123;</span>        <span class="token property">list-style-type</span><span class="token punctuation">:</span> decimal<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments ol,    ul</span> <span class="token punctuation">&#123;</span>        <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>        <span class="token property">padding-left</span><span class="token punctuation">:</span> 2em<span class="token punctuation">;</span>        <span class="token property">word-spacing</span><span class="token punctuation">:</span> 0.05rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments ul li,    ol li</span> <span class="token punctuation">&#123;</span>        <span class="token property">display</span><span class="token punctuation">:</span> list-item<span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> 1.8rem<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 1rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments ul li</span> <span class="token punctuation">&#123;</span>        <span class="token property">list-style-type</span><span class="token punctuation">:</span> disc<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments ul ul li</span> <span class="token punctuation">&#123;</span>        <span class="token property">list-style-type</span><span class="token punctuation">:</span> circle<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments table,    th,    td</span> <span class="token punctuation">&#123;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 12px 13px<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #dfe2e5<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments table,    th,    td</span> <span class="token punctuation">&#123;</span>        <span class="token property">border</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">table tr:nth-child(2n),    thead</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> #fafafa<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments table th</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> #f2f2f2<span class="token punctuation">;</span>        <span class="token property">min-width</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments table td</span> <span class="token punctuation">&#123;</span>        <span class="token property">min-width</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments h1</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 1.85rem<span class="token punctuation">;</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> 2.2rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments h2</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 1.65rem<span class="token punctuation">;</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> 1.9rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments h3</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 1.45rem<span class="token punctuation">;</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> 1.7rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments h4</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 1.25rem<span class="token punctuation">;</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> 1.5rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments h5</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 1.1rem<span class="token punctuation">;</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> 1.4rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments h6</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 1rem<span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> 1.3rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments p</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 1rem<span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> 1.5rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments hr</span> <span class="token punctuation">&#123;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> 12px 0<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token property">border-top</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments blockquote</span> <span class="token punctuation">&#123;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> 15px 0<span class="token punctuation">;</span>        <span class="token property">border-left</span><span class="token punctuation">:</span> 5px solid #42b983<span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 1rem 0.8rem 0.3rem 0.8rem<span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> #666<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>66<span class="token punctuation">,</span> 185<span class="token punctuation">,</span> 131<span class="token punctuation">,</span> .1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments pre</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-family</span><span class="token punctuation">:</span> monospace<span class="token punctuation">,</span> monospace<span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 1.2em<span class="token punctuation">;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> .5em 0<span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> #272822<span class="token punctuation">;</span>        <span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> 0.3em<span class="token punctuation">;</span>        <span class="token property">tab-size</span><span class="token punctuation">:</span> 4<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments code</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-family</span><span class="token punctuation">:</span> monospace<span class="token punctuation">,</span> monospace<span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 1px 3px<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 0.92rem<span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> #e96900<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> #f8f8f8<span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> 2px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments pre code</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-family</span><span class="token punctuation">:</span> monospace<span class="token punctuation">,</span> monospace<span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> #e8eaf6<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> #272822<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments pre[class*="language-"]</span> <span class="token punctuation">&#123;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 1.2em<span class="token punctuation">;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> .5em 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments code[class*="language-"],    pre[class*="language-"]</span> <span class="token punctuation">&#123;</span>        <span class="token property">color</span><span class="token punctuation">:</span> #e8eaf6<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments [type="checkbox"]:not(:checked),    [type="checkbox"]:checked</span> <span class="token punctuation">&#123;</span>        <span class="token property">position</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>        <span class="token property">margin-left</span><span class="token punctuation">:</span> -1.3rem<span class="token punctuation">;</span>        <span class="token property">margin-right</span><span class="token punctuation">:</span> 0.4rem<span class="token punctuation">;</span>        <span class="token property">margin-top</span><span class="token punctuation">:</span> -1px<span class="token punctuation">;</span>        <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> unset<span class="token punctuation">;</span>        <span class="token property">visibility</span><span class="token punctuation">:</span> visible<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments b,    strong</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments dfn</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments small</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 85%<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments cite</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-style</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments mark</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> #fcf8e3<span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> .2em<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments table,    th,    td</span> <span class="token punctuation">&#123;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 12px 13px<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #dfe2e5<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">table tr:nth-child(2n),    thead</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> #fafafa<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments table th</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> #f2f2f2<span class="token punctuation">;</span>        <span class="token property">min-width</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments table td</span> <span class="token punctuation">&#123;</span>        <span class="token property">min-width</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#vcomments [type="checkbox"]:not(:checked),    [type="checkbox"]:checked</span> <span class="token punctuation">&#123;</span>        <span class="token property">position</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>        <span class="token property">margin-left</span><span class="token punctuation">:</span> -1.3rem<span class="token punctuation">;</span>        <span class="token property">margin-right</span><span class="token punctuation">:</span> 0.4rem<span class="token punctuation">;</span>        <span class="token property">margin-top</span><span class="token punctuation">:</span> -1px<span class="token punctuation">;</span>        <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> unset<span class="token punctuation">;</span>        <span class="token property">visibility</span><span class="token punctuation">:</span> visible<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card valine-card<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vcomments-top<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>comment_headling<span class="token punctuation">"</span></span>            <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span> <span class="token property">font-weight</span><span class="token punctuation">:</span> 700<span class="token punctuation">;</span> <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span> <span class="token property">padding-left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span> <span class="token property">top</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span> <span class="token property">padding-bottom</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-comments fa-fw<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>评 论<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vcomments<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-content v<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span> grid</span><span class="token punctuation">"</span></span></span> <span class="token attr-name">data-class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>v<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vpanel<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vwrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cancel-reply text-right<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>取消回复<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span>                            <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vicon cancel-reply-btn<span class="token punctuation">"</span></span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0 0 1024 1024<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1.1<span class="token punctuation">"</span></span>                            <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span> <span class="token attr-name">p-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4220<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span>                                <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M796.454 985H227.545c-50.183 0-97.481-19.662-133.183-55.363-35.7-35.701-55.362-83-55.362-133.183V227.545c0-50.183 19.662-97.481 55.363-133.183 35.701-35.7 83-55.362 133.182-55.362h568.909c50.183 0 97.481 19.662 133.183 55.363 35.701 35.702 55.363 83 55.363 133.183v568.909c0 50.183-19.662 97.481-55.363 133.183S846.637 985 796.454 985zM227.545 91C152.254 91 91 152.254 91 227.545v568.909C91 871.746 152.254 933 227.545 933h568.909C871.746 933 933 871.746 933 796.454V227.545C933 152.254 871.746 91 796.454 91H227.545z<span class="token punctuation">"</span></span>                                <span class="token attr-name">p-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4221<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span>                                <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M568.569 512l170.267-170.267c15.556-15.556 15.556-41.012 0-56.569s-41.012-15.556-56.569 0L512 455.431 341.733 285.165c-15.556-15.556-41.012-15.556-56.569 0s-15.556 41.012 0 56.569L455.431 512 285.165 682.267c-15.556 15.556-15.556 41.012 0 56.569 15.556 15.556 41.012 15.556 56.569 0L512 568.569l170.267 170.267c15.556 15.556 41.012 15.556 56.569 0 15.556-15.556 15.556-41.012 0-56.569L568.569 512z<span class="token punctuation">"</span></span>                                <span class="token attr-name">p-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>4222<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vheader item3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nick<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>昵称/QQ号<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vnick vinput<span class="token punctuation">"</span></span>                            <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mail<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>邮箱<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vmail vinput<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>                            <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>link<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>网址(https://)<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vlink vinput<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vedit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>veditor<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>veditor vinput<span class="token punctuation">"</span></span>                            <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>评论前记得点击下方机器人验证按钮~ （客官留下QQ邮箱可好，会得到及时回复哦~）<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vrow<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vcol vcol-60 status-bar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vcol vcol-40 vctrl text-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>表情<span class="token punctuation">"</span></span>                                    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vicon vemoji-btn actived<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0 0 1024 1024<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1.1<span class="token punctuation">"</span></span>                                        <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span> <span class="token attr-name">p-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>16172<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span>                                            <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M512 1024a512 512 0 1 1 512-512 512 512 0 0 1-512 512zM512 56.888889a455.111111 455.111111 0 1 0 455.111111 455.111111 455.111111 455.111111 0 0 0-455.111111-455.111111zM312.888889 512A85.333333 85.333333 0 1 1 398.222222 426.666667 85.333333 85.333333 0 0 1 312.888889 512z<span class="token punctuation">"</span></span>                                            <span class="token attr-name">p-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>16173<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span>                                            <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M512 768A142.222222 142.222222 0 0 1 369.777778 625.777778a28.444444 28.444444 0 0 1 56.888889 0 85.333333 85.333333 0 0 0 170.666666 0 28.444444 28.444444 0 0 1 56.888889 0A142.222222 142.222222 0 0 1 512 768z<span class="token punctuation">"</span></span>                                            <span class="token attr-name">p-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>16174<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span>                                            <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M782.222222 391.964444l-113.777778 59.733334a29.013333 29.013333 0 0 1-38.684444-10.808889 28.444444 28.444444 0 0 1 10.24-38.684445l113.777778-56.888888a28.444444 28.444444 0 0 1 38.684444 10.24 28.444444 28.444444 0 0 1-10.24 36.408888z<span class="token punctuation">"</span></span>                                            <span class="token attr-name">p-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>16175<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span>                                            <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M640.568889 451.697778l113.777778 56.888889a27.875556 27.875556 0 0 0 38.684444-10.24 27.875556 27.875556 0 0 0-10.24-38.684445l-113.777778-56.888889a28.444444 28.444444 0 0 0-38.684444 10.808889 28.444444 28.444444 0 0 0 10.24 38.115556z<span class="token punctuation">"</span></span>                                            <span class="token attr-name">p-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>16176<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>预览<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vicon vpreview-btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span>                                        <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0 0 1024 1024<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1.1<span class="token punctuation">"</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span>                                        <span class="token attr-name">p-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>17688<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span>                                            <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M502.390154 935.384615a29.538462 29.538462 0 1 1 0 59.076923H141.430154C79.911385 994.461538 29.538462 946.254769 29.538462 886.153846V137.846154C29.538462 77.745231 79.950769 29.538462 141.390769 29.538462h741.218462c61.44 0 111.852308 48.206769 111.852307 108.307692v300.268308a29.538462 29.538462 0 1 1-59.076923 0V137.846154c0-26.899692-23.355077-49.230769-52.775384-49.230769H141.390769c-29.420308 0-52.775385 22.331077-52.775384 49.230769v748.307692c0 26.899692 23.355077 49.230769 52.775384 49.230769h360.999385z<span class="token punctuation">"</span></span>                                            <span class="token attr-name">p-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>17689<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span>                                            <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M196.923077 216.615385m29.538461 0l374.153847 0q29.538462 0 29.538461 29.538461l0 0q0 29.538462-29.538461 29.538462l-374.153847 0q-29.538462 0-29.538461-29.538462l0 0q0-29.538462 29.538461-29.538461Z<span class="token punctuation">"</span></span>                                            <span class="token attr-name">p-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>17690<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span>                                            <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M649.846154 846.769231a216.615385 216.615385 0 1 0 0-433.230769 216.615385 216.615385 0 0 0 0 433.230769z m0 59.076923a275.692308 275.692308 0 1 1 0-551.384616 275.692308 275.692308 0 0 1 0 551.384616z<span class="token punctuation">"</span></span>                                            <span class="token attr-name">p-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>17691<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span>                                            <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M807.398383 829.479768m20.886847-20.886846l0 0q20.886846-20.886846 41.773692 0l125.321079 125.321079q20.886846 20.886846 0 41.773693l0 0q-20.886846 20.886846-41.773693 0l-125.321078-125.321079q-20.886846-20.886846 0-41.773693Z<span class="token punctuation">"</span></span>                                            <span class="token attr-name">p-id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>17692<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vrow<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vcol vcol-30<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Markdown is supported<span class="token punctuation">"</span></span>                                <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://guides.github.com/features/mastering-markdown/<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vicon<span class="token punctuation">"</span></span>                                <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>markdown<span class="token punctuation">"</span></span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0 0 16 16<span class="token punctuation">"</span></span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1.1<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>16<span class="token punctuation">"</span></span>                                    <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>16<span class="token punctuation">"</span></span> <span class="token attr-name">aria-hidden</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">fill-rule</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>evenodd<span class="token punctuation">"</span></span>                                        <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vcol vcol-70 text-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>roboterbb<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>caishenxian fudaixian robotxian<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>caishenpic fudao robotimg<span class="token punctuation">"</span></span>                                            <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../medias/robot.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>roboter<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>评论前记得点击验证<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>robot-check<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span>                                        <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no-robot<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span>                                        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>robot-check-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>·<span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>点击验证<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>评论前勾选机器人验证按钮<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vsubmit vbtn<span class="token punctuation">"</span></span>                                <span class="token attr-name">disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>disabled<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>提交<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vemojis<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>block<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>呲牙<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>呲牙<span class="token punctuation">"</span></span> <span class="token attr-name">referrerpolicy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no-referrer<span class="token punctuation">"</span></span>                                <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vemoji<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../medias/emoji_img/ciya.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>吃瓜<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>吃瓜<span class="token punctuation">"</span></span>                                <span class="token attr-name">referrerpolicy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no-referrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vemoji<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../medias/emoji_img/chigua.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span>                            <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>冷酷<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>冷酷<span class="token punctuation">"</span></span> <span class="token attr-name">referrerpolicy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no-referrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vemoji<span class="token punctuation">"</span></span>                                <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../medias/emoji_img/cool.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>打脸<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>打脸<span class="token punctuation">"</span></span>                                <span class="token attr-name">referrerpolicy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no-referrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vemoji<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../medias/emoji_img/fface.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span>                            <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>抠鼻<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>抠鼻<span class="token punctuation">"</span></span> <span class="token attr-name">referrerpolicy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no-referrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vemoji<span class="token punctuation">"</span></span>                                <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../medias/emoji_img/picknoce.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>笑哭<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>笑哭<span class="token punctuation">"</span></span>                                <span class="token attr-name">referrerpolicy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no-referrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vemoji<span class="token punctuation">"</span></span>                                <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../medias/emoji_img/smilecry.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>吐血<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>吐血<span class="token punctuation">"</span></span>                                <span class="token attr-name">referrerpolicy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no-referrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vemoji<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../medias/emoji_img/tuxue.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span>                            <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>牛啊<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>牛啊<span class="token punctuation">"</span></span> <span class="token attr-name">referrerpolicy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no-referrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vemoji<span class="token punctuation">"</span></span>                                <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../medias/emoji_img/niua.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>狗头<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>狗头<span class="token punctuation">"</span></span>                                <span class="token attr-name">referrerpolicy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no-referrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vemoji<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../medias/emoji_img/goutou1.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span>                            <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ok<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ok<span class="token punctuation">"</span></span> <span class="token attr-name">referrerpolicy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no-referrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vemoji<span class="token punctuation">"</span></span>                                <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../medias/emoji_img/ok.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>滑稽<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>滑稽<span class="token punctuation">"</span></span>                                <span class="token attr-name">referrerpolicy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no-referrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vemoji<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../medias/emoji_img/huaji.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span>                            <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>打咩<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>打咩<span class="token punctuation">"</span></span> <span class="token attr-name">referrerpolicy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no-referrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vemoji<span class="token punctuation">"</span></span>                                <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../medias/emoji_img/dame.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>送花<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>送花<span class="token punctuation">"</span></span>                                <span class="token attr-name">referrerpolicy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no-referrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vemoji<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../medias/emoji_img/songhua.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span>                            <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>加班<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>加班<span class="token punctuation">"</span></span> <span class="token attr-name">referrerpolicy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no-referrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vemoji<span class="token punctuation">"</span></span>                                <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../medias/emoji_img/jiaban.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>爆炸<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>爆炸<span class="token punctuation">"</span></span>                                <span class="token attr-name">referrerpolicy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no-referrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vemoji<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../medias/emoji_img/baozha.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span>                            <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>爱了<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>爱了<span class="token punctuation">"</span></span> <span class="token attr-name">referrerpolicy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no-referrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vemoji<span class="token punctuation">"</span></span>                                <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../medias/emoji_img/aile.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>危<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>危<span class="token punctuation">"</span></span>                                <span class="token attr-name">referrerpolicy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no-referrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vemoji<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../medias/emoji_img/wei.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span>                            <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>小丑<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>小丑<span class="token punctuation">"</span></span> <span class="token attr-name">referrerpolicy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no-referrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vemoji<span class="token punctuation">"</span></span>                                <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../medias/emoji_img/xiaochou.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>猪头<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>猪头<span class="token punctuation">"</span></span>                                <span class="token attr-name">referrerpolicy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no-referrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vemoji<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../medias/emoji_img/zhutou.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span>                            <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>皱眉<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>皱眉<span class="token punctuation">"</span></span> <span class="token attr-name">referrerpolicy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no-referrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vemoji<span class="token punctuation">"</span></span>                                <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../medias/emoji_img/zhoumei.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>出家人<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>出家人<span class="token punctuation">"</span></span>                                <span class="token attr-name">referrerpolicy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no-referrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vemoji<span class="token punctuation">"</span></span>                                <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../medias/emoji_img/chujiaren.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>土匪<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>土匪<span class="token punctuation">"</span></span>                                <span class="token attr-name">referrerpolicy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no-referrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vemoji<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../medias/emoji_img/tufei.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span>                            <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>拜托拜托<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>拜托拜托<span class="token punctuation">"</span></span> <span class="token attr-name">referrerpolicy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no-referrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vemoji<span class="token punctuation">"</span></span>                                <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../medias/emoji_img/baituo.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>送福<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>送福<span class="token punctuation">"</span></span>                                <span class="token attr-name">referrerpolicy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no-referrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vemoji<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../medias/emoji_img/songfu.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span>                            <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>红包拿来<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>红包拿来<span class="token punctuation">"</span></span> <span class="token attr-name">referrerpolicy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no-referrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vemoji<span class="token punctuation">"</span></span>                                <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../medias/emoji_img/hongbao.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>战术喝水<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>战术喝水<span class="token punctuation">"</span></span>                                <span class="token attr-name">referrerpolicy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no-referrer<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vemoji<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../medias/emoji_img/drink.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vinput vpreview<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vmark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vcount<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>共计 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vnum<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>评论<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vload-top text-center<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vspinner<span class="token punctuation">"</span></span>                    <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span>30px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span>30px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vcards<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vload-bottom text-center<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vspinner<span class="token punctuation">"</span></span>                    <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span>30px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span>30px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vempty<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>来发评论吧~<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vpage txt-center<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vmore vbtn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>加载更多...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vpower txt-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Powered By <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://valine.js.org<span class="token punctuation">"</span></span>                    <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Valine<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>v1.4.14<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- &lt;script src="libs/valine/av-min.js">&lt;/script>    &lt;script src="libs/valine/Valine.min.js">&lt;/script> --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>jsDelivr<span class="token punctuation">.</span>url </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span><span class="token string">'/libs/valine/av-min.js'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>jsDelivr<span class="token punctuation">.</span>url </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span>libs<span class="token punctuation">.</span>js<span class="token punctuation">.</span>valine<span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">new</span> <span class="token class-name">Valine</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">'#vcomments'</span><span class="token punctuation">,</span>            <span class="token literal-property property">enableQQ</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token literal-property property">boolean</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token literal-property property">appId</span><span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>appId </span><span class="token delimiter punctuation">%></span></span>'</span><span class="token punctuation">,</span>            <span class="token literal-property property">appKey</span><span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>appKey </span><span class="token delimiter punctuation">%></span></span>'</span><span class="token punctuation">,</span>            <span class="token literal-property property">notify</span><span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>notify </span><span class="token delimiter punctuation">%></span></span>'</span> <span class="token operator">===</span> <span class="token string">'true'</span><span class="token punctuation">,</span>            <span class="token literal-property property">verify</span><span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>verify </span><span class="token delimiter punctuation">%></span></span>'</span> <span class="token operator">===</span> <span class="token string">'true'</span><span class="token punctuation">,</span>            <span class="token literal-property property">visitor</span><span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>visitor </span><span class="token delimiter punctuation">%></span></span>'</span> <span class="token operator">===</span> <span class="token string">'true'</span><span class="token punctuation">,</span>            <span class="token comment">// avatar: '<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>avatar </span><span class="token delimiter punctuation">%></span></span>',</span>            <span class="token literal-property property">avatar</span><span class="token operator">:</span> <span class="token string">'/medias/robot.png'</span><span class="token punctuation">,</span>            <span class="token literal-property property">pageSize</span><span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>pageSize </span><span class="token delimiter punctuation">%></span></span>'</span><span class="token punctuation">,</span>            <span class="token literal-property property">lang</span><span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>language <span class="token operator">==</span> <span class="token string">"zh-CN"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  </span><span class="token delimiter punctuation">%></span></span>zh-cn<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>en<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>'</span><span class="token punctuation">,</span>            <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>placeholder </span><span class="token delimiter punctuation">%></span></span>'</span><span class="token punctuation">,</span>            <span class="token literal-property property">adminEmailMd5</span><span class="token operator">:</span> <span class="token string">'<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>adminEmailMd5 </span><span class="token delimiter punctuation">%></span></span>'</span><span class="token punctuation">,</span>            <span class="token literal-property property">master</span><span class="token operator">:</span> <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token operator">-</span> <span class="token string">'["'</span> <span class="token operator">+</span> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>master<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'", "'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'"]'</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">,</span>            <span class="token literal-property property">friends</span><span class="token operator">:</span> <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token operator">-</span> <span class="token string">'["'</span> <span class="token operator">+</span> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>friends<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'", "'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'"]'</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">,</span>            <span class="token literal-property property">tagMeta</span><span class="token operator">:</span> <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token operator">-</span> <span class="token string">'["'</span> <span class="token operator">+</span> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>tagMeta<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'", "'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'"]'</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">,</span>            <span class="token comment">// tagMeta: ["想吃🍦的博主", "小伙伴🐖", "访 客"],</span>            <span class="token comment">// tagMeta: '<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>tagMeta </span><span class="token delimiter punctuation">%></span></span>',</span>            <span class="token comment">// master: '<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>master </span><span class="token delimiter punctuation">%></span></span>',</span>            <span class="token comment">// friends: '<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>friends </span><span class="token delimiter punctuation">%></span></span>',</span>            <span class="token literal-property property">emoticonUrl</span><span class="token operator">:</span> <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token operator">-</span> <span class="token string">'["'</span> <span class="token operator">+</span> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>emoticonUrl<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'", "'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'"]'</span> </span><span class="token delimiter punctuation">%></span></span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 直达评论 --></span>    <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/back-comment.ejs'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>    <span class="token comment">&lt;!-- 评论机器人验证 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.roboter'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.robot-check-text'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">'·&amp;nbsp;&amp;nbsp;&amp;nbsp;验证成功！'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.roboter:hover .robot-check-text::before'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'border'</span><span class="token punctuation">,</span> <span class="token string">'2px solid #26a69a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.robotxian'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background'</span><span class="token punctuation">,</span> <span class="token string">'#26a69a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.robotimg'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'src'</span><span class="token punctuation">,</span> <span class="token string">'/medias/robot1.png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.robot-check-text'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'color'</span><span class="token punctuation">,</span> <span class="token string">'#26a69a'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.robot-check'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>checked<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.vsubmit'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'disabled'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'title'</span><span class="token punctuation">,</span> <span class="token string">'评论前勾选机器人验证按钮'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.robot-check'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.vsubmit'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'disabled'</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'title'</span><span class="token punctuation">,</span> <span class="token string">'欢迎畅所欲言'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 留言板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sakuriro美化</title>
      <link href="/posts/d197.html"/>
      <url>/posts/d197.html</url>
      
        <content type="html"><![CDATA[<h1 id="Sakuriro美化"><a href="#Sakuriro美化" class="headerlink" title="Sakuriro美化"></a>Sakuriro美化</h1>]]></content>
      
      
      <categories>
          
          <category> wordpress </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Sakuriro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杂谈</title>
      <link href="/posts/3026.html"/>
      <url>/posts/3026.html</url>
      
        <content type="html"><![CDATA[<h2 id="min-css-和-css"><a href="#min-css-和-css" class="headerlink" title="min.css 和.css"></a>min.css 和.css</h2><p>两者仅仅是文件大小、有无注释、格式美化（可读性）上的区别，使用上（作用效果）并没有什么区别。压缩和未压缩的区别，.min 是压缩版的（去掉多余的注释、空格等）文件较小，易于加载，另外的就是未压缩的了文件稍大，保留完整的注释、可读性强的标准格式化文件。一般生产环境用.min.css（加载速度快，提升体验） , 开发试验阶段用.css（便于理解）。</p><p>参考自 <a href="https://www.cnblogs.com/Renyi-Fan/p/12163246.html">min.css 和普通 css 有什么不同 – 范仁义 – 博客园 (cnblogs.com)</a></p><h2 id="关于修改样式"><a href="#关于修改样式" class="headerlink" title="关于修改样式"></a>关于修改样式</h2><p>直接在主题编辑器中做出的的修改是无法在更新时保留的，可以在主题 – 自定义 – 额外 CSS 进行你想要的修改，只需对你想要修改的某个元素进行修改就行了，在这里修改的样式在更新时是可以保留的。而且通过内置的 css 编辑器是可以进行效果实时预览的。</p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><h3 id="多图像同行显示居中"><a href="#多图像同行显示居中" class="headerlink" title="多图像同行显示居中"></a>多图像同行显示居中</h3><pre class="line-numbers language-none"><code class="language-none">&lt;p class&#x3D;&quot;has-text-align-center&quot;&gt;&lt;img width&#x3D;&quot;30%&quot; src&#x3D;&quot;https:&#x2F;&#x2F;img.crowya.com&#x2F;media&#x2F;cut_2020041000193919SS.png?x-oss-process&#x3D;style&#x2F;compress&quot;&gt;&lt;img width&#x3D;&quot;30%&quot; src&#x3D;&quot;https:&#x2F;&#x2F;img.crowya.com&#x2F;media&#x2F;cut_2020041000413941SS.png?x-oss-process&#x3D;style&#x2F;compress&quot;&gt;&lt;img width&#x3D;&quot;30%&quot; src&#x3D;&quot;https:&#x2F;&#x2F;img.crowya.com&#x2F;media&#x2F;cut_2020041000424042SS.png?x-oss-process&#x3D;style&#x2F;compress&quot;&gt;&lt;p&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="新窗口打开"><a href="#新窗口打开" class="headerlink" title="新窗口打开"></a>新窗口打开</h3><pre class="line-numbers language-none"><code class="language-none">&lt;a href&#x3D;&quot;链接的页面&quot; target&#x3D;&quot;_blank&quot;&gt;新窗口打开&lt;&#x2F;a&gt;&lt;a href&#x3D;&quot;链接的页面&quot; target&#x3D;&quot;_parent&quot;&gt;原窗口打开&lt;&#x2F;a&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="纯文本粘贴"><a href="#纯文本粘贴" class="headerlink" title="纯文本粘贴"></a>纯文本粘贴</h3><p>众所周知粘贴是 <code>Ctrl</code> + <code>V</code>，但是这种粘贴是带格式的。如果想要清除格式，也就是纯文本粘贴，只需按下 <code>Ctrl</code> + <code>Shift</code> + <code>V</code> 。</p><h3 id="测试域名解析是否生效"><a href="#测试域名解析是否生效" class="headerlink" title="测试域名解析是否生效"></a>测试域名解析是否生效</h3><p>Windows 命令窗口中输入 <code>nslookup 域名</code>，例如</p><pre class="line-numbers language-none"><code class="language-none">nslookup crowya.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://crowya.com/803">遇到的一些 CSS – 鸦鸦的巢穴 (crowya.com)</a></p><p><a href="https://crowya.com/293">计算机技巧 &amp; 快捷键 | 相见恨晚 – 鸦鸦的巢穴 (crowya.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> wordpress </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wordpress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设置页面模版</title>
      <link href="/posts/8e30.html"/>
      <url>/posts/8e30.html</url>
      
        <content type="html"><![CDATA[<h2 id="说说"><a href="#说说" class="headerlink" title="说说"></a>说说</h2><ol><li>仪表盘左侧菜单栏里选择页面，然后新建一个页面 “说说”</li><li>点击快速编辑</li><li>选择页面模板为 “说说”</li></ol><p><img src="http://47.108.179.73/wp-content/uploads/2024/03/image-5-1024x329.png" alt="img"></p><h2 id="留言板"><a href="#留言板" class="headerlink" title="留言板"></a>留言板</h2><p>同上，新建一个页面 “留言板”，在快速编辑中将其页面模板设为 “留言板”，并开启这个页面的评论功能，即可让这个页面成为留言板。</p><blockquote><p>注意：一定要打开评论功能！</p></blockquote><h2 id="时间轴"><a href="#时间轴" class="headerlink" title="时间轴"></a>时间轴</h2><p>同理，新建一个页面，将其页面模板设为 “归档时间轴”，即可让这个页面成为归档时间轴。</p>]]></content>
      
      
      <categories>
          
          <category> wordpress </category>
          
      </categories>
      
      
        <tags>
            
            <tag> wordpress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>看板娘合并音乐播放器</title>
      <link href="/posts/c149.html"/>
      <url>/posts/c149.html</url>
      
        <content type="html"><![CDATA[<h1 id="看板娘合并音乐播放器"><a href="#看板娘合并音乐播放器" class="headerlink" title="看板娘合并音乐播放器"></a>看板娘合并音乐播放器</h1><p>相信不少小伙伴的博客都集成了音乐播放器和 Live2D 看板娘，但是会出现一个问题，看板娘和音乐播放器都在左下角，相互遮盖且很占地方，一点也不美观。所以如果可以把音乐播放器集成到看板娘里，既美观又增加了看板娘的功能。</p><p>然而一介小白只是心有余而力不足，幸运的是我偶然发现了这位大佬：<a href="https://crowya.com/">鸦鸦</a></p><blockquote><p>wordpress 插入跳转链接</p><p>写出跳转链接的文本，然后选中文本，点击上方的链接，填写链接的网址即可</p></blockquote><p><img src="http://47.108.179.73/wp-content/uploads/2024/03/image-1.png" alt="img"></p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>具体做法就是在宠物的工具栏添加一个 <code>&lt;span class=&quot;fa fa-lg fa-music&quot;&gt;&lt;/span&gt;</code> 音乐图标，控制音乐的播放和暂停，隐藏其他累赘的界面。这可以通过 APlayer 提供的 <a href="https://aplayer.js.org/#/zh-Hans/?id=api">API 接口</a>做到。切换播放 &#x2F; 暂停的函数为 <code>xxx.toggle();</code></p><p>但是为了功能的完整性我在宠物的右键菜单里保留了显示 &#x2F; 隐藏音乐播放器界面的功能按钮。这可以通过增加 &#x2F; 删除类名做到。相关函数为 <code>xxx.addClass();</code> 和 <code>xxx.removeClass();</code></p><p>虽然隐藏了播放器界面，但是显示歌词还是不错的。因此需要为播放 &#x2F; 暂停事件添加<a href="https://aplayer.js.org/#/zh-Hans/?id=%E4%BA%8B%E4%BB%B6%E7%BB%91%E5%AE%9A">事件绑定</a>。当音乐开始播放时自动显示歌词，当音乐停止时自动隐藏歌词。好在 APlayer 依然提供了此编程接口。相关函数为 <code>xxx.on(event, function);</code></p><p>页尾脚本一共需要添加这些东西：</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token comment">&lt;!--宠物播放器--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">const</span> live2d_path <span class="token operator">=</span> <span class="token string">"https://cdn.jsdelivr.net/gh/crowya/live2d/live2d/"</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meting-js</span> <span class="token attr-name">server</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tencent<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>playlist<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>8559460487<span class="token punctuation">"</span></span> <span class="token attr-name">theme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#339981<span class="token punctuation">"</span></span> <span class="token attr-name">fixed</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span> <span class="token attr-name">preload</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span> <span class="token attr-name">autoplay</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span> <span class="token attr-name">loop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>all<span class="token punctuation">"</span></span> <span class="token attr-name">order</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>random<span class="token punctuation">"</span></span> <span class="token attr-name">volume</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0.3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>meting-js</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token comment">//封装异步加载资源的方法</span><span class="token keyword">function</span> <span class="token function">loadExternalResource</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> type</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token keyword">let</span> tag<span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">"css"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>tag <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"link"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>tag<span class="token punctuation">.</span>rel <span class="token operator">=</span> <span class="token string">"stylesheet"</span><span class="token punctuation">;</span>tag<span class="token punctuation">.</span>href <span class="token operator">=</span> url<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">"js"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>tag <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"script"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>tag<span class="token punctuation">.</span>src <span class="token operator">=</span> url<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>tag<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>tag<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>tag<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">reject</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>document<span class="token punctuation">.</span>head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>screen<span class="token punctuation">.</span>width <span class="token operator">>=</span> <span class="token number">768</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">loadExternalResource</span><span class="token punctuation">(</span><span class="token string">"https://cdn.jsdelivr.net/gh/crowya/live2d/live2d/waifu.min.css"</span><span class="token punctuation">,</span> <span class="token string">"css"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">loadExternalResource</span><span class="token punctuation">(</span><span class="token string">"https://cdn.jsdelivr.net/gh/crowya/live2d/live2d/live2d.min.js"</span><span class="token punctuation">,</span> <span class="token string">"js"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">loadExternalResource</span><span class="token punctuation">(</span><span class="token string">"https://cdn.jsdelivr.net/gh/crowya/live2d/live2d/waifu-tips.min.js"</span><span class="token punctuation">,</span> <span class="token string">"js"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">loadExternalResource</span><span class="token punctuation">(</span><span class="token string">"https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css"</span><span class="token punctuation">,</span> <span class="token string">"css"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">loadExternalResource</span><span class="token punctuation">(</span><span class="token string">"https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js"</span><span class="token punctuation">,</span> <span class="token string">"js"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token function">loadExternalResource</span><span class="token punctuation">(</span><span class="token string">"https://cdn.jsdelivr.net/npm/meting@2.0.1/dist/Meting.min.js"</span><span class="token punctuation">,</span> <span class="token string">"js"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ap <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'meting-js'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"aplayer"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">aplayer</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        ap <span class="token operator">=</span> aplayer<span class="token punctuation">;</span>        <span class="token function">ap_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">initWidget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如需改为自己的歌单，请修改 <code>&lt;meting-js&gt;</code> 标签内的<a href="https://github.com/metowolf/MetingJS#option">参数</a>。</p><p>如需修改秘密通道或对话文本，请自定义 waifu-tips.json，详情见<a href="https://github.com/crowya/live2d">鸦鸦的项目</a>。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://crowya.com/live2d-pet-modification/">Live2D 宠物功能修改 | 音乐播放器 + 右键秘密通道 – 鸦鸦的巢穴 (crowya.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> wordpress </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 看板娘 </tag>
            
            <tag> 音乐播放器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博览众长</title>
      <link href="/posts/c42.html"/>
      <url>/posts/c42.html</url>
      
        <content type="html"><![CDATA[<h1 id="博览众长"><a href="#博览众长" class="headerlink" title="博览众长"></a>博览众长</h1><p>为了折腾我的hexo博客，我访问过诸多大佬的博客小站，博览众长，希望集他山之玉，打造出心仪的博客网站。然没有最好，只有更好，只能罗列众多大佬博客中我比较喜欢的部分，希望给大家一些参考和帮助。</p><h2 id="他山之玉"><a href="#他山之玉" class="headerlink" title="他山之玉"></a>他山之玉</h2><h3 id="HaoQi"><a href="#HaoQi" class="headerlink" title="HaoQi"></a><a href="https://houhaoqi.gitee.io/">HaoQi</a></h3><ul><li><a href="https://houhaoqi.gitee.io/List/galleries/">相册</a>，fancybox</li><li><a href="https://houhaoqi.gitee.io/contact/">留言板</a></li><li><a href="https://houhaoqi.gitee.io/tools/">网站导航</a>，和land and sea一样的导航</li></ul><h3 id="Land-and-Sea"><a href="#Land-and-Sea" class="headerlink" title="Land and Sea"></a><a href="https://showcoding.github.io/">Land and Sea</a></h3><ul><li><a href="https://showcoding.github.io/census/">统计</a></li><li><a href="https://showcoding.github.io/contact/">留言板</a></li><li><a href="https://showcoding.github.io/tools/">百宝箱</a></li></ul><h3 id="itsNeko"><a href="#itsNeko" class="headerlink" title="itsNeko"></a><a href="https://blog.dyfa.top/">itsNeko</a></h3><ul><li><a href="">留言板</a></li><li>[about](<a href="https://blog.dyfa.top/about/">关于 | itsNeko「生活日志」 (dyfa.top)</a>)</li><li><a href="">随笔模版</a></li><li>[打赏记录](<a href="https://blog.dyfa.top/donate/">🐈 博客打赏记录 | itsNeko「生活日志」 (dyfa.top)</a>)</li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 他山之石 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo博客部署到阿里云服务器</title>
      <link href="/posts/9e7d.html"/>
      <url>/posts/9e7d.html</url>
      
        <content type="html"><![CDATA[<h1 id="hexo博客部署到阿里云"><a href="#hexo博客部署到阿里云" class="headerlink" title="hexo博客部署到阿里云"></a>hexo博客部署到阿里云</h1><p>大部分人使用Hexo搭建个人博客都会部署到一些免费的代码托管平台上，但这些免费的平台总是差强人意，比如国外的GitHub平台虽然完全免费，但在国内访问加载速度非常慢，又或者是国内的码云平台免费版有许多功能被阉割掉了，比如不能自定义域名，不能每次自动刷新提交的代码，需要到码云平台上手动刷新，如此一来非常繁琐。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://showcoding.github.io/posts/19d2a4e6.html#toc-heading-9">阿里云服务器部署Hexo博客 | Land and Sea (showcoding.github.io)</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阿里云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mobaXterm免费升级到专业版</title>
      <link href="/posts/ab13.html"/>
      <url>/posts/ab13.html</url>
      
        <content type="html"><![CDATA[<h1 id="Xterm升级至专业版"><a href="#Xterm升级至专业版" class="headerlink" title="Xterm升级至专业版"></a>Xterm升级至专业版</h1><ol><li>首先去官网下载自己需要的版本，<a href="https://mobaxterm.mobatek.net/">点击跳转</a></li><li>打开<a href="https://inused.github.io/pages/file/tool/MobaXtermKeygen.html">MobaXterm Keygen (inused.github.io)</a></li><li>填写用户名和版本号，用户名可以随意，版本号和自己下载的Xterm版本号一致</li></ol><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202404292136311.png" alt="Xterm_license" style="zoom: 67%;" /><ol start="4"><li>将生成的<code>Custom.mxtpro</code>文件放入<code>MobaXterm.exe</code>所在的目录</li></ol><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202404292136232.png" alt="激活"></p><ol start="5"><li>重启MobaXterm，点击上方help→About MobaXterm</li></ol><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202404292137148.png" alt="激活成功" style="zoom:80%;" /><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/weixin_39540280/article/details/122163223">MobaXterm升级为专业版_mobaxterm个人版升级为企业版-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Xterm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修复右键没有管理选项</title>
      <link href="/posts/5362.html"/>
      <url>/posts/5362.html</url>
      
        <content type="html"><![CDATA[<h1 id="修复右键没有管理选项"><a href="#修复右键没有管理选项" class="headerlink" title="修复右键没有管理选项"></a>修复右键没有管理选项</h1>]]></content>
      
      
      <categories>
          
          <category> win使用 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/posts/0.html"/>
      <url>/posts/0.html</url>
      
        <content type="html"><![CDATA[<h1 id="添加番剧列表"><a href="#添加番剧列表" class="headerlink" title="添加番剧列表"></a>添加番剧列表</h1><p>具体效果请看：<a href="https://blog.ukenn.top/index.php/anime/">番剧列表</a></p><h3 id="下载开源项目"><a href="#下载开源项目" class="headerlink" title="下载开源项目"></a>下载开源项目</h3><p><a href="https://github.com/Ukenn2112/bilibili">项目地址</a></p><p>解压完后，请将<code>bilibili-master文件夹</code><strong>里面的bilibili文件夹</strong>和<code>page-bilibili.php</code>文件放到主题根目录下</p><p>打开<code>bilibili</code>文件夹重命名里面文件后缀为<code>bilibiliAnime.php</code></p><p>然后返回修改<code>page-bilibili.php</code></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.ukenn.top/sakura5/">Sakura主题美化系列（五）添加BiliBili番剧列表 – Ukenn Blog</a></p>]]></content>
      
      
      <categories>
          
          <category> wordpress </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 番剧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim使用</title>
      <link href="/posts/84b5.html"/>
      <url>/posts/84b5.html</url>
      
        <content type="html"><![CDATA[<h1 id="vim使用"><a href="#vim使用" class="headerlink" title="vim使用"></a>vim使用</h1><p>Linux基础知识及Vim编辑器扩展：</p><ol><li><p>文件系统基础：</p><ul><li><code>/</code> 根目录是文件系统的顶层，<code>.</code> 表示当前目录，<code>..</code> 表示上一级目录。</li><li><code>pwd</code> 命令用于显示当前工作目录，<code>ls</code> 命令列出目录内容。</li><li><code>ls -l</code> 显示详细信息，包括权限、链接数、所有者、组、大小、修改时间和文件名。</li><li><code>ls -a</code> 显示包括隐藏文件在内的所有文件列表。</li><li>使用 Tab 键进行命令和路径的自动补全，提高工作效率。</li></ul></li><li><p>文件权限管理：</p><ul><li>使用 <code>chmod</code> 命令更改文件权限，如 <code>chmod 755 file.txt</code>。</li><li>文件权限表示法如 <code>rwxr-xr--</code>，其中第一个字符表示文件类型，后面三组表示权限。</li><li>可以使用符号模式（如 <code>u+x</code> 表示给所有者添加执行权限）或绝对模式（如 <code>755</code> 表示所有者可读、写、执行，组和其他用户可读和执行）设置权限。</li></ul></li><li><p>文件操作：</p><ul><li>使用 <code>mkdir</code> 创建新目录，<code>cd</code> 切换工作目录，<code>touch</code> 创建新文件或更新访问&#x2F;修改时间。</li><li>使用 <code>cp</code> 复制文件，<code>mv</code> 移动或重命名文件，<code>rm</code> 删除文件，<code>rm -r</code> 删除目录及其内容。</li><li><code>cp -r</code> 递归复制目录及其内容，<code>mv</code> 可用于剪切文件和目录。</li></ul></li><li><p>文件搜索：</p><ul><li><code>find</code> 在文件系统中搜索文件，如 <code>find / -name filename.txt</code>。</li><li><code>grep</code> 在文件中搜索特定模式，如 <code>grep &quot;pattern&quot; file.txt</code>。</li><li><code>find</code> 和 <code>grep</code> 可以结合使用，如 <code>find /etc -type f -exec grep &quot;keyword&quot; &#123;&#125; +</code> 在 <code>/etc</code> 目录下搜索包含关键词的文件。</li></ul></li><li><p>系统信息查看：</p><ul><li>使用 <code>uname</code> 查看系统信息，<code>df</code> 显示磁盘空间利用情况，<code>du</code> 显示文件&#x2F;目录的磁盘使用情况。</li><li><code>top</code> 命令显示系统资源使用情况及进程信息，<code>free</code> 显示内存使用情况。</li></ul></li><li><p>Vim编辑器使用：</p><ul><li><code>gedit</code> 是图形界面文本编辑器，适合初学者。</li><li><code>vi</code> 或 <code>vim</code> 是强大的文本编辑器，具有命令行模式、插入模式和底行模式。</li><li>在命令行模式下执行复制（yy）、剪切&#x2F;删除（dd）、粘贴（p）、撤销（u）等操作。</li><li>进入插入模式后进行编辑，按 Esc 返回命令行模式。</li><li>保存并退出文件，使用 <code>:wq</code> 或 <code>:q!</code>，通过 <code>shift + :</code> 进入底行模式执行更多命令。</li></ul></li><li><p>Vim高级技巧：</p><ul><li>使用 <code>m</code> 在文档中设置标记，并使用 <code>&#39;</code> 跳转到标记处。</li><li>使用 <code>Ctrl + o</code> 和 <code>Ctrl + i</code> 前进和后退跳转历史记录。</li><li>分割窗口使用 <code>:split</code> 和 <code>:vsplit</code>，切换窗口使用 <code>Ctrl + w</code>。</li><li>录制和回放宏使用 <code>q</code> 开始录制，<code>@</code> 执行录制的宏。</li><li>使用插件管理器管理插件，配置文件位于 <code>~/.vimrc</code>。</li><li>Visual 模式允许对所选文本进行操作，可进入字符级别、行级别和块级别。</li><li>撤销树可以使用 <code>:undo</code> 和 <code>:redo</code> 进行撤销和重做操作。</li><li>语法折叠可以使用 <code>zf</code> 折叠代码块，<code>zo</code> 展开折叠。</li></ul></li><li><p>Vim插件推荐：</p><ul><li><code>Vundle</code>、<code>Pathogen</code>、<code>vim-plug</code> 是常用的插件管理器。</li><li>常用插件包括代码补全（如 <code>YouCompleteMe</code>）、语法高亮（如 <code>vim-javascript</code>）、文件浏览器（如 <code>NERDTree</code>）等。</li><li>插件可以通过 GitHub 或 Vim 脚本网站安装。</li></ul></li></ol><p>以上是一些Linux基础知识，以及Vim编辑器的基本使用，有助于初学者进行入门学习和更好地理解Linux系统及其相关工具。</p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决ubuntu和windows之间的粘贴</title>
      <link href="/posts/e8c2.html"/>
      <url>/posts/e8c2.html</url>
      
        <content type="html"><![CDATA[<h1 id="解决ubuntu和win之间的粘贴"><a href="#解决ubuntu和win之间的粘贴" class="headerlink" title="解决ubuntu和win之间的粘贴"></a>解决ubuntu和win之间的粘贴</h1><p>在使用ubuntu虚拟机时，有时需要在虚拟机与windows系统之间进行文件或者字符串的复制和粘贴。比如：某个文件在主机上，但是开发时需要在虚拟机中使用，需要把这个文件导入到虚拟机中。其实这个功能通过简单的复制粘贴就可以实现。但是新安装的虚拟机往往不支持该功能，需要进行配置。</p><p>首先，执行下面的命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> autoremove open-vm-tools<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后，执行下面的命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> open-vm-tools-desktop<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>最后，重启虚拟机，就可以实现复制粘贴了。</p><p>参考链接：<a href="https://blog.csdn.net/bhniunan/article/details/104479349">如何实现ubuntu虚拟机与windows系统之间复制粘贴-CSDN博客</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>找回宝塔面板登陆账号和密码</title>
      <link href="/posts/158f.html"/>
      <url>/posts/158f.html</url>
      
        <content type="html"><![CDATA[<h1 id="找回宝塔面板登录地址、账号和密码"><a href="#找回宝塔面板登录地址、账号和密码" class="headerlink" title="找回宝塔面板登录地址、账号和密码"></a>找回宝塔面板登录地址、账号和密码</h1><p>忘记登录名和登录密码应该是大多数人都会遇到的问题，特别是遇到记性不好，而且又没有备份密码的人来说，那就是家常便饭了，站主就个记性不好的还爱设复杂密码又不备份的(可以说是又菜又爱玩了)，这几天忘记了自己的宝塔面板的登录账户和用户名，以为可以试出来，几个试了几天没试出来，简直是气煞我也😡。最后只能老老实实地取修改账户名和密码。因为站主是第一次使用宝塔面板，现在就记录一下修改密码的过程。</p><ol><li><p>首先，通过ssh的方式连接服务器（注意登录的时候以root身份登录），否则就使用<code>sudo</code> 命令以管理员身份执行命令</p></li><li><p>使用<code>bt</code>命令调出命令提示面板，root用户直接输入<code>bt</code></p><p>站主这里使用的<code>esc-user</code>登录，所以使用<code>sudo /usr/bin/bt</code></p><p>然后就会弹出以下面板</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402292214394.png" alt="image-20240229221434264"></p><ol start="3"><li>然后按照自己的需要选择命令修改即可</li></ol>]]></content>
      
      
      <categories>
          
          <category> 问题解决 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 宝塔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我当舅舅了!</title>
      <link href="/posts/2b8.html"/>
      <url>/posts/2b8.html</url>
      
        <content type="html"><![CDATA[<p>日记之我当舅舅了！</p><p>来看看我可爱的侄女：</p><p>照片</p><p>照片</p><p>视频</p><p>视频</p>]]></content>
      
      
      <categories>
          
          <category> 纪念册 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>jupyter notebook找不到新建的虚拟环境</title>
      <link href="/posts/3dac.html"/>
      <url>/posts/3dac.html</url>
      
        <content type="html"><![CDATA[<h1 id="Jupyter找不到新建的虚拟环境"><a href="#Jupyter找不到新建的虚拟环境" class="headerlink" title="Jupyter找不到新建的虚拟环境"></a>Jupyter找不到新建的虚拟环境</h1><p>今天做项目时，需要用到为新建的py37虚拟环境（python 3.7.16），我用的是anaconda3的一个python集成环境，自带jupyter notebook，但在我打开jupyter notebook界面后，却找不到对应的虚拟环境，原来是jupyter notebook只是通用于下载anaconda时自带的环境，其他环境要想使用必须手动下载一些库：</p><p>首先进入到自己创建的虚拟环境(pytorch是虚拟环境的名字)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">activate pytorch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在该环境下下载这些库，我查了很多博主的文章，大部分都是虚拟环境缺这两个库，下载之后就成功了。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda <span class="token function">install</span> ipykernelconda <span class="token function">install</span> nb_conda<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>打开jupyter notebook，我们就可以看到我们创建的虚拟环境pytorch了</p><p>在命令行输入：<code>jupyter notebook</code></p><p>现在就可以看到py37虚拟环境了</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/qq_39504519/article/details/108039594">解决jupyter notebook无法找到虚拟环境的问题_CSDN博客</a></p><p><a href="https://blog.csdn.net/qq_41339564/article/details/108057808">Jupyter中找不到新建的虚拟环境问题_CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> jupyter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题解决 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站备案</title>
      <link href="/posts/8c37.html"/>
      <url>/posts/8c37.html</url>
      
        <content type="html"><![CDATA[<h1 id="网站备案"><a href="#网站备案" class="headerlink" title="网站备案"></a>网站备案</h1><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://zhuanlan.zhihu.com/p/371579941">全网最详细：个人网站如何备案 - 知乎 (zhihu.com)</a></p><p><a href="https://beian.aliyun.com/">网站备案_ICP备案_备案迁移_备案-阿里云 (aliyun.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网站备案 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>域名购买</title>
      <link href="/posts/d462.html"/>
      <url>/posts/d462.html</url>
      
        <content type="html"><![CDATA[<h1 id="域名购买"><a href="#域名购买" class="headerlink" title="域名购买"></a>域名购买</h1>]]></content>
      
      
      <categories>
          
          <category> 域名 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 域名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WordPress+宝塔+阿里云+Xshell搭建博客</title>
      <link href="/posts/4c80.html"/>
      <url>/posts/4c80.html</url>
      
        <content type="html"><![CDATA[<h1 id="WordPress-宝塔-阿里云-Xshell搭建博客"><a href="#WordPress-宝塔-阿里云-Xshell搭建博客" class="headerlink" title="WordPress+宝塔+阿里云+Xshell搭建博客"></a>WordPress+宝塔+阿里云+Xshell搭建博客</h1><h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><p>已经购买了自己的云服务器</p><h2 id="Xshell"><a href="#Xshell" class="headerlink" title="Xshell"></a>Xshell</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><a href="https://blog.csdn.net/SoloVersion/article/details/123854852">XShell免费版的安装配置教程以及使用教程（超级详细、保姆级）_xshell安装教程-CSDN博客</a></p><h3 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h3><p>Xshell连接云服务器</p><h2 id="宝塔"><a href="#宝塔" class="headerlink" title="宝塔"></a>宝塔</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>宝塔面板（BT Panel）是一款基于 Linux 系统开发的免费的服务器管理面板，旨在简化服务器管理和网站运维的工作。它提供了图形化的用户界面，让用户可以通过网页浏览器轻松管理服务器、网站、数据库等各种服务。宝塔面板支持多种功能，包括但不限于：</p><ol><li><p><strong>Web 服务器管理：</strong> 支持常见的 Web 服务器软件，如 Nginx、Apache，以及一键切换、配置虚拟主机等功能。</p></li><li><p><strong>数据库管理：</strong> 支持常见的数据库，如 MySQL、MariaDB、MongoDB、Redis 等，提供数据库的创建、备份、还原等功能。</p></li><li><p><strong>FTP 服务管理：</strong> 可以管理 FTP 服务器，实现文件上传、下载等操作。</p></li><li><p><strong>DNS 服务管理：</strong> 提供域名解析服务，支持添加、删除、修改域名解析记录等功能。</p></li><li><p><strong>SSL 证书管理：</strong> 支持 Let’s Encrypt 免费 SSL 证书，实现网站的 HTTPS 加密访问。</p></li><li><p><strong>安全防护：</strong> 提供防火墙、安全加固等功能，增强服务器安全性。</p></li><li><p><strong>系统监控：</strong> 提供服务器资源使用情况的监控，包括 CPU、内存、磁盘等资源的监控。</p></li><li><p><strong>一键部署应用：</strong> 支持一键部署常见的网站程序，如 WordPress、Discuz、Typecho 等，简化网站部署流程。</p></li></ol><p>总的来说，宝塔面板为服务器管理员提供了一个方便、易用的管理平台，使他们能够更高效地管理和维护服务器，同时降低了操作的复杂度和技术门槛。</p><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">wget</span> <span class="token operator">&amp;&amp;</span> <span class="token function">wget</span> <span class="token parameter variable">-O</span> install.sh https://download.bt.cn/install/install_6.0.sh <span class="token operator">&amp;&amp;</span> <span class="token function">sh</span> install.sh ed8484bec<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="添加网站"><a href="#添加网站" class="headerlink" title="添加网站"></a>添加网站</h3><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402251952488.png" alt="创建站点"></p><h2 id="wordpress"><a href="#wordpress" class="headerlink" title="wordpress"></a>wordpress</h2><p>在宝塔中的软件商店选择wordpress，一键部署</p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402252024141.png" alt="成功！"></p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><h3 id="设置ecs-user后如何使用root用户登录"><a href="#设置ecs-user后如何使用root用户登录" class="headerlink" title="设置ecs-user后如何使用root用户登录"></a>设置ecs-user后如何使用root用户登录</h3><p>设置普通用户ecs-user作为ECS实例的登录名后，如果某些软件或应用程序可能要求使用root用户权限来运行，此时需要切换到root用户登录以满足软件运行的要求。您可以通过控制台或者登录ECS实例内部为root用户设置密码，设置后就可以使用root用户登录ECS实例。</p><h4 id="通过控制台在线重置"><a href="#通过控制台在线重置" class="headerlink" title="通过控制台在线重置"></a>通过控制台在线重置</h4><p>如果您的ECS实例支持在线重置密码，可以在线重置root的密码。</p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402251953505.png" alt="控制台重置"></p><h4 id="登录ECS实例修改"><a href="#登录ECS实例修改" class="headerlink" title="登录ECS实例修改"></a>登录ECS实例修改</h4><ol><li><p>使用ecs-user用户登录待修改的ECS实例。</p><p>具体操作，请参见<a href="https://help.aliyun.com/zh/ecs/user-guide/connect-to-a-linux-instance-by-using-a-password-or-key">通过密码或密钥认证登录Linux实例</a>。</p><p><strong>重要</strong></p><p>使用ecs-user用户作为ECS实例的登录名后，您不能直接使用root用户登录实例，而需要使用ecs-user登录名登录实例。</p></li><li><p>根据root用户不同的登录方式，为root用户设置密码或密钥对。</p><ul><li><p>root用户使用密码登录ECS实例</p><ol><li><p>运行以下命令，为root用户设置密码。运行命令后，根据命令行的返回信息设置root用户的密码。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">passwd</span> root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>配置允许root用户使用密码登录实例。</p><ol><li><p>运行以下命令，打开<code>/etc/ssh/sshd_config</code>文件。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">vi</span> /etc/ssh/sshd_config<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>在<code>/etc/ssh/sshd_config</code>文件中找到以<code>PasswordAuthentication</code>开头的配置行，按i键进入编辑模式，并将该行内容修改为<code>PasswordAuthentication yes</code>。</p><p>文件内容修改后如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402251954377.png" alt="设置成功"></p><blockquote><p>如果<code>PasswordAuthentication</code>的配置默认为<code>yes</code>，则您无需再修改文件内容。</p></blockquote></li><li><p>运行以下命令，重启SSH服务，使配置生效。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> systemctl restart sshd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>后续您可以使用root用户与密码信息远程登录ECS实例。</p></li></ol></li></ol></li><li><p>root用户使用密钥对登录ECS实例</p></li></ul></li></ol><p>将密钥对的公钥配置信息保存到<code>/root/.ssh/authorized_keys</code>配置文件中，即可使用root用户与密钥对信息远程登录ECS实例。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://www.bilibili.com/video/BV1rU4y1J785/">鱼皮：手把手带你从0搭建个人网站1</a></li><li><a href="https://www.bilibili.com/video/BV14q4y1R7XM/">鱼皮：手把手带你从0搭建个人网站2</a></li><li><a href="https://help.aliyun.com/zh/ecs/user-guide/manage-the-username-used-to-log-on-to-an-ecs-instance?spm=a2c4g.11186623.0.0.51cc48b4xoTK22#e647d8f17fwpj">在Linux系统ECS实例中如何设置登录名为ecs-user或root_云服务器-阿里云帮助中心 (aliyun.com)</a></li><li><a href="https://developer.aliyun.com/article/1211145">阿里云服务器搭建宝塔Linux面板流程（新手教程）-阿里云开发者社区 (aliyun.com)</a></li><li><a href="https://blog.csdn.net/SoloVersion/article/details/123984445">宝塔Linux面板安装以及基本使用教程（超详细）用宝塔安装apache和直接命令按照apache的区别-CSDN博客</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> WordPress </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WordPress </tag>
            
            <tag> 宝塔 </tag>
            
            <tag> 阿里云 </tag>
            
            <tag> Xshell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决夸克网盘网页版不能下载过大文件</title>
      <link href="/posts/c6ea.html"/>
      <url>/posts/c6ea.html</url>
      
        <content type="html"><![CDATA[<h1 id="解决夸克网盘网页不能下载大文件"><a href="#解决夸克网盘网页不能下载大文件" class="headerlink" title="解决夸克网盘网页不能下载大文件"></a>解决夸克网盘网页不能下载大文件</h1><p>近年来，夸克网盘和阿里盘热度很高，所以导致现在很多资源都是通过他们分享，但是夸克网盘和百度网盘一样，网页版不能下载过大容量的文件，过大容量必须下载软件，对于很多不想下载软件的小伙伴来说，实在是麻烦又无可奈何，而且如果不开会员，下载速度也是相当的感人啊😅</p><p>但是没有什么是无所不能的网友不能解决的，总有大神会出手。所有就有了今天要介绍的这位主角——<a href="https://greasyfork.org/zh-CN/scripts/448675-%E5%A4%B8%E5%85%8B%E7%BD%91%E7%9B%98%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD">夸克网盘直链下载 (greasyfork.org)</a>，不仅完美解决了网页版不能下载大文件的问题，还能够和IDM等多线程下载工具联手打出组合技，可谓是BUFF拉满，分分钟解决你的烦恼，真是太裤辣😝</p><p>下面给出教程，请速速下载吧！</p><h2 id="油猴下载"><a href="#油猴下载" class="headerlink" title="油猴下载"></a>油猴下载</h2><p>关于油猴这一神器的介绍，我就不多说了，dddd，没用过的可自行去Bing一下。可以在你使用的浏览器里的扩展里下载。</p><h2 id="安装脚本"><a href="#安装脚本" class="headerlink" title="安装脚本"></a>安装脚本</h2><p><a href="https://greasyfork.org/zh-CN/scripts/448675-%E5%A4%B8%E5%85%8B%E7%BD%91%E7%9B%98%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD">点击下载</a>，</p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402251417789.png" alt="直链脚本"></p><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>下载前需要将资源保存到自己的网盘内，然后在网盘内进行下载</p><p><a href="https://www.niannz.com/3971.html">夸克网盘直链解析，无需客户端，网页端即可满速下载文件 (niannz.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> 问题解决 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 夸克网盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo升级</title>
      <link href="/posts/f11c.html"/>
      <url>/posts/f11c.html</url>
      
        <content type="html"><![CDATA[<h2 id="hexo升级"><a href="#hexo升级" class="headerlink" title="hexo升级"></a>hexo升级</h2><p>Hexo 的升级相对简单，您可以按照以下步骤进行更新：</p><ol><li><p>首先，确保您已经安装了必要的应用程序：</p><ul><li><strong>Git</strong></li><li><strong>Node.js</strong>（版本不低于10.13，建议使用12.0及以上版本）</li></ul></li><li><p>如果您的电脑中已经安装了上述必备程序，您可以直接前往<a href="https://hexo.io/zh-cn/docs/index.html">Hexo 安装步骤</a>。</p></li><li><p>如果您的电脑中尚未安装所需程序，请根据以下指示完成安装：</p><ul><li><p><strong>安装 Git</strong>：</p><ul><li><p>Windows：下载并安装 <a href="https://git-scm.com/download/win">Git</a>。</p></li><li><p>Mac：使用 Homebrew、MacPorts 或下载 <a href="https://git-scm.com/download/mac">安装程序</a>。</p></li><li><p>Linux (Ubuntu, Debian)：执行以下命令安装 Git：</p><pre class="line-numbers language-none"><code class="language-none">sudo apt-get install git-core<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>Linux (Fedora, Red Hat, CentOS)：执行以下命令安装 Git：</p><pre class="line-numbers language-none"><code class="language-none">sudo yum install git-core<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li></ul></li><li><p>接下来，进入您的 Hexo 博客目录，执行以下命令来更新 Hexo 及其插件版本：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 使用淘宝源的 cnpm 替换 npm</span><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> cnpm <span class="token parameter variable">--registry</span><span class="token operator">=</span>https://registry.npm.taobao.orgcnpm <span class="token function">install</span> <span class="token parameter variable">-g</span> cnpm<span class="token comment"># 清除 npm 缓存</span>cnpm cache clean <span class="token parameter variable">-f</span><span class="token comment"># 更新 package.json 中的 Hexo 及个插件版本</span>cnpm <span class="token function">install</span> <span class="token parameter variable">-g</span> npm-check<span class="token comment"># 检查之前安装的插件，查看哪些可以升级</span>npm-check<span class="token comment"># 升级系统中的插件</span>npm-check <span class="token parameter variable">-upgrade</span><span class="token comment"># 更新 Hexo 及所有插件</span>cnpm update<span class="token comment"># 确认 Hexo 已经更新</span>hexo <span class="token parameter variable">-v</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意：</p><ol><li><p>在更改 npm 源之前，请确保理解这样做可能会带来的影响。使用淘宝源的<code>cnpm</code>代替<code>npm</code>可以加快下载速度，但也可能会导致某些包的版本不一致或其他问题。请在更改之前备份项目以防万一。</p></li><li><p>在清除 npm 缓存之前，请确保您明白这样做会删除所有已下载的 npm 包。这可能会导致一些依赖重新下载，可能会花费一些时间，但通常不会造成问题。</p></li><li><p>在更新 package.json 中的 Hexo 及其插件版本之前，确保您了解您的项目所需的确切版本。有时候更新到最新版本可能会带来不兼容或者意外的问题。</p></li><li><p>使用 npm-check 来检查并升级插件是一个好主意，但请注意确保升级后的插件与您的项目兼容，并且不会破坏现有功能。</p></li><li><p>在执行 <code>cnpm update</code> 命令之前，请确保你已备份了你的项目数据，以防更新过程中出现意外。</p></li></ol></blockquote></li><li><p>升级之后，你的 Hexo 版本应该会更新到最新版本。现在您可以正常推送您的博客内容了。</p></li></ol><h2 id="切换镜像源"><a href="#切换镜像源" class="headerlink" title="切换镜像源"></a>切换镜像源</h2><p>要将 npm 的镜像源切换回默认的官方源，可以按照以下步骤操作：</p><ol><li><p>打开命令行界面（如终端或命令提示符）。</p></li><li><p>使用以下命令切换回默认的官方源：</p></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npmjs.org/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这会将 npm 的镜像源更改回默认的官方源。</p><ol start="3"><li>您可以验证一下是否已经成功切换回官方源，执行以下命令：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> config get registry<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果输出为 <code>https://registry.npmjs.org/</code>，则说明已经成功切换回默认的官方源。</p><p>通过执行以上步骤，您就可以将 npm 的镜像源从淘宝源切换回默认的官方源了。</p><h2 id="附nodejs升级"><a href="#附nodejs升级" class="headerlink" title="附nodejs升级"></a>附nodejs升级</h2><p>Node.js 是一个基于 Chrome 的 V8 JavaScript 引擎的 JavaScript 运行时环境。如果你想升级 Node.js 版本，有几种方法可以选择：</p><ol><li><strong>使用 NPM 更新 Node 版本</strong>：<ul><li>首先，清除 NPM 缓存：运行 <code>npm cache clean -f</code>。</li><li>安装 <code>n</code> 包，用于交互式地管理设备上的 Node 版本：运行 <code>npm install -g n</code>。</li><li>安装新的 Node 版本，例如最新的长期支持版本：运行 <code>n lts</code>。</li><li>如果之前安装过其他版本，可以使用 <code>n prune</code> 命令删除缓存的旧版本，只保留最新安装的版本。</li></ul></li><li><strong>使用 NVM 更新 Node 版本</strong>：<ul><li>NVM（Node Version Manager）帮助你管理 Node 版本。首先，安装 NVM。</li><li>使用 NVM 安装特定版本的 Node：运行 <code>nvm install [version]</code>，例如 <code>nvm install node</code> 安装最新版本。</li><li>卸载其他版本：运行 <code>nvm uninstall [version]</code>。</li><li>设置默认别名以指定特定版本：运行 <code>nvm alias default [version]</code>。</li></ul></li><li><strong>从 Node.js 网站下载更新的 Node 二进制文件</strong>：<ul><li>在 Node.js 下载页面上，你可以找到适用于你设备的最新和长期支持版本。</li><li>下载最新版本还会为你提供最新版本的 NPM。</li></ul></li></ol><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://cloud.tencent.com/developer/article/1918434">Hexo 升级教程-腾讯云开发者社区-腾讯云 (tencent.com)</a></li><li><a href="https://blog.csdn.net/qq_33154343/article/details/108301374">Hexo 升级教程_hexo 更新-CSDN博客</a></li><li><a href="https://hexo.io/zh-cn/docs/index.html">文档 | Hexo</a></li><li><a href="https://blog.csdn.net/qq_22713201/article/details/122486841">如何升级nodejs版本_nodejs升级-CSDN博客</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 升级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>留言页面添加弹幕</title>
      <link href="/posts/3e08.html"/>
      <url>/posts/3e08.html</url>
      
        <content type="html"><![CDATA[<h1 id="留言板添加弹幕"><a href="#留言板添加弹幕" class="headerlink" title="留言板添加弹幕"></a>留言板添加弹幕</h1><p>之前在一位佬的博客<a href="https://seayj.cn/contact/">contact | SeaYJ’s Blog</a>上看到了留言板上的弹幕功能，于是便想着复刻一个出来。根据大佬的提示，和评论区的原理是一样：利用LeanCloud存储，然后读取内容就可以了。至于弹幕的实现参考这位大佬的项目<a href="https://github.com/yaseng/jquery.barrager.js">yaseng&#x2F;jquery.barrager.js: 专业的网页弹幕插件 (github.com)</a></p><h2 id="jquery-barrager-js"><a href="#jquery-barrager-js" class="headerlink" title="jquery.barrager.js"></a>jquery.barrager.js</h2><p><code>jquery.barrager.js</code> 是一款优雅的网页弹幕插件，支持显示图片、文字以及超链接。支持速度、高度、颜色、数量等自定义。可以轻松集成到论坛、博客等网站中。</p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/demo.gif" alt="弹幕演示"></p><p>体验地址：<a href="https://yaseng.org/jquery.barrager.js/">Jquery.barrager.js 专业的网页弹幕插件 (yaseng.org)</a></p><p>实现的一般步骤：</p><ol><li><p><strong>下载 <code>jquery.barrager.js</code> 插件</strong>：</p><ul><li>首先，你需要从 <a href="https://github.com/yaseng/jquery.barrager.js/">这里</a> 下载 <code>jquery.barrager.js</code> 插件的代码。</li></ul></li><li><p><strong>将插件文件放入 Hexo 项目</strong>：</p><ul><li>将下载的 <code>jquery.barrager.js</code> 文件放入你的 Hexo 项目的合适目录，例如 <code>source/js</code>。</li></ul></li><li><p><strong>在 Hexo 主题中引入插件</strong>：</p><ul><li><p>打开你的 Hexo 主题文件（通常是 <code>_config.yml</code> 或其他配置文件）。</p></li><li><p>在合适的位置添加以下代码，以引入 </p><pre class="line-numbers language-none"><code class="language-none">jquery.barrager.js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> 插件：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># _config.yml</span><span class="token key atrule">scripts</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> js/jquery.barrager.js<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p><strong>创建弹幕容器</strong>：</p><ul><li><p>在你的 Hexo 页面中，创建一个容器用于显示弹幕。你可以在文章模板或页面模板中添加以下代码：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>barrager-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul></li><li><p><strong>编写弹幕内容</strong>：</p><ul><li><p>在你的文章或页面中，使用 JavaScript 来添加弹幕内容。例如：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token comment">// 创建弹幕对象</span>  <span class="token keyword">var</span> barrager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Barrager</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">container</span><span class="token operator">:</span> <span class="token string">'#barrager-container'</span><span class="token punctuation">,</span> <span class="token comment">// 弹幕容器的选择器</span>    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span> <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">'这是一条弹幕！'</span><span class="token punctuation">,</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">'#ff0000'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token comment">// 添加更多弹幕...</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token comment">// 其他配置项...</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 启动弹幕</span>  barrager<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p><strong>自定义弹幕样式和行为</strong>：</p><ul><li><code>jquery.barrager.js</code> 支持自定义弹幕的速度、高度、颜色等属性。你可以根据需求调整这些参数。</li></ul></li><li><p><strong>预览和调试</strong>：</p><ul><li>运行 Hexo 本地服务器，查看你的页面是否成功显示弹幕效果。</li><li>调试弹幕的样式和行为，确保满足你的需求。</li></ul></li></ol><p>记得在集成过程中遵循 Hexo 主题的相关规则和文档。祝你成功集成弹幕效果到你的 Hexo 博客！🎉</p><p>更详细的帮助，请查看<a href="https://github.com/yaseng/jquery.barrager.js/">项目文档</a> </p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/barrager.gif" alt="弹幕效果"></p><h3 id="leancloud设置"><a href="#leancloud设置" class="headerlink" title="leancloud设置"></a>leancloud设置</h3><p>添加用户</p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/%E6%B7%BB%E5%8A%A0%E7%94%A8%E6%88%B7.png" alt="添加用户"></p><p>新建<code>barrager</code>class</p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/%E5%88%9B%E5%BB%BAbarrager.png" alt="创建barrager"></p><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><ol><li><p>在css下新建<code>barrager.css</code></p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.barrage</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 70px<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> -500px<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 500px<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 99<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.barrage_box</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> .5<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">padding-right</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all .3s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.barrage_box .portrait</span> <span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 32px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 32px<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.barrage_box .portrait img</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.barrage_box div.p a</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin-right</span><span class="token punctuation">:</span> 2px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> 18px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.barrage_box div.p a:hover</span> <span class="token punctuation">&#123;</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.barrage_box .close</span> <span class="token punctuation">&#123;</span>    <span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> .1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>/medias/barrager/close.png<span class="token punctuation">)</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.barrage_box:hover .close</span> <span class="token punctuation">&#123;</span>    <span class="token property">visibility</span><span class="token punctuation">:</span> visible<span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.barrage_box .close a</span> <span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.barrage_box .close .icon-close</span> <span class="token punctuation">&#123;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> .5<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.barrage .z</span> <span class="token punctuation">&#123;</span>    <span class="token property">float</span><span class="token punctuation">:</span> left <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.barrage a</span> <span class="token punctuation">&#123;</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在js下新建<code>jquery.barrager.js</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/** *@name     jquery.barrager.js *@version  1.1 *@author   yaseng@uauc.net *@url      https://github.com/yaseng/jquery.barrager.js */</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">$</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>$<span class="token punctuation">.</span>fn<span class="token punctuation">.</span><span class="token function-variable function">barrager</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">barrage</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>barrage <span class="token operator">=</span> $<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">close</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><span class="token literal-property property">max</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span><span class="token literal-property property">speed</span><span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span><span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">'#ffffff'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> barrage <span class="token operator">||</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> time <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> barrager_id <span class="token operator">=</span> <span class="token string">'barrage_'</span> <span class="token operator">+</span> time<span class="token punctuation">;</span><span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token string">'#'</span> <span class="token operator">+</span> barrager_id<span class="token punctuation">;</span><span class="token keyword">const</span> div_barrager <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"&lt;div class='barrage' id='"</span> <span class="token operator">+</span> barrager_id <span class="token operator">+</span> <span class="token string">"'>&lt;/div>"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> this_height <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.35</span><span class="token punctuation">;</span><span class="token keyword">const</span> this_width <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">100</span><span class="token punctuation">;</span><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span>this_height <span class="token operator">/</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.5</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">*</span><span class="token punctuation">(</span>this_height <span class="token operator">/</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.5</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token operator">*</span><span class="token punctuation">(</span>this_height <span class="token operator">/</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token operator">*</span><span class="token punctuation">(</span>this_height <span class="token operator">/</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token operator">*</span><span class="token punctuation">(</span>this_height <span class="token operator">/</span> <span class="token number">5</span><span class="token punctuation">)</span>   <span class="token operator">+</span> <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.5</span><span class="token punctuation">]</span><span class="token keyword">const</span> bottom <span class="token operator">=</span>array<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>div_barrager<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"bottom"</span><span class="token punctuation">,</span> bottom <span class="token operator">+</span> <span class="token string">"px"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>div_barrager_box <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"&lt;div class='barrage_box cl'>&lt;/div>"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>div_barrager<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>barrage<span class="token punctuation">.</span>img<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>div_barrager_box<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">"&lt;a class='portrait z' href='javascript:;'>&lt;/a>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> img <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"&lt;img src='' >"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>id <span class="token operator">+</span> <span class="token string">" .barrage_box .portrait"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>img<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'src'</span><span class="token punctuation">,</span> barrage<span class="token punctuation">.</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>div_barrager_box<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">" &lt;div class='z p'>&lt;/div>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>barrage<span class="token punctuation">.</span>close<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>div_barrager_box<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">" &lt;div class='close z'>&lt;/div>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> content <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"&lt;a title='' href='' target='_blank'>&lt;/a>"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>id <span class="token operator">+</span> <span class="token string">" .barrage_box .p"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>content<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string-property property">'href'</span><span class="token operator">:</span> barrage<span class="token punctuation">.</span>href<span class="token punctuation">,</span><span class="token string-property property">'id'</span><span class="token operator">:</span> barrage<span class="token punctuation">.</span>id<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>barrage<span class="token punctuation">.</span>info<span class="token punctuation">)</span><span class="token punctuation">;</span>content<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'color'</span><span class="token punctuation">,</span> barrage<span class="token punctuation">.</span>color<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>div_barrager<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'margin-right'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">$</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">right</span><span class="token operator">:</span>this_width<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>barrage<span class="token punctuation">.</span>speed<span class="token operator">*</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">$</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>div_barrager_box<span class="token punctuation">.</span><span class="token function">mouseover</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     <span class="token function">$</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>div_barrager_box<span class="token punctuation">.</span><span class="token function">mouseout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">$</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">right</span><span class="token operator">:</span>this_width<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>barrage<span class="token punctuation">.</span>speed<span class="token operator">*</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">$</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">$</span><span class="token punctuation">(</span>id<span class="token operator">+</span><span class="token string">'.barrage .barrage_box .close'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">$</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>$<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>barrager<span class="token punctuation">.</span><span class="token function-variable function">removeAll</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.barrage'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span>jQuery<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在<code>contact.ejs</code>中找到合适的位置添加</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center-align<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>第一次建站<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>还请多多指教！<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>在评论区或弹幕留下你的jio印吧！<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>( •̀ ω •́ )✧<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>section</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>custom<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bb-section<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col-md-8 offset-md-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-inline<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>文字：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>info<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>info<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>发送一条友善的弹幕<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>href<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>链接：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>href<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>href<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>弹幕链接，例如：https://loyeh.cn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>speed<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>速度：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-control<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>speed<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>speed<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>5~20<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>20<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form-group btn-group<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>send<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>留言<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>clear<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">clear_barrage</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>清除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>section</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在<code>contact.ejs</code>末尾加入，填入自己的<code>appId</code>和<code>appKey</code>（在LeanCloud中查找）</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">function</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> e <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"input[name=info]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> <span class="token string">""</span> <span class="token operator">===</span> e <span class="token operator">?</span> <span class="token string">"hello world"</span> <span class="token operator">:</span> e<span class="token punctuation">,</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"input[name=href]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">,</span> a <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> <span class="token string">""</span> <span class="token operator">===</span> n <span class="token operator">?</span> <span class="token string">"https://lo-y-eh.github.io/404"</span> <span class="token operator">:</span> n<span class="token punctuation">,</span>                <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"input[name=speed]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">(</span><span class="token number">20</span> <span class="token operator">&lt;</span> a <span class="token operator">||</span> a <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>a <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> r <span class="token operator">=</span> <span class="token constant">AV</span><span class="token punctuation">.</span>Object<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token string">"barrager"</span><span class="token punctuation">)</span>            <span class="token punctuation">,</span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">r</span><span class="token punctuation">;</span>        t<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"href"</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">,</span>            t<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"info"</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">,</span>            t<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"speed"</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">,</span>            t<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">" input[ name='info' ] "</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">" input[ name='href' ] "</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">" input[ name='speed' ] "</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">clear_barrage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        $<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>barrager<span class="token punctuation">.</span><span class="token function">removeAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token constant">AV</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>         <span class="token literal-property property">appId</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>         <span class="token literal-property property">appKey</span><span class="token operator">:</span> <span class="token string">""</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">do_barrager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">let</span> lists <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">const</span> query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AV<span class="token punctuation">.</span>Query</span><span class="token punctuation">(</span><span class="token string">"barrager"</span><span class="token punctuation">)</span>                    <span class="token punctuation">,</span> barrager <span class="token operator">=</span> <span class="token keyword">await</span> query<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                        lists <span class="token operator">=</span> e                    <span class="token punctuation">&#125;</span>                    <span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">let</span> length <span class="token operator">=</span> lists<span class="token punctuation">.</span>length                    <span class="token punctuation">,</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                <span class="token keyword">const</span> timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> length<span class="token punctuation">)</span>                        <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">,</span>                            <span class="token function">do_barrager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">let</span> obj <span class="token operator">=</span> lists<span class="token punctuation">[</span>index<span class="token punctuation">]</span>                            <span class="token punctuation">,</span> jsonObject <span class="token operator">=</span> <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">"("</span> <span class="token operator">+</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">")"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">barrager</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                            <span class="token literal-property property">img</span><span class="token operator">:</span> <span class="token string">"/medias/barrager/"</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">".png"</span><span class="token punctuation">,</span>                            <span class="token literal-property property">href</span><span class="token operator">:</span> jsonObject<span class="token punctuation">.</span>href<span class="token punctuation">,</span>                            <span class="token literal-property property">info</span><span class="token operator">:</span> jsonObject<span class="token punctuation">.</span>info<span class="token punctuation">,</span>                            <span class="token literal-property property">speed</span><span class="token operator">:</span> jsonObject<span class="token punctuation">.</span>speed <span class="token operator">-</span> <span class="token number">5</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                            index<span class="token operator">++</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                    <span class="token punctuation">,</span> <span class="token number">900</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token function">do_barrager</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在主题目录下的配置文件中找到<code>libs</code>，在css中引入<code>barrager.css</code>，在js中引入<code>barrager.js</code>。使用<code>hexo s</code>参看效果调试即可。</p></li></ol><h2 id="未完成"><a href="#未完成" class="headerlink" title="未完成"></a>未完成</h2><p>初步构想，在评论旁边设置弹幕，可以与弹幕进行切换</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.leonus.cn/2023/danmaku.html">给你的留言板添加一个弹幕吧（重制） | Leonus</a></p><p><a href="https://github.com/yaseng/jquery.barrager.js">yaseng&#x2F;jquery.barrager.js: 专业的网页弹幕插件 (github.com)</a></p><p><a href="https://seayj.cn/contact/">contact | SeaYJ’s Blog</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 弹幕 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加B站番剧列表</title>
      <link href="/posts/db34.html"/>
      <url>/posts/db34.html</url>
      
        <content type="html"><![CDATA[<h2 id="添加番剧列表"><a href="#添加番剧列表" class="headerlink" title="添加番剧列表"></a>添加番剧列表</h2><p>暂未实现</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.ukenn.top/sakura5/">Sakura 主题美化系列（五）添加 BiliBili 番剧列表 – Ukenn Blog</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 番剧列表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>页脚波浪效果</title>
      <link href="/posts/f421.html"/>
      <url>/posts/f421.html</url>
      
        <content type="html"><![CDATA[<h1 id="页脚波浪效果"><a href="#页脚波浪效果" class="headerlink" title="页脚波浪效果"></a>页脚波浪效果</h1><p>合适的页脚动画可以为网站带来更好的用户体验，增加用户的停留时间和互动频率，同时也有助于提升网站的整体吸引力。</p><p>这里推荐一个提供众多页脚动画的<a href="https://www.bootstrapmb.com/tag/yejiao">网址</a></p><p>这里我选择的页脚波浪效果</p><h2 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h2><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402182024874.gif" alt="wave"></p><h2 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h2><ol><li><p>在matery&#x2F;source&#x2F;css下新建footer_wave.css，写入如下代码</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 设置页脚的顶部外边距为 120px */</span><span class="token selector">footer</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 设置波浪容器的定位为相对定位 */</span><span class="token selector">footer .fot-wave-box</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 设置波浪的样式 */</span><span class="token selector">footer .fot-wave</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token comment">/* 使波浪位于页脚上方 125px 处 */</span>    <span class="token property">top</span><span class="token punctuation">:</span> -125px<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 第一个波浪的样式 */</span><span class="token selector">footer .fot-wave#fot-wave_0</span> <span class="token punctuation">&#123;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 10<span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token comment">/* 应用波浪动画 */</span>    <span class="token property">animation</span><span class="token punctuation">:</span> aniFotWaveMove_00 4s linear infinite<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 第二个波浪的样式 */</span><span class="token selector">footer .fot-wave#fot-wave_1</span> <span class="token punctuation">&#123;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 9<span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> .5<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token comment">/* 应用波浪动画 */</span>    <span class="token property">animation</span><span class="token punctuation">:</span> aniFotWaveMove_01 4s linear infinite<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 第三个波浪的样式 */</span><span class="token selector">footer .fot-wave#fot-wave_2</span> <span class="token punctuation">&#123;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 10<span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> .2<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>    <span class="token comment">/* 应用波浪动画 */</span>    <span class="token property">animation</span><span class="token punctuation">:</span> aniFotWaveMove_00 3s linear infinite<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 第四个波浪的样式 */</span><span class="token selector">footer .fot-wave#fot-wave_3</span> <span class="token punctuation">&#123;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 9<span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> .7<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>    <span class="token comment">/* 应用波浪动画 */</span>    <span class="token property">animation</span><span class="token punctuation">:</span> aniFotWaveMove_01 3s linear infinite<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token comment">/* 定义波浪的移动动画 */</span><span class="token atrule"><span class="token rule">@keyframes</span> aniFotWaveMove_00</span> <span class="token punctuation">&#123;</span>    <span class="token selector">0%</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-position-x</span><span class="token punctuation">:</span> 1000px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-position-x</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 定义波浪的移动动画 */</span><span class="token atrule"><span class="token rule">@keyframes</span> aniFotWaveMove_01</span> <span class="token punctuation">&#123;</span>    <span class="token selector">0%</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-position-x</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-position-x</span><span class="token punctuation">:</span> 1000px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/* Safari 浏览器下的兼容性样式 */</span><span class="token atrule"><span class="token rule">@-webkit-keyframes</span> aniFotWaveMove_00</span> <span class="token punctuation">&#123;</span>    <span class="token selector">0%</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-position-x</span><span class="token punctuation">:</span> 1000px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-position-x</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/* Safari 浏览器下的兼容性样式 */</span><span class="token atrule"><span class="token rule">@-webkit-keyframes</span> aniFotWaveMove_01</span> <span class="token punctuation">&#123;</span>    <span class="token selector">0%</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-position-x</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-position-x</span><span class="token punctuation">:</span> 1000px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>代码解读：</p><ol><li><p><code>.fot-wave-box</code> 类的 CSS 规则用于设置页脚波浪的容器的位置为相对定位（position: relative），这意味着其子元素的绝对定位（position: absolute）将相对于此容器定位。</p></li><li><p><code>footer</code> 元素的 CSS 规则用于设置页脚的上外边距为 120px。</p></li><li><p><code>.fot-wave</code> 类的 CSS 规则用于设置波浪的样式，将其位置设置为绝对定位，位于页面顶部上方 100px 处，宽度为 100%，高度为 100px。</p></li><li><p><code>.fot-wave</code> 的具体实例（<code>#fot-wave_0</code>, <code>#fot-wave_1</code>, <code>#fot-wave_2</code>, <code>#fot-wave_3</code>）分别设置了不同的样式参数，包括层级（z-index）、透明度（opacity）、底部位置（bottom）以及动画效果。</p></li><li><p><code>@keyframes</code> 和 <code>@-webkit-keyframes</code> 规则定义了两种不同的动画效果（<code>aniFotWaveMove_00</code> 和 <code>aniFotWaveMove_01</code>），分别控制波浪的水平移动，从而实现波浪的动态效果。</p></li></ol><p>综上所述，这段代码主要是用于创建一个具有动态波浪效果的页脚。</p><blockquote><p>注意footer .fot-wave样式中的<code>top</code>需要根据自己的底部信息栏的高度进行设置</p></blockquote></li><li><p>在<code>matery\layout\_partial\footer.ejs</code> 的最上方插入以下代码</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token comment">&lt;!-- 添加页脚波浪代码 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/css/footer_wave.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">footer .fot-wave</span> <span class="token punctuation">&#123;</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>/medias/wave.png<span class="token punctuation">)</span></span> repeat-x<span class="token punctuation">;</span>        <span class="token property">background-size</span><span class="token punctuation">:</span> 1000px 100px<span class="token punctuation">;</span>        <span class="token comment">/* 添加 */</span>        <span class="token property">background-repeat</span><span class="token punctuation">:</span> repeat-x<span class="token punctuation">;</span> <span class="token comment">/* 设置波浪在水平方向重复 */</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span> <span class="token comment">/* 波浪宽度 */</span>        <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span> <span class="token comment">/* 波浪高度 */</span>        <span class="token property">z-index</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span> <span class="token comment">/* 确保波浪在内容上方显示 */</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fot-wave-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fot-wave<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fot-wave_0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fot-wave<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fot-wave_1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fot-wave<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fot-wave_2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fot-wave<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fot-wave_3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>最后进行部署查看效果即可，另外还有一点，最好设置自己的标签栏的颜色和波浪的颜色保持一致，效果才不会显得突兀</p></li></ol><h2 id="Gets"><a href="#Gets" class="headerlink" title="Gets"></a>Gets</h2><p>本次优化页脚的过程中学到了以下几点：</p><ol><li><p>在CSS中，<code>repeat-x</code> 是一个背景重复属性值，它指定背景图像沿着水平方向平铺重复显示，但不在垂直方向重复。换句话说，背景图像将在水平方向上重复，直到填满整个容器，但在垂直方向上不重复。这对于创建水平平铺背景图像非常有用，比如在页脚或者横幅中使用横向的图案或者波浪线条。</p></li><li><p>大多数现代浏览器都支持标准的 <code>box-shadow</code> 属性，无需再单独使用 <code>-webkit-box-shadow</code> 属性</p></li><li><p>针对不同浏览器的前缀是为了确保在不同的浏览器上能够正确地解析和显示样式。由于不同的浏览器厂商在实现CSS标准时可能存在差异，因此在一些新特性或实验性的CSS属性上，开发者需要使用特定浏览器厂商的前缀来确保样式能够正确应用。</p><p>以下是一些常见的浏览器前缀及其对应的浏览器：</p><ul><li><p><code>-webkit-</code>: 适用于WebKit内核的浏览器，例如Chrome和Safari。</p></li><li><p><code>-moz-</code>: 适用于Gecko内核的浏览器，例如Firefox。</p></li><li><p><code>-ms-</code>: 适用于Internet Explorer浏览器。</p></li><li><p><code>-o-</code>: 适用于Opera浏览器。</p></li></ul><p>这些前缀在CSS属性之前添加，以指示特定的样式适用于特定的浏览器。例如，<code>-webkit-transform</code>用于指定Webkit浏览器的变换样式，而<code>-moz-transform</code>用于指定Firefox浏览器的变换样式。</p><p>在过去，由于浏览器的差异性较大，使用浏览器前缀是确保样式兼容性的关键。但随着现代浏览器对CSS标准的更好支持，以及自动供应商前缀的工具的出现，开发者在编写CSS时需要添加浏览器前缀的情况已经大大减少。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 页脚 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>归档页面优化</title>
      <link href="/posts/bd93.html"/>
      <url>/posts/bd93.html</url>
      
        <content type="html"><![CDATA[<h1 id="归档页面优化"><a href="#归档页面优化" class="headerlink" title="归档页面优化"></a>归档页面优化</h1><h2 id="优化一"><a href="#优化一" class="headerlink" title="优化一"></a>优化一</h2><h3 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h3><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402161134123.gif" alt="archive"></p><h3 id="修改步骤"><a href="#修改步骤" class="headerlink" title="修改步骤"></a>修改步骤</h3><p>归档的布局文件是主题目录下的<code>/layout/archive.ejs</code>，原代码如下:</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token comment">&lt;!--时间轴区域块--></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cd-timeline<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>       <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> page<span class="token punctuation">.</span>posts<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">post</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cd-timeline-block<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>               <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token comment"># year. </span><span class="token delimiter punctuation">%></span></span>               <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">date</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>date<span class="token punctuation">,</span> <span class="token string">'YYYY'</span><span class="token punctuation">)</span> <span class="token operator">!=</span> year<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>                   <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> year <span class="token operator">=</span> <span class="token function">date</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>date<span class="token punctuation">,</span> <span class="token string">'YYYY'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span><span class="token delimiter punctuation">%></span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cd-timeline-img year<span class="token punctuation">"</span></span> <span class="token attr-name">data-aos</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zoom-in-up<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span><span class="token string">'/archives/'</span> <span class="token operator">+</span> year<span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> year </span><span class="token delimiter punctuation">%></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>               <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>               <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token comment"># month. </span><span class="token delimiter punctuation">%></span></span>               <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">date</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>date<span class="token punctuation">,</span> <span class="token string">'YYYY-MM'</span><span class="token punctuation">)</span> <span class="token operator">!=</span> month<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>                   <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript">                       month <span class="token operator">=</span> <span class="token function">date</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>date<span class="token punctuation">,</span> <span class="token string">'YYYY-MM'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                       <span class="token keyword">var</span> m <span class="token operator">=</span> <span class="token function">date</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>date<span class="token punctuation">,</span> <span class="token string">'MM'</span><span class="token punctuation">)</span>                   </span><span class="token delimiter punctuation">%></span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cd-timeline-img month<span class="token punctuation">"</span></span> <span class="token attr-name">data-aos</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zoom-in-up<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span><span class="token string">'/archives/'</span> <span class="token operator">+</span> year <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> m<span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                          <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> m </span><span class="token delimiter punctuation">%></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>               <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>               <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token comment"># every day posts. </span><span class="token delimiter punctuation">%></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cd-timeline-img day<span class="token punctuation">"</span></span> <span class="token attr-name">data-aos</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zoom-in-up<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">date</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>date<span class="token punctuation">,</span> <span class="token string">'YYYY-MM-DD'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cd-timeline-content<span class="token punctuation">"</span></span> <span class="token attr-name">data-aos</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fade-up<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>article col s12 m6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>path<span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-image<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                   <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>post<span class="token punctuation">.</span>img<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>                                       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>img<span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span>                                             <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>responsive-img<span class="token punctuation">"</span></span>                                            <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> post<span class="token punctuation">.</span>title </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                   <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>                                       <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript">                                           featureimg <span class="token operator">=</span>                                           featureImages<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token function">hashCode</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>title<span class="token punctuation">)</span>                                           <span class="token operator">%</span> featureImages<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                                       </span><span class="token delimiter punctuation">%></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>jsDelivr<span class="token punctuation">.</span>url </span><span class="token delimiter punctuation">%></span></span>                                                 <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span>featureimg<span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span>                                     <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>responsive-img<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> post<span class="token punctuation">.</span>title                                                                 </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                   <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>                                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> post<span class="token punctuation">.</span>title </span><span class="token delimiter punctuation">%></span></span>                                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-content article-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>summary block-with-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                   <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>post<span class="token punctuation">.</span>summary <span class="token operator">&amp;&amp;</span> post<span class="token punctuation">.</span>summary<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span>                                      <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>                                       <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> post<span class="token punctuation">.</span>summary </span><span class="token delimiter punctuation">%></span></span>                                   <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>                                       <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">strip_html</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>                                            <span class="token number">120</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>                                   <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>                               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>publish-info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>publish-date<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>far fa-clock fa-fw icon-date<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                                  <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> <span class="token function">date</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>date<span class="token punctuation">,</span> config<span class="token punctuation">.</span>date_format<span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>                               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>publish-author<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                       <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>post<span class="token punctuation">.</span>categories <span class="token operator">&amp;&amp;</span>                                           post<span class="token punctuation">.</span>categories<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>                                           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-bookmark fa-fw                                                      icon-category<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                                           <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> post<span class="token punctuation">.</span>categories<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">category</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                                               </span><span class="token delimiter punctuation">%></span></span>                                               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span>category<span class="token punctuation">.</span>path<span class="token punctuation">)</span>                                                        </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post-category<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                   <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> category<span class="token punctuation">.</span>name </span><span class="token delimiter punctuation">%></span></span>                                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                                           <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span><span class="token delimiter punctuation">%></span></span>                                       <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>post<span class="token punctuation">.</span>author <span class="token operator">&amp;&amp;</span>                                           post<span class="token punctuation">.</span>author<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>                                           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-user fa-fw<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                                           <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> post<span class="token punctuation">.</span>author </span><span class="token delimiter punctuation">%></span></span>                                       <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>                                           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-user fa-fw<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                                           <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> config<span class="token punctuation">.</span>author </span><span class="token delimiter punctuation">%></span></span>                                       <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>                                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>                               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                           <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>post<span class="token punctuation">.</span>tags <span class="token operator">&amp;&amp;</span> post<span class="token punctuation">.</span>tags<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>                               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-action article-tags<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                   <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> post<span class="token punctuation">.</span>tags<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">tag</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>                                       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span>tag<span class="token punctuation">.</span>path<span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span>                                                   <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chip bg-color<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                             <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> tag<span class="token punctuation">.</span>name </span><span class="token delimiter punctuation">%></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                                   <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span><span class="token delimiter punctuation">%></span></span>                               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                           <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>                       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span><span class="token delimiter punctuation">%></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在主题目录下的<code>/layout/archive.ejs</code>文件中添加如下代码:</p><ul><li><p>先添加<code>时间列表</code>和<code>时间轴</code>的切换按钮</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tag-chips<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">showTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sp-table<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chip center-align waves-effect waves-light default<span class="token punctuation">"</span></span>                  <span class="token attr-name">data-tagname</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>时间列表<span class="token punctuation">"</span></span>                  <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span> <span class="token function">rgb</span><span class="token punctuation">(</span>76<span class="token punctuation">,</span> 191<span class="token punctuation">,</span> 48<span class="token punctuation">)</span> 0%<span class="token punctuation">,</span> <span class="token function">rgb</span><span class="token punctuation">(</span>15<span class="token punctuation">,</span> 157<span class="token punctuation">,</span> 88<span class="token punctuation">)</span> 100%<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>时间列表            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">showTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sp-timeline<span class="token punctuation">"</span></span>                  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chip center-align waves-effect waves-light default<span class="token punctuation">"</span></span>                  <span class="token attr-name">data-tagname</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>时间轴<span class="token punctuation">"</span></span>                  <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>249<span class="token punctuation">,</span> 235<span class="token punctuation">,</span> 234<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.6<span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>时间轴            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>实现切换效果的<code>js</code>代码:</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">   <span class="token keyword">function</span> <span class="token function">showTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#cd-timeline"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#cd-table"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#sp-timeline"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background'</span><span class="token punctuation">,</span> 'linear<span class="token operator">-</span><span class="token function">gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span> #4cbf30 <span class="token number">0</span><span class="token operator">%</span><span class="token punctuation">,</span>                          #0f9d58 <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">)</span>'<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#sp-timeline"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'color'</span><span class="token punctuation">,</span> <span class="token string">'#fff'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#sp-table"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background'</span><span class="token punctuation">,</span> <span class="token string">'#F9EBEA'</span><span class="token punctuation">)</span>   <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#sp-table"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'color'</span><span class="token punctuation">,</span> <span class="token string">'rgba(0,0,0,0.6)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">showTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#cd-timeline"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#cd-table"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#sp-table"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background'</span><span class="token punctuation">,</span> 'linear<span class="token operator">-</span><span class="token function">gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span> #4cbf30 <span class="token number">0</span><span class="token operator">%</span><span class="token punctuation">,</span>                       #0f9d58 <span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">)</span>'<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#sp-table"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'color'</span><span class="token punctuation">,</span> <span class="token string">'#fff'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#sp-timeline"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background'</span><span class="token punctuation">,</span> <span class="token string">'#F9EBEA'</span><span class="token punctuation">)</span>   <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#sp-timeline"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'color'</span><span class="token punctuation">,</span> <span class="token string">'rgba(0,0,0,0.6)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><code>时间列表</code>代码<a id="时间列表"></a>:</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cd-table<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container archive-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> page<span class="token punctuation">.</span>posts<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">post</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>archive<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token comment"># year. </span><span class="token delimiter punctuation">%></span></span>                        <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">date</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>date<span class="token punctuation">,</span> <span class="token string">'YYYY'</span><span class="token punctuation">)</span> <span class="token operator">!=</span> year<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>                            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> year <span class="token operator">=</span> <span class="token function">date</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>date<span class="token punctuation">,</span> <span class="token string">'YYYY'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span><span class="token delimiter punctuation">%></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>archive-year<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> year </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> year </span><span class="token delimiter punctuation">%></span></span>年                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>                        <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>articles<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>article content><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>article-sort-post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>article-sort-item_title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>path<span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fa fa-clock<span class="token punctuation">"</span></span>                                           <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">font-size</span><span class="token punctuation">:</span> 1rem<span class="token punctuation">;</span><span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                                         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>time</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>is-text-small<span class="token punctuation">"</span></span> <span class="token attr-name">datetime</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2021-08-20T20:20:00.000Z<span class="token punctuation">"</span></span>                                         <span class="token attr-name">itemprop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>datePublished<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> #ff542d<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>                                          <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">date</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>date<span class="token punctuation">,</span> <span class="token string">'YYYY-MM-DD'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>                                           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>time</span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h6</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>is-6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>path<span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>path<span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                               <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> post<span class="token punctuation">.</span>title </span><span class="token delimiter punctuation">%></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h6</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span><span class="token delimiter punctuation">%></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>然后即可进行本地预览参看效果，当然你也可以自行修改代码实现更优美的效果。</p><blockquote><p>参考博客：<a href="https://blog.csdn.net/u013044713/article/details/120251025">hexo博客搭建及主题优化(二)_5ezuy.top-CSDN博客</a></p></blockquote><h2 id="优化二"><a href="#优化二" class="headerlink" title="优化二"></a>优化二</h2><p>之前的时间列表样式感觉不是很美观，遂起了修改样式的想法。</p><p>于是博览了众多博客，发现了几款非常不错的归档样式：</p><h3 id="样式一"><a href="#样式一" class="headerlink" title="样式一"></a>样式一</h3><h4 id="效果预览-1"><a href="#效果预览-1" class="headerlink" title="效果预览"></a>效果预览</h4><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402161409489.png" alt="样式一"></p><h4 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h4><p>将<a href="#%E6%97%B6%E9%97%B4%E5%88%97%E8%A1%A8">这段代码</a>中卡片的样式删去这四行代码：</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后在archive.ejs中加入以下样式代码：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css">&lt;style>    <span class="token comment">/*归档自定义样式*/</span>    <span class="token selector">.archive-container</span><span class="token punctuation">&#123;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>      <span class="token property">-webkit-border-radius</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>      <span class="token property">-moz-border-radius</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>      <span class="token property">border-radius</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.archive:not(:last-child)</span> <span class="token punctuation">&#123;</span>      <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 3rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token selector">.archive .articles</span> <span class="token punctuation">&#123;</span>      <span class="token property">border-left</span><span class="token punctuation">:</span> 1px solid #dbdbdb<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token selector">.archive .article</span> <span class="token punctuation">&#123;</span>      <span class="token property">border-top</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>      <span class="token property">margin-left</span><span class="token punctuation">:</span> -1px<span class="token punctuation">;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> 0.4rem 1.5rem<span class="token punctuation">;</span>      <span class="token property">border-left</span><span class="token punctuation">:</span> 3px solid transparent<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token selector">.archive .article:hover</span> <span class="token punctuation">&#123;</span>      <span class="token property">transition</span><span class="token punctuation">:</span> all .6s<span class="token punctuation">;</span>      <span class="token property">-webkit-transition</span><span class="token punctuation">:</span> all .6s<span class="token punctuation">;</span>      <span class="token property">-o-transition</span><span class="token punctuation">:</span> all .6s<span class="token punctuation">;</span>      <span class="token property">-moz-transition</span><span class="token punctuation">:</span> all .6s<span class="token punctuation">;</span>      <span class="token property">border-left-color</span><span class="token punctuation">:</span> #0f9d58 <span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token selector">.archive .article time</span> <span class="token punctuation">&#123;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> 1rem<span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> deeppink<span class="token punctuation">;</span>      <span class="token comment">/* color: darkgray; */</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">article-sort-item_title</span><span class="token punctuation">&#123;</span>      <span class="token property">display</span><span class="token punctuation">:</span> -webkit-box<span class="token punctuation">;</span>      <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> #4c4948<span class="token punctuation">;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> .75rem<span class="token punctuation">;</span>      <span class="token property">-webkit-transition</span><span class="token punctuation">:</span> all .3s<span class="token punctuation">;</span>      <span class="token property">-moz-transition</span><span class="token punctuation">:</span> all .3s<span class="token punctuation">;</span>      <span class="token property">-o-transition</span><span class="token punctuation">:</span> all .3s<span class="token punctuation">;</span>      <span class="token property">-ms-transition</span><span class="token punctuation">:</span> all .3s<span class="token punctuation">;</span>      <span class="token property">transition</span><span class="token punctuation">:</span> all .3s<span class="token punctuation">;</span>      <span class="token property">-webkit-line-clamp</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>      <span class="token property">-webkit-box-orient</span><span class="token punctuation">:</span> vertical<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token selector">.archive .article h6</span> <span class="token punctuation">&#123;</span>      <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token selector">.archive .article h6 a</span> <span class="token punctuation">&#123;</span>      <span class="token property">line-height</span><span class="token punctuation">:</span> 2.5<span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>      <span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px dashed transparent<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token selector">.archive .article h6 a:hover</span> <span class="token punctuation">&#123;</span>      <span class="token property">border-bottom-color</span><span class="token punctuation">:</span> #0f9d58<span class="token punctuation">;</span>      <span class="token property">padding-left</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>      <span class="token property">transition</span><span class="token punctuation">:</span> all .5s<span class="token punctuation">;</span>      <span class="token property">-webkit-transition</span><span class="token punctuation">:</span> all .5s<span class="token punctuation">;</span>      <span class="token property">-o-transition</span><span class="token punctuation">:</span> all .5s<span class="token punctuation">;</span>      <span class="token property">-moz-transition</span><span class="token punctuation">:</span> all .5s<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token selector">.archive .articles .imgcontent</span><span class="token punctuation">&#123;</span>      <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 80px<span class="token punctuation">;</span>      <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token selector">.archive .articles .imgcontent .postimg</span><span class="token punctuation">&#123;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>      <span class="token property">object-fit</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.archive .articles .imgcontent .postimg:hover</span><span class="token punctuation">&#123;</span>      <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>1.3<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token property">transition</span><span class="token punctuation">:</span> all .6s<span class="token punctuation">;</span>      <span class="token property">-webkit-transition</span><span class="token punctuation">:</span> all .6s<span class="token punctuation">;</span>      <span class="token property">-o-transition</span><span class="token punctuation">:</span> all .6s<span class="token punctuation">;</span>      <span class="token property">-moz-transition</span><span class="token punctuation">:</span> all .6s<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.article-sort-post</span><span class="token punctuation">&#123;</span>      <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>      <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>      <span class="token property">top</span><span class="token punctuation">:</span> -16px<span class="token punctuation">;</span>      <span class="token property">left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token selector">.hbe-input-container</span><span class="token punctuation">&#123;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 80%<span class="token punctuation">;</span>      <span class="token property">max-width</span><span class="token punctuation">:</span> 800px<span class="token punctuation">;</span>      <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>      <span class="token property">margin</span><span class="token punctuation">:</span> 100px auto<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token selector">.hbe-input-container  .btn-decrypt</span><span class="token punctuation">&#123;</span>      <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>      <span class="token property">vertical-align</span><span class="token punctuation">:</span> top<span class="token punctuation">;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 32px<span class="token punctuation">;</span>      <span class="token property">line-height</span><span class="token punctuation">:</span> 32px<span class="token punctuation">;</span>      <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>      <span class="token property">color</span><span class="token punctuation">:</span> #ffffff<span class="token punctuation">;</span>      <span class="token property">background-color</span><span class="token punctuation">:</span> #3f90ff<span class="token punctuation">;</span>      <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>      <span class="token property">-webkit-border-radius</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>      <span class="token property">-moz-border-radius</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>      <span class="token property">border-radius</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.about-cover</span> <span class="token punctuation">&#123;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 50vh<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.desc-content</span><span class="token punctuation">&#123;</span>      <span class="token property">padding</span><span class="token punctuation">:</span> 0 50px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token atrule"><span class="token rule">@media</span> <span class="token keyword">only</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 601px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>      <span class="token selector">.desc-content</span> <span class="token punctuation">&#123;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 0 15px<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>        <span class="token selector">.v .vlist .vcard</span> <span class="token punctuation">&#123;</span>      <span class="token property">padding-top</span><span class="token punctuation">:</span> 2.5em <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     &lt;/style><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>样式来源：<a href="https://blog.sky03.cn/archives/">归档 | Sky03我的薰衣草</a></p></blockquote><h3 id="样式二"><a href="#样式二" class="headerlink" title="样式二"></a>样式二</h3><h4 id="效果预览-2"><a href="#效果预览-2" class="headerlink" title="效果预览"></a>效果预览</h4><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402161414820.png" alt="样式二"></p><h4 id="实现-1"><a href="#实现-1" class="headerlink" title="实现"></a>实现</h4><p>暂未处理，有意向者可以去<a href="https://zhangxiaocai.cn/archives/">归档 | 斯莫笔记 (zhangxiaocai.cn)</a>查看</p><h3 id="样式三"><a href="#样式三" class="headerlink" title="样式三"></a>样式三</h3><h4 id="效果预览-3"><a href="#效果预览-3" class="headerlink" title="效果预览"></a>效果预览</h4><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402161410322.png" alt="样式三"></p><h4 id="实现-2"><a href="#实现-2" class="headerlink" title="实现"></a>实现</h4><p>暂未处理，有意向者可以去<a href="https://seayj.cn/archives/">归档 | SeaYJ’s Blog</a>查看</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 归档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>友链卡片增加悬停旋转效果</title>
      <link href="/posts/775.html"/>
      <url>/posts/775.html</url>
      
        <content type="html"><![CDATA[<h1 id="友链卡片增加旋转效果"><a href="#友链卡片增加旋转效果" class="headerlink" title="友链卡片增加旋转效果"></a>友链卡片增加旋转效果</h1><h2 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h2><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402152041617.gif" alt="rotate"></p><h2 id="修改步骤"><a href="#修改步骤" class="headerlink" title="修改步骤"></a>修改步骤</h2><p><code>matery/layout/friend.ejs</code>原代码</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/bg-cover'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">.friends-container</span> <span class="token punctuation">&#123;</span>        <span class="token property">margin-top</span><span class="token punctuation">:</span> -100px<span class="token punctuation">;</span>        <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.friends-container .tag-title</span> <span class="token punctuation">&#123;</span>        <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> #3C4858<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 1.75rem<span class="token punctuation">;</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.frind-ship img</span> <span class="token punctuation">&#123;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/* 以下是按钮样式 */</span>    <span class="token selector">.frind-ship</span> <span class="token punctuation">&#123;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 10px 20px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.frind-ship .title</span> <span class="token punctuation">&#123;</span>        <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>        <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.frind-ship .title div</span> <span class="token punctuation">&#123;</span>        <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>        <span class="token property">padding-left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.frind-ship .title img</span> <span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>        <span class="token property">flex-shrink</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.frind-ship .title h1</span> <span class="token punctuation">&#123;</span>        <span class="token property">padding-bottom</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>        <span class="token property">border-bottom</span><span class="token punctuation">:</span> 2px solid #fff<span class="token punctuation">;</span>        <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span>-15px<span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.friend-button</span> <span class="token punctuation">&#123;</span>        <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>        <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token property">margin-bottom</span><span class="token punctuation">:</span> -27px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.friend-button a</span> <span class="token punctuation">&#123;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.friend-all .tag-post</span> <span class="token punctuation">&#123;</span>        <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.button-caution</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> #FF4351<span class="token punctuation">;</span>        <span class="token property">border-color</span><span class="token punctuation">:</span> #FF4351<span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.button</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-weight</span><span class="token punctuation">:</span> 300<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>        <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"Helvetica Neue Light"</span><span class="token punctuation">,</span> <span class="token string">"Helvetica Neue"</span><span class="token punctuation">,</span> Helvetica<span class="token punctuation">,</span> Arial<span class="token punctuation">,</span> <span class="token string">"Lucida Grande"</span><span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span>        <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 0 40px<span class="token punctuation">;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>        <span class="token property">appearance</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token property">-webkit-box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>        <span class="token property">-moz-box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>        <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>        <span class="token property">-webkit-transition-property</span><span class="token punctuation">:</span> all<span class="token punctuation">;</span>        <span class="token property">transition-property</span><span class="token punctuation">:</span> all<span class="token punctuation">;</span>        <span class="token property">-webkit-transition-duration</span><span class="token punctuation">:</span> .3s<span class="token punctuation">;</span>        <span class="token property">transition-duration</span><span class="token punctuation">:</span> .3s<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.title</span> <span class="token punctuation">&#123;</span>        <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 0rem <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.card</span> <span class="token punctuation">&#123;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> 3rem 0 1rem 0 <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.button-glow.button-caution</span> <span class="token punctuation">&#123;</span>        <span class="token property">-webkit-animation-name</span><span class="token punctuation">:</span> glowing-caution<span class="token punctuation">;</span>        <span class="token property">animation-name</span><span class="token punctuation">:</span> glowing-caution<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token atrule"><span class="token rule">@-webkit-keyframes</span> glowing-caution</span> <span class="token punctuation">&#123;</span>        <span class="token selector">from</span> <span class="token punctuation">&#123;</span>            <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 0 0 <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 0 <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">50%</span> <span class="token punctuation">&#123;</span>            <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 0 20px <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.8<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 20px <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.8<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">to</span> <span class="token punctuation">&#123;</span>            <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 0 0 <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 0 <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token atrule"><span class="token rule">@keyframes</span> glowing-caution</span> <span class="token punctuation">&#123;</span>        <span class="token selector">from</span> <span class="token punctuation">&#123;</span>            <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 0 0 <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 0 <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">50%</span> <span class="token punctuation">&#123;</span>            <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 0 20px <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.8<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 20px <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.8<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">to</span> <span class="token punctuation">&#123;</span>            <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 0 0 <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 0 <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 67<span class="token punctuation">,</span> 81<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.button-caution:hover</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> #ff7680<span class="token punctuation">;</span>        <span class="token property">border-color</span><span class="token punctuation">:</span> #ff7680<span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> #FFF<span class="token punctuation">;</span>        <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.frind-card1</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span> #4facfe 0%<span class="token punctuation">,</span> #00f2fe 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.frind-card2</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>135deg<span class="token punctuation">,</span> #667eea 0%<span class="token punctuation">,</span> #764ba2 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.frind-card3</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span> #b8cbb8 0%<span class="token punctuation">,</span> #b8cbb8 0%<span class="token punctuation">,</span> #b465da 0%<span class="token punctuation">,</span> #cf6cc9 33%<span class="token punctuation">,</span> #ee609c 66%<span class="token punctuation">,</span> #ee609c 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.frind-card4</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span> #6a11cb 0%<span class="token punctuation">,</span> #2575fc 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.frind-card5</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to top<span class="token punctuation">,</span> #c471f5 0%<span class="token punctuation">,</span> #fa71cd 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.frind-card6</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to top<span class="token punctuation">,</span> #48c6ef 0%<span class="token punctuation">,</span> #6f86d6 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.frind-card7</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to top<span class="token punctuation">,</span> #0ba360 0%<span class="token punctuation">,</span> #3cba92 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.frind-card8</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to top<span class="token punctuation">,</span> #0c3483 0%<span class="token punctuation">,</span> #a2b6df 100%<span class="token punctuation">,</span> #6b8cce 100%<span class="token punctuation">,</span> #a2b6df 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.frind-card9</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span> #ff758c 0%<span class="token punctuation">,</span> #ff7eb3 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.frind-card10</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to top<span class="token punctuation">,</span> #f77062 0%<span class="token punctuation">,</span> #fe5196 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">article .card</span> <span class="token punctuation">&#123;</span>        <span class="token property">overflow</span><span class="token punctuation">:</span> visible <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container friends-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tag-title center-align<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-address-book<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> <span class="token function">__</span><span class="token punctuation">(</span><span class="token string">'friends'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>friends-link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>site<span class="token punctuation">.</span>data <span class="token operator">&amp;&amp;</span> site<span class="token punctuation">.</span>data<span class="token punctuation">.</span>friends<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>                    <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">var</span> friends <span class="token operator">=</span> site<span class="token punctuation">.</span>data<span class="token punctuation">.</span>friends<span class="token punctuation">;</span> </span><span class="token delimiter punctuation">%></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>row tags-posts friend-all<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> friends<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>                        <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">var</span> friend <span class="token operator">=</span> friends<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span> </span><span class="token delimiter punctuation">%></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col s12 m6 l4 friend-div<span class="token punctuation">"</span></span> <span class="token attr-name">data-aos</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>zoom-in-up<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card frind-card<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>frind-ship<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span>friend<span class="token punctuation">.</span>avatar<span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>friend-name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> friend<span class="token punctuation">.</span>name </span><span class="token delimiter punctuation">%></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> -35px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> friend<span class="token punctuation">.</span>introduction </span><span class="token delimiter punctuation">%></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>friend-button<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span>friend<span class="token punctuation">.</span>url<span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span>                                            <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button button-glow button-rounded button-caution<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> friend<span class="token punctuation">.</span>title </span><span class="token delimiter punctuation">%></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                        <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                    <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>page<span class="token punctuation">.</span>content <span class="token operator">&amp;&amp;</span> page<span class="token punctuation">.</span>content<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card-content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> page<span class="token punctuation">.</span>content </span><span class="token delimiter punctuation">%></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>gitalk <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>gitalk<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/gitalk'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>gitment<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/gitment'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>disqus<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/disqus'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>livere <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>livere<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/livere'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>valine <span class="token operator">&amp;&amp;</span> theme<span class="token punctuation">.</span>valine<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/valine'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#friends-link'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">masonry</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">itemSelector</span><span class="token operator">:</span> <span class="token string">'.friend-div'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>在<code>.frind-ship .title img</code>中添加一行代码：<code>transition: all 1s;</code></p></li><li><p>在<code>.frind-ship .title img</code>添加：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 悬浮旋转 */</span><span class="token selector">.friend-div:hover .title img</span> <span class="token punctuation">&#123;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>360deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">-ms-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>360deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">-moz-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>360deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">-webkit-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>360deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">-o-transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>360deg<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>最后使用hexo cl &amp;&amp; hexo g &amp;&amp; hexo s即可一键插看效果。</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 友链 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新建文章主动打开typora</title>
      <link href="/posts/24ab.html"/>
      <url>/posts/24ab.html</url>
      
        <content type="html"><![CDATA[<h1 id="新建文章自动打开typora"><a href="#新建文章自动打开typora" class="headerlink" title="新建文章自动打开typora"></a>新建文章自动打开typora</h1><p>在博客文件根目录新建<code>scripts</code>目录，在目录下新建<code>auto_open.js</code>，添加以下代码：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> spawn <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'child_process'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>spawn<span class="token punctuation">;</span> hexo<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'new'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token function">spawn</span><span class="token punctuation">(</span><span class="token string">'E:/Typora/typora/Typora.exe'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>data<span class="token punctuation">.</span>path<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意：一定要找准你需要的编辑器所在的路径</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自动化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客从github迁移到gitee</title>
      <link href="/posts/5c6b.html"/>
      <url>/posts/5c6b.html</url>
      
        <content type="html"><![CDATA[<h2 id="HEXO博客从GITHUB迁移到GITEE"><a href="#HEXO博客从GITHUB迁移到GITEE" class="headerlink" title="HEXO博客从GITHUB迁移到GITEE"></a>HEXO博客从GITHUB迁移到GITEE</h2><p>gitee感觉做的不错，而且是国内的，速度要比github快不少。所以将博客从github迁移到gitee。</p><p>1.在gitee.com修改个性地址：</p><p>比如这里最后是tommy88。</p><p>2.在gitee.com创建一个public项目，名称为上面的tommy88.</p><p>3.打开git bash，进入到博客目录。</p><p>在git Bash中，输入：</p><pre class="line-numbers language-none"><code class="language-none">ssh-****** -t rsa -C &quot;username&quot; (注：username为你git上的用户名)123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>后面一直回车，直到结束。</p><p>打开生成的id_rsa.pub文件，复制公钥到gitee的ssh key。</p><p>配置完毕后，使用下面的命令测试一下SSH Key</p><pre class="line-numbers language-none"><code class="language-none">ssh -T git@gitee.com123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>后面你使用hexo d直接就提交到gitee仓库中了。</p><p>4.修改hexo的_config.yml</p><p>Deploy部分修改为gitee的地址</p><pre class="line-numbers language-none"><code class="language-none">deploy:  type: git  repo: git@gitee.com:tommy88&#x2F;tommy88.git  branch: master123456789<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>5.博客内容提交到gitee后，开启gitee pages。</p><p>部署后，会显示一个网站地址，这个地址就是你的博客地址。</p><p>6.将博客源代码托管到gitee</p><p>参考<a href="https://tommy88.gitee.io/2017/08/26/hexo-github-personal-blog/%E6%96%87%E7%AB%A0%E4%B8%AD%E7%9A%84%60%E5%B0%86%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E3%80%81%E9%85%8D%E7%BD%AE%E4%B8%8E%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%E5%A4%87%E4%BB%BD%E5%88%B0osc%60%E7%AB%A0%E8%8A%82%E3%80%82">https://tommy88.gitee.io/2017/08/26/hexo-github-personal-blog/文章中的`将博客文章、配置与主题设置备份到osc`章节。</a></p><p>注意：如果之前备份过，这里由于修改了个性地址，会导致仓库地址发生变化，本地再次执行git push origin master命令时会提示</p><p>到博客根目录下的.git文件夹，打开config文件，修改gitee地址</p><p>将url修改为最新的地址</p><p>再次push就成功了。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://www.freesion.com/article/438335824/">hexo博客从github迁移到gitee - 灰信网（软件开发博客聚合） (freesion.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客迁移 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自定义鼠标样式</title>
      <link href="/posts/dafc.html"/>
      <url>/posts/dafc.html</url>
      
        <content type="html"><![CDATA[<h1 id="自定义鼠标样式"><a href="#自定义鼠标样式" class="headerlink" title="自定义鼠标样式"></a>自定义鼠标样式</h1><h2 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h2><ol><li><p>首先将鼠标样式下载到本地，推荐一个<a href="https://zhutix.com/ico/ori-cursors/">网站</a>，下载自己喜欢的鼠标样式，放在主题文件夹下的medias目录下</p></li><li><p>打开<code>themes\matery\source\css</code>下的<strong>my.css</strong>文件，添加内容如下：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">*</span><span class="token punctuation">&#123;</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"/medias/imgs/zhengchang.ico"</span><span class="token punctuation">)</span></span><span class="token punctuation">,</span>auto<span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">:active</span><span class="token punctuation">&#123;</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"/medias/imgs/dianji.ico"</span><span class="token punctuation">)</span></span><span class="token punctuation">,</span>auto<span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">butterfly:在 /themes/butterfly/source/css路径下创建一个mouse.css文件，在文件中添加如下代码： body</span> <span class="token punctuation">&#123;</span>   <span class="token property">cursor</span><span class="token punctuation">:</span><span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/img/default.cur<span class="token punctuation">)</span></span><span class="token punctuation">,</span>         default<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token selector">a, img</span> <span class="token punctuation">&#123;</span>   <span class="token property">cursor</span><span class="token punctuation">:</span><span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/img/pointer.cur<span class="token punctuation">)</span></span><span class="token punctuation">,</span>         default<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>打开站点主题配置文件_config.butterfly.yml，找到inject，在head处直接引入该文件：<span class="token property">inject</span><span class="token punctuation">:</span><span class="token property">head</span><span class="token punctuation">:</span>- &lt;link rel=<span class="token string">"stylesheet"</span> href=<span class="token string">"/css/mouse.css"</span>><span class="token property">原文链接：https</span><span class="token punctuation">:</span>//blog.csdn.net/qq_60750453/article/details/124716738<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h2><p>添加同心圆鼠标样式</p><ol><li><p>在<code>matery\source\js\</code>下新建文件<code>cursor.js</code>，粘贴如下代码：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> <span class="token constant">CURSOR</span><span class="token punctuation">;</span>Math<span class="token punctuation">.</span><span class="token function-variable function">lerp</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">-</span> n<span class="token punctuation">)</span> <span class="token operator">*</span> a <span class="token operator">+</span> n <span class="token operator">*</span> b<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token function-variable function">getStyle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> attr</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> window<span class="token punctuation">.</span>getComputedStyle            <span class="token operator">?</span> window<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">[</span>attr<span class="token punctuation">]</span>            <span class="token operator">:</span> el<span class="token punctuation">.</span>currentStyle<span class="token punctuation">[</span>attr<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Cursor</span> <span class="token punctuation">&#123;</span>    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>pos <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">curr</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token literal-property property">prev</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>pt <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">move</span><span class="token punctuation">(</span><span class="token parameter">left<span class="token punctuation">,</span> top</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>left<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">px</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>top<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">px</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>cursor <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token string">"cursor"</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"hidden"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>pt <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'*[style*="cursor:pointer"]'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">el</span> <span class="token operator">=></span> el<span class="token punctuation">.</span>outerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>scr <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"style"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//可自行定义鼠标的尺寸和颜色，支持RGB写法和英文名称写法，如green</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>scr<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">* &#123;cursor: url("data:image/svg+xml,&lt;svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12px' height='12px'>&lt;circle cx='6' cy='6' r='6' opacity='1.0' fill='rgb(57, 197, 187)'/>&lt;/svg>") 6 6, auto&#125;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>scr<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"hover"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"active"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>pos <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">curr</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token literal-property property">prev</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>pt <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseover'</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>pt<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>outerHTML<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"hover"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseout'</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>pt<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>outerHTML<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"hover"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mousemove'</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span>curr<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>clientX <span class="token operator">-</span> <span class="token number">8</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>clientY <span class="token operator">-</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span>curr <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">x</span><span class="token operator">:</span> e<span class="token punctuation">.</span>clientX <span class="token operator">-</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> e<span class="token punctuation">.</span>clientY <span class="token operator">-</span> <span class="token number">8</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"hidden"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseenter'</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"hidden"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseleave'</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"hidden"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mousedown'</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"active"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mouseup'</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">"active"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span>prev<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span>prev<span class="token punctuation">.</span>x <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">lerp</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span>prev<span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span>curr<span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token number">0.15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span>prev<span class="token punctuation">.</span>y <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">lerp</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span>prev<span class="token punctuation">.</span>y<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span>curr<span class="token punctuation">.</span>y<span class="token punctuation">,</span> <span class="token number">0.15</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span>prev<span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span>prev<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span>prev <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pos<span class="token punctuation">.</span>curr<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token constant">CURSOR</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cursor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token constant">CURSOR</span><span class="token punctuation">.</span><span class="token function">refresh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在<code>themes\matery\source\css\my.css</code>中加入</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">#cursor</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>     <span class="token property">height</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>     <span class="token property">border-radius</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>     <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>57<span class="token punctuation">,</span> 197<span class="token punctuation">,</span> 187<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 可修改颜色 */</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0.25<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 10086<span class="token punctuation">;</span>    <span class="token property">pointer-events</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> 0.2s ease-in-out<span class="token punctuation">;</span>    <span class="token property">transition-property</span><span class="token punctuation">:</span> background<span class="token punctuation">,</span> opacity<span class="token punctuation">,</span> transform<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>2.0<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 使用 transform 放大 2.0 倍 */</span><span class="token punctuation">&#125;</span><span class="token selector">#cursor.hidden</span> <span class="token punctuation">&#123;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#cursor.hover</span> <span class="token punctuation">&#123;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0.1<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>2.5<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">-webkit-transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>2.5<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">-moz-transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>2.5<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">-ms-transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>2.5<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">-o-transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>2.5<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#cursor.active</span> <span class="token punctuation">&#123;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0.5<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>0.5<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">-webkit-transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>0.5<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">-moz-transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>0.5<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">-ms-transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>0.5<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">-o-transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>0.5<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在<code>themes\matery\layout\layout.ejs</code>中加入</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>jsDelivr<span class="token punctuation">.</span>url </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span><span class="token string">'/js/cursor.js'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>确保在<code>themes\matery\_config.yml</code>的libs中的css和js中引入了<code>my.css</code>和<code>cursor.js</code></p></blockquote></li><li><p>使用hexo s查看效果</p></li></ol><h2 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h2><ul><li><a href="https://haosirl.gitee.io/2022/01/23/bo-ke-xiu-gai-shu-biao-yang-shi/">博客修改鼠标样式 | 豪先生博客 (gitee.io)</a></li><li><a href="https://javalog.cn/post/hexo-yalia-mouse-cursor.html">给Hexo的Yilia主题增加好看的鼠标指针图标 | JAVA日志 (javalog.cn)</a></li><li><a href="https://blog.csdn.net/qq_60750453/article/details/124716738">Hexo修改鼠标样式_hexo好看的光标-CSDN博客</a></li><li><a href="https://www.fomal.cc/posts/9ac969bb.html">分类: 魔改教程 | Fomalhaut🥝</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 鼠标样式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>梦幻背景</title>
      <link href="/posts/ede0.html"/>
      <url>/posts/ede0.html</url>
      
        <content type="html"><![CDATA[<h2 id="预览效果"><a href="#预览效果" class="headerlink" title="预览效果"></a>预览效果</h2><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402131725476.gif" alt="dreamland"></p><h2 id="博文历程"><a href="#博文历程" class="headerlink" title="博文历程"></a>博文历程</h2><p>说实话，这篇博客能完成，我深感惊喜，因为之前在这篇<a href="https://blog.csdn.net/Zz_cheng/article/details/116719634">博文</a>，见到了一种非常好看的动态背景，无奈因原博文的关键代码图片链接失效了(canvas_moving.js)，所以当时无法在自己的网站上实现，尽管我努力尝试通过网上搜寻该博主相关信息，企图通过蛛丝马迹找到一些残留的线索，很遗憾没有找到。</p><p>然而我实在是不愿意轻易放弃这个动态背景，在网络上四处查找类似效果的网站或相关教程，但是结果却不尽人意。抱着碰运气的心态，我后面又陆续找了一段时间，但是依旧无果。本以为真是有缘无份，时隔6个月，今天却通过一个之前发现过的博客网站的一个友链找到了：<a href="https://www.mobaijun.com/">框架師 (mobaijun.com)</a>，这位大佬使用的正是这个背景。oh my god，激动之情溢于言表，有一种柳暗花明的感觉。</p><p>于是我立马进入这位大佬的博客里观摩一番，却没有找到相关教程，同时也注意到这位大佬的申明<code>“本站不接受任何的个性化需求的求助类咨询，任何有关个性化需求的求助类问题一律不予回复，诸如“求…资源”等问题”</code>，看来想走捷径是不可能了，只好自己动手了——F12启动！</p><p>于是成功发现了博文所缺失的关键部分的样式代码——<a href="https://tencent.cos.mobaijun.com/libs/others/canva_moving_effect.js">canva_moving_effect.js</a></p><p>原代码未格式化，这里给出格式化后的canvas_moving.js代码：<a id="canvas_moving.js"></a></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">$</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> canvas <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#Dreamland"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token string">"canvas"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        background <span class="token operator">=</span> canvas<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        foreground1 <span class="token operator">=</span> canvas<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        foreground2 <span class="token operator">=</span> canvas<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        config <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">circle</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">amount</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>                <span class="token literal-property property">layer</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>                <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">157</span><span class="token punctuation">,</span> <span class="token number">97</span><span class="token punctuation">,</span> <span class="token number">207</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token literal-property property">alpha</span><span class="token operator">:</span> <span class="token number">0.3</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">line</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">amount</span><span class="token operator">:</span> <span class="token number">12</span><span class="token punctuation">,</span>                <span class="token literal-property property">layer</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>                <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token literal-property property">alpha</span><span class="token operator">:</span> <span class="token number">0.3</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">speed</span><span class="token operator">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span>            <span class="token literal-property property">angle</span><span class="token operator">:</span> <span class="token number">20</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>background<span class="token punctuation">.</span>getContext<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> bctx <span class="token operator">=</span> background<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">"2d"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            fctx1 <span class="token operator">=</span> foreground1<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">"2d"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            fctx2 <span class="token operator">=</span> foreground2<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">"2d"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token constant">M</span> <span class="token operator">=</span> window<span class="token punctuation">.</span>Math<span class="token punctuation">,</span>            degree <span class="token operator">=</span> config<span class="token punctuation">.</span>angle <span class="token operator">/</span> <span class="token number">360</span> <span class="token operator">*</span> <span class="token constant">M</span><span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span>            circles <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            lines <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            wWidth<span class="token punctuation">,</span>            wHeight<span class="token punctuation">,</span>            timer<span class="token punctuation">;</span>        <span class="token keyword">var</span> <span class="token function-variable function">setCanvasHeight</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            wWidth <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            wHeight <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            canvas<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>width <span class="token operator">=</span> wWidth<span class="token punctuation">;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>height <span class="token operator">=</span> wHeight<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> <span class="token function-variable function">drawCircle</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> radius<span class="token punctuation">,</span> color<span class="token punctuation">,</span> alpha</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> gradient <span class="token operator">=</span> fctx1<span class="token punctuation">.</span><span class="token function">createRadialGradient</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> radius<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            gradient<span class="token punctuation">.</span><span class="token function">addColorStop</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"rgba("</span> <span class="token operator">+</span> color<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> color<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> color<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> alpha <span class="token operator">+</span> <span class="token string">")"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            gradient<span class="token punctuation">.</span><span class="token function">addColorStop</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"rgba("</span> <span class="token operator">+</span> color<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> color<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> color<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> <span class="token punctuation">(</span>alpha <span class="token operator">-</span> <span class="token number">0.1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">")"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            fctx1<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            fctx1<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> radius<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token constant">M</span><span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            fctx1<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> gradient<span class="token punctuation">;</span>            fctx1<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> <span class="token function-variable function">drawLine</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> width<span class="token punctuation">,</span> color<span class="token punctuation">,</span> alpha</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> endX <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token operator">*</span> width<span class="token punctuation">,</span>                endY <span class="token operator">=</span> y <span class="token operator">-</span> <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">cos</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span> <span class="token operator">*</span> width<span class="token punctuation">,</span>                gradient <span class="token operator">=</span> fctx2<span class="token punctuation">.</span><span class="token function">createLinearGradient</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> endX<span class="token punctuation">,</span> endY<span class="token punctuation">)</span><span class="token punctuation">;</span>            gradient<span class="token punctuation">.</span><span class="token function">addColorStop</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"rgba("</span> <span class="token operator">+</span> color<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> color<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> color<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> alpha <span class="token operator">+</span> <span class="token string">")"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            gradient<span class="token punctuation">.</span><span class="token function">addColorStop</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"rgba("</span> <span class="token operator">+</span> color<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> color<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> color<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> <span class="token punctuation">(</span>alpha <span class="token operator">-</span> <span class="token number">0.1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">")"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            fctx2<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            fctx2<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>            fctx2<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>endX<span class="token punctuation">,</span> endY<span class="token punctuation">)</span><span class="token punctuation">;</span>            fctx2<span class="token punctuation">.</span>lineWidth <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>            fctx2<span class="token punctuation">.</span>lineCap <span class="token operator">=</span> <span class="token string">"round"</span><span class="token punctuation">;</span>            fctx2<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> gradient<span class="token punctuation">;</span>            fctx2<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> <span class="token function-variable function">drawBack</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            bctx<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> wWidth<span class="token punctuation">,</span> wHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> gradient <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            gradient<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> bctx<span class="token punctuation">.</span><span class="token function">createRadialGradient</span><span class="token punctuation">(</span>wWidth <span class="token operator">*</span> <span class="token number">0.3</span><span class="token punctuation">,</span> wHeight <span class="token operator">*</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> wWidth <span class="token operator">*</span> <span class="token number">0.3</span><span class="token punctuation">,</span> wHeight <span class="token operator">*</span> <span class="token number">0.1</span><span class="token punctuation">,</span> wWidth <span class="token operator">*</span> <span class="token number">0.9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            gradient<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addColorStop</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"rgb(118,128,128)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            gradient<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addColorStop</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"transparent"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            bctx<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span>wWidth<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            bctx<span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            bctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            bctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> gradient<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            bctx<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> wWidth<span class="token punctuation">,</span> wHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>            gradient<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> bctx<span class="token punctuation">.</span><span class="token function">createRadialGradient</span><span class="token punctuation">(</span>wWidth <span class="token operator">*</span> <span class="token number">0.1</span><span class="token punctuation">,</span> wHeight <span class="token operator">*</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> wWidth <span class="token operator">*</span> <span class="token number">0.3</span><span class="token punctuation">,</span> wHeight <span class="token operator">*</span> <span class="token number">0.1</span><span class="token punctuation">,</span> wWidth<span class="token punctuation">)</span><span class="token punctuation">;</span>            gradient<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addColorStop</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"rgb(0, 150, 240)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            gradient<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addColorStop</span><span class="token punctuation">(</span><span class="token number">0.8</span><span class="token punctuation">,</span> <span class="token string">"transparent"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            bctx<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span>wWidth<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            bctx<span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            bctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            bctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> gradient<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            bctx<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> wWidth<span class="token punctuation">,</span> wHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>            gradient<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> bctx<span class="token punctuation">.</span><span class="token function">createRadialGradient</span><span class="token punctuation">(</span>wWidth <span class="token operator">*</span> <span class="token number">0.1</span><span class="token punctuation">,</span> wHeight <span class="token operator">*</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> wWidth <span class="token operator">*</span> <span class="token number">0.1</span><span class="token punctuation">,</span> wHeight <span class="token operator">*</span> <span class="token number">0.5</span><span class="token punctuation">,</span> wWidth <span class="token operator">*</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            gradient<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addColorStop</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"rgb(40, 20, 105)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            gradient<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">addColorStop</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"transparent"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            bctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            bctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> gradient<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            bctx<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> wWidth<span class="token punctuation">,</span> wHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> <span class="token function-variable function">animate</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> sin <span class="token operator">=</span> <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span><span class="token punctuation">,</span>                cos <span class="token operator">=</span> <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">cos</span><span class="token punctuation">(</span>degree<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>circle<span class="token punctuation">.</span>amount <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> config<span class="token punctuation">.</span>circle<span class="token punctuation">.</span>layer <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                fctx1<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> wWidth<span class="token punctuation">,</span> wHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> circles<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">var</span> item <span class="token operator">=</span> circles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>                        x <span class="token operator">=</span> item<span class="token punctuation">.</span>x<span class="token punctuation">,</span>                        y <span class="token operator">=</span> item<span class="token punctuation">.</span>y<span class="token punctuation">,</span>                        radius <span class="token operator">=</span> item<span class="token punctuation">.</span>radius<span class="token punctuation">,</span>                        speed <span class="token operator">=</span> item<span class="token punctuation">.</span>speed<span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">></span> wWidth <span class="token operator">+</span> radius<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        x <span class="token operator">=</span> <span class="token operator">-</span>radius<span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;</span> <span class="token operator">-</span>radius<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        x <span class="token operator">=</span> wWidth <span class="token operator">+</span> radius<span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                        x <span class="token operator">+=</span> sin <span class="token operator">*</span> speed<span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>y <span class="token operator">></span> wHeight <span class="token operator">+</span> radius<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        y <span class="token operator">=</span> <span class="token operator">-</span>radius<span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>y <span class="token operator">&lt;</span> <span class="token operator">-</span>radius<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        y <span class="token operator">=</span> wHeight <span class="token operator">+</span> radius<span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                        y <span class="token operator">-=</span> cos <span class="token operator">*</span> speed<span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                    item<span class="token punctuation">.</span>x <span class="token operator">=</span> x<span class="token punctuation">;</span>                    item<span class="token punctuation">.</span>y <span class="token operator">=</span> y<span class="token punctuation">;</span>                    <span class="token function">drawCircle</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> radius<span class="token punctuation">,</span> item<span class="token punctuation">.</span>color<span class="token punctuation">,</span> item<span class="token punctuation">.</span>alpha<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>line<span class="token punctuation">.</span>amount <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> config<span class="token punctuation">.</span>line<span class="token punctuation">.</span>layer <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                fctx2<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> wWidth<span class="token punctuation">,</span> wHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> lines<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">var</span> item <span class="token operator">=</span> lines<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span>                        x <span class="token operator">=</span> item<span class="token punctuation">.</span>x<span class="token punctuation">,</span>                        y <span class="token operator">=</span> item<span class="token punctuation">.</span>y<span class="token punctuation">,</span>                        width <span class="token operator">=</span> item<span class="token punctuation">.</span>width<span class="token punctuation">,</span>                        speed <span class="token operator">=</span> item<span class="token punctuation">.</span>speed<span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">></span> wWidth <span class="token operator">+</span> width <span class="token operator">*</span> sin<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        x <span class="token operator">=</span> <span class="token operator">-</span>width <span class="token operator">*</span> sin<span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;</span> <span class="token operator">-</span>width <span class="token operator">*</span> sin<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        x <span class="token operator">=</span> wWidth <span class="token operator">+</span> width <span class="token operator">*</span> sin<span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                        x <span class="token operator">+=</span> sin <span class="token operator">*</span> speed<span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>y <span class="token operator">></span> wHeight <span class="token operator">+</span> width <span class="token operator">*</span> cos<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        y <span class="token operator">=</span> <span class="token operator">-</span>width <span class="token operator">*</span> cos<span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>y <span class="token operator">&lt;</span> <span class="token operator">-</span>width <span class="token operator">*</span> cos<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        y <span class="token operator">=</span> wHeight <span class="token operator">+</span> width <span class="token operator">*</span> cos<span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                        y <span class="token operator">-=</span> cos <span class="token operator">*</span> speed<span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                    item<span class="token punctuation">.</span>x <span class="token operator">=</span> x<span class="token punctuation">;</span>                    item<span class="token punctuation">.</span>y <span class="token operator">=</span> y<span class="token punctuation">;</span>                    <span class="token function">drawLine</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> width<span class="token punctuation">,</span> item<span class="token punctuation">.</span>color<span class="token punctuation">,</span> item<span class="token punctuation">.</span>alpha<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            timer <span class="token operator">=</span> <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>animate<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> <span class="token function-variable function">createItem</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            circles <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            lines <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>circle<span class="token punctuation">.</span>amount <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> config<span class="token punctuation">.</span>circle<span class="token punctuation">.</span>layer <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> config<span class="token punctuation">.</span>circle<span class="token punctuation">.</span>amount <span class="token operator">/</span> config<span class="token punctuation">.</span>circle<span class="token punctuation">.</span>layer<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> config<span class="token punctuation">.</span>circle<span class="token punctuation">.</span>layer<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        circles<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                            <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> wWidth<span class="token punctuation">,</span>                            <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> wHeight<span class="token punctuation">,</span>                            <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">20</span> <span class="token operator">+</span> j <span class="token operator">*</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">20</span> <span class="token operator">+</span> j <span class="token operator">*</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                            <span class="token literal-property property">color</span><span class="token operator">:</span> config<span class="token punctuation">.</span>circle<span class="token punctuation">.</span>color<span class="token punctuation">,</span>                            <span class="token literal-property property">alpha</span><span class="token operator">:</span> <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.2</span> <span class="token operator">+</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>circle<span class="token punctuation">.</span>alpha <span class="token operator">-</span> j <span class="token operator">*</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                            <span class="token literal-property property">speed</span><span class="token operator">:</span> config<span class="token punctuation">.</span>speed <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> j <span class="token operator">*</span> <span class="token number">0.5</span><span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>line<span class="token punctuation">.</span>amount <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> config<span class="token punctuation">.</span>line<span class="token punctuation">.</span>layer <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> m <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> m <span class="token operator">&lt;</span> config<span class="token punctuation">.</span>line<span class="token punctuation">.</span>amount <span class="token operator">/</span> config<span class="token punctuation">.</span>line<span class="token punctuation">.</span>layer<span class="token punctuation">;</span> m<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> n <span class="token operator">&lt;</span> config<span class="token punctuation">.</span>line<span class="token punctuation">.</span>layer<span class="token punctuation">;</span> n<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        lines<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                            <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> wWidth<span class="token punctuation">,</span>                            <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> wHeight<span class="token punctuation">,</span>                            <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">20</span> <span class="token operator">+</span> n <span class="token operator">*</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">20</span> <span class="token operator">+</span> n <span class="token operator">*</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                            <span class="token literal-property property">color</span><span class="token operator">:</span> config<span class="token punctuation">.</span>line<span class="token punctuation">.</span>color<span class="token punctuation">,</span>                            <span class="token literal-property property">alpha</span><span class="token operator">:</span> <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.2</span> <span class="token operator">+</span> <span class="token punctuation">(</span>config<span class="token punctuation">.</span>line<span class="token punctuation">.</span>alpha <span class="token operator">-</span> n <span class="token operator">*</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                            <span class="token literal-property property">speed</span><span class="token operator">:</span> config<span class="token punctuation">.</span>speed <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> n <span class="token operator">*</span> <span class="token number">0.5</span><span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token function">cancelAnimationFrame</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>            timer <span class="token operator">=</span> <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>animate<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">drawBack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">setCanvasHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">createItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">setCanvasHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">createItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span>jQuery<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="设置步骤"><a href="#设置步骤" class="headerlink" title="设置步骤"></a>设置步骤</h2><h3 id="layout-ejs"><a href="#layout-ejs" class="headerlink" title="layout.ejs"></a>layout.ejs</h3><p>使用html5的canvas，配合jQuery库实现，实现代码：</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token comment">&lt;!--动态背景--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Dreamland<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/js/canvas_moving.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在<code>/themes/matery/layout/layout.ejs</code>文件中加入以上代码。</p><blockquote><p>注意：一定要事先查看是否引入<strong>jQuery依赖</strong>，一定要有！！！</p><p>要检查是否引入了jQuery依赖，可以按照以下步骤进行：</p><ol><li><p><strong>查看页面源代码</strong>：在浏览器中打开你想要检查的页面，然后右键点击页面上的空白区域，选择“查看页面源代码”或者“检查元素”。在源代码中搜索关键词“jQuery”或者“$”，看看是否有相关的引入语句。</p></li><li><p><strong>检查页面加载的资源</strong>：在浏览器中使用开发者工具（通常通过按下F12键或右键点击页面并选择“检查”来打开）查看页面加载的资源。在网络选项卡中，可以看到页面加载的所有文件，包括JavaScript文件。检查是否有名为“jQuery”的JavaScript文件加载。</p></li><li><p><strong>查看页面的JavaScript代码</strong>：在源代码或者开发者工具中查看页面的JavaScript代码，查找是否有使用“$”或“jQuery”关键字的地方。如果有，那么很可能是引入了jQuery依赖。</p></li><li><p><strong>查看HTML中的script标签</strong>：查看HTML代码中的script标签，看是否有引入jQuery的CDN链接或者本地文件路径。</p></li><li><p><strong>查看站点配置文件</strong>：如果是通过Hexo或者其他静态网站生成器构建的站点，可以查看站点的配置文件，通常在根目录下的_config.yml或者_config.js文件中，查找是否有引入jQuery的配置项。</p></li></ol><p>通过以上方法，你应该能够确定是否在页面中引入了jQuery依赖。</p></blockquote><h3 id="matery-css"><a href="#matery-css" class="headerlink" title="matery.css"></a>matery.css</h3><p>在<code>themes/matery/source/css/matery.css</code>最后添加以下代码：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*动态背景*/</span><span class="token selector">#Dreamland</span> <span class="token punctuation">&#123;</span><span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token property">z-index</span><span class="token punctuation">:</span> -1<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#Dreamland canvas</span> <span class="token punctuation">&#123;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="canvas-moving-js"><a href="#canvas-moving-js" class="headerlink" title="canvas_moving.js"></a>canvas_moving.js</h3><p>在<code>themes\hexo-theme-matery\source\js</code>下新建<code>canvas_moving.js</code>文件，添加<a href="#canvas_moving.js">前面的代码</a></p><p>最后执行<code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</code> 一键进行本地查看效果，修改无误后使用<code>hexo d</code>进行部署。</p><h2 id="参考博文"><a href="#参考博文" class="headerlink" title="参考博文"></a>参考博文</h2><ul><li><a href="https://blog.csdn.net/Zz_cheng/article/details/116719634">2021 hexo matery主题个性魔改_hexo主题雪花飘落-CSDN博客</a></li><li><a href="https://www.mobaijun.com/">框架師 (mobaijun.com)</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 背景 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机科学速成课</title>
      <link href="/posts/5d3a.html"/>
      <url>/posts/5d3a.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 视频笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>md格式优化</title>
      <link href="/posts/2eb3.html"/>
      <url>/posts/2eb3.html</url>
      
        <content type="html"><![CDATA[<h1 id="md样式修改"><a href="#md样式修改" class="headerlink" title="md样式修改"></a>md样式修改</h1><h2 id="背景修改"><a href="#背景修改" class="headerlink" title="背景修改"></a>背景修改</h2><p>原代码</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">body</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #eaeaea<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #34495e<span class="token punctuation">;</span>    <span class="token property">overflow-x</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">overflow-y</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>优化</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">body</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #eaeaea<span class="token punctuation">;</span><span class="token comment">/* 背景颜色 */</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>   <span class="token comment">/* 边距 */</span>    <span class="token property">color</span><span class="token punctuation">:</span> #34495e<span class="token punctuation">;</span>      <span class="token comment">/* 文字颜色 */</span>    <span class="token property">overflow-x</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">overflow-y</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>        <span class="token comment">/* background: linear-gradient(60deg, #3ab5b0 0%, #3d99be 31%, #56317a 100%); */</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>123deg<span class="token punctuation">,</span> #eec7ee 0%<span class="token punctuation">,</span> #90e2ea 50%<span class="token punctuation">,</span> #c1f7b3 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/* 渐变背景色 */</span>    <span class="token property">background-attachment</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>    <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>优化后的代码主要在以下几个方面进行了改进：</p><ol><li><p>添加了注释，使代码更具可读性。</p></li><li><p><strong>渐变背景：</strong></p><ul><li>引入了渐变背景，通过<code>linear-gradient</code>属性创建一个颜色渐变效果，使页面背景更具视觉吸引力。</li><li>使用了更生动和搭配的颜色，增强了页面的整体美感。</li></ul></li><li><p><strong>背景附着和尺寸：</strong></p><ul><li>添加了<code>background-attachment: fixed;</code>属性，使背景固定在视口中，而不随页面滚动而滚动。</li><li>设置了<code>background-size: cover;</code>，确保背景图片始终覆盖整个视口，不会出现不完整或拉伸的情况。</li></ul></li></ol><h2 id="标题优化"><a href="#标题优化" class="headerlink" title="标题优化"></a>标题优化</h2><p>原标题只有一种颜色，在文章里没有区分度，所以决定对标签颜色进行修改。</p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402051945970.png" alt="修改前"></p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402051941232.png" alt="修改后"></p><p>原代码</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">h1</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 48px 0 22px -5px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 2.0rem<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 2.0rem<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">h2</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 42px 0 18px -5px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 1.8rem<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 1.8rem<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">h3</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 38px 0 15px -4px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 1.6rem<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 1.7rem<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">h4</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 32px 0 12px -4px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 1.45rem<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 1.45rem<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">h5</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 28px 0 8px -4px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 1.2rem<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 1.2rem<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">h6</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 22px 0 4px -4px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 1.1rem<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 1.1rem<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>优化代码</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 标题1样式 */</span><span class="token selector">h1</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 48px 0 22px -5px<span class="token punctuation">;</span>       <span class="token comment">/* 上、下、左边距 */</span>    <span class="token comment">/*font-size: 2.0rem;*/</span>              <span class="token comment">/* 字体大小 */</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 2.2rem<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>              <span class="token comment">/* 字体粗细 */</span>    <span class="token comment">/*line-height: 2.0rem;*/</span>            <span class="token comment">/* 行高 */</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 2.2rem<span class="token punctuation">;</span>    <span class="token comment">/* color: #42b983 !important; */</span>    <span class="token property">color</span><span class="token punctuation">:</span> #7fbaf1 <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>             <span class="token comment">/* 新增居中样式 */</span><span class="token punctuation">&#125;</span><span class="token comment">/* 标题2样式 */</span><span class="token selector">h2</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 42px 0 18px -5px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 1.8rem<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 1.8rem<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #42b983 <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 标题3样式 */</span><span class="token selector">h3</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 38px 0 15px -4px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 1.5rem<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 1.5rem<span class="token punctuation">;</span>    <span class="token comment">/* color: #42b983 !important; */</span>    <span class="token property">color</span><span class="token punctuation">:</span> #9b59b6 <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 标题4样式 */</span><span class="token selector">h4</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 32px 0 12px -4px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 1.4rem<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 1.4rem<span class="token punctuation">;</span>    <span class="token comment">/* color: #42b983 !important; */</span>    <span class="token property">color</span><span class="token punctuation">:</span> #ff5733 <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 标题5样式 */</span><span class="token selector">h5</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 28px 0 8px -4px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 1.2rem<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 1.2rem<span class="token punctuation">;</span>    <span class="token comment">/* color: #42b983 !important; */</span>    <span class="token property">color</span><span class="token punctuation">:</span> #9b59b6 <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 标题6样式 */</span><span class="token selector">h6</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 22px 0 4px -4px<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 1.1rem<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 1.1rem<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 500<span class="token punctuation">;</span>    <span class="token comment">/* color: #b94252 !important; */</span>    <span class="token property">color</span><span class="token punctuation">:</span> #e74c3c <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改说明：</p><ol><li><p>修改了字体大小和行高，使标题间更具区分度</p></li><li><p>修改自定义颜色，使每级标题具有不同的颜色，扩大区分度。博主不是很懂颜色搭配，如果有其他更舒适的颜色配置可以在下面留言框留言(⊙o⊙)哦</p></li><li><p>新增标题居中：<code>text-align: center;</code><br>这里我只设置了二级标题居中，有需要的可以自行设置其他居中，这里我给出所有标题居中的设置：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">h1, h2, h3, h4, h5, h6</span> <span class="token punctuation">&#123;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>如果只是设置某一级标题居中，可以只在该级标题中插入<code>text-align: center;</code></p></li></ol><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>分割线样式代码在这，伙伴们可以自行修改：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 分割线样式 */</span><span class="token selector">hr</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 20px 0<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">border-top</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里我对分割线没做修改，只是在二级标题下添加了分割线，毕竟没有分割线的样式看着真实难受：</p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402051926475.png" alt="无分割线"></p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402051928326.png" alt="有分割线"></p><p>不知道兄弟们觉得哪个更好看，不过我觉得还是有分割线更有条理一些。萝卜白菜各有所爱嘛O(∩_∩)O~</p><p>要在标题下添加分割线只需添加以下代码：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">h1::after,h2::after,h3::after,h4::after,h5::after,h6::after</span> <span class="token punctuation">&#123;</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">;</span> <span class="token comment">/* 分割线的颜色 */</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>    <span class="token comment">/* 调整分割线与标题之间的垂直间距 */</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这是给所有标题下都添加分割线，博主觉得给所有标题添加并不美观，所以只给二级标题下添加了。</p><h2 id="引用块"><a href="#引用块" class="headerlink" title="引用块"></a>引用块</h2><p>原代码</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">blockquote</span> <span class="token punctuation">&#123;</span>    <span class="token property">border-left</span><span class="token punctuation">:</span> 5px solid #42b983<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 1rem 0.8rem 0.2rem 0.8rem<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #666<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>66<span class="token punctuation">,</span> 185<span class="token punctuation">,</span> 131<span class="token punctuation">,</span> .1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402051954660.png" alt="修改前"></p><p>原来的样式是尖角，同时我感觉边距不是很合适，所以修改了这两处样式：</p><ul><li>修改边距</li><li>边框改为圆角</li></ul><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 引用块样式 */</span><span class="token selector">blockquote</span> <span class="token punctuation">&#123;</span>    <span class="token property">border-left</span><span class="token punctuation">:</span> 5px solid #42b983<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0.5rem 0.8rem 0.3rem 0.8rem<span class="token punctuation">;</span>   <span class="token comment">/* 上、右、下、左边距 */</span>    <span class="token property">color</span><span class="token punctuation">:</span> #666<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>66<span class="token punctuation">,</span> 185<span class="token punctuation">,</span> 131<span class="token punctuation">,</span> .1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 5px 10px 10px 5px<span class="token punctuation">;</span>   <span class="token comment">/*添加圆角*/</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402052035722.png" alt="修改后"></p><h2 id="行内代码"><a href="#行内代码" class="headerlink" title="行内代码"></a>行内代码</h2><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">code</span> <span class="token punctuation">&#123;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 1px 5px<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 13px <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> Inconsolata<span class="token punctuation">,</span> Monaco<span class="token punctuation">,</span> Consolas<span class="token punctuation">,</span> <span class="token string">'Courier New'</span><span class="token punctuation">,</span> Courier<span class="token punctuation">,</span> monospace<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 0.91rem<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #e96900<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #f8f8f8<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 2px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402052042846.png" alt="修改前"></p><p>原格式看起来不够清晰，所以我修改了一下颜色，这样看起来更清晰。</p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402052048298.png" alt="优化后"></p><p>优化代码如下：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 行内代码样式优化 */</span><span class="token selector">code</span> <span class="token punctuation">&#123;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 1px 5px<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 13px <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> Inconsolata<span class="token punctuation">,</span> Monaco<span class="token punctuation">,</span> Consolas<span class="token punctuation">,</span> <span class="token string">'Courier New'</span><span class="token punctuation">,</span> Courier<span class="token punctuation">,</span> monospace<span class="token punctuation">;</span>    <span class="token property">word-break</span><span class="token punctuation">:</span> break-word<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 2.1rem<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> .2rem .6rem<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #E66161<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #FF6A6A22<span class="token punctuation">;</span>    <span class="token comment">/* F12 查看css确实好用 */</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 4px<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="选中"><a href="#选中" class="headerlink" title="选中"></a>选中</h2><p>默认的选中是深蓝色背景，白色字体（几乎所有网站的默认样式），博主觉得有些审美疲劳了，为了和博客的底色更搭，所以我决定修改一下选中样式。</p><p>只需在博客的主要css文件中添加以下代码即可（matery主题是<code>matery.css</code>）</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">::selection</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #97e262<span class="token punctuation">;</span>  <span class="token comment">/* 设置选中文本的背景色 */</span>    <span class="token property">color</span><span class="token punctuation">:</span> #ffffff<span class="token punctuation">;</span><span class="token comment">/* 设置选中文本的文本颜色 */</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402052229232.png" alt="选中效果"></p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><ol><li><p><code>padding-bottom: 10px;</code> 表示在元素的底部（下边缘）设置内边距，即在元素的内容区域和其边框之间添加额外的空间，高度为 10 像素。具体而言，如果你有一个元素，并且为它应用了 <code>padding-bottom: 10px;</code>，那么元素的底部将有 10 像素的空白区域。这可以用来调整元素内部内容和边框之间的距离，或者在布局中为元素留出一些空间。</p></li><li><p><code>border-radius: 5px 10px 10px 5px;</code> 是 CSS 中设置圆角边框的属性，它定义了四个圆角的半径。</p><p>具体来说，这个属性值的含义是按照顺时针方向，分别对应左上、右上、右下、左下四个角的半径。在这个例子中：</p><ul><li>左上角：5px</li><li>右上角：10px</li><li>右下角：10px</li><li>左下角：5px</li></ul><p>这样设置的效果是，元素的左上角和左下角的圆角半径为 5px，而右上角和右下角的圆角半径为 10px。这种方式允许你为每个角指定不同的圆角半径，以创建各种不同形状的圆角。</p></li><li><p>这段代码是为元素添加阴影效果的 CSS 样式。在这里，使用了两个属性 <code>-webkit-box-shadow</code> 和 <code>box-shadow</code>，分别是针对 WebKit 浏览器和其他浏览器的标准。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 20px 0 #ffbd2e<span class="token punctuation">,</span> 40px 0 #27c93f<span class="token punctuation">;</span><span class="token property">box-shadow</span><span class="token punctuation">:</span> 20px 0 #ffbd2e<span class="token punctuation">,</span> 40px 0 #27c93f<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>解析：</p><ul><li><code>-webkit-box-shadow</code> 是 WebKit 浏览器专有的属性，用于设置元素的阴影效果。</li><li><code>box-shadow</code> 是标准 CSS 属性，支持大多数现代浏览器，也用于设置元素的阴影效果。</li></ul><p>两者都接受多个参数，其中：</p><ul><li><code>20px 0 #ffbd2e</code> 表示第一个阴影，水平偏移为 20px，垂直偏移为 0，颜色为 #ffbd2e。</li><li><code>40px 0 #27c93f</code> 表示第二个阴影，水平偏移为 40px，垂直偏移为 0，颜色为 #27c93f。</li></ul><p>这样的设置会在元素的右侧产生两个阴影，一个偏移 20px，另一个偏移 40px，分别用不同的颜色表示。这种效果常用于制作立体感，使元素看起来有立体的投影。</p></li><li><p>这段代码使用了 <code>-webkit-filter</code> 属性，该属性用于对元素应用图像滤镜效果。在这里使用了 <code>invert(50%)</code>，表示将元素中的颜色反转（即反相）一半。</p><p>解析：</p><ul><li><code>-webkit-filter</code> 是 WebKit 浏览器专有的属性，用于应用图像滤镜效果。</li><li><code>invert(50%)</code> 是滤镜效果中的一种，它将元素的颜色反转。括号中的参数 <code>50%</code> 表示反转一半的颜色，即使得元素呈现一种半反转的效果。</li></ul><p>具体效果是将元素的亮度和颜色反转一半，使得原本的颜色变得更浅或更深，以达到反转效果。这样的滤镜效果常用于调整图像颜色，或者在特定场景下实现视觉效果的需求。需要注意的是，滤镜效果的兼容性可能因浏览器而异，所以在使用时应该谨慎考虑浏览器的支持情况。</p></li><li><p>这段代码是用于禁止用户选择（文本选中）的 CSS 样式。不同浏览器厂商采用不同的前缀来支持这一功能，因此提供了对 WebKit（Chrome、Safari）、Mozilla（Firefox）、Microsoft（Internet Explorer、Edge）浏览器以及标准规范的支持。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token property">-webkit-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">-moz-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">-ms-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">user-select</span><span class="token punctuation">:</span> none<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>解析：</p><ul><li><code>-webkit-user-select: none;</code>: WebKit 浏览器（例如 Chrome 和 Safari）的私有属性，用于禁止用户选择文本。</li><li><code>-moz-user-select: none;</code>: Mozilla 浏览器（例如 Firefox）的私有属性，同样用于禁止用户选择文本。</li><li><code>-ms-user-select: none;</code>: Microsoft 浏览器（例如 Internet Explorer 和 Edge）的私有属性，同样用于禁止用户选择文本。</li><li><code>user-select: none;</code>: 标准 CSS 属性，用于禁止用户选择文本。</li></ul><p>这样设置后，页面中的文本内容将无法被用户选中。这在一些特定的应用场景中可能会用到，例如避免用户复制网站上的内容，或者在实现一些特殊效果时禁止文本选择。需要注意的是，这种设置可能会影响用户体验，因此在使用时应根据具体情况进行权衡。</p></li><li><p>这段代码是使用 <code>-webkit-transition</code> 属性为元素的所有属性（<code>all</code>）设置过渡效果。过渡效果用于在元素属性发生变化时，使变化更加平滑和渐变。</p><p>解析：</p><ul><li><code>-webkit-transition: all .3s;</code>: WebKit 浏览器（例如 Chrome 和 Safari）的私有属性，用于指定元素的过渡效果。<ul><li><code>all</code>: 表示对所有属性都应用过渡效果。</li><li><code>.3s</code>: 表示过渡的持续时间为 0.3 秒。这个值可以根据实际需要进行调整，决定了过渡效果的时长。</li></ul></li></ul><p>这样的设置将在元素属性发生变化时（例如颜色、尺寸、位置等），以 0.3 秒的时间内过渡到新的状态，使变化更加平滑。过渡效果是一种改善用户体验的手段，可以使页面中的元素变化显得更加流畅和自然。</p><p>需要注意的是，虽然上述代码使用了 WebKit 浏览器的私有属性，但通常为了兼容性，你可能还需要添加标准的过渡属性，例如 <code>transition: all .3s;</code>。这样可以确保在其他浏览器中也能正常使用过渡效果。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>右键菜单</title>
      <link href="/posts/92dc.html"/>
      <url>/posts/92dc.html</url>
      
        <content type="html"><![CDATA[<h1 id="增加右键菜单"><a href="#增加右键菜单" class="headerlink" title="增加右键菜单"></a>增加右键菜单</h1><p>同主题的小伙伴可能发现了，博客网站的右键菜单实在是功能少的可怜，一个好的右键菜单可以让访客朋友的用户体验提高不少，所以下面我们就来就是实现给我买的博客网站添加一个功能更丰富的右键菜单😋</p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202404292134042.png" alt="右键菜单"></p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>第一步，定位到主题文件夹下的页面布局代码，即<code>matery/layout/layout.ejs</code>，在<code>&lt;main&gt;</code>标签中加入：</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token comment">&lt;!-- 添加右键菜单 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">#rightMenu</span> <span class="token punctuation">&#123;</span>        <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 0 .25rem<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 10rem<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> fit-content<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> 10%<span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> 10%<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> .85<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">-webkit-backdrop-filter</span><span class="token punctuation">:</span> <span class="token function">blur</span><span class="token punctuation">(</span>20px<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">backdrop-filter</span><span class="token punctuation">:</span> <span class="token function">blur</span><span class="token punctuation">(</span>20px<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>        <span class="token property">z-index</span><span class="token punctuation">:</span> 99994<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #e3e8f7<span class="token punctuation">;</span>        <span class="token property">user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 0 12px 4px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> .05<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#rightMenu:hover</span> <span class="token punctuation">&#123;</span>        <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #177cb0<span class="token punctuation">;</span>        <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 8px 12px -3px #4259ef23<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#rightMenu .rightMenu-group</span> <span class="token punctuation">&#123;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> .35rem .3rem<span class="token punctuation">;</span>        <span class="token property">transition</span><span class="token punctuation">:</span> .3s<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#rightMenu .rightMenu-line</span> <span class="token punctuation">&#123;</span>        <span class="token property">border-top</span><span class="token punctuation">:</span> 1px dashed #4259ef23<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#rightMenu .rightMenu-group.rightMenu-small</span> <span class="token punctuation">&#123;</span>        <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>        <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#rightMenu .rightMenu-group .rightMenu-item</span> <span class="token punctuation">&#123;</span>        <span class="token property">border-radius</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>        <span class="token property">transition</span><span class="token punctuation">:</span> .3s<span class="token punctuation">;</span>        <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> #525f7f<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#rightMenu .rightMenu-line .rightMenu-item</span> <span class="token punctuation">&#123;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> .25rem 0<span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> .25rem 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#rightMenu .rightMenu-group.rightMenu-line .rightMenu-item</span> <span class="token punctuation">&#123;</span>        <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#rightMenu .rightMenu-group .rightMenu-item:hover</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> #177cb0<span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>        <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 8px 12px -3px #4259ef23<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#rightMenu .rightMenu-group .rightMenu-item:active</span> <span class="token punctuation">&#123;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>.97<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#rightMenu .rightMenu-group .rightMenu-item i</span> <span class="token punctuation">&#123;</span>        <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>        <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> 1.5rem<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 2rem<span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 0 .25rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#rightMenu .rightMenu-line .rightMenu-item i</span> <span class="token punctuation">&#123;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> 0 .25rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#rightMenu .rightMenu-group .rightMenu-item span</span> <span class="token punctuation">&#123;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> 1.5rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.rightMenu-small .rightMenu-item</span> <span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>        <span class="token property">line-height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">#rightmenu-mask</span> <span class="token punctuation">&#123;</span>        <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 100vw<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> 0 0<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token property">z-index</span><span class="token punctuation">:</span> 101<span class="token punctuation">;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> 0 <span class="token important">!important</span><span class="token punctuation">;</span>        <span class="token property">z-index</span><span class="token punctuation">:</span> 99993<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">top</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span> <span class="token property">left</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span> <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-group rightMenu-small<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-item<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menu-backward<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>返回<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-arrow-left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-item<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menu-forward<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>前进<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-arrow-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-item<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menu-refresh<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>刷新<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-arrow-rotate-right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-item<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menu-top<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>返回顶部<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-arrow-up<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-group rightMenu-line rightMenuPlugin<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-item<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menu-copytext<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-copy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>复制选中文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-item<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menu-copylink<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>复制链接地址<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-item<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menu-pastetext<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-paste<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>粘贴文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-item<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menu-commenttext<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-comment-medical<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>引用到评论<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-item<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menu-newwindow<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-window-restore<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>新窗口打开<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-item<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menu-copyimg<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-images<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>复制此图片<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-item<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menu-downloadimg<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-download<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>下载此图片<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-item<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menu-search<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-magnifying-glass<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>站内搜索<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-item<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menu-searchBing<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-magnifying-glass<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>必应搜索<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-item<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menu-music-toggle<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-play<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>播放音乐<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-item<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menu-music-back<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-backward<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>切换到上一首<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-item<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menu-music-forward<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-forward<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>切换到下一首<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-item<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menu-music-playlist<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript">window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>quot<span class="token punctuation">;</span>https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>music<span class="token punctuation">.</span><span class="token number">163</span><span class="token punctuation">.</span>com<span class="token operator">/</span>#<span class="token operator">/</span>playlist<span class="token operator">?</span>app_version<span class="token operator">=</span><span class="token number">8.8</span><span class="token number">.36</span><span class="token operator">&amp;</span>amp<span class="token punctuation">;</span>id<span class="token operator">=</span><span class="token number">5197802668</span><span class="token operator">&amp;</span>quot<span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>quot<span class="token punctuation">;</span>_blank<span class="token operator">&amp;</span>quot<span class="token punctuation">;</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-radio<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>查看所有歌曲<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-item<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menu-music-copyMusicName<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-copy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>复制歌名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-group rightMenu-line rightMenuOther<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-item menu-link<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menu-randomWebsite<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noopener<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://travel.moe/go.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-paper-plane<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>次元跃迁<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-item menu-link<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menu-randomPost<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-shoe-prints<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>随便逛逛<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-item menu-link<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/categories/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-cube<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>博客分类<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-item menu-link<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/tags/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-tags<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>文章标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-group rightMenu-line<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-item menu-link<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/privacy/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-hand<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>隐私协议<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-item menu-link<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/cc/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-closed-captioning<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>版权协议<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-item menu-link<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/SEAEPOCH-WRITING-STANDARDS/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-feather<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>行文规范<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-group rightMenu-line rightMenuOther<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-item<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menu-copy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-copy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>复制地址<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightMenu-item<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menu-darkmode<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fas fa-moon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>menu-darkmode-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>深色模式<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rightmenu-mask<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span> none</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/js/rightMenu.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token function">addRightMenuClickEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在<code>matery/source/js</code>下新建rightMenu.js，添加</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 初始化函数</span><span class="token keyword">let</span> rm <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">var</span> btf <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token function-variable function">scrollToDest</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">pos<span class="token punctuation">,</span> time</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>pos <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> time <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">const</span> currentPos <span class="token operator">=</span> window<span class="token punctuation">.</span>scrollY <span class="token operator">||</span> window<span class="token punctuation">.</span>screenTop    pos <span class="token operator">=</span> pos <span class="token operator">-</span> <span class="token number">70</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">'CSS'</span> <span class="token keyword">in</span> window <span class="token operator">&amp;&amp;</span> <span class="token constant">CSS</span><span class="token punctuation">.</span><span class="token function">supports</span><span class="token punctuation">(</span><span class="token string">'scroll-behavior'</span><span class="token punctuation">,</span> <span class="token string">'smooth'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">top</span><span class="token operator">:</span> pos<span class="token punctuation">,</span>        <span class="token literal-property property">behavior</span><span class="token operator">:</span> <span class="token string">'smooth'</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">let</span> start <span class="token operator">=</span> <span class="token keyword">null</span>    time <span class="token operator">=</span> time <span class="token operator">||</span> <span class="token number">500</span>    window<span class="token punctuation">.</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">step</span><span class="token punctuation">(</span><span class="token parameter">currentTime</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      start <span class="token operator">=</span> <span class="token operator">!</span>start <span class="token operator">?</span> currentTime <span class="token operator">:</span> start      <span class="token keyword">if</span> <span class="token punctuation">(</span>currentPos <span class="token operator">&lt;</span> pos<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> progress <span class="token operator">=</span> currentTime <span class="token operator">-</span> start        window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>pos <span class="token operator">-</span> currentPos<span class="token punctuation">)</span> <span class="token operator">*</span> progress <span class="token operator">/</span> time<span class="token punctuation">)</span> <span class="token operator">+</span> currentPos<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>progress <span class="token operator">&lt;</span> time<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          window<span class="token punctuation">.</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>step<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>          window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> pos<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> progress <span class="token operator">=</span> currentTime <span class="token operator">-</span> start        window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> currentPos <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>currentPos <span class="token operator">-</span> pos<span class="token punctuation">)</span> <span class="token operator">*</span> progress <span class="token operator">/</span> time<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>progress <span class="token operator">&lt;</span> time<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          window<span class="token punctuation">.</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>step<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>          window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> pos<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> heo <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 下载图片</span>  <span class="token function-variable function">downloadImage</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">imgsrc<span class="token punctuation">,</span> name</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">//下载图片地址和图片名</span>    rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>rm<span class="token punctuation">.</span>downloadimging <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      rm<span class="token punctuation">.</span>downloadimging <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">toast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token string">'&lt;span>正在下载中，请稍后&lt;/span>'</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 解决跨域 Canvas 污染问题</span>        image<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"crossOrigin"</span><span class="token punctuation">,</span> <span class="token string">"anonymous"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        image<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">let</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"canvas"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> image<span class="token punctuation">.</span>width<span class="token punctuation">;</span>          canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> image<span class="token punctuation">.</span>height<span class="token punctuation">;</span>          <span class="token keyword">let</span> context <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">"2d"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          context<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> image<span class="token punctuation">.</span>width<span class="token punctuation">,</span> image<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">let</span> url <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">"image/png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//得到图片的base64编码数据</span>          <span class="token keyword">let</span> a <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生成一个a元素</span>          <span class="token keyword">let</span> event <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MouseEvent</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 创建一个单击事件</span>          a<span class="token punctuation">.</span>download <span class="token operator">=</span> name <span class="token operator">||</span> <span class="token string">"photo"</span><span class="token punctuation">;</span> <span class="token comment">// 设置图片名称</span>          a<span class="token punctuation">.</span>href <span class="token operator">=</span> url<span class="token punctuation">;</span> <span class="token comment">// 将生成的URL设置为a.href属性</span>          a<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 触发a的单击事件</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        image<span class="token punctuation">.</span>src <span class="token operator">=</span> imgsrc<span class="token punctuation">;</span>        <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">toast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>          <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token string">'&lt;span>图片已添加盲水印，请遵守版权协议&lt;/span>'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        rm<span class="token punctuation">.</span>downloadimging <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token string">"10000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">toast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token string">'&lt;span>有正在进行中的下载，请稍后再试&lt;/span>'</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">//切换音乐播放状态</span>  <span class="token function-variable function">musicToggle</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"等待开发..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">//音乐上一曲</span>  <span class="token function-variable function">musicSkipBack</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"等待开发..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">//音乐下一曲</span>  <span class="token function-variable function">musicSkipForward</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"等待开发..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">//获取音乐中的名称</span>  <span class="token function-variable function">musicGetName</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"等待开发..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//禁止图片拖拽</span>rm<span class="token punctuation">.</span>stopdragimg <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>rm<span class="token punctuation">.</span>stopdragimg<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"dragstart"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 显示菜单</span>rm<span class="token punctuation">.</span><span class="token function-variable function">showRightMenu</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">isTrue<span class="token punctuation">,</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">0</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> $rightMenu <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#rightMenu'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  $rightMenu<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'top'</span><span class="token punctuation">,</span> x <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'left'</span><span class="token punctuation">,</span> y <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>isTrue<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    $rightMenu<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">stopMaskScroll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    $rightMenu<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 隐藏菜单</span>rm<span class="token punctuation">.</span><span class="token function-variable function">hideRightMenu</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  rm<span class="token punctuation">.</span><span class="token function">showRightMenu</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#rightmenu-mask'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'style'</span><span class="token punctuation">,</span> <span class="token string">'display: none'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 尺寸</span><span class="token keyword">let</span> rmWidth <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#rightMenu'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> rmHeight <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#rightMenu'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 重新定义尺寸</span>rm<span class="token punctuation">.</span><span class="token function-variable function">reloadrmSize</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  rmWidth <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#rightMenu'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  rmHeight <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#rightMenu'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 获取点击的href</span><span class="token keyword">let</span> domhref <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token keyword">let</span> domImgSrc <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token keyword">let</span> globalEvent <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token comment">// 监听右键初始化</span>window<span class="token punctuation">.</span><span class="token function-variable function">oncontextmenu</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientWidth <span class="token operator">></span> <span class="token number">768</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> pageX <span class="token operator">=</span> event<span class="token punctuation">.</span>clientX <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">//加10是为了防止显示时鼠标遮在菜单上</span>    <span class="token keyword">let</span> pageY <span class="token operator">=</span> event<span class="token punctuation">.</span>clientY<span class="token punctuation">;</span>    <span class="token comment">// console.log(event);</span>    <span class="token comment">//其他额外菜单</span>    <span class="token keyword">let</span> $rightMenuOther <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.rightMenuOther'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuPlugin <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.rightMenuPlugin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuCopyText <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-copytext'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuPasteText <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-pastetext'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuCommentText <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-commenttext'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuNewWindow <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-newwindow'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuCopyLink <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-copylink'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuCopyImg <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-copyimg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuDownloadImg <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-downloadimg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuSearch <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-search'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuSearchBing <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-searchBing'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuMusicToggle <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-music-toggle'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuMusicBack <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-music-back'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuMusicForward <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-music-forward'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuMusicPlaylist <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-music-playlist'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuMusicCopyMusicName <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-music-copyMusicName'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> href <span class="token operator">=</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>href<span class="token punctuation">;</span>    <span class="token keyword">let</span> imgsrc <span class="token operator">=</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>currentSrc<span class="token punctuation">;</span>    <span class="token comment">// 判断模式 扩展模式为有事件</span>    <span class="token keyword">let</span> pluginMode <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    $rightMenuOther<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    globalEvent <span class="token operator">=</span> event<span class="token punctuation">;</span>    <span class="token comment">// 检查是否需要复制 是否有选中文本</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>selectTextNow <span class="token operator">&amp;&amp;</span> window<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      pluginMode <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      $rightMenuCopyText<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuCommentText<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuSearch<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuSearchBing<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      $rightMenuCopyText<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuCommentText<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuSearchBing<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuSearch<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//检查是否右键点击了链接a标签</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>href<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      pluginMode <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      $rightMenuNewWindow<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuCopyLink<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      domhref <span class="token operator">=</span> href<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      $rightMenuNewWindow<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuCopyLink<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//检查是否需要复制图片</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>imgsrc<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      pluginMode <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      $rightMenuCopyImg<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuDownloadImg<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      domImgSrc <span class="token operator">=</span> imgsrc<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      $rightMenuCopyImg<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuDownloadImg<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 判断是否为输入框</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>tagName<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'input'</span> <span class="token operator">||</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>tagName<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'textarea'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'这是一个输入框'</span><span class="token punctuation">)</span>      pluginMode <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      $rightMenuPasteText<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      $rightMenuPasteText<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//判断是否是音乐</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>nodeName <span class="token operator">==</span> <span class="token string">"METING-JS"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'这是一个音乐'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      pluginMode <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      $rightMenuMusicToggle<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuMusicBack<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuMusicForward<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuMusicPlaylist<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuMusicCopyMusicName<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      $rightMenuMusicToggle<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuMusicBack<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuMusicForward<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuMusicPlaylist<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuMusicCopyMusicName<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 如果不是扩展模式则隐藏扩展模块</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>pluginMode<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      $rightMenuOther<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuPlugin<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      $rightMenuPlugin<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    rm<span class="token punctuation">.</span><span class="token function">reloadrmSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// 鼠标默认显示在鼠标右下方，当鼠标靠右或考下时，将菜单显示在鼠标左方\上方</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>pageX <span class="token operator">+</span> rmWidth <span class="token operator">></span> window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      pageX <span class="token operator">-=</span> rmWidth <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>pageY <span class="token operator">+</span> rmHeight <span class="token operator">></span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      pageY <span class="token operator">-=</span> pageY <span class="token operator">+</span> rmHeight <span class="token operator">-</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    rm<span class="token punctuation">.</span><span class="token function">showRightMenu</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> pageY<span class="token punctuation">,</span> pageX<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#rightmenu-mask'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'style'</span><span class="token punctuation">,</span> <span class="token string">'display: flex'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 下载图片状态</span>rm<span class="token punctuation">.</span>downloadimging <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token comment">// 复制图片到剪贴板</span>rm<span class="token punctuation">.</span><span class="token function-variable function">writeClipImg</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">imgsrc</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// console.log('按下复制');</span>  rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">toast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token string">'&lt;span>正在下载中，请稍后&lt;/span>'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>rm<span class="token punctuation">.</span>downloadimging <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    rm<span class="token punctuation">.</span>downloadimging <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">copyImage</span><span class="token punctuation">(</span>imgsrc<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">toast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token string">'&lt;span>复制成功！图片已添加盲水印，请遵守版权协议&lt;/span>'</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      rm<span class="token punctuation">.</span>downloadimging <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token string">"10000"</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">imageToBlob</span><span class="token punctuation">(</span><span class="token parameter">imageURL</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> c <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"canvas"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> ctx <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">"2d"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  img<span class="token punctuation">.</span>crossOrigin <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>  img<span class="token punctuation">.</span>src <span class="token operator">=</span> imageURL<span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    img<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      c<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>naturalWidth<span class="token punctuation">;</span>      c<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>naturalHeight<span class="token punctuation">;</span>      ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      c<span class="token punctuation">.</span><span class="token function">toBlob</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">blob</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token comment">// here the image is a blob</span>        <span class="token function">resolve</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token string">"image/png"</span><span class="token punctuation">,</span> <span class="token number">0.75</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">copyImage</span><span class="token punctuation">(</span><span class="token parameter">imageURL</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> blob <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">imageToBlob</span><span class="token punctuation">(</span>imageURL<span class="token punctuation">)</span>  <span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClipboardItem</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token string-property property">"image/png"</span><span class="token operator">:</span> blob  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  navigator<span class="token punctuation">.</span>clipboard<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>rm<span class="token punctuation">.</span><span class="token function-variable function">switchDarkMode</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">switchNightMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>rm<span class="token punctuation">.</span><span class="token function-variable function">copyUrl</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span><span class="token string">"&lt;input id='copyVal'>&lt;/input>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> text <span class="token operator">=</span> id<span class="token punctuation">;</span>  <span class="token keyword">var</span> input <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"copyVal"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  input<span class="token punctuation">.</span>value <span class="token operator">=</span> text<span class="token punctuation">;</span>  input<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  input<span class="token punctuation">.</span><span class="token function">setSelectionRange</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> input<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>  document<span class="token punctuation">.</span><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token string">"copy"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#copyVal"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">stopMaskScroll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"rightmenu-mask"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> xscroll <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"rightmenu-mask"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    xscroll<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"mousewheel"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">//阻止浏览器默认方法</span>      rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// e.preventDefault();</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"rightMenu"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> xscroll <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"rightMenu"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    xscroll<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"mousewheel"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">//阻止浏览器默认方法</span>      rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// e.preventDefault();</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>rm<span class="token punctuation">.</span><span class="token function-variable function">rightmenuCopyText</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">txt</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>clipboard<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    navigator<span class="token punctuation">.</span>clipboard<span class="token punctuation">.</span><span class="token function">writeText</span><span class="token punctuation">(</span>txt<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>rm<span class="token punctuation">.</span><span class="token function-variable function">copyPageUrl</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> selURL <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token punctuation">;</span>  rm<span class="token punctuation">.</span><span class="token function">copyUrl</span><span class="token punctuation">(</span>selURL<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">toast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token string">'&lt;span>复制本页链接地址成功&lt;/span>'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>rm<span class="token punctuation">.</span><span class="token function-variable function">sharePage</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> content <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token punctuation">;</span>  rm<span class="token punctuation">.</span><span class="token function">copyUrl</span><span class="token punctuation">(</span>selURL<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">toast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token string">'&lt;span>复制本页链接地址成功&lt;/span>'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 复制当前选中文本</span><span class="token keyword">var</span> selectTextNow <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>document<span class="token punctuation">.</span>onmouseup <span class="token operator">=</span> document<span class="token punctuation">.</span>ondbclick <span class="token operator">=</span> selceText<span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">selceText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> txt<span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>selection<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    txt <span class="token operator">=</span> document<span class="token punctuation">.</span>selection<span class="token punctuation">.</span><span class="token function">createRange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    txt <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">''</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>txt<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    selectTextNow <span class="token operator">=</span> txt<span class="token punctuation">;</span>    <span class="token comment">// console.log(selectTextNow);</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    selectTextNow <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 读取剪切板</span>rm<span class="token punctuation">.</span><span class="token function-variable function">readClipboard</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>clipboard<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    navigator<span class="token punctuation">.</span>clipboard<span class="token punctuation">.</span><span class="token function">readText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">clipText</span> <span class="token operator">=></span> rm<span class="token punctuation">.</span><span class="token function">insertAtCaret</span><span class="token punctuation">(</span>globalEvent<span class="token punctuation">.</span>target<span class="token punctuation">,</span> clipText<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 粘贴文本到焦点</span>rm<span class="token punctuation">.</span><span class="token function-variable function">insertAtCaret</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">elemt<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> startPos <span class="token operator">=</span> elemt<span class="token punctuation">.</span>selectionStart<span class="token punctuation">,</span>    endPos <span class="token operator">=</span> elemt<span class="token punctuation">.</span>selectionEnd<span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>selection<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    elemt<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> sel <span class="token operator">=</span> document<span class="token punctuation">.</span>selection<span class="token punctuation">.</span><span class="token function">createRange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    sel<span class="token punctuation">.</span>text <span class="token operator">=</span> value<span class="token punctuation">;</span>    elemt<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>startPos <span class="token operator">||</span> startPos <span class="token operator">==</span> <span class="token string">'0'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">var</span> scrollTop <span class="token operator">=</span> elemt<span class="token punctuation">.</span>scrollTop<span class="token punctuation">;</span>      elemt<span class="token punctuation">.</span>value <span class="token operator">=</span> elemt<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> startPos<span class="token punctuation">)</span> <span class="token operator">+</span> value <span class="token operator">+</span> elemt<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>endPos<span class="token punctuation">,</span> elemt<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>      elemt<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      elemt<span class="token punctuation">.</span>selectionStart <span class="token operator">=</span> startPos <span class="token operator">+</span> value<span class="token punctuation">.</span>length<span class="token punctuation">;</span>      elemt<span class="token punctuation">.</span>selectionEnd <span class="token operator">=</span> startPos <span class="token operator">+</span> value<span class="token punctuation">.</span>length<span class="token punctuation">;</span>      elemt<span class="token punctuation">.</span>scrollTop <span class="token operator">=</span> scrollTop<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      elemt<span class="token punctuation">.</span>value <span class="token operator">+=</span> value<span class="token punctuation">;</span>      elemt<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//粘贴文本</span>rm<span class="token punctuation">.</span><span class="token function-variable function">pasteText</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> result <span class="token operator">=</span> rm<span class="token punctuation">.</span><span class="token function">readClipboard</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">''</span><span class="token punctuation">;</span>  rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//引用到评论</span>rm<span class="token punctuation">.</span><span class="token function-variable function">rightMenuCommentText</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">txt</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> input <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'veditor'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> evt <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createEvent</span><span class="token punctuation">(</span><span class="token string">'HTMLEvents'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  evt<span class="token punctuation">.</span><span class="token function">initEvent</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> inputValue <span class="token operator">=</span> <span class="token function">replaceAll</span><span class="token punctuation">(</span>txt<span class="token punctuation">,</span> <span class="token string">'\n'</span><span class="token punctuation">,</span> <span class="token string">'\n> '</span><span class="token punctuation">)</span>  input<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">'> '</span> <span class="token operator">+</span> inputValue <span class="token operator">+</span> <span class="token string">'\n\n'</span><span class="token punctuation">;</span>  input<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span>evt<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> domTop <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"#vcomments"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>offsetTop<span class="token punctuation">;</span>  window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> domTop <span class="token operator">-</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  input<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  input<span class="token punctuation">.</span><span class="token function">setSelectionRange</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//替换所有内容</span><span class="token keyword">function</span> <span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token parameter">string<span class="token punctuation">,</span> search<span class="token punctuation">,</span> replace</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> string<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>search<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>replace<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// Bing搜索</span>rm<span class="token punctuation">.</span><span class="token function-variable function">searchBing</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">toast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token string">'&lt;span>即将跳转到必应搜索&lt;/span>'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'https://cn.bing.com/search?q='</span> <span class="token operator">+</span> selectTextNow<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token string">"1000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//分享链接</span>rm<span class="token punctuation">.</span><span class="token function-variable function">copyLink</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  rm<span class="token punctuation">.</span><span class="token function">rightmenuCopyText</span><span class="token punctuation">(</span>domhref<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">toast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token string">'&lt;span>已复制链接地址&lt;/span>'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">addRightMenuClickEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 添加点击事件</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-backward'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    window<span class="token punctuation">.</span>history<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-forward'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    window<span class="token punctuation">.</span>history<span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-refresh'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    window<span class="token punctuation">.</span>location<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-top'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    btf<span class="token punctuation">.</span><span class="token function">scrollToDest</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.menu-link'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> rm<span class="token punctuation">.</span>hideRightMenu<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-darkmode'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> rm<span class="token punctuation">.</span>switchDarkMode<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-home'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>origin<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-randomPost'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">toRandomPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#rightmenu-mask'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> rm<span class="token punctuation">.</span>hideRightMenu<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#rightmenu-mask'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contextmenu</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-copy'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> rm<span class="token punctuation">.</span>copyPageUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-pastetext'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> rm<span class="token punctuation">.</span>pasteText<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-copytext'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    rm<span class="token punctuation">.</span><span class="token function">rightmenuCopyText</span><span class="token punctuation">(</span>selectTextNow<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">toast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token string">'&lt;span>复制成功，复制或转载请标注文本位置&lt;/span>'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-commenttext'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    rm<span class="token punctuation">.</span><span class="token function">rightMenuCommentText</span><span class="token punctuation">(</span>selectTextNow<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-newwindow'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>domhref<span class="token punctuation">)</span><span class="token punctuation">;</span>    rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-copylink'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> rm<span class="token punctuation">.</span>copyLink<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-downloadimg'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    heo<span class="token punctuation">.</span><span class="token function">downloadImage</span><span class="token punctuation">(</span>domImgSrc<span class="token punctuation">,</span> <span class="token string">'SeaYJImageDownload'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-copyimg'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    rm<span class="token punctuation">.</span><span class="token function">writeClipImg</span><span class="token punctuation">(</span>domImgSrc<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-search'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#searchIcon'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> t <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'searchInput'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> evt <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createEvent</span><span class="token punctuation">(</span><span class="token string">'HTMLEvents'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    evt<span class="token punctuation">.</span><span class="token function">initEvent</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    t<span class="token punctuation">.</span>value <span class="token operator">=</span> selectTextNow<span class="token punctuation">;</span>    t<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span>evt<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-searchBing'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> rm<span class="token punctuation">.</span>searchBing<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//音乐</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-music-toggle'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> heo<span class="token punctuation">.</span>musicToggle<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-music-back'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> heo<span class="token punctuation">.</span>musicSkipBack<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-music-forward'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> heo<span class="token punctuation">.</span>musicSkipForward<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-music-copyMusicName'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    rm<span class="token punctuation">.</span><span class="token function">rightmenuCopyText</span><span class="token punctuation">(</span>heo<span class="token punctuation">.</span><span class="token function">musicGetName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">toast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token string">'&lt;span>复制歌曲名称成功&lt;/span>'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在你就可以本地部署并查看效果了</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://blog.meta-code.top/2022/06/12/2022-68/">【Hexo博客】魔改美化 Butterfly 主题右键菜单 | 百里飞洋 (meta-code.top)</a></p><p><a href="https://seayj.cn/">SeaYJ’s Blog</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 右键菜单 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>页面特效</title>
      <link href="/posts/2506.html"/>
      <url>/posts/2506.html</url>
      
        <content type="html"><![CDATA[<h1 id="页面特效"><a href="#页面特效" class="headerlink" title="页面特效"></a>页面特效</h1><h2 id="动态线条"><a href="#动态线条" class="headerlink" title="动态线条"></a>动态线条</h2><p>在<code>themes/matery/layout/layout.ejs</code>文件中添加：</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token comment">&lt;!--动态线条背景--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>122 103 238<span class="token punctuation">"</span></span> <span class="token attr-name">opacity</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>0.7<span class="token punctuation">'</span></span> <span class="token attr-name">zIndex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>-2<span class="token punctuation">"</span></span> <span class="token attr-name">count</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>200<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>参数说明：</p><ul><li>color：线条颜色，三个数字分别为(R,G,B)，默认：（0,0,0）</li><li>opacity：线条透明度（0~1），默认：0.5</li><li>count：线条的总数量，默认：150</li><li>zIndex：背景图层所在的位置，默认：-1</li></ul><blockquote><p>参考：<a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#toc-heading-28">博客搭建+美化（巨细版本） | 兴平 (crazyyuchi.github.io)</a></p></blockquote><h2 id="樱花特效"><a href="#樱花特效" class="headerlink" title="樱花特效"></a>樱花特效</h2><p>在<code>themes/matery/source/js</code>下新建sakura.js，打开这个网址<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/js/sakura.js">连接</a>，将内容复制粘贴到sakura.js即可。</p><p>然后在themes&#x2F;matery&#x2F;layout&#x2F;layout.ejs文件内添加下面的内容：</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">//只在桌面版网页启用特效</span>    <span class="token keyword">var</span> windowWidth <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>windowWidth <span class="token operator">></span> <span class="token number">768</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'&lt;script type="text/javascript" src="/js/sakura.js">&lt;\/script>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>参考：<a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#toc-heading-28">博客搭建+美化（巨细版本） | 兴平 (crazyyuchi.github.io)</a></p></blockquote><h2 id="雪花特效"><a href="#雪花特效" class="headerlink" title="雪花特效"></a>雪花特效</h2><p>在<code>themes/matery/source/libs/others</code>下新建文件<code>snow.js</code>，并插入如下代码：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">/*样式一*/</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">$</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    $<span class="token punctuation">.</span>fn<span class="token punctuation">.</span><span class="token function-variable function">snow</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> $flake <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'&lt;div id="snowbox" />'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token string-property property">'position'</span><span class="token operator">:</span> <span class="token string">'absolute'</span><span class="token punctuation">,</span><span class="token string-property property">'z-index'</span><span class="token operator">:</span><span class="token string">'9999'</span><span class="token punctuation">,</span> <span class="token string-property property">'top'</span><span class="token operator">:</span> <span class="token string">'-50px'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">'&amp;#10052;'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    documentHeight  <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    documentWidth   <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    defaults <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">minSize</span>     <span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>        <span class="token literal-property property">maxSize</span>     <span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>        <span class="token literal-property property">newOn</span>       <span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>        <span class="token literal-property property">flakeColor</span>  <span class="token operator">:</span> <span class="token string">"#AFDAEF"</span> <span class="token comment">/* 此处可以定义雪花颜色，若要白色可以改为#FFFFFF */</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    options <span class="token operator">=</span> $<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> defaults<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> interval<span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> startPositionLeft <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> documentWidth <span class="token operator">-</span> <span class="token number">100</span><span class="token punctuation">,</span>    startOpacity <span class="token operator">=</span> <span class="token number">0.5</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    sizeFlake <span class="token operator">=</span> options<span class="token punctuation">.</span>minSize <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> options<span class="token punctuation">.</span>maxSize<span class="token punctuation">,</span>    endPositionTop <span class="token operator">=</span> documentHeight <span class="token operator">-</span> <span class="token number">200</span><span class="token punctuation">,</span>    endPositionLeft <span class="token operator">=</span> startPositionLeft <span class="token operator">-</span> <span class="token number">500</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">500</span><span class="token punctuation">,</span>    durationFall <span class="token operator">=</span> documentHeight <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">5000</span><span class="token punctuation">;</span>    $flake<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span><span class="token string">'body'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">left</span><span class="token operator">:</span> startPositionLeft<span class="token punctuation">,</span>        <span class="token literal-property property">opacity</span><span class="token operator">:</span> startOpacity<span class="token punctuation">,</span>        <span class="token string-property property">'font-size'</span><span class="token operator">:</span> sizeFlake<span class="token punctuation">,</span>        <span class="token literal-property property">color</span><span class="token operator">:</span> options<span class="token punctuation">.</span>flakeColor    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">top</span><span class="token operator">:</span> endPositionTop<span class="token punctuation">,</span>        <span class="token literal-property property">left</span><span class="token operator">:</span> endPositionLeft<span class="token punctuation">,</span>        <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token number">0.2</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>durationFall<span class="token punctuation">,</span><span class="token string">'linear'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span>newOn<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span>jQuery<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    $<span class="token punctuation">.</span>fn<span class="token punctuation">.</span><span class="token function">snow</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>         <span class="token literal-property property">minSize</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment">/* 定义雪花最小尺寸 */</span>        <span class="token literal-property property">maxSize</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span><span class="token comment">/* 定义雪花最大尺寸 */</span>        <span class="token literal-property property">newOn</span><span class="token operator">:</span> <span class="token number">300</span>  <span class="token comment">/* 定义密集程度，数字越小越密集 */</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/*样式二*/</span><span class="token comment">/* 控制下雪 */</span><span class="token keyword">function</span> <span class="token function">snowFall</span><span class="token punctuation">(</span><span class="token parameter">snow</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/* 可配置属性 */</span>    snow <span class="token operator">=</span> snow <span class="token operator">||</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>maxFlake <span class="token operator">=</span> snow<span class="token punctuation">.</span>maxFlake <span class="token operator">||</span> <span class="token number">200</span><span class="token punctuation">;</span>   <span class="token comment">/* 最多片数 */</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>flakeSize <span class="token operator">=</span> snow<span class="token punctuation">.</span>flakeSize <span class="token operator">||</span> <span class="token number">10</span><span class="token punctuation">;</span>  <span class="token comment">/* 雪花形状 */</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>fallSpeed <span class="token operator">=</span> snow<span class="token punctuation">.</span>fallSpeed <span class="token operator">||</span> <span class="token number">1</span><span class="token punctuation">;</span>   <span class="token comment">/* 坠落速度 */</span><span class="token punctuation">&#125;</span><span class="token comment">/* 兼容写法 */</span>requestAnimationFrame <span class="token operator">=</span> window<span class="token punctuation">.</span>requestAnimationFrame <span class="token operator">||</span>    window<span class="token punctuation">.</span>mozRequestAnimationFrame <span class="token operator">||</span>    window<span class="token punctuation">.</span>webkitRequestAnimationFrame <span class="token operator">||</span>    window<span class="token punctuation">.</span>msRequestAnimationFrame <span class="token operator">||</span>    window<span class="token punctuation">.</span>oRequestAnimationFrame <span class="token operator">||</span>    <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>callback<span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>cancelAnimationFrame <span class="token operator">=</span> window<span class="token punctuation">.</span>cancelAnimationFrame <span class="token operator">||</span>    window<span class="token punctuation">.</span>mozCancelAnimationFrame <span class="token operator">||</span>    window<span class="token punctuation">.</span>webkitCancelAnimationFrame <span class="token operator">||</span>    window<span class="token punctuation">.</span>msCancelAnimationFrame <span class="token operator">||</span>    window<span class="token punctuation">.</span>oCancelAnimationFrame<span class="token punctuation">;</span><span class="token comment">/* 开始下雪 */</span>snowFall<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">start</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">/* 创建画布 */</span>    <span class="token function">snowCanvas</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/* 创建雪花形状 */</span>    <span class="token function">createFlakes</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/* 画雪 */</span>    <span class="token function">drawSnow</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">/* 创建画布 */</span><span class="token keyword">function</span> <span class="token function">snowCanvas</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/* 添加Dom结点 */</span>    <span class="token keyword">var</span> snowcanvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"canvas"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    snowcanvas<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token string">"snowfall"</span><span class="token punctuation">;</span>    snowcanvas<span class="token punctuation">.</span>width <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">;</span>    snowcanvas<span class="token punctuation">.</span>height <span class="token operator">=</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientHeight<span class="token punctuation">;</span>    snowcanvas<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"style"</span><span class="token punctuation">,</span> <span class="token string">"position:absolute; top: 0; left: 0; z-index: 1; pointer-events: none;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>snowcanvas<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>canvas <span class="token operator">=</span> snowcanvas<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>ctx <span class="token operator">=</span> snowcanvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">"2d"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/* 窗口大小改变的处理 */</span>    window<span class="token punctuation">.</span><span class="token function-variable function">onresize</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        snowcanvas<span class="token punctuation">.</span>width <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">;</span>        <span class="token comment">/* snowcanvas.height = window.innerHeight */</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 雪运动对象 */</span><span class="token keyword">function</span> <span class="token function">flakeMove</span><span class="token punctuation">(</span><span class="token parameter">canvasWidth<span class="token punctuation">,</span> canvasHeight<span class="token punctuation">,</span> flakeSize<span class="token punctuation">,</span> fallSpeed</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> canvasWidth<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">/* x坐标 */</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> canvasHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">/* y坐标 */</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> flakeSize <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>          <span class="token comment">/* 形状 */</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>maxSize <span class="token operator">=</span> flakeSize<span class="token punctuation">;</span>                           <span class="token comment">/* 最大形状 */</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>speed <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1</span> <span class="token operator">+</span> fallSpeed<span class="token punctuation">;</span>         <span class="token comment">/* 坠落速度 */</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>fallSpeed <span class="token operator">=</span> fallSpeed<span class="token punctuation">;</span>                         <span class="token comment">/* 坠落速度 */</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>velY <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speed<span class="token punctuation">;</span>                             <span class="token comment">/* Y方向速度 */</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>velX <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                                      <span class="token comment">/* X方向速度 */</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>stepSize <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">30</span><span class="token punctuation">;</span>                 <span class="token comment">/* 步长 */</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>step <span class="token operator">=</span> <span class="token number">0</span>                                       <span class="token comment">/* 步数 */</span><span class="token punctuation">&#125;</span>flakeMove<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">update</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">,</span>        y <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token punctuation">;</span>    <span class="token comment">/* 左右摆动(余弦) */</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>velX <span class="token operator">*=</span> <span class="token number">0.98</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>velY <span class="token operator">&lt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speed<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>velY <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speed    <span class="token punctuation">&#125;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>velX <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token function">cos</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>step <span class="token operator">+=</span> <span class="token number">.05</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stepSize<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>velY<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>velX<span class="token punctuation">;</span>    <span class="token comment">/* 飞出边界的处理 */</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">>=</span> canvas<span class="token punctuation">.</span>width <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">>=</span> canvas<span class="token punctuation">.</span>height <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span>canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">/* 飞出边界-放置最顶端继续坠落 */</span>flakeMove<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">reset</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">width<span class="token punctuation">,</span> height</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>x <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> width<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>maxSize <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>speed <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fallSpeed<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>velY <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>speed<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>velX <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 渲染雪花-随机形状（此处可修改雪花颜色！！！）</span>flakeMove<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">render</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">ctx</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> snowFlake <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">createRadialGradient</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>    snowFlake<span class="token punctuation">.</span><span class="token function">addColorStop</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"rgba(255, 255, 255, 0.9)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">/* 此处是雪花颜色，默认是白色 */</span>    snowFlake<span class="token punctuation">.</span><span class="token function">addColorStop</span><span class="token punctuation">(</span><span class="token number">.5</span><span class="token punctuation">,</span> <span class="token string">"rgba(255, 255, 255, 0.5)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 若要改为其他颜色，请自行查 */</span>    snowFlake<span class="token punctuation">.</span><span class="token function">addColorStop</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"rgba(255, 255, 255, 0)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/* 找16进制的RGB 颜色代码。 */</span>    ctx<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> snowFlake<span class="token punctuation">;</span>    ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ctx<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>y<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ctx<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    ctx<span class="token punctuation">.</span><span class="token function">restore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">/* 创建雪花-定义形状 */</span><span class="token keyword">function</span> <span class="token function">createFlakes</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> maxFlake <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>maxFlake<span class="token punctuation">,</span>        flakes <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>flakes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        canvas <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>canvas<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> maxFlake<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        flakes<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">flakeMove</span><span class="token punctuation">(</span>canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>flakeSize<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fallSpeed<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 画雪 */</span><span class="token keyword">function</span> <span class="token function">drawSnow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> maxFlake <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>maxFlake<span class="token punctuation">,</span>        flakes <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>flakes<span class="token punctuation">;</span>    ctx <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>ctx<span class="token punctuation">,</span> canvas <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>canvas<span class="token punctuation">,</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>    <span class="token comment">/* 清空雪花 */</span>    ctx<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> e <span class="token operator">&lt;</span> maxFlake<span class="token punctuation">;</span> e<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        flakes<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        flakes<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/*  一帧一帧的画 */</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>loop <span class="token operator">=</span> <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">drawSnow</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>that<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 调用及控制方法 */</span><span class="token keyword">var</span> snow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">snowFall</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">maxFlake</span><span class="token operator">:</span><span class="token number">60</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>snow<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在<code>themes/matery/layout/layout.ejs</code>里添加：</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token comment">&lt;!-- 雪花特效 --></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>snow<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>libs<span class="token punctuation">.</span>js<span class="token punctuation">.</span>snow </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>然后在主题配置文件里<code>libs.js</code>里添加一行</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">snow</span><span class="token punctuation">:</span> /libs/others/snow.js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>最后在主题配置文件最后添加：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 雪花特效</span><span class="token key atrule">snow</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>参考：<a href="https://godweiyang.com/2018/04/13/hexo-blog/#toc-heading-20">超详细Hexo+Github博客搭建小白教程 | 韦阳的博客 (godweiyang.com)</a></p></blockquote><h2 id="鼠标特效"><a href="#鼠标特效" class="headerlink" title="鼠标特效"></a>鼠标特效</h2><h3 id="点击显示文字"><a href="#点击显示文字" class="headerlink" title="点击显示文字"></a>点击显示文字</h3><p>在 <code>themes\matery\source\js</code> 下新建 <code>click_show_text.js</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> a_idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token function">jQuery</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">$</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span>        <span class="token punctuation">(</span><span class="token string">"富强"</span><span class="token punctuation">,</span> <span class="token string">"民主"</span><span class="token punctuation">,</span> <span class="token string">"文明"</span><span class="token punctuation">,</span> <span class="token string">"和谐"</span><span class="token punctuation">,</span> <span class="token string">"自由"</span><span class="token punctuation">,</span> <span class="token string">"平等"</span><span class="token punctuation">,</span> <span class="token string">"公正"</span><span class="token punctuation">,</span> <span class="token string">"法治"</span><span class="token punctuation">,</span> <span class="token string">"爱国"</span><span class="token punctuation">,</span> <span class="token string">"敬业"</span><span class="token punctuation">,</span> <span class="token string">"诚信"</span><span class="token punctuation">,</span> <span class="token string">"友善"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> $i <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"&lt;span/>"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>a_idx<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        a_idx <span class="token operator">=</span> <span class="token punctuation">(</span>a_idx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> a<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token keyword">var</span> x <span class="token operator">=</span> e<span class="token punctuation">.</span>pageX<span class="token punctuation">,</span>        y <span class="token operator">=</span> e<span class="token punctuation">.</span>pageY<span class="token punctuation">;</span>        $i<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token string-property property">"z-index"</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>            <span class="token string-property property">"top"</span><span class="token operator">:</span> y <span class="token operator">-</span> <span class="token number">20</span><span class="token punctuation">,</span>            <span class="token string-property property">"left"</span><span class="token operator">:</span> x<span class="token punctuation">,</span>            <span class="token string-property property">"position"</span><span class="token operator">:</span> <span class="token string">"absolute"</span><span class="token punctuation">,</span>            <span class="token string-property property">"font-weight"</span><span class="token operator">:</span> <span class="token string">"bold"</span><span class="token punctuation">,</span>            <span class="token string-property property">"color"</span><span class="token operator">:</span> <span class="token string">"rgb("</span> <span class="token operator">+</span> <span class="token operator">~</span><span class="token operator">~</span><span class="token punctuation">(</span><span class="token number">255</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> <span class="token operator">~</span><span class="token operator">~</span><span class="token punctuation">(</span><span class="token number">255</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">","</span> <span class="token operator">+</span> <span class="token operator">~</span><span class="token operator">~</span><span class="token punctuation">(</span><span class="token number">255</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">")"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>$i<span class="token punctuation">)</span><span class="token punctuation">;</span>        $i<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token string-property property">"top"</span><span class="token operator">:</span> y <span class="token operator">-</span> <span class="token number">180</span><span class="token punctuation">,</span>            <span class="token string-property property">"opacity"</span><span class="token operator">:</span> <span class="token number">0</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token number">3000</span><span class="token punctuation">,</span>    <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       $i<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token string">'delay()'</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".buryit"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeAttr</span><span class="token punctuation">(</span><span class="token string">"onclick"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在<code>themes\matery\layout\layout.ejs</code> 的 <code>body</code> 标签里引入</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>单击显示文字<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span> src<span class="token operator">=</span><span class="token string">"/js/click_show_text.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>参考：<a href="https://yunfulin.gitee.io/blog/no-013.html#toc-heading-5">Matery主题优化（一） | YF小林犟 (gitee.io)</a></p></blockquote><h3 id="礼花特效"><a href="#礼花特效" class="headerlink" title="礼花特效"></a>礼花特效</h3><p>在主题文件 <code>themes\hexo-theme-matery\source\js</code> 下新建 <code>mouse_snow.js</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">function</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">i</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">function</span> <span class="token function">i</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"mousemove"</span><span class="token punctuation">,</span> o<span class="token punctuation">)</span><span class="token punctuation">,</span>      document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"touchmove"</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">,</span>      document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"touchstart"</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">,</span>      window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"resize"</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">function</span> <span class="token function">n</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      d <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">,</span>      window<span class="token punctuation">.</span>innerHeight  <span class="token punctuation">&#125;</span>  <span class="token keyword">function</span> <span class="token function">e</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>touches<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span>          <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> t<span class="token punctuation">.</span>touches<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>              <span class="token function">s</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>touches<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>clientX<span class="token punctuation">,</span> t<span class="token punctuation">.</span>touches<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>clientY<span class="token punctuation">,</span> r<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> r<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">function</span> <span class="token function">o</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      u<span class="token punctuation">.</span>x <span class="token operator">=</span> t<span class="token punctuation">.</span>clientX<span class="token punctuation">,</span>      u<span class="token punctuation">.</span>y <span class="token operator">=</span> t<span class="token punctuation">.</span>clientY<span class="token punctuation">,</span>      <span class="token function">s</span><span class="token punctuation">(</span>u<span class="token punctuation">.</span>x<span class="token punctuation">,</span> u<span class="token punctuation">.</span>y<span class="token punctuation">,</span> r<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> r<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">function</span> <span class="token function">s</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> i<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">l</span><span class="token punctuation">;</span>      e<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> i<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">,</span>      f<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">function</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> t <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> t <span class="token operator">&lt;</span> f<span class="token punctuation">.</span>length<span class="token punctuation">;</span> t<span class="token operator">++</span><span class="token punctuation">)</span>          f<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span>t <span class="token operator">=</span> f<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> t <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">;</span> t<span class="token operator">--</span><span class="token punctuation">)</span>          f<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>lifeSpan <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>f<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          f<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token function">h</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">function</span> <span class="token function">l</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>character <span class="token operator">=</span> <span class="token string">"*"</span><span class="token punctuation">,</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>lifeSpan <span class="token operator">=</span> <span class="token number">120</span><span class="token punctuation">,</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>initialStyles <span class="token operator">=</span> <span class="token punctuation">&#123;</span>          <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token string">"fixed"</span><span class="token punctuation">,</span>          <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token string">"0"</span><span class="token punctuation">,</span>          <span class="token literal-property property">display</span><span class="token operator">:</span> <span class="token string">"block"</span><span class="token punctuation">,</span>          <span class="token literal-property property">pointerEvents</span><span class="token operator">:</span> <span class="token string">"none"</span><span class="token punctuation">,</span>          <span class="token string-property property">"z-index"</span><span class="token operator">:</span> <span class="token string">"10000000"</span><span class="token punctuation">,</span>          <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token string">"20px"</span><span class="token punctuation">,</span>          <span class="token string-property property">"will-change"</span><span class="token operator">:</span> <span class="token string">"transform"</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">init</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> i<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>velocity <span class="token operator">=</span> <span class="token punctuation">&#123;</span>              <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">.5</span> <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>              <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">1</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token punctuation">&#123;</span>              <span class="token literal-property property">x</span><span class="token operator">:</span> t <span class="token operator">-</span> <span class="token number">10</span><span class="token punctuation">,</span>              <span class="token literal-property property">y</span><span class="token operator">:</span> i <span class="token operator">-</span> <span class="token number">20</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>initialStyles<span class="token punctuation">.</span>color <span class="token operator">=</span> n<span class="token punctuation">,</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>element <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"span"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>element<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>character<span class="token punctuation">,</span>          <span class="token function">c</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>element<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>initialStyles<span class="token punctuation">)</span><span class="token punctuation">,</span>          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>          document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>element<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>      <span class="token punctuation">,</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">update</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>velocity<span class="token punctuation">.</span>x<span class="token punctuation">,</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>position<span class="token punctuation">.</span>y <span class="token operator">+=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>velocity<span class="token punctuation">.</span>y<span class="token punctuation">,</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>lifeSpan<span class="token operator">--</span><span class="token punctuation">,</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>element<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transform <span class="token operator">=</span> <span class="token string">"translate3d("</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">+</span> <span class="token string">"px,"</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>position<span class="token punctuation">.</span>y <span class="token operator">+</span> <span class="token string">"px,0) scale("</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lifeSpan <span class="token operator">/</span> <span class="token number">120</span> <span class="token operator">+</span> <span class="token string">")"</span>      <span class="token punctuation">&#125;</span>      <span class="token punctuation">,</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">die</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>element<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>element<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">function</span> <span class="token function">c</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> n <span class="token keyword">in</span> i<span class="token punctuation">)</span>          t<span class="token punctuation">.</span>style<span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">[</span>n<span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">var</span> r <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"#D61C59"</span><span class="token punctuation">,</span> <span class="token string">"#E7D84B"</span><span class="token punctuation">,</span> <span class="token string">"#1B8798"</span><span class="token punctuation">]</span>    <span class="token punctuation">,</span> d <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth    <span class="token punctuation">,</span> u <span class="token operator">=</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span>      <span class="token literal-property property">x</span><span class="token operator">:</span> d <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span>      <span class="token literal-property property">y</span><span class="token operator">:</span> d <span class="token operator">/</span> <span class="token number">2</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">,</span> f <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token function">t</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在<code>themes\matery\layout\layout.ejs</code> 的 <code>body</code> 标签里面 引入</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 鼠标移动特效 <span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span> src<span class="token operator">=</span><span class="token string">"/js/mouse_snow.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>参考：<a href="https://yunfulin.gitee.io/blog/no-013.html#toc-heading-5">Matery主题优化（一） | YF小林犟 (gitee.io)</a></p></blockquote><h3 id="点击爆炸"><a href="#点击爆炸" class="headerlink" title="点击爆炸"></a>点击爆炸</h3><p>在<code>themes/matery/source/js</code>下新建fireworks.js，打开这个网址<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/js/fireworks.js">连接</a>，将内容复制粘贴到fireworks.js即可。</p><p>然后再到themes&#x2F;matery&#x2F;layout&#x2F;layout.ejs中添加：</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fireworks<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">z-index</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span> <span class="token property">pointer-events</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//cdn.bootcss.com/animejs/2.2.0/anime.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/js/fireworks.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后hexo clean &amp;&amp; hexo g &amp;&amp; hexo s即可进行本地预览，就可以查看效果了。</p><blockquote><p>参考：<a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#toc-heading-28">博客搭建+美化（巨细版本） | 兴平 (crazyyuchi.github.io)</a></p></blockquote><h3 id="浮出爱心"><a href="#浮出爱心" class="headerlink" title="浮出爱心"></a>浮出爱心</h3><p>在<code>themes/matery/source/libs/others</code>下新建文件<code>click_love.js</code>，并插入如下代码：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">!</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span>t<span class="token punctuation">,</span>a</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">function</span> <span class="token function">r</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> e<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>e<span class="token operator">&lt;</span>n<span class="token punctuation">.</span>length<span class="token punctuation">;</span>e<span class="token operator">++</span><span class="token punctuation">)</span>            n<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">.</span>alpha<span class="token operator">&lt;=</span><span class="token number">0</span><span class="token operator">?</span>                <span class="token punctuation">(</span>t<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>n<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">.</span>el<span class="token punctuation">)</span><span class="token punctuation">,</span>n<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span>                <span class="token punctuation">(</span>n<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token operator">--</span><span class="token punctuation">,</span>n<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">.</span>scale<span class="token operator">+=</span><span class="token number">.004</span><span class="token punctuation">,</span>n<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">.</span>alpha<span class="token operator">-=</span><span class="token number">.013</span><span class="token punctuation">,</span>                 n<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">.</span>el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>cssText<span class="token operator">=</span><span class="token string">"left:"</span><span class="token operator">+</span>n<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token operator">+</span><span class="token string">"px;top:"</span><span class="token operator">+</span>n<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token operator">+</span><span class="token string">"px;opacity:"</span><span class="token operator">+</span>n<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">.</span>alpha<span class="token operator">+</span><span class="token string">";transform:scale("</span><span class="token operator">+</span>n<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">.</span>scale<span class="token operator">+</span><span class="token string">","</span><span class="token operator">+</span>n<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">.</span>scale<span class="token operator">+</span><span class="token string">") rotate(45deg);background:"</span><span class="token operator">+</span>n<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">.</span>color<span class="token operator">+</span><span class="token string">";z-index:99999"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">var</span> n<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    e<span class="token punctuation">.</span>requestAnimationFrame<span class="token operator">=</span>e<span class="token punctuation">.</span>requestAnimationFrame<span class="token operator">||</span>e<span class="token punctuation">.</span>webkitRequestAnimationFrame<span class="token operator">||</span>e<span class="token punctuation">.</span>mozRequestAnimationFrame<span class="token operator">||</span>e<span class="token punctuation">.</span>oRequestAnimationFrame<span class="token operator">||</span>e<span class="token punctuation">.</span>msRequestAnimationFrame<span class="token operator">||</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">setTimeout</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token number">1e3</span><span class="token operator">/</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> a<span class="token operator">=</span>t<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"style"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        a<span class="token punctuation">.</span>type<span class="token operator">=</span><span class="token string">"text/css"</span><span class="token punctuation">;</span>        <span class="token keyword">try</span><span class="token punctuation">&#123;</span>            a<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">createTextNode</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token keyword">catch</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            a<span class="token punctuation">.</span>styleSheet<span class="token punctuation">.</span>cssText<span class="token operator">=</span>e        <span class="token punctuation">&#125;</span>        t<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"head"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> a<span class="token operator">=</span><span class="token string">"function"</span><span class="token operator">==</span><span class="token keyword">typeof</span> e<span class="token punctuation">.</span>onclick<span class="token operator">&amp;&amp;</span>e<span class="token punctuation">.</span>onclick<span class="token punctuation">;</span>        e<span class="token punctuation">.</span><span class="token function-variable function">onclick</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            a<span class="token operator">&amp;&amp;</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> a<span class="token operator">=</span>t<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                a<span class="token punctuation">.</span>className<span class="token operator">=</span><span class="token string">"heart"</span><span class="token punctuation">,</span>                n<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">el</span><span class="token operator">:</span>a<span class="token punctuation">,</span><span class="token literal-property property">x</span><span class="token operator">:</span>e<span class="token punctuation">.</span>clientX<span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token literal-property property">y</span><span class="token operator">:</span>e<span class="token punctuation">.</span>clientY<span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token literal-property property">scale</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">alpha</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">color</span><span class="token operator">:</span><span class="token string">"rgb("</span><span class="token operator">+</span><span class="token operator">~</span><span class="token operator">~</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token operator">*</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">","</span><span class="token operator">+</span><span class="token operator">~</span><span class="token operator">~</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token operator">*</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">","</span><span class="token operator">+</span><span class="token operator">~</span><span class="token operator">~</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token operator">*</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">")"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">r</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span>document<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在<code>themes/matery/layout/layout.ejs</code>里添加：</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token comment">&lt;!--  --></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>clicklove<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> theme<span class="token punctuation">.</span>jsDelivr<span class="token punctuation">.</span>url </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">url_for</span><span class="token punctuation">(</span>theme<span class="token punctuation">.</span>libs<span class="token punctuation">.</span>js<span class="token punctuation">.</span>clicklove<span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span> <span class="token attr-name">async</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>async<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>然后在主题配置文件里<code>libs.js</code>里添加一行</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">snow</span><span class="token punctuation">:</span> /libs/others/click_love.js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>最后在主题配置文件最后添加：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 点击页面浮出'爱心'效果</span><span class="token key atrule">clicklove</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h3><p><a href="https://www.jb51.net/article/132511.htm">10个经典的网页鼠标特效代码_javascript技巧_脚本之家 (jb51.net)</a></p><h2 id="动态标签栏"><a href="#动态标签栏" class="headerlink" title="动态标签栏"></a>动态标签栏</h2><p>在文件 <code>themes\matery\layout\layout.ejs</code> 的 <code>body</code> 标签里添加</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 动态标签栏 <span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span>  <span class="token keyword">var</span> OriginTitile <span class="token operator">=</span> document<span class="token punctuation">.</span>title<span class="token punctuation">,</span> st<span class="token punctuation">;</span>   document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"visibilitychange"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     document<span class="token punctuation">.</span>hidden <span class="token operator">?</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">"爱我，别走！"</span><span class="token punctuation">,</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>st<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">"咦，你来啦！"</span><span class="token punctuation">,</span> st <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> document<span class="token punctuation">.</span>title <span class="token operator">=</span> OriginTitile <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">3e3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><a href="https://yunfulin.gitee.io/blog/no-013.html#toc-heading-5">Matery主题优化（一） | YF小林犟 (gitee.io)</a></p></blockquote><h2 id="冒泡特效"><a href="#冒泡特效" class="headerlink" title="冒泡特效"></a>冒泡特效</h2><p>在 <code>themes&gt;matery&gt;source&gt;libs&gt;others</code>下新建一个文件 bubble.js</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 首页轮播冒泡</span><span class="token keyword">function</span> <span class="token function">bubble</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.carousel-item, .pd-header'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">circleMagic</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>    <span class="token literal-property property">density</span><span class="token operator">:</span> <span class="token number">.2</span><span class="token punctuation">,</span>    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">'rgba(255,255,255,.4)'</span><span class="token punctuation">,</span>    <span class="token literal-property property">clearOffset</span><span class="token operator">:</span> <span class="token number">0.99</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token operator">!</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">p</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  p<span class="token punctuation">.</span>fn<span class="token punctuation">.</span><span class="token function-variable function">circleMagic</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> o<span class="token punctuation">,</span> a<span class="token punctuation">,</span> n<span class="token punctuation">,</span> r<span class="token punctuation">,</span> e <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>      i <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      d <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">"rgba(255,0,0,.5)"</span><span class="token punctuation">,</span>        <span class="token literal-property property">radius</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>        <span class="token literal-property property">density</span><span class="token operator">:</span> <span class="token number">.3</span><span class="token punctuation">,</span>        <span class="token literal-property property">clearOffset</span><span class="token operator">:</span> <span class="token number">.2</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">,</span>      l <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">c</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      e <span class="token operator">=</span> <span class="token operator">!</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop <span class="token operator">></span> a<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">s</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      o <span class="token operator">=</span> l<span class="token punctuation">.</span>clientWidth<span class="token punctuation">,</span> a <span class="token operator">=</span> l<span class="token punctuation">.</span>clientHeight<span class="token punctuation">,</span> l<span class="token punctuation">.</span>height <span class="token operator">=</span> a <span class="token operator">+</span> <span class="token string">"px"</span><span class="token punctuation">,</span> n<span class="token punctuation">.</span>width <span class="token operator">=</span> o<span class="token punctuation">,</span> n<span class="token punctuation">.</span>height <span class="token operator">=</span> a    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">h</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> t <span class="token keyword">in</span> r<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> o<span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span> i<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">f</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">var</span> t <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>      <span class="token keyword">function</span> <span class="token function">e</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        t<span class="token punctuation">.</span>pos<span class="token punctuation">.</span>x <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> o<span class="token punctuation">,</span> t<span class="token punctuation">.</span>pos<span class="token punctuation">.</span>y <span class="token operator">=</span> a <span class="token operator">+</span> <span class="token number">100</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>alpha <span class="token operator">=</span> <span class="token number">.1</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> d<span class="token punctuation">.</span>clearOffset<span class="token punctuation">,</span>          t<span class="token punctuation">.</span>scale <span class="token operator">=</span> <span class="token number">.1</span> <span class="token operator">+</span> <span class="token number">.3</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>speed <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"random"</span> <span class="token operator">===</span> d<span class="token punctuation">.</span>color <span class="token operator">?</span> t<span class="token punctuation">.</span>color <span class="token operator">=</span>            <span class="token string">"rgba("</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token number">255</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">", "</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">", "</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>              <span class="token number">0</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">", "</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toPrecision</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">")"</span> <span class="token operator">:</span> t<span class="token punctuation">.</span>color <span class="token operator">=</span> d<span class="token punctuation">.</span>color      <span class="token punctuation">&#125;</span>      t<span class="token punctuation">.</span>pos <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token function">e</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">draw</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        t<span class="token punctuation">.</span>alpha <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token function">e</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>pos<span class="token punctuation">.</span>y <span class="token operator">-=</span> t<span class="token punctuation">.</span>speed<span class="token punctuation">,</span> t<span class="token punctuation">.</span>alpha <span class="token operator">-=</span> <span class="token number">5e-4</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>pos<span class="token punctuation">.</span>x<span class="token punctuation">,</span> t<span class="token punctuation">.</span>pos<span class="token punctuation">.</span>y<span class="token punctuation">,</span>          t<span class="token punctuation">.</span>scale <span class="token operator">*</span> d<span class="token punctuation">.</span>radius<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">,</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> t<span class="token punctuation">.</span>color<span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">closePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token operator">!</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      o <span class="token operator">=</span> l<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">,</span> a <span class="token operator">=</span> l<span class="token punctuation">.</span>offsetHeight<span class="token punctuation">,</span>        <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">var</span> t <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"canvas"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          t<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token string">"canvas"</span><span class="token punctuation">;</span>          t<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>          t<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token number">0</span>          t<span class="token punctuation">.</span>style<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token number">0</span>          t<span class="token punctuation">.</span>style<span class="token punctuation">.</span>zIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>          t<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token string">"absolute"</span><span class="token punctuation">;</span>          l<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>          t<span class="token punctuation">.</span>parentElement<span class="token punctuation">.</span>style<span class="token punctuation">.</span>overflow <span class="token operator">=</span> <span class="token string">"hidden"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"canvas"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>width <span class="token operator">=</span> o<span class="token punctuation">,</span> n<span class="token punctuation">.</span>height <span class="token operator">=</span> a<span class="token punctuation">,</span> r <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">"2d"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> t <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> t <span class="token operator">&lt;</span> o <span class="token operator">*</span> d<span class="token punctuation">.</span>density<span class="token punctuation">;</span> t<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">f</span><span class="token punctuation">;</span>        i<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>      <span class="token function">h</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"scroll"</span><span class="token punctuation">,</span> c<span class="token punctuation">,</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"resize"</span><span class="token punctuation">,</span> s<span class="token punctuation">,</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span>jQuery<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">bubble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在主题的配置文件 <code>themes\hexo-theme-matery\_config.yml</code> 找到 <code>libs:</code> 然后在 js 下引入</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token literal-property property">bubble</span><span class="token operator">:</span> <span class="token operator">/</span>libs<span class="token operator">/</span>others<span class="token operator">/</span>bubble<span class="token punctuation">.</span>js<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在主题的配置文件 <code>themes\hexo-theme-matery\_config.yml</code> 的底部，添加下面代码</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"># 首页轮播冒泡<span class="token literal-property property">bubble</span><span class="token operator">:</span>  <span class="token literal-property property">enable</span><span class="token operator">:</span> <span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>在文件 <code>themes\hexo-theme-matery\layout\layout.ejs</code> 的 <code>body</code> 标签里面 引入</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 白色冒泡 <span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>bubble<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token operator">%</span><span class="token operator">></span>  <span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span> src<span class="token operator">=</span><span class="token string">"&lt;%- theme.jsDelivr.url %>&lt;%- url_for(theme.libs.js.bubble) %>"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">%</span> <span class="token punctuation">&#125;</span> <span class="token operator">%</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>参考：<a href="https://yunfulin.gitee.io/blog/no-013.html#toc-heading-1">Matery主题优化（一） | YF小林犟 (gitee.io)</a></p></blockquote><h2 id="打字特效"><a href="#打字特效" class="headerlink" title="打字特效"></a>打字特效</h2><p>首先在<code>themes\matery\source\js</code>下新建<code>activate-power-mode.js</code></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">webpackUniversalModuleDefinition</span><span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> factory</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> exports <span class="token operator">===</span> <span class="token string">'object'</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> module <span class="token operator">===</span> <span class="token string">'object'</span><span class="token punctuation">)</span> module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> define <span class="token operator">===</span> <span class="token string">'function'</span> <span class="token operator">&amp;&amp;</span> define<span class="token punctuation">.</span>amd<span class="token punctuation">)</span> <span class="token function">define</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> factory<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> exports <span class="token operator">===</span> <span class="token string">'object'</span><span class="token punctuation">)</span> exports<span class="token punctuation">[</span><span class="token string">"POWERMODE"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> root<span class="token punctuation">[</span><span class="token string">"POWERMODE"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">factory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">modules</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> installedModules <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">function</span> <span class="token function">__webpack_require__</span><span class="token punctuation">(</span><span class="token parameter">moduleId</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>installedModules<span class="token punctuation">[</span>moduleId<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span> installedModules<span class="token punctuation">[</span>moduleId<span class="token punctuation">]</span><span class="token punctuation">.</span>exports<span class="token punctuation">;</span>            <span class="token keyword">var</span> module <span class="token operator">=</span> installedModules<span class="token punctuation">[</span>moduleId<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">exports</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token literal-property property">id</span><span class="token operator">:</span> moduleId<span class="token punctuation">,</span> <span class="token literal-property property">loaded</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>            modules<span class="token punctuation">[</span>moduleId<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>module<span class="token punctuation">.</span>exports<span class="token punctuation">,</span> module<span class="token punctuation">,</span> module<span class="token punctuation">.</span>exports<span class="token punctuation">,</span> __webpack_require__<span class="token punctuation">)</span><span class="token punctuation">;</span>            module<span class="token punctuation">.</span>loaded <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> module<span class="token punctuation">.</span>exports<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        __webpack_require__<span class="token punctuation">.</span>m <span class="token operator">=</span> modules<span class="token punctuation">;</span>        __webpack_require__<span class="token punctuation">.</span>c <span class="token operator">=</span> installedModules<span class="token punctuation">;</span>        __webpack_require__<span class="token punctuation">.</span>p <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">__webpack_require__</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">module<span class="token punctuation">,</span> exports<span class="token punctuation">,</span> __webpack_require__</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token string">'use strict'</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">;</span>        canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">;</span>        canvas<span class="token punctuation">.</span>style<span class="token punctuation">.</span>cssText <span class="token operator">=</span> <span class="token string">'position: fixed; top: 0; left: 0; pointer-events: none; z-index: 0'</span><span class="token punctuation">;</span>        window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'resize'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">;</span>            canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>canvas<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> context <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> particles <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> particlePointer <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token constant">POWERMODE</span><span class="token punctuation">.</span>shake <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token keyword">function</span> <span class="token function">getRandom</span><span class="token punctuation">(</span><span class="token parameter">min<span class="token punctuation">,</span> max</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>max <span class="token operator">-</span> min<span class="token punctuation">)</span> <span class="token operator">+</span> min<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">function</span> <span class="token function">getColor</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">POWERMODE</span><span class="token punctuation">.</span>colorful<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> u <span class="token operator">=</span> <span class="token function">getRandom</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">360</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token string">'hsla('</span> <span class="token operator">+</span> <span class="token function">getRandom</span><span class="token punctuation">(</span>u <span class="token operator">-</span> <span class="token number">10</span><span class="token punctuation">,</span> u <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">', 100%, '</span> <span class="token operator">+</span> <span class="token function">getRandom</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'%, '</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token string">')'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> window<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">.</span>color<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">function</span> <span class="token function">getCaret</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span>activeElement<span class="token punctuation">;</span>            <span class="token keyword">var</span> bcr<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>tagName <span class="token operator">===</span> <span class="token string">'TEXTAREA'</span> <span class="token operator">||</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>tagName <span class="token operator">===</span> <span class="token string">'INPUT'</span> <span class="token operator">&amp;&amp;</span> el<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">'type'</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'text'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> offset <span class="token operator">=</span> <span class="token function">__webpack_require__</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> el<span class="token punctuation">.</span>selectionStart<span class="token punctuation">)</span><span class="token punctuation">;</span>                bcr <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">x</span><span class="token operator">:</span> offset<span class="token punctuation">.</span>left <span class="token operator">+</span> bcr<span class="token punctuation">.</span>left<span class="token punctuation">,</span>                    <span class="token literal-property property">y</span><span class="token operator">:</span> offset<span class="token punctuation">.</span>top <span class="token operator">+</span> bcr<span class="token punctuation">.</span>top<span class="token punctuation">,</span>                    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token function">getColor</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">var</span> selection <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>selection<span class="token punctuation">.</span>rangeCount<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> range <span class="token operator">=</span> selection<span class="token punctuation">.</span><span class="token function">getRangeAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">var</span> startNode <span class="token operator">=</span> range<span class="token punctuation">.</span>startContainer<span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>startNode<span class="token punctuation">.</span>nodeType <span class="token operator">===</span> document<span class="token punctuation">.</span><span class="token constant">TEXT_NODE</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    startNode <span class="token operator">=</span> startNode<span class="token punctuation">.</span>parentNode<span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                bcr <span class="token operator">=</span> range<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">x</span><span class="token operator">:</span> bcr<span class="token punctuation">.</span>left<span class="token punctuation">,</span>                    <span class="token literal-property property">y</span><span class="token operator">:</span> bcr<span class="token punctuation">.</span>top<span class="token punctuation">,</span>                    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token function">getColor</span><span class="token punctuation">(</span>startNode<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">'transparent'</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">function</span> <span class="token function">createParticle</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> color</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">x</span><span class="token operator">:</span> x<span class="token punctuation">,</span>                <span class="token literal-property property">y</span><span class="token operator">:</span> y<span class="token punctuation">,</span>                <span class="token literal-property property">alpha</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>                <span class="token literal-property property">color</span><span class="token operator">:</span> color<span class="token punctuation">,</span>                <span class="token literal-property property">velocity</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">,</span>                    <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">3.5</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">function</span> <span class="token constant">POWERMODE</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> caret <span class="token operator">=</span> <span class="token function">getCaret</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> numParticles <span class="token operator">=</span> <span class="token number">5</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span>numParticles<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                particles<span class="token punctuation">[</span>particlePointer<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">createParticle</span><span class="token punctuation">(</span>caret<span class="token punctuation">.</span>x<span class="token punctuation">,</span> caret<span class="token punctuation">.</span>y<span class="token punctuation">,</span> caret<span class="token punctuation">.</span>color<span class="token punctuation">)</span><span class="token punctuation">;</span>                particlePointer <span class="token operator">=</span> <span class="token punctuation">(</span>particlePointer <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">500</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">POWERMODE</span><span class="token punctuation">.</span>shake<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> intensity <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">2</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">var</span> x <span class="token operator">=</span> intensity <span class="token operator">*</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0.5</span> <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">var</span> y <span class="token operator">=</span> intensity <span class="token operator">*</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0.5</span> <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>style<span class="token punctuation">.</span>marginLeft <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>                document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>style<span class="token punctuation">.</span>marginTop <span class="token operator">=</span> y <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">;</span>                <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>style<span class="token punctuation">.</span>marginLeft <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>                    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>style<span class="token punctuation">.</span>marginTop <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token constant">POWERMODE</span><span class="token punctuation">.</span>colorful <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token keyword">function</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>loop<span class="token punctuation">)</span><span class="token punctuation">;</span>            context<span class="token punctuation">.</span><span class="token function">clearRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> particles<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> particle <span class="token operator">=</span> particles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>particle<span class="token punctuation">.</span>alpha <span class="token operator">&lt;=</span> <span class="token number">0.1</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>                particle<span class="token punctuation">.</span>velocity<span class="token punctuation">.</span>y <span class="token operator">+=</span> <span class="token number">0.075</span><span class="token punctuation">;</span>                particle<span class="token punctuation">.</span>x <span class="token operator">+=</span> particle<span class="token punctuation">.</span>velocity<span class="token punctuation">.</span>x<span class="token punctuation">;</span>                particle<span class="token punctuation">.</span>y <span class="token operator">+=</span> particle<span class="token punctuation">.</span>velocity<span class="token punctuation">.</span>y<span class="token punctuation">;</span>                particle<span class="token punctuation">.</span>alpha <span class="token operator">*=</span> <span class="token number">0.96</span><span class="token punctuation">;</span>                context<span class="token punctuation">.</span>globalAlpha <span class="token operator">=</span> particle<span class="token punctuation">.</span>alpha<span class="token punctuation">;</span>                context<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> particle<span class="token punctuation">.</span>color<span class="token punctuation">;</span>                context<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>particle<span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token number">1.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>particle<span class="token punctuation">.</span>y <span class="token operator">-</span> <span class="token number">1.5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>loop<span class="token punctuation">)</span><span class="token punctuation">;</span>        module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token constant">POWERMODE</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">module<span class="token punctuation">,</span> exports</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> properties <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'direction'</span><span class="token punctuation">,</span> <span class="token string">'boxSizing'</span><span class="token punctuation">,</span> <span class="token string">'width'</span><span class="token punctuation">,</span> <span class="token string">'height'</span><span class="token punctuation">,</span> <span class="token string">'overflowX'</span><span class="token punctuation">,</span> <span class="token string">'overflowY'</span><span class="token punctuation">,</span> <span class="token string">'borderTopWidth'</span><span class="token punctuation">,</span> <span class="token string">'borderRightWidth'</span><span class="token punctuation">,</span> <span class="token string">'borderBottomWidth'</span><span class="token punctuation">,</span> <span class="token string">'borderLeftWidth'</span><span class="token punctuation">,</span> <span class="token string">'borderStyle'</span><span class="token punctuation">,</span> <span class="token string">'paddingTop'</span><span class="token punctuation">,</span> <span class="token string">'paddingRight'</span><span class="token punctuation">,</span> <span class="token string">'paddingBottom'</span><span class="token punctuation">,</span> <span class="token string">'paddingLeft'</span><span class="token punctuation">,</span> <span class="token string">'fontStyle'</span><span class="token punctuation">,</span> <span class="token string">'fontVariant'</span><span class="token punctuation">,</span> <span class="token string">'fontWeight'</span><span class="token punctuation">,</span> <span class="token string">'fontStretch'</span><span class="token punctuation">,</span> <span class="token string">'fontSize'</span><span class="token punctuation">,</span> <span class="token string">'fontSizeAdjust'</span><span class="token punctuation">,</span> <span class="token string">'lineHeight'</span><span class="token punctuation">,</span> <span class="token string">'fontFamily'</span><span class="token punctuation">,</span> <span class="token string">'textAlign'</span><span class="token punctuation">,</span> <span class="token string">'textTransform'</span><span class="token punctuation">,</span> <span class="token string">'textIndent'</span><span class="token punctuation">,</span> <span class="token string">'textDecoration'</span><span class="token punctuation">,</span> <span class="token string">'letterSpacing'</span><span class="token punctuation">,</span> <span class="token string">'wordSpacing'</span><span class="token punctuation">,</span> <span class="token string">'tabSize'</span><span class="token punctuation">,</span> <span class="token string">'MozTabSize'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> isFirefox <span class="token operator">=</span> window<span class="token punctuation">.</span>mozInnerScreenX <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            <span class="token keyword">function</span> <span class="token function">getCaretCoordinates</span><span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> position<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> debug <span class="token operator">=</span> options <span class="token operator">&amp;&amp;</span> options<span class="token punctuation">.</span>debug <span class="token operator">||</span> <span class="token boolean">false</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>debug<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">var</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'#input-textarea-caret-position-mirror-div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        el<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">var</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                div<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token string">'input-textarea-caret-position-mirror-div'</span><span class="token punctuation">;</span>                document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">var</span> style <span class="token operator">=</span> div<span class="token punctuation">.</span>style<span class="token punctuation">;</span>                <span class="token keyword">var</span> computed <span class="token operator">=</span> window<span class="token punctuation">.</span>getComputedStyle <span class="token operator">?</span> <span class="token function">getComputedStyle</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span> <span class="token operator">:</span> element<span class="token punctuation">.</span>currentStyle<span class="token punctuation">;</span>                style<span class="token punctuation">.</span>whiteSpace <span class="token operator">=</span> <span class="token string">'pre-wrap'</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>element<span class="token punctuation">.</span>nodeName <span class="token operator">!==</span> <span class="token string">'INPUT'</span><span class="token punctuation">)</span> style<span class="token punctuation">.</span>wordWrap <span class="token operator">=</span> <span class="token string">'break-word'</span><span class="token punctuation">;</span>                style<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token string">'absolute'</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>debug<span class="token punctuation">)</span> style<span class="token punctuation">.</span>visibility <span class="token operator">=</span> <span class="token string">'hidden'</span><span class="token punctuation">;</span>                properties<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">prop</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    style<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> computed<span class="token punctuation">[</span>prop<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>isFirefox<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>element<span class="token punctuation">.</span>scrollHeight <span class="token operator">></span> <span class="token function">parseInt</span><span class="token punctuation">(</span>computed<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">)</span> style<span class="token punctuation">.</span>overflowY <span class="token operator">=</span> <span class="token string">'scroll'</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    style<span class="token punctuation">.</span>overflow <span class="token operator">=</span> <span class="token string">'hidden'</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                div<span class="token punctuation">.</span>textContent <span class="token operator">=</span> element<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> position<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>element<span class="token punctuation">.</span>nodeName <span class="token operator">===</span> <span class="token string">'INPUT'</span><span class="token punctuation">)</span> div<span class="token punctuation">.</span>textContent <span class="token operator">=</span> div<span class="token punctuation">.</span>textContent<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\s</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">"\u00a0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">var</span> span <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'span'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                span<span class="token punctuation">.</span>textContent <span class="token operator">=</span> element<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>position<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">'.'</span><span class="token punctuation">;</span>                div<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>span<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">var</span> coordinates <span class="token operator">=</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">top</span><span class="token operator">:</span> span<span class="token punctuation">.</span>offsetTop <span class="token operator">+</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>computed<span class="token punctuation">[</span><span class="token string">'borderTopWidth'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token literal-property property">left</span><span class="token operator">:</span> span<span class="token punctuation">.</span>offsetLeft <span class="token operator">+</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>computed<span class="token punctuation">[</span><span class="token string">'borderLeftWidth'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>debug<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    span<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">'#aaa'</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">return</span> coordinates<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> module <span class="token operator">!=</span> <span class="token string">"undefined"</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> module<span class="token punctuation">.</span>exports <span class="token operator">!=</span> <span class="token string">"undefined"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                module<span class="token punctuation">.</span>exports <span class="token operator">=</span> getCaretCoordinates<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                window<span class="token punctuation">.</span>getCaretCoordinates <span class="token operator">=</span> getCaretCoordinates<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后在<code>themes\matery\layout\layout.ejs</code>中添加</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token comment">&lt;!-- 添加打字爆炸特效 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/js/activate-power-mode.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token constant">POWERMODE</span><span class="token punctuation">.</span>colorful <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// make power mode colorful</span>    <span class="token constant">POWERMODE</span><span class="token punctuation">.</span>shake <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// turn off shake</span>    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> <span class="token constant">POWERMODE</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 特效 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>valine</title>
      <link href="/posts/9997.html"/>
      <url>/posts/9997.html</url>
      
        <content type="html"><![CDATA[<h1 id="valine评论系统详细配置"><a href="#valine评论系统详细配置" class="headerlink" title="valine评论系统详细配置"></a>valine评论系统详细配置</h1><p><a href="https://hwame.top/20200520/hello-hexo-optimization.html">Hexo博客搭建(3)——优化评论系统 | 鴻塵 (hwame.top)</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> valine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修改字体</title>
      <link href="/posts/3356.html"/>
      <url>/posts/3356.html</url>
      
        <content type="html"><![CDATA[<h1 id="字体修改"><a href="#字体修改" class="headerlink" title="字体修改"></a>字体修改</h1><h2 id="常见字体"><a href="#常见字体" class="headerlink" title="常见字体"></a>常见字体</h2><p>字体文件格式在Web开发中扮演着重要的角色，以下是几种常见的web字体格式：</p><ol><li><p><strong>TrueType (.ttf)</strong></p><ul><li>TrueType 是一种广泛应用于Windows和Mac操作系统的字体格式。它通过数学模式定义轮廓技术，使得字体在缩放或旋转时保持清晰无锯齿的显示效果。</li></ul></li><li><p><strong>Embedded Open Type (.eot)</strong></p><ul><li>EOT（嵌入式OpenType）是微软专为网页设计的一种字体格式，允许将OpenType字体嵌入到网页并由浏览器下载渲染。这种格式确保字体只在用户浏览当前页面时临时安装在系统中。</li></ul></li><li><p><strong>OpenType (.otf)</strong></p><ul><li>OpenType是一种高级的字型格式，结合了TrueType和PostScript的优点，支持多种复杂特性如连字、多语言支持等。由微软与Adobe联合开发，其文件扩展名为.otf。</li></ul></li><li><p><strong>Web Open Font Format (.woff)</strong></p><ul><li>WOFF（Web Open Font Format）是专门为网络应用优化的字体格式，是对TrueType和OpenType格式的封装和压缩版本。WOFF文件包含了字体数据和元数据，并针对网络传输进行了高效压缩，无加密或DRM保护措施，被各大主流字体供应商广泛支持。</li></ul></li><li><p><strong>SVG Fonts (.svg, .svgz)</strong></p><ul><li>SVG Fonts 使用SVG（Scalable Vector Graphics）技术来呈现字体，这意味着它们本质上是矢量图形，可以任意缩放而不失真。SVG字体可以通过简单的文本命令实现丰富的图形图像效果，包括色彩渐变、路径、自定义字体以及透明和滤镜效果等。其中.svgz是gzip压缩过的SVG字体格式，更利于网络传输。</li></ul></li></ol><p>CSS支持字体样式，通过@font-face属性在网页中嵌入自定义字体，主流的浏览器都支持这种方式，同时CSS字体属性还可以定义字体，加粗，大小，文字样式等。</p><p>默认支持:</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">body</span><span class="token punctuation">&#123;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"serif"</span><span class="token punctuation">,</span><span class="token string">"sans-serif"</span><span class="token punctuation">,</span><span class="token string">"cursive"</span><span class="token punctuation">,</span><span class="token string">"fantasy"</span><span class="token punctuation">,</span><span class="token string">"monospace"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">body</span><span class="token punctuation">&#123;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"sans-serif,monospace,微软雅黑,黑体,宋体"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>&lt;body><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>我喜欢的写法：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.myfont</span><span class="token punctuation">&#123;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span><span class="token string">"微软雅黑"</span><span class="token punctuation">,</span><span class="token string">"黑体"</span><span class="token punctuation">,</span><span class="token string">"宋体"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>myfont<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> Hello World! 这个网站很酷 zhangxiaocai.cn <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="自定义引入"><a href="#自定义引入" class="headerlink" title="自定义引入"></a>自定义引入</h3><p>如果想使用自定义的字体，首先引入</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token atrule"><span class="token rule">@font-face</span></span> <span class="token punctuation">&#123;</span>       <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'myfont'</span><span class="token punctuation">;</span>       <span class="token property">src</span><span class="token punctuation">:</span><span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">'字体文件1.woff'</span><span class="token punctuation">)</span></span><span class="token punctuation">,</span>     <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">'字体文件2.ttf'</span><span class="token punctuation">)</span></span><span class="token punctuation">,</span>       <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">'字体文件3.eot'</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">body</span><span class="token punctuation">&#123;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'myfont'</span> <span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://zhangxiaocai.cn/posts/8f5c11d2.html">静态博客-字体更换 | 斯莫笔记 (zhangxiaocai.cn)</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字体 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo优化</title>
      <link href="/posts/8410.html"/>
      <url>/posts/8410.html</url>
      
        <content type="html"><![CDATA[<h1 id="hexo优化"><a href="#hexo优化" class="headerlink" title="hexo优化"></a>hexo优化</h1><h2 id="cnpm"><a href="#cnpm" class="headerlink" title="cnpm"></a>cnpm</h2><blockquote><p><strong>本节参考自　<a href="http://npm.taobao.org/">淘宝 NPM 镜像</a></strong></p></blockquote><p>这是一个完整 <strong>npmjs.org</strong> 镜像，你可以用此代替官方版本（只读），同步频率目前为 10 分钟 一次以保证尽量与官方服务器同步。在 <strong>npm</strong> 无法同步时提供帮助。</p><p><strong>打开命令行窗口安装</strong>：<code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></p><h3 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h3><h4 id="安装模块"><a href="#安装模块" class="headerlink" title="安装模块"></a>安装模块</h4><p>从 <a href="https://registry.npm.taobao.org/">registry.npm.taobao.org</a> 安装所有模块。当安装的时候发现安装的模块还没有同步过来，淘宝 NPM 会自动在后台进行同步，并且会让你从官方 NPM <a href="https://registry.npm.taobao.org/">registry.npm.taobao.org</a> 进行安装。下次你再安装这个模块的时候，就会直接从 淘宝 NPM 安装了。</p><pre class="line-numbers language-none"><code class="language-none">$ cnpm install [name]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="同步模块"><a href="#同步模块" class="headerlink" title="同步模块"></a>同步模块</h4><p>直接通过 <code>sync</code> 命令马上同步一个模块, 只有 <code>cnpm</code> 命令行才有此功能:</p><pre class="line-numbers language-none"><code class="language-none">$ cnpm sync connect<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>当然, 你可以直接通过 web 方式来同步: <a href="https://npm.taobao.org/sync/connect">&#x2F;sync&#x2F;connect</a></p><pre class="line-numbers language-none"><code class="language-none">$ open https:&#x2F;&#x2F;npm.taobao.org&#x2F;sync&#x2F;connect<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="其它命令"><a href="#其它命令" class="headerlink" title="其它命令"></a>其它命令</h4><p>支持 <code>npm</code> 除了 <code>publish</code> 之外的所有命令, 如:</p><pre class="line-numbers language-none"><code class="language-none">$ cnpm info connect<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="InstantClick"><a href="#InstantClick" class="headerlink" title="InstantClick"></a>InstantClick</h2><p><strong>本节参考自　<a href="https://www.liuxinggang.com/2016-12-06-hexo%E5%8D%9A%E5%AE%A2%E8%BF%9B%E9%98%B6%EF%BC%8D%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/">刘兴刚博客</a></strong></p><p><strong>Next 主题 现已集成 quicklink</strong></p><p>通常，我们为了减少 <strong>DNS</strong> 的查询时间，使用 <strong>dns prefetch</strong> 为该页面中的链接做解析，提升页面的加载速度。类似的，我们可以在鼠标滑到链接上到点击的时间间隙去加载这个页面，通常这个间隙有几百毫秒，利用 <strong>InstantClick</strong>，我们可以充分利用这几百毫秒，让网站能够瞬间显示新页面，几乎没有延迟。</p><p>但是 <strong>InstantClick</strong> 并不能滥用，许多 <strong>js</strong> 无法与它兼容，如<strong>谷歌分析</strong>、<strong>百度统计</strong>以及 <strong>fancybox</strong>。</p><p>初始化并解决部分 <strong>js</strong> 无法加载的问题：</p><p><strong>打开</strong>　<code>\hexo-theme-next\layout\_partials\head.njk</code></p><p><strong>添加</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"\js\custom\instantclick.min.js"</span> data<span class="token operator">-</span>no<span class="token operator">-</span>instant<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span>   <span class="token operator">&lt;</span>script data<span class="token operator">-</span>no<span class="token operator">-</span>instant<span class="token operator">></span>   InstantClick<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'change'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">isInitialLoad</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">if</span> <span class="token punctuation">(</span>isInitialLoad <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> MathJax <span class="token operator">!==</span> <span class="token string">'undefined'</span><span class="token punctuation">)</span> <span class="token comment">// support MathJax</span>     MathJax<span class="token punctuation">.</span>Hub<span class="token punctuation">.</span><span class="token function">Queue</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"Typeset"</span><span class="token punctuation">,</span>MathJax<span class="token punctuation">.</span>Hub<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> prettyPrint <span class="token operator">!==</span> <span class="token string">'undefined'</span><span class="token punctuation">)</span> <span class="token comment">// support google code prettify</span>     <span class="token function">prettyPrint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> _hmt <span class="token operator">!==</span> <span class="token string">'undefined'</span><span class="token punctuation">)</span>  <span class="token comment">// support 百度统计</span>     _hmt<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'_trackPageview'</span><span class="token punctuation">,</span> location<span class="token punctuation">.</span>pathname <span class="token operator">+</span> location<span class="token punctuation">.</span>search<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> ga <span class="token operator">!==</span> <span class="token string">'undefined'</span><span class="token punctuation">)</span>  <span class="token comment">// support google analytics</span>       <span class="token function">ga</span><span class="token punctuation">(</span><span class="token string">'send'</span><span class="token punctuation">,</span> <span class="token string">'pageview'</span><span class="token punctuation">,</span> location<span class="token punctuation">.</span>pathname <span class="token operator">+</span> location<span class="token punctuation">.</span>search<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   InstantClick<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>下载</strong>　 <a href="http://instantclick.io/v3.1.0/instantclick.min.js">instantclick.min.js</a></p><p><strong>打开</strong>　<code>\hexo-theme-next\source\js\custom\</code></p><p><strong>放置</strong>　<code>instantclick.min.js</code></p><p>这时候对于所有链接都开启<strong>预加载模式</strong>，但可以把部分链接加入黑名单：<br><code>&lt;a href=&quot;\blog\&quot; data-no-instant&gt;Blog&lt;/a&gt;</code></p><h2 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h2><h3 id="5-1-Gulp"><a href="#5-1-Gulp" class="headerlink" title="5.1. Gulp"></a>5.1. Gulp</h3><p><strong>本节参考自　<a href="https://chanshiyu.com/">蝉時雨</a></strong></p><p><strong>gulp.js</strong> 是基于流的自动化构建工具，我们可以使用 <strong>Gulp</strong> 为 Hexo 压缩文件</p><p><strong>在 \blog\ 打开命令行窗口</strong></p><p><strong>安装</strong></p><pre class="line-numbers language-none"><code class="language-none">npm install gulp --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>再根据需要安装以下模块</strong></p><pre class="line-numbers language-none"><code class="language-none">npm install gulp-minify-css --savenpm install gulp-uglify --savenpm install gulp-htmlmin --savenpm install gulp-htmlclean --savenpm install gulp-imagemin --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>打开</strong>　<code>\blog\</code></p><p><strong>新建</strong>　<code>gulpfile.js</code></p><p><strong>添加</strong></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> gulp <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> minifycss <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-minify-css'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> uglify <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-uglify'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> htmlmin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-htmlmin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> htmlclean <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-htmlclean'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> imagemin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'gulp-imagemin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 压缩html文件</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'minify-html'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/**/*.html'</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlclean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">htmlmin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token literal-property property">removeComments</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token literal-property property">minifyJS</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token literal-property property">minifyCSS</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token literal-property property">minifyURLs</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 压缩css文件</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'minify-css'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/**/*.css'</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">minifycss</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 压缩js文件</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'minify-js'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'./public/**/.js'</span><span class="token punctuation">,</span><span class="token string">'!./public/js/**/*min.js'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">uglify</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 压缩 public/images 目录内图片</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'minify-images'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  gulp<span class="token punctuation">.</span><span class="token function">src</span><span class="token punctuation">(</span><span class="token string">'./public/images/**/*.*'</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">imagemin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>     <span class="token literal-property property">optimizationLevel</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment">//类型：Number  默认：3  取值范围：0-7（优化等级）</span>     <span class="token literal-property property">progressive</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">//类型：Boolean 默认：false 无损压缩jpg图片</span>     <span class="token literal-property property">interlaced</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//类型：Boolean 默认：false 隔行扫描gif进行渲染</span>     <span class="token literal-property property">multipass</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">//类型：Boolean 默认：false 多次优化svg直到完全优化</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gulp<span class="token punctuation">.</span><span class="token function">dest</span><span class="token punctuation">(</span><span class="token string">'./public/uploads'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 默认任务 gulp 4.0 适用的方式</span>gulp<span class="token punctuation">.</span><span class="token function">task</span><span class="token punctuation">(</span><span class="token string">'default'</span><span class="token punctuation">,</span> gulp<span class="token punctuation">.</span><span class="token function">parallel</span><span class="token punctuation">(</span><span class="token string">'minify-html'</span><span class="token punctuation">,</span> <span class="token string">'minify-css'</span><span class="token punctuation">,</span> <span class="token string">'minify-js'</span><span class="token punctuation">,</span> <span class="token string">'minify-images'</span> <span class="token comment">//build the website</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>依照格式，删除未安装模块的代码部分</strong></p><p><strong>在命令行内输入 <code>$ gulp</code> 即可运行</strong></p><p><strong>一键同步代码参照　<a href="https://qianling.pw/hexo-optimization/#7">7. 批处理脚本自动创建文章及一键部署</a></strong></p><p><strong>把因删除空格缩小的间距调整回来：</strong></p><p><strong>打开</strong>　<code>\blog\source\_data\styles.styl</code></p><p><strong>添加</strong></p><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F; gulp 间距调整span.leancloud-visitors-count, span.post-comments-count.valine-comment-count &#123;  padding-left: 2px;&#125;i.fa.fa-ravelry &#123;  padding-left: 5px;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-2-hexo-neat"><a href="#5-2-hexo-neat" class="headerlink" title="5.2. hexo-neat"></a>5.2. hexo-neat</h3><p><strong>本节参考自　<a href="https://blog.csdn.net/lewky_liu/article/details/82432003">Hexo瞎折腾系列(5) - 使用hexo-neat插件压缩页面静态资源</a></strong></p><p><strong>已知 BUG：</strong></p><ul><li><strong>压缩 md 文件会使 markdown 语法的代码块消失</strong></li><li><strong>会删除全角空格</strong></li></ul><p><strong>安装</strong>　<code>npm install hexo-neat --save</code></p><p><strong>打开</strong>　<code>\blog\_config.yml</code></p><p><strong>添加</strong></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># hexo-neat</span><span class="token comment"># 开关</span><span class="token key atrule">neat_enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token comment"># 压缩 html</span><span class="token key atrule">neat_html</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">exclude</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token string">'**/*.md'</span><span class="token comment"># 压缩 css</span><span class="token key atrule">neat_css</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">exclude</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token string">'**/*.min.css'</span><span class="token comment"># 压缩 js</span><span class="token key atrule">neat_js</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">mangle</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">output</span><span class="token punctuation">:</span>  <span class="token key atrule">compress</span><span class="token punctuation">:</span>  <span class="token key atrule">exclude</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token string">'**/*.min.js'</span>  <span class="token punctuation">-</span> <span class="token string">'**/jquery.fancybox.pack.js'</span>  <span class="token punctuation">-</span> <span class="token string">'**/index.js'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Service-Worker"><a href="#Service-Worker" class="headerlink" title="Service Worker"></a>Service Worker</h2><p><strong>教程　<a href="https://qianling.pw/service-worker/">Hexo 部署 Service Worker</a></strong></p><p>Service workers 本质上充当 Web 应用程序与浏览器之间的代理服务器，为了适应越来越多的网页应用而产生。</p><p>它可以通过拦截并修改访问和资源请求，缓存特定的网页资源，并可以将网页做到离线可用；</p><p>同时 Service Workers 也能做到定期后台同步与信息推送。</p><p>部署成功后，您可以节省用户流量、提升页面二次加载速度等。</p><h2 id="批处理脚本自动创建文章及一键部署"><a href="#批处理脚本自动创建文章及一键部署" class="headerlink" title="批处理脚本自动创建文章及一键部署"></a>批处理脚本自动创建文章及一键部署</h2><p><strong>打开</strong>　<code>\blog\</code></p><p><strong>新建</strong>　<code>新建文章.bat</code></p><p><strong>添加</strong></p><pre class="line-numbers language-none"><code class="language-none">set &quot;a&#x3D;%date:~,4%&quot;set &quot;b&#x3D;%date:~5,2%&quot;set &quot;c&#x3D;%date:~8,2%&quot;hexo new &quot;%a%-%b%-%c%&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>命名格式为　<code>年-月-日.md</code></strong></p><p><strong>部署可写为</strong>　<code>hexo clean &amp; hexo g -d</code></p><p><strong>若使用 gulp 则写为</strong>　<code>hexo clean &amp; hexo g &amp;&amp; gulp &amp; hexo deploy</code></p><h2 id="添加标题底部横线"><a href="#添加标题底部横线" class="headerlink" title="添加标题底部横线"></a>添加标题底部横线</h2><p><strong>本节参考自　<a href="http://yuchen-lea.github.io/">跬步</a></strong></p><p><strong>打开</strong>　<code>\blog\source\_data\styles.styl</code></p><p><strong>添加</strong></p><pre class="line-numbers language-none"><code class="language-none">h1, h2, h3, h4, h5, h6 &#123;  border-bottom: 2px solid #8c8c8c;  padding: 0 5% 2px 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="阅读进度条"><a href="#阅读进度条" class="headerlink" title="阅读进度条"></a>阅读进度条</h2><p><strong>本节参考自　<a href="https://isudox.com/2016/07/14/customize-hexo-theme/">I sudo X</a></strong></p><p><strong>比自带的更好看。</strong></p><p><strong>打开</strong>　<code>\blog\source\_data\header.njk</code></p><p><strong>添加</strong></p><pre class="line-numbers language-none"><code class="language-none">&lt;div class&#x3D;&quot;top-scroll-bar&quot;&gt;&lt;&#x2F;div&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>打开</strong>　<code>\blog\source\_data\styles.styl</code></p><p><strong>添加</strong></p><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;顶部阅读进度条.top-scroll-bar &#123;  position: fixed;  height: 3px;  top: 0;  left: 0;  transition-duration: 0.7s,0.7s;  transiton-property: width,background;  z-index: 99999;  display: none;  background: #37C6C0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>打开</strong>　<code>\hexo-theme-next\source\js\custom\custom.js</code></p><p><strong>添加</strong></p><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F;阅读进度条$(document).ready(function () &#123;  $(window).scroll(function()&#123;  $(&quot;.top-scroll-bar&quot;).attr(&quot;style&quot;, &quot;width: &quot; + ($(this).scrollTop() &#x2F; ($(document).height() - $(this).height()) * 100) + &quot;%; display: block;&quot;);  var s&#x3D;$(window).scrollTop();  var a&#x3D;$(document).height();  var b&#x3D;$(window).height();  var result&#x3D;parseInt(s&#x2F;(a-b)*100);  $(&quot;.top-scroll-bar&quot;).css(&quot;width&quot;,result+&quot;%&quot;);  if(result&gt;&#x3D;0&amp;&amp;result&lt;&#x3D;19)  $(&quot;.top-scroll-bar&quot;).css(&quot;background&quot;,&quot;#cccccc&quot;);  if(result&gt;&#x3D;20&amp;&amp;result&lt;&#x3D;39)  $(&quot;.top-scroll-bar&quot;).css(&quot;background&quot;,&quot;#50bcb6&quot;);  if(result&gt;&#x3D;40&amp;&amp;result&lt;&#x3D;59)  $(&quot;.top-scroll-bar&quot;).css(&quot;background&quot;,&quot;#85c440&quot;);  if(result&gt;&#x3D;60&amp;&amp;result&lt;&#x3D;79)  $(&quot;.top-scroll-bar&quot;).css(&quot;background&quot;,&quot;#f2b63c&quot;);  if(result&gt;&#x3D;80&amp;&amp;result&lt;&#x3D;99)  $(&quot;.top-scroll-bar&quot;).css(&quot;background&quot;,&quot;#FF0000&quot;);  if(result&#x3D;&#x3D;100)  $(&quot;.top-scroll-bar&quot;).css(&quot;background&quot;,&quot;#f58ca1&quot;);  &#125;);&#125;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="在线阅读pdf"><a href="#在线阅读pdf" class="headerlink" title="在线阅读pdf"></a>在线阅读pdf</h2><p>参考：<a href="https://breezs.gitee.io/posts/202203081740.html">如何在hexo博客中在线阅读pdf | 冰山一树Sankey (gitee.io)</a></p><h2 id="图片懒加载"><a href="#图片懒加载" class="headerlink" title="图片懒加载"></a>图片懒加载</h2><h2 id="添加二级菜单功能"><a href="#添加二级菜单功能" class="headerlink" title="添加二级菜单功能#"></a>添加二级菜单功能<a href="https://www.cnblogs.com/chendeqiang/p/12861726.html#727338988">#</a></h2><p><a href="https://sunhwee.com/posts/65d7181d.html">https://sunhwee.com/posts/65d7181d.html</a></p><h2 id="双部署分流操作"><a href="#双部署分流操作" class="headerlink" title="双部署分流操作#"></a>双部署分流操作<a href="https://www.cnblogs.com/chendeqiang/p/12861726.html#3338530695">#</a></h2><p><a href="http://www.purethought.cn/74d17cc3.html">www.purethought.cn/74d17cc3.html</a></p><h2 id="远程部署"><a href="#远程部署" class="headerlink" title="远程部署#"></a>远程部署<a href="https://www.cnblogs.com/chendeqiang/p/12861726.html#3568245540">#</a></h2><p>应用腾讯CloudStudio进行远程部署hexo。这样的好处是获得了集成化开发环境和全网化开发化境，只要有电脑有网络的地方都可以部署博客了。</p><h3 id="私有仓库"><a href="#私有仓库" class="headerlink" title="私有仓库#"></a>私有仓库<a href="https://www.cnblogs.com/chendeqiang/p/12861726.html#3620572302">#</a></h3><p>默认情况下github的仓库是公有的，仓库的内容会被所有人看见，因此先建立个私有化仓库存储源码。<br>在github上新建一个<code>Private</code>仓库，如：Blog</p><h3 id="上传源码"><a href="#上传源码" class="headerlink" title="上传源码#"></a>上传源码<a href="https://www.cnblogs.com/chendeqiang/p/12861726.html#194976405">#</a></h3><p>删除第三方主题下的.git文件夹；<br>配置.gitignore文件：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Copy.DS_StoreThumbs.dbdb.json*.lognode_modules/public/.deploy*/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上传源码到私有仓库</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Copygit init  //初始化本地仓库<span class="token function">git</span> remote <span class="token function">add</span> origin 私有仓库的git地址  //添加远程仓库<span class="token function">git</span> pull origin master<span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span> //添加本地所有文件到仓库        <span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">"blog源文件"</span> //添加commit<span class="token function">git</span> push <span class="token parameter variable">-u</span> origin master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="CloudStudio"><a href="#CloudStudio" class="headerlink" title="CloudStudio#"></a>CloudStudio<a href="https://www.cnblogs.com/chendeqiang/p/12861726.html#2131830712">#</a></h3><p>申请CloudStudio账号，并<code>新建工作空间</code><br>先选择运行环境，hexo<br>然后来源选其他git仓库，填写私有仓库的git地址 ，并将PUblishKey添加到github里<br>等个三五分钟，就会看到CloudStudio工作站了<br>这样就可以使用CloudStudio部署博客了，例如使用<code>hexo g</code>测试一下先。</p><h2 id="流程图"><a href="#流程图" class="headerlink" title="流程图#"></a>流程图<a href="https://www.cnblogs.com/chendeqiang/p/12861726.html#2934767672">#</a></h2><p>安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">--save</span> hexo-filter-flowchart<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>用法</p><pre class="line-numbers language-out" data-language="out"><code class="language-out">&#96; &#96; &#96;flowst&#x3D;&gt;start: Start|past:&gt;https:&#x2F;&#x2F;www.baidu.com[blank]e&#x3D;&gt;end: End:&gt;https:&#x2F;&#x2F;www.baidu.comop1&#x3D;&gt;operation: My Operation|pastop2&#x3D;&gt;operation: Stuff|currentsub1&#x3D;&gt;subroutine: My Subroutine|invalidcond&#x3D;&gt;condition: Yesor No?|approved:&gt;https:&#x2F;&#x2F;www.baidu.comc2&#x3D;&gt;condition: Good idea|rejectedio&#x3D;&gt;inputoutput: catch something...|requestst-&gt;op1(right)-&gt;condcond(yes, right)-&gt;c2cond(no)-&gt;sub1(left)-&gt;op1c2(yes)-&gt;io-&gt;ec2(no)-&gt;op2-&gt;e&#96; &#96; &#96;st&#x3D;&gt;start: Start|past:&gt;https:&#x2F;&#x2F;www.baidu.com[blank]e&#x3D;&gt;end: End:&gt;https:&#x2F;&#x2F;www.baidu.comop1&#x3D;&gt;operation: My Operation|pastop2&#x3D;&gt;operation: Stuff|currentsub1&#x3D;&gt;subroutine: My Subroutine|invalidcond&#x3D;&gt;condition: Yesor No?|approved:&gt;https:&#x2F;&#x2F;www.baidu.comc2&#x3D;&gt;condition: Good idea|rejectedio&#x3D;&gt;inputoutput: catch something...|requestst-&gt;op1(right)-&gt;condcond(yes, right)-&gt;c2cond(no)-&gt;sub1(left)-&gt;op1c2(yes)-&gt;io-&gt;ec2(no)-&gt;op2-&gt;e<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="SEO优化"><a href="#SEO优化" class="headerlink" title="SEO优化"></a>SEO优化</h2><p>- </p><ul><li><a href="https://blog.tianyichuxin.com/2022/05/42878.html#toc-heading-1">基于Hexo的matery主题搭建博客并深度优化 | 天弈初心 (tianyichuxin.com)</a></li></ul><h2 id="amp优化"><a href="#amp优化" class="headerlink" title="amp优化"></a>amp优化</h2><p><a href="https://www.cnblogs.com/chendeqiang/p/12861726.html">博客-hexo-matery主题改造笔记 - 多弗朗强哥 - 博客园 (cnblogs.com)</a></p><p><code>hexo-generator-amp</code></p><h2 id="静态资源加速，jsdelivr的替代品"><a href="#静态资源加速，jsdelivr的替代品" class="headerlink" title="静态资源加速，jsdelivr的替代品"></a>静态资源加速，jsdelivr的替代品</h2><p><a href="https://blog.luzy.top/posts/2757854163/#more">静态资源加速，寻找jsdelivr的替代品 - 江风引雨の小po站 (luzy.top)</a></p><p><a href="https://blog.luzy.top/posts/2757854163/#more">静态资源加速，寻找jsdelivr的替代品 - 江风引雨の小po站 (luzy.top)</a></p><h2 id="文末结束标记"><a href="#文末结束标记" class="headerlink" title="文末结束标记"></a>文末结束标记</h2><p><strong>本节参考自　<a href="http://www.wuxubj.cn/2016/08/Hexo-nexT-build-personal-blog/#5-3-%E6%96%87%E7%AB%A0%E6%9C%AB%E5%B0%BE%E6%B7%BB%E5%8A%A0%E2%80%9C%E6%9C%AC%E6%96%87%E7%BB%93%E6%9D%9F%E2%80%9D%E6%A0%87%E8%AE%B0/">务虚笔记</a></strong></p><h2 id="自定义内置标签"><a href="#自定义内置标签" class="headerlink" title="自定义内置标签"></a>自定义内置标签</h2><p><a href="https://www.cnblogs.com/chendeqiang/p/12861726.html">博客-hexo-matery主题改造笔记 - 多弗朗强哥 - 博客园 (cnblogs.com)</a></p><p>在themes&#x2F;主题 下新建scripts文件夹，hexo会自动执行此文件夹的内容。<br>在scripts文件夾下新建block.js</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">Copyhexo<span class="token punctuation">.</span>extend<span class="token punctuation">.</span>tag<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">'r'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">args<span class="token punctuation">,</span> content</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> className <span class="token operator">=</span>  args<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token string">'&lt;div class="uk-alert uk-alert-danger">&lt;i class="fa fa-warning">&lt;/i> '</span> <span class="token operator">+</span> content <span class="token operator">+</span> <span class="token string">'&lt;/div>'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">ends</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hexo<span class="token punctuation">.</span>extend<span class="token punctuation">.</span>tag<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">'g'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">args<span class="token punctuation">,</span> content</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> className <span class="token operator">=</span>  args<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token string">'&lt;div class="uk-alert uk-alert-success">&lt;i class="fa fa-check-circle">&lt;/i> '</span> <span class="token operator">+</span> content <span class="token operator">+</span> <span class="token string">'&lt;/div>'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">ends</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hexo<span class="token punctuation">.</span>extend<span class="token punctuation">.</span>tag<span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token string">'y'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">args<span class="token punctuation">,</span> content</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> className <span class="token operator">=</span>  args<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token string">'&lt;div class="uk-alert uk-alert-warning">&lt;i class="fa fa-exclamation-circle">&lt;/i> '</span> <span class="token operator">+</span> content <span class="token operator">+</span> <span class="token string">'&lt;/div>'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">ends</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在themes&#x2F;主题&#x2F;source&#x2F;css&#x2F;my.css內添加</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">Copy.uk-alert</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> #ebf7fd<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #2d7091<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 1px solid <span class="token function">rgba</span><span class="token punctuation">(</span>45<span class="token punctuation">,</span> 112<span class="token punctuation">,</span> 145<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">border-radius</span><span class="token punctuation">:</span> 4px<span class="token punctuation">;</span>  <span class="token property">text-shadow</span><span class="token punctuation">:</span> 0 1px 0 #ffffff<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* Modifier: `uk-alert-success` ========================================================================== */</span><span class="token selector">.uk-alert-success</span> <span class="token punctuation">&#123;</span>  <span class="token property">background</span><span class="token punctuation">:</span> #f2fae3<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #659f13<span class="token punctuation">;</span>  <span class="token property">border-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>101<span class="token punctuation">,</span> 159<span class="token punctuation">,</span> 19<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* Modifier: `uk-alert-warning` ========================================================================== */</span><span class="token selector">.uk-alert-warning</span> <span class="token punctuation">&#123;</span>  <span class="token property">background</span><span class="token punctuation">:</span> #fffceb<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #e28327<span class="token punctuation">;</span>  <span class="token property">border-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>226<span class="token punctuation">,</span> 131<span class="token punctuation">,</span> 39<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* Modifier: `uk-alert-danger` ========================================================================== */</span><span class="token selector">.uk-alert-danger</span> <span class="token punctuation">&#123;</span>  <span class="token property">background</span><span class="token punctuation">:</span> #fff1f0<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #d85030<span class="token punctuation">;</span>  <span class="token property">border-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>216<span class="token punctuation">,</span> 80<span class="token punctuation">,</span> 48<span class="token punctuation">,</span> 0.3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然後就可以使用了。<br>用法：</p><pre class="line-numbers language-w" data-language="w"><code class="language-w"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul><li><p><a href="https://qianling.pw/hexo-optimization/">Hexo 优化汇总 | 千灵 (qianling.pw)</a></p></li><li><p><a href="https://blog.csdn.net/qq_44846853/article/details/104563887">Hexo博客主题安装和优化（二）_hexo matery设置雪花飘落-CSDN博客</a></p></li><li><p><a href="https://blog.sky03.cn/posts/42790.html">Hexo进阶之各种优化 | Sky03我的薰衣草</a></p></li><li><p><a href="https://www.cnblogs.com/chendeqiang/p/12861726.html">博客-hexo-matery主题改造笔记 - 多弗朗强哥 - 博客园 (cnblogs.com)</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker常用命令</title>
      <link href="/posts/1d91.html"/>
      <url>/posts/1d91.html</url>
      
        <content type="html"><![CDATA[<h1 id="Docker常用命令"><a href="#Docker常用命令" class="headerlink" title="Docker常用命令"></a>Docker常用命令</h1><p>开始入门Docker学习，开始时间的晚了点，只能多花点功夫努力学习了。</p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402032139023.png" alt="DockerCheatSheet"></p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402032139991.png" alt="DockerXmind"></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>相册设置</title>
      <link href="/posts/fb80.html"/>
      <url>/posts/fb80.html</url>
      
        <content type="html"><![CDATA[<h1 id="添加相册"><a href="#添加相册" class="headerlink" title="添加相册"></a>添加相册</h1><h2 id="为什么添加相册"><a href="#为什么添加相册" class="headerlink" title="为什么添加相册"></a>为什么添加相册</h2><p>个人博客中添加相册功能，不仅具备多项实用性与娱乐性优点，而且能够丰富博客的表达形式与内容层次：</p><ol><li><strong>保存和展示图片</strong>：博主可以将自己拍摄或收集到的各种喜欢的图片上传至相册，如旅行照片、作品集、灵感素材等，为自己的博客创建一个独特的视觉档案库，方便随时查看和分享。</li><li><strong>记录日常生活</strong>：通过相册功能，博主能够以直观且生动的方式记录下生活中的点点滴滴，如美食制作过程、家庭聚会瞬间、学习工作进展、户外探险经历等。这些图像资料既是对生活记忆的有效留存，也是向读者展现真实自我、增进情感交流的重要载体。</li><li><strong>激发创作灵感</strong>：对于艺术创作者或者写作者来说，过往的图片记录可能是未来的创作源泉，相册的存在可以帮助他们回顾过去，挖掘新的创意灵感。</li></ol><p>综上所述，在个人博客中添加相册功能，不仅可以满足博主个性化的需求，还能有效增强博客的吸引力，提升用户的浏览满意度，并为博主提供一个珍贵的记忆宝库和持续创新的动力来源。</p><h2 id="样式一"><a href="#样式一" class="headerlink" title="样式一"></a>样式一</h2><h3 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h3><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402022017255.png" alt="galleries"></p><h3 id="添加【相册】菜单"><a href="#添加【相册】菜单" class="headerlink" title="添加【相册】菜单"></a>添加【相册】菜单</h3><ol><li><p>进入主题（matery）下的配置文件_config.yml，在menu下添加以下代码：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">Galleries</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /galleries    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fa<span class="token punctuation">-</span>photo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>在主题（matery）下的languages下的</p><p>default.yml（英文）添加：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">galleries</span><span class="token punctuation">:</span> galleries<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>zh-CN.yml（中文）添加：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">galleries</span><span class="token punctuation">:</span> 相册<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>在matery&#x2F;layout&#x2F;_partial&#x2F;下的<code>navigation.ejs</code>和<code>mobile-nav.ejs</code>文件里添加：</p><p>至于添加的位置，打开文件后就知道了，里面会有类似格式的代码，很容易找到的</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">menuMap.set("Galleries"<span class="token punctuation">,</span> "相册");<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>在站点根目录source下新建galleries文件，然后在该目录下新建index.md，添加以下代码：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> 相册<span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"galleries"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="设置样式"><a href="#设置样式" class="headerlink" title="设置样式"></a>设置样式</h3><p>在matery&#x2F;source&#x2F;css下新建gallery.css文件，添加以下样式：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.gallery-wrapper</span><span class="token punctuation">&#123;</span>  <span class="token property">padding-top</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.gallery-wrapper .gallery-box</span><span class="token punctuation">&#123;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 5px <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.gallery-wrapper .gallery-item</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>  <span class="token property">padding-bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">-moz-box-shadow</span><span class="token punctuation">:</span> 0 1px 3px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.22<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 1px 3px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.22<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 1px 3px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.22<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.gallery-cover-box</span><span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">padding-top</span><span class="token punctuation">:</span> 60%<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> center center no-repeat<span class="token punctuation">;</span>  <span class="token property">-webkit-background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>  <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.gallery-cover-box .gallery-cover-img</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>  <span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-50%<span class="token punctuation">,</span>-50%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.gallery-item .gallery-name</span><span class="token punctuation">&#123;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #666<span class="token punctuation">;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.waterfall</span> <span class="token punctuation">&#123;</span>  <span class="token property">column-count</span><span class="token punctuation">:</span> 3<span class="token punctuation">;</span>  <span class="token property">column-gap</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.photo-wrapper</span><span class="token punctuation">&#123;</span>  <span class="token property">padding-top</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.photo-item</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>  <span class="token property">padding-bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">-moz-page-break-inside</span><span class="token punctuation">:</span> avoid<span class="token punctuation">;</span>  <span class="token property">-webkit-column-break-inside</span><span class="token punctuation">:</span> avoid<span class="token punctuation">;</span>  <span class="token property">break-inside</span><span class="token punctuation">:</span> avoid<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>  <span class="token property">-moz-box-shadow</span><span class="token punctuation">:</span> 0 1px 3px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.22<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 1px 3px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.22<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 1px 3px 0 <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.22<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.photo-item img</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.photo-item .photo-name</span><span class="token punctuation">&#123;</span>  <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>  <span class="token property">border-top</span><span class="token punctuation">:</span> 1px solid #dddddd<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*适配移动端布局*/</span><span class="token atrule"><span class="token rule">@media</span> <span class="token keyword">only</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 601px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>  <span class="token selector">.waterfall</span> <span class="token punctuation">&#123;</span>    <span class="token property">column-count</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>    <span class="token property">column-gap</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在matery&#x2F;layout目录下</p><ul><li><p>新建galleries.ejs文件，添加以下代码：</p><pre class="line-numbers language-ej" data-language="ej"><code class="language-ej">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;&#x2F;css&#x2F;gallery.css&quot;&gt;&lt;%- partial(&#39;_partial&#x2F;bg-cover&#39;) %&gt;&lt;main class&#x3D;&quot;content&quot;&gt;    &lt;div class&#x3D;&quot;container&quot;&gt;        &lt;% if (site.data &amp;&amp; site.data.galleries) &#123; %&gt;        &lt;% var galleries &#x3D; site.data.galleries; %&gt;        &lt;div class&#x3D;&quot;gallery-wrapper row&quot;&gt;            &lt;% for (var i &#x3D; 0, len &#x3D; galleries.length; i &lt; len; i++) &#123; %&gt;            &lt;% var gallery &#x3D; galleries[i]; %&gt;            &lt;div class&#x3D;&quot;col s6 m4 l4 xl3 gallery-box&quot;&gt;                &lt;a href&#x3D;&quot;.&#x2F;&lt;%- gallery.name %&gt;&quot; class&#x3D;&quot;gallery-item&quot; data-aos&#x3D;&quot;zoom-in-up&quot;&gt;                    &lt;div class&#x3D;&quot;gallery-cover-box&quot; style&#x3D;&quot;background-image: url(http:&#x2F;&#x2F;图片地址.com&#x2F;&lt;%- gallery.cover%&gt;);&quot;&gt;                    &lt;&#x2F;div&gt;                    &lt;p class&#x3D;&quot;gallery-name&quot;&gt;                        &lt;%- gallery.name %&gt;                    &lt;&#x2F;p&gt;                &lt;&#x2F;a&gt;            &lt;&#x2F;div&gt;            &lt;% &#125; %&gt;        &lt;&#x2F;div&gt;        &lt;% &#125; %&gt;    &lt;&#x2F;div&gt;&lt;&#x2F;main&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>新建gallery.ejs，添加以下代码：</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/css/gallery.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/libs/fancybox/jquery.fancybox.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/libs/justifiedGallery/justifiedGallery.min.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/post-cover'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"><span class="token keyword">let</span> galleries <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>site<span class="token punctuation">.</span>data <span class="token operator">&amp;&amp;</span> site<span class="token punctuation">.</span>data<span class="token punctuation">.</span>galleries<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    galleries <span class="token operator">=</span> site<span class="token punctuation">.</span>data<span class="token punctuation">.</span>galleries<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> pageTitle <span class="token operator">=</span> page<span class="token punctuation">.</span>title<span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">getCurrentGallery</span><span class="token punctuation">(</span><span class="token parameter">galleries<span class="token punctuation">,</span> pageTitle</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> galleries<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>galleries<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span> <span class="token operator">==</span> pageTitle<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> galleries<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> currentGallery <span class="token operator">=</span> <span class="token function">getCurrentGallery</span><span class="token punctuation">(</span>galleries<span class="token punctuation">,</span> pageTitle<span class="token punctuation">)</span><span class="token keyword">var</span> photos <span class="token operator">=</span> currentGallery<span class="token punctuation">.</span>photos<span class="token punctuation">;</span><span class="token keyword">let</span> imageStr <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> photos<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> photo <span class="token operator">=</span> photos<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    imageStr <span class="token operator">+=</span> <span class="token string">"&lt;a href=\"http://图片地址.com/"</span> <span class="token operator">+</span> photo <span class="token operator">+</span> <span class="token string">"\""</span> <span class="token operator">+</span>            <span class="token string">"     class=\"photo-item\" rel=\"example_group\""</span> <span class="token operator">+</span>            <span class="token string">"     data-fancybox=\"images\">"</span> <span class="token operator">+</span>            <span class="token string">"      &lt;img src=\"http://图片地址.com/"</span> <span class="token operator">+</span> photo <span class="token operator">+</span> <span class="token string">"\""</span> <span class="token operator">+</span>            <span class="token string">"       alt="</span> <span class="token operator">+</span> photo <span class="token operator">+</span> <span class="token string">">\n"</span> <span class="token operator">+</span>            <span class="token string">"    &lt;/a>"</span><span class="token punctuation">&#125;</span></span><span class="token delimiter punctuation">%></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>photo-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>waterfall<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mygallery<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> imageStr </span><span class="token delimiter punctuation">%></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/libs/fancybox/fancybox.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/libs/justifiedGallery/justifiedGallery.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"a[rel=example_group]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fancybox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#mygallery"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">justifiedGallery</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token literal-property property">margins</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token literal-property property">rowHeight</span><span class="token operator">:</span> <span class="token number">150</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="添加图片"><a href="#添加图片" class="headerlink" title="添加图片"></a>添加图片</h3><ol><li><p>在站点目录sources&#x2F;_data下新建一个galleries.json的文件，模板如下：</p><p>每个相册有以下字段：</p><ul><li>name是相册标题</li><li>cover是封面图片，从相册里随便选一个就行</li><li>description是相册介绍</li><li>photos是图片列表</li></ul><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">[</span>  <span class="token punctuation">&#123;</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"美女"</span><span class="token punctuation">,</span>    <span class="token property">"cover"</span><span class="token operator">:</span> <span class="token string">"美女/IMG_20171109_124516.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"2017年记录"</span><span class="token punctuation">,</span>    <span class="token property">"photos"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token string">"美女/IMG_美女0924_110224.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"美女/IMG_美女0924_113412.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"美女/IMG_美女1109_124516.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"美女/IMG_美女1125_125304.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"美女/IMG_美女1126_181605.jpg"</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"动漫"</span><span class="token punctuation">,</span>    <span class="token property">"cover"</span><span class="token operator">:</span> <span class="token string">"动漫/IMG_20181124_125818.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"2018年记录"</span><span class="token punctuation">,</span>    <span class="token property">"photos"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token string">"动漫/IMG_动漫0204_113055.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"动漫/IMG_动漫0204_113302.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"动漫/IMG_动漫0204_113442.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"动漫/IMG_动漫0208_083336.jpg"</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#123;</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"游玩"</span><span class="token punctuation">,</span>    <span class="token property">"cover"</span><span class="token operator">:</span> <span class="token string">"游玩/IMG_游玩0331_165713_1.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"游玩年记录"</span><span class="token punctuation">,</span>    <span class="token property">"photos"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token string">"游玩/IMG_游玩0118_200104.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"游玩/IMG_游玩0118_200120.jpg"</span><span class="token punctuation">,</span>      <span class="token string">"游玩/IMG_游玩0118_200456.jpg"</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在galleries下建立对应的相册名称的文件夹，比如我的相册需要建：comic、 scene、sightseeing、person四个目录</p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402072201517.png" alt="相册文件夹"></p><p>然后在下面再分别新建index.md文件，添加:</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> comic<span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"gallery"</span><span class="token punctuation">---</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="选择布局"><a href="#选择布局" class="headerlink" title="选择布局"></a>选择布局</h3><p>上面的博客用的布局比较简单粗暴，都是固定的大小和宽高比。但是不同的图片有不同的宽高比，用这种模式的话图片有两种显示方式：</p><ul><li>一是强制缩放到固定的宽高，缺点是图片会变形</li><li>二是裁切只显示一部分，缺点是图片显示不全</li></ul><p>那么有没有两全齐美的办法呢？答案是肯定的，选用CSS3的新特性实现的瀑布流布局，特点是等宽布局，固定列数，图片高度自适应。瀑布流布局虽美观且现代化，但图片按照列垂直顺序排列，不符合阅读习惯。</p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402022020011.png" alt="瀑布流"></p><p>另外一种布局是等高布局，图片高度一致，宽度自适应，图片托管网站flickr就是用的这种模式，但用CSS方法是实现不了，因为每一行最后张图片不一定能正好撑满这一行，需要用js动态设置图片的宽高来实现，justifiedGallery插件就是来完成这个的。</p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402071927010.png" alt="等高布局"></p><p>下面代码的功能就是初始化这个插件，间距是5px，每一行的高度是150px</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs">$("#mygallery").justifiedGallery(&#123;margins: 5, rowHeight: 150&#125;);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这两种布局上面的代码里都是包含了的。是可以手动切换，只需要把上面那句代码注释掉就会切换到瀑布流布局。</p><p>当然，你要是对这个样式不满意也可以自行设计样式。</p><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="https://crazyyuchi.github.io/2022/06/27/xin-jian-xiang-ce/">新建相册 | 兴平 (crazyyuchi.github.io)</a></p><h2 id="样式二"><a href="#样式二" class="headerlink" title="样式二"></a>样式二</h2><p>上面的样式虽然也很不错，但是对于喜欢折腾的我来说还是稍有不足，所以在我翻阅了众多大佬的博客网站后——终于发现一个页面设计[极为优秀的博客网站](<a href="https://nekodeng.gitee.io/">itsNeko「生活日志」 (gitee.io)</a>)，博主貌似还是一位小姐姐，不得不感叹小姐姐的实力太强啦，从她的博客里也学到了很多，对此深表感谢。</p><p>下面就是小姐姐的优秀作业展示时间：</p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402072119989.png" alt="优雅！"></p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402072121783.png" alt="实在是优雅"></p><blockquote><p>设置教程可以参考小姐姐的博文：</p><p><a href="https://nekodeng.gitee.io/posts/waterfall-flow-photo-album.html#toc-heading-1">关于给hexo博客增加相册页面（实现瀑布流相册，实现加密相册） | itsNeko「生活日志」 (gitee.io)</a></p></blockquote><h2 id="我的样式"><a href="#我的样式" class="headerlink" title="我的样式"></a>我的样式</h2><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402072053757.png" alt="我的样式"></p><p>特点：</p><ul><li><p>采用透明边框</p></li><li><p>添加了相册选中动画，当选中相册时，相册会发生偏转<br><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402072058371.png" alt="偏转"></p></li><li><p>为提升访客浏览体验，我引入了图片选中动画效果：对未选中的图片应用了优雅的灰色蒙板处理。这样一来，在初始状态下所有图片将以淡雅的灰色呈现，从而减少视觉干扰。当用户点击选中某张图片时，该图片将适度放大并褪去蒙板，还原其原有的鲜艳色彩，这一设计旨在引导用户的注意力更集中于当前所关注的图片内容上，有效避免其他图片对视线的分散影响。</p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402072106787.png" alt="选中前"></p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402072109604.png" alt="选中后"></p></li></ul><h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><p>和样式一的设置流程大致相同，只是代码样式不同</p><p><code>galleries.ejs</code></p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/bg-cover'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">.gallery-wrapper</span> <span class="token punctuation">&#123;</span>            <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>            <span class="token property">flex-wrap</span><span class="token punctuation">:</span> wrap<span class="token punctuation">;</span>            <span class="token property">justify-content</span><span class="token punctuation">:</span> space-around<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.gallery-box</span> <span class="token punctuation">&#123;</span>            <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>            <span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>            <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>            <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>            <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 4px 8px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">transition</span><span class="token punctuation">:</span> transform 0.3s ease-in-out<span class="token punctuation">,</span> box-shadow 0.3s ease-in-out<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.gallery-box:hover</span> <span class="token punctuation">&#123;</span>            <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>1.05<span class="token punctuation">)</span> <span class="token function">rotate</span><span class="token punctuation">(</span>-5deg<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 8px 16px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.gallery-item</span> <span class="token punctuation">&#123;</span>            <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>            <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.gallery-cover-box</span> <span class="token punctuation">&#123;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>            <span class="token property">background-position</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>            <span class="token property">border-top-left-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>            <span class="token property">border-top-right-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.gallery-info</span> <span class="token punctuation">&#123;</span>            <span class="token property">padding</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token selector">.gallery-name</span> <span class="token punctuation">&#123;</span>            <span class="token property">margin-top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>            <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> 18px<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>site<span class="token punctuation">.</span>data <span class="token operator">&amp;&amp;</span> site<span class="token punctuation">.</span>data<span class="token punctuation">.</span>galleries<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">var</span> galleries<span class="token operator">=</span>site<span class="token punctuation">.</span>data<span class="token punctuation">.</span>galleries<span class="token punctuation">;</span> </span><span class="token delimiter punctuation">%></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gallery-wrapper row<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> len<span class="token operator">=</span>galleries<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>                        <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">var</span> gallery<span class="token operator">=</span>galleries<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span> </span><span class="token delimiter punctuation">%></span></span>                            <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">let</span> imgUrl<span class="token operator">=</span><span class="token function">url_for</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/galleries/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>gallery<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>gallery<span class="token punctuation">.</span>cover<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>col s12 m6 l4 xl3 gallery-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./<span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> gallery<span class="token punctuation">.</span>name </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gallery-item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gallery-cover-box<span class="token punctuation">"</span></span>                                            <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%=</span><span class="token language-javascript"> imgUrl </span><span class="token delimiter punctuation">%></span></span><span class="token punctuation">)</span></span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gallery-info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>gallery-name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> gallery<span class="token punctuation">.</span>name </span><span class="token delimiter punctuation">%></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                                <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>gallery.ejs</code></p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/css/gallery.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/libs/fancybox/jquery.fancybox.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/libs/justifiedGallery/justifiedGallery.min.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> <span class="token function">partial</span><span class="token punctuation">(</span><span class="token string">'_partial/post-cover'</span><span class="token punctuation">)</span> </span><span class="token delimiter punctuation">%></span></span><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">let</span> galleries <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>site<span class="token punctuation">.</span>data <span class="token operator">&amp;&amp;</span> site<span class="token punctuation">.</span>data<span class="token punctuation">.</span>galleries<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  galleries <span class="token operator">=</span> site<span class="token punctuation">.</span>data<span class="token punctuation">.</span>galleries<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> pageTitle <span class="token operator">=</span> page<span class="token punctuation">.</span>title<span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">getCurrentGallery</span><span class="token punctuation">(</span><span class="token parameter">galleries<span class="token punctuation">,</span> pageTitle</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> galleries<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>galleries<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span> <span class="token operator">==</span> pageTitle<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> galleries<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> currentGallery <span class="token operator">=</span> <span class="token function">getCurrentGallery</span><span class="token punctuation">(</span>galleries<span class="token punctuation">,</span> pageTitle<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> photos <span class="token operator">=</span> currentGallery<span class="token punctuation">.</span>photos<span class="token punctuation">;</span><span class="token keyword">let</span> imageStr <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> photos<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> photo <span class="token operator">=</span> photos<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> photoPath <span class="token operator">=</span> <span class="token string">'/medias/galleries/'</span> <span class="token operator">+</span> currentGallery<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">'/'</span> <span class="token operator">+</span> photo<span class="token punctuation">;</span>  imageStr <span class="token operator">+=</span> <span class="token string">"&lt;a href=\""</span> <span class="token operator">+</span> photoPath <span class="token operator">+</span> <span class="token string">"\" class=\"photo-item\" rel=\"example_group\" data-fancybox=\"images\">"</span> <span class="token operator">+</span>               <span class="token string">"&lt;img src=\""</span> <span class="token operator">+</span> photoPath <span class="token operator">+</span><span class="token string">"\" alt=\""</span> <span class="token operator">+</span> photo <span class="token operator">+</span> <span class="token string">"\">"</span> <span class="token operator">+</span>             <span class="token string">"&lt;/a>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span><span class="token delimiter punctuation">%></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>photo-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>waterfall<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mygallery<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%-</span><span class="token language-javascript"> imageStr </span><span class="token delimiter punctuation">%></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/libs/fancybox/fancybox.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/libs/justifiedGallery/justifiedGallery.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">  <span class="token selector">.photo-item img</span> <span class="token punctuation">&#123;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> transform 0.3s ease-in-out<span class="token punctuation">,</span> box-shadow 0.3s ease-in-out<span class="token punctuation">,</span> filter 0.3s ease-in-out<span class="token punctuation">;</span>    <span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">grayscale</span><span class="token punctuation">(</span>100%<span class="token punctuation">)</span> <span class="token function">opacity</span><span class="token punctuation">(</span>0.7<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 4px 8px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token selector">.photo-item:hover img</span> <span class="token punctuation">&#123;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span>1.08<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">filter</span><span class="token punctuation">:</span> <span class="token function">grayscale</span><span class="token punctuation">(</span>0%<span class="token punctuation">)</span> <span class="token function">opacity</span><span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 8px 16px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.2<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 初始化 fancybox</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"[rel=example_group]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fancybox</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 配置循环播放</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"[rel=example_group]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fancybox</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">loop</span><span class="token operator">:</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#mygallery"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">justifiedGallery</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">margins</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>        <span class="token literal-property property">rowHeight</span><span class="token operator">:</span> <span class="token number">150</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="fancybox"><a href="#fancybox" class="headerlink" title="fancybox"></a>fancybox</h2><p>2024&#x2F;2&#x2F;15更新，这几天查看友链时，发现了一种也挺不错的博客相册布局，不仅可以进行图片放大查看、图片播放，还可以进行所有图片的缩略图预览，唯一不足的是暂时没办法将功能添加到我的样式中，毕竟和瀑布流布局还是风格迥异的。</p><h3 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h3><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402161149591.gif" alt="slide"></p><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><p><a href="https://www.cdnpkg.com/fancybox/file/jquery.fancybox.min.css/?id=35159">JQUERY.FANCYBOX.MIN.CSS: DOWNLOAD - CDNPKG</a></p><p><a href="https://yafine.github.io/posts/20200221224129-3b98">修改matery原有主题相册 | 过客~励む (yafine.github.io)</a></p><p><a href="https://tianma8023.github.io/post/hexo-material-intergrate-image-display-feature/">Hexo 折腾：利用 Fancybox 添加图片放大预览查看功能 | Tianma (tianma8023.github.io)</a></p><h3 id="需要的代码"><a href="#需要的代码" class="headerlink" title="需要的代码"></a>需要的代码</h3><p>fancybox&#x2F;3.5.7：</p><ul><li><p>jquery.fancybox.min.js</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// ==================================================</span><span class="token comment">// fancyBox v3.5.7</span><span class="token comment">//</span><span class="token comment">// Licensed GPLv3 for open source use</span><span class="token comment">// or fancyBox Commercial License for commercial use</span><span class="token comment">//</span><span class="token comment">// http://fancyapps.com/fancybox/</span><span class="token comment">// Copyright 2019 fancyApps</span><span class="token comment">//</span><span class="token comment">// ==================================================</span><span class="token operator">!</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">,</span> o</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token string">"use strict"</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">i</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> o<span class="token punctuation">,</span> i<span class="token punctuation">,</span> a<span class="token punctuation">,</span> s <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> r <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        t <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span><span class="token function">isDefaultPrevented</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        e <span class="token operator">=</span> e <span class="token operator">||</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        t <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span>data <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> <span class="token function">h</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>data<span class="token punctuation">.</span>options<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        o <span class="token operator">=</span> e<span class="token punctuation">.</span>$target <span class="token operator">||</span> <span class="token function">n</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>currentTarget<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"blur"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">(</span>a <span class="token operator">=</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">.</span>$trigger <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">.</span>$trigger<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>selector <span class="token operator">?</span> s <span class="token operator">=</span> <span class="token function">n</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>selector<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> o<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"data-fancybox"</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">,</span>        i <span class="token operator">?</span> <span class="token punctuation">(</span>s <span class="token operator">=</span> t<span class="token punctuation">.</span>data <span class="token operator">?</span> t<span class="token punctuation">.</span>data<span class="token punctuation">.</span>items <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        s <span class="token operator">=</span> s<span class="token punctuation">.</span>length <span class="token operator">?</span> s<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token string">'[data-fancybox="'</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">'"]'</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">n</span><span class="token punctuation">(</span><span class="token string">'[data-fancybox="'</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token string">'"]'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> s <span class="token operator">=</span> <span class="token punctuation">[</span>o<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        r <span class="token operator">=</span> <span class="token function">n</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">,</span>        r <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>r <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        a <span class="token operator">=</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> e<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">,</span>        a<span class="token punctuation">.</span>$trigger <span class="token operator">=</span> o<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>console <span class="token operator">=</span> t<span class="token punctuation">.</span>console <span class="token operator">||</span> <span class="token punctuation">&#123;</span>        <span class="token function-variable function">info</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    n<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>n<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>fancybox<span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token keyword">void</span> console<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"fancyBox already initialized"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">closeExisting</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token literal-property property">loop</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token literal-property property">gutter</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>            <span class="token literal-property property">keyboard</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>            <span class="token literal-property property">preventCaptionOverlap</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>            <span class="token literal-property property">arrows</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>            <span class="token literal-property property">infobar</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>            <span class="token literal-property property">smallBtn</span><span class="token operator">:</span> <span class="token string">"auto"</span><span class="token punctuation">,</span>            <span class="token literal-property property">toolbar</span><span class="token operator">:</span> <span class="token string">"auto"</span><span class="token punctuation">,</span>            <span class="token literal-property property">buttons</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"zoom"</span><span class="token punctuation">,</span> <span class="token string">"slideShow"</span><span class="token punctuation">,</span> <span class="token string">"thumbs"</span><span class="token punctuation">,</span> <span class="token string">"close"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token literal-property property">idleTime</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>            <span class="token literal-property property">protect</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token literal-property property">modal</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token literal-property property">image</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">preload</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">ajax</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">settings</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">fancybox</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">0</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">iframe</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">tpl</span><span class="token operator">:</span> <span class="token string">'&lt;iframe id="fancybox-frame&#123;rnd&#125;" name="fancybox-frame&#123;rnd&#125;" class="fancybox-iframe" allowfullscreen="allowfullscreen" allow="autoplay; fullscreen" src="">&lt;/iframe>'</span><span class="token punctuation">,</span>                <span class="token literal-property property">preload</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>                <span class="token literal-property property">css</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token literal-property property">attr</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">scrolling</span><span class="token operator">:</span> <span class="token string">"auto"</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">video</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">tpl</span><span class="token operator">:</span> <span class="token string">'&lt;video class="fancybox-video" controls controlsList="nodownload" poster="&#123;&#123;poster&#125;&#125;">&lt;source src="&#123;&#123;src&#125;&#125;" type="&#123;&#123;format&#125;&#125;" />Sorry, your browser doesn\'t support embedded videos, &lt;a href="&#123;&#123;src&#125;&#125;">download&lt;/a> and watch with your favorite video player!&lt;/video>'</span><span class="token punctuation">,</span>                <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>                <span class="token literal-property property">autoStart</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">0</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">defaultType</span><span class="token operator">:</span> <span class="token string">"image"</span><span class="token punctuation">,</span>            <span class="token literal-property property">animationEffect</span><span class="token operator">:</span> <span class="token string">"zoom"</span><span class="token punctuation">,</span>            <span class="token literal-property property">animationDuration</span><span class="token operator">:</span> <span class="token number">366</span><span class="token punctuation">,</span>            <span class="token literal-property property">zoomOpacity</span><span class="token operator">:</span> <span class="token string">"auto"</span><span class="token punctuation">,</span>            <span class="token literal-property property">transitionEffect</span><span class="token operator">:</span> <span class="token string">"fade"</span><span class="token punctuation">,</span>            <span class="token literal-property property">transitionDuration</span><span class="token operator">:</span> <span class="token number">366</span><span class="token punctuation">,</span>            <span class="token literal-property property">slideClass</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token literal-property property">baseClass</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token literal-property property">baseTpl</span><span class="token operator">:</span> <span class="token string">'&lt;div class="fancybox-container" role="dialog" tabindex="-1">&lt;div class="fancybox-bg">&lt;/div>&lt;div class="fancybox-inner">&lt;div class="fancybox-infobar">&lt;span data-fancybox-index>&lt;/span>&amp;nbsp;/&amp;nbsp;&lt;span data-fancybox-count>&lt;/span>&lt;/div>&lt;div class="fancybox-toolbar">&#123;&#123;buttons&#125;&#125;&lt;/div>&lt;div class="fancybox-navigation">&#123;&#123;arrows&#125;&#125;&lt;/div>&lt;div class="fancybox-stage">&lt;/div>&lt;div class="fancybox-caption">&lt;div class="fancybox-caption__body">&lt;/div>&lt;/div>&lt;/div>&lt;/div>'</span><span class="token punctuation">,</span>            <span class="token literal-property property">spinnerTpl</span><span class="token operator">:</span> <span class="token string">'&lt;div class="fancybox-loading">&lt;/div>'</span><span class="token punctuation">,</span>            <span class="token literal-property property">errorTpl</span><span class="token operator">:</span> <span class="token string">'&lt;div class="fancybox-error">&lt;p>&#123;&#123;ERROR&#125;&#125;&lt;/p>&lt;/div>'</span><span class="token punctuation">,</span>            <span class="token literal-property property">btnTpl</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">download</span><span class="token operator">:</span> <span class="token string">'&lt;a download data-fancybox-download class="fancybox-button fancybox-button--download" title="&#123;&#123;DOWNLOAD&#125;&#125;" href="javascript:;">&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path d="M18.62 17.09V19H5.38v-1.91zm-2.97-6.96L17 11.45l-5 4.87-5-4.87 1.36-1.32 2.68 2.64V5h1.92v7.77z"/>&lt;/svg>&lt;/a>'</span><span class="token punctuation">,</span>                <span class="token literal-property property">zoom</span><span class="token operator">:</span> <span class="token string">'&lt;button data-fancybox-zoom class="fancybox-button fancybox-button--zoom" title="&#123;&#123;ZOOM&#125;&#125;">&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path d="M18.7 17.3l-3-3a5.9 5.9 0 0 0-.6-7.6 5.9 5.9 0 0 0-8.4 0 5.9 5.9 0 0 0 0 8.4 5.9 5.9 0 0 0 7.7.7l3 3a1 1 0 0 0 1.3 0c.4-.5.4-1 0-1.5zM8.1 13.8a4 4 0 0 1 0-5.7 4 4 0 0 1 5.7 0 4 4 0 0 1 0 5.7 4 4 0 0 1-5.7 0z"/>&lt;/svg>&lt;/button>'</span><span class="token punctuation">,</span>                <span class="token literal-property property">close</span><span class="token operator">:</span> <span class="token string">'&lt;button data-fancybox-close class="fancybox-button fancybox-button--close" title="&#123;&#123;CLOSE&#125;&#125;">&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path d="M12 10.6L6.6 5.2 5.2 6.6l5.4 5.4-5.4 5.4 1.4 1.4 5.4-5.4 5.4 5.4 1.4-1.4-5.4-5.4 5.4-5.4-1.4-1.4-5.4 5.4z"/>&lt;/svg>&lt;/button>'</span><span class="token punctuation">,</span>                <span class="token literal-property property">arrowLeft</span><span class="token operator">:</span> <span class="token string">'&lt;button data-fancybox-prev class="fancybox-button fancybox-button--arrow_left" title="&#123;&#123;PREV&#125;&#125;">&lt;div>&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path d="M11.28 15.7l-1.34 1.37L5 12l4.94-5.07 1.34 1.38-2.68 2.72H19v1.94H8.6z"/>&lt;/svg>&lt;/div>&lt;/button>'</span><span class="token punctuation">,</span>                <span class="token literal-property property">arrowRight</span><span class="token operator">:</span> <span class="token string">'&lt;button data-fancybox-next class="fancybox-button fancybox-button--arrow_right" title="&#123;&#123;NEXT&#125;&#125;">&lt;div>&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path d="M15.4 12.97l-2.68 2.72 1.34 1.38L19 12l-4.94-5.07-1.34 1.38 2.68 2.72H5v1.94z"/>&lt;/svg>&lt;/div>&lt;/button>'</span><span class="token punctuation">,</span>                <span class="token literal-property property">smallBtn</span><span class="token operator">:</span> <span class="token string">'&lt;button type="button" data-fancybox-close class="fancybox-button fancybox-close-small" title="&#123;&#123;CLOSE&#125;&#125;">&lt;svg xmlns="http://www.w3.org/2000/svg" version="1" viewBox="0 0 24 24">&lt;path d="M13 12l5-5-1-1-5 5-5-5-1 1 5 5-5 5 1 1 5-5 5 5 1-1z"/>&lt;/svg>&lt;/button>'</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">parentEl</span><span class="token operator">:</span> <span class="token string">"body"</span><span class="token punctuation">,</span>            <span class="token literal-property property">hideScrollbar</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>            <span class="token literal-property property">autoFocus</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>            <span class="token literal-property property">backFocus</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>            <span class="token literal-property property">trapFocus</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>            <span class="token literal-property property">fullScreen</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">autoStart</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">touch</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">vertical</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>                <span class="token literal-property property">momentum</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">0</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">hash</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>            <span class="token literal-property property">media</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">slideShow</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">autoStart</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>                <span class="token literal-property property">speed</span><span class="token operator">:</span> <span class="token number">3e3</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">thumbs</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">autoStart</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>                <span class="token literal-property property">hideOnClose</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>                <span class="token literal-property property">parentEl</span><span class="token operator">:</span> <span class="token string">".fancybox-container"</span><span class="token punctuation">,</span>                <span class="token literal-property property">axis</span><span class="token operator">:</span> <span class="token string">"y"</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">wheel</span><span class="token operator">:</span> <span class="token string">"auto"</span><span class="token punctuation">,</span>            <span class="token literal-property property">onInit</span><span class="token operator">:</span> n<span class="token punctuation">.</span>noop<span class="token punctuation">,</span>            <span class="token literal-property property">beforeLoad</span><span class="token operator">:</span> n<span class="token punctuation">.</span>noop<span class="token punctuation">,</span>            <span class="token literal-property property">afterLoad</span><span class="token operator">:</span> n<span class="token punctuation">.</span>noop<span class="token punctuation">,</span>            <span class="token literal-property property">beforeShow</span><span class="token operator">:</span> n<span class="token punctuation">.</span>noop<span class="token punctuation">,</span>            <span class="token literal-property property">afterShow</span><span class="token operator">:</span> n<span class="token punctuation">.</span>noop<span class="token punctuation">,</span>            <span class="token literal-property property">beforeClose</span><span class="token operator">:</span> n<span class="token punctuation">.</span>noop<span class="token punctuation">,</span>            <span class="token literal-property property">afterClose</span><span class="token operator">:</span> n<span class="token punctuation">.</span>noop<span class="token punctuation">,</span>            <span class="token literal-property property">onActivate</span><span class="token operator">:</span> n<span class="token punctuation">.</span>noop<span class="token punctuation">,</span>            <span class="token literal-property property">onDeactivate</span><span class="token operator">:</span> n<span class="token punctuation">.</span>noop<span class="token punctuation">,</span>            <span class="token function-variable function">clickContent</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token string">"image"</span> <span class="token operator">===</span> t<span class="token punctuation">.</span>type <span class="token operator">&amp;&amp;</span> <span class="token string">"zoom"</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">clickSlide</span><span class="token operator">:</span> <span class="token string">"close"</span><span class="token punctuation">,</span>            <span class="token literal-property property">clickOutside</span><span class="token operator">:</span> <span class="token string">"close"</span><span class="token punctuation">,</span>            <span class="token literal-property property">dblclickContent</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token literal-property property">dblclickSlide</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token literal-property property">dblclickOutside</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token literal-property property">mobile</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">preventCaptionOverlap</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>                <span class="token literal-property property">idleTime</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>                <span class="token function-variable function">clickContent</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">return</span> <span class="token string">"image"</span> <span class="token operator">===</span> t<span class="token punctuation">.</span>type <span class="token operator">&amp;&amp;</span> <span class="token string">"toggleControls"</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token function-variable function">clickSlide</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">return</span> <span class="token string">"image"</span> <span class="token operator">===</span> t<span class="token punctuation">.</span>type <span class="token operator">?</span> <span class="token string">"toggleControls"</span> <span class="token operator">:</span> <span class="token string">"close"</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token function-variable function">dblclickContent</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">return</span> <span class="token string">"image"</span> <span class="token operator">===</span> t<span class="token punctuation">.</span>type <span class="token operator">&amp;&amp;</span> <span class="token string">"zoom"</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token function-variable function">dblclickSlide</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">return</span> <span class="token string">"image"</span> <span class="token operator">===</span> t<span class="token punctuation">.</span>type <span class="token operator">&amp;&amp;</span> <span class="token string">"zoom"</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">lang</span><span class="token operator">:</span> <span class="token string">"en"</span><span class="token punctuation">,</span>            <span class="token literal-property property">i18n</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">en</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token constant">CLOSE</span><span class="token operator">:</span> <span class="token string">"Close"</span><span class="token punctuation">,</span>                    <span class="token constant">NEXT</span><span class="token operator">:</span> <span class="token string">"Next"</span><span class="token punctuation">,</span>                    <span class="token constant">PREV</span><span class="token operator">:</span> <span class="token string">"Previous"</span><span class="token punctuation">,</span>                    <span class="token constant">ERROR</span><span class="token operator">:</span> <span class="token string">"The requested content cannot be loaded. &lt;br/> Please try again later."</span><span class="token punctuation">,</span>                    <span class="token constant">PLAY_START</span><span class="token operator">:</span> <span class="token string">"Start slideshow"</span><span class="token punctuation">,</span>                    <span class="token constant">PLAY_STOP</span><span class="token operator">:</span> <span class="token string">"Pause slideshow"</span><span class="token punctuation">,</span>                    <span class="token constant">FULL_SCREEN</span><span class="token operator">:</span> <span class="token string">"Full screen"</span><span class="token punctuation">,</span>                    <span class="token constant">THUMBS</span><span class="token operator">:</span> <span class="token string">"Thumbnails"</span><span class="token punctuation">,</span>                    <span class="token constant">DOWNLOAD</span><span class="token operator">:</span> <span class="token string">"Download"</span><span class="token punctuation">,</span>                    <span class="token constant">SHARE</span><span class="token operator">:</span> <span class="token string">"Share"</span><span class="token punctuation">,</span>                    <span class="token constant">ZOOM</span><span class="token operator">:</span> <span class="token string">"Zoom"</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token literal-property property">de</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token constant">CLOSE</span><span class="token operator">:</span> <span class="token string">"Schlie&amp;szlig;en"</span><span class="token punctuation">,</span>                    <span class="token constant">NEXT</span><span class="token operator">:</span> <span class="token string">"Weiter"</span><span class="token punctuation">,</span>                    <span class="token constant">PREV</span><span class="token operator">:</span> <span class="token string">"Zur&amp;uuml;ck"</span><span class="token punctuation">,</span>                    <span class="token constant">ERROR</span><span class="token operator">:</span> <span class="token string">"Die angeforderten Daten konnten nicht geladen werden. &lt;br/> Bitte versuchen Sie es sp&amp;auml;ter nochmal."</span><span class="token punctuation">,</span>                    <span class="token constant">PLAY_START</span><span class="token operator">:</span> <span class="token string">"Diaschau starten"</span><span class="token punctuation">,</span>                    <span class="token constant">PLAY_STOP</span><span class="token operator">:</span> <span class="token string">"Diaschau beenden"</span><span class="token punctuation">,</span>                    <span class="token constant">FULL_SCREEN</span><span class="token operator">:</span> <span class="token string">"Vollbild"</span><span class="token punctuation">,</span>                    <span class="token constant">THUMBS</span><span class="token operator">:</span> <span class="token string">"Vorschaubilder"</span><span class="token punctuation">,</span>                    <span class="token constant">DOWNLOAD</span><span class="token operator">:</span> <span class="token string">"Herunterladen"</span><span class="token punctuation">,</span>                    <span class="token constant">SHARE</span><span class="token operator">:</span> <span class="token string">"Teilen"</span><span class="token punctuation">,</span>                    <span class="token constant">ZOOM</span><span class="token operator">:</span> <span class="token string">"Vergr&amp;ouml;&amp;szlig;ern"</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>          <span class="token punctuation">,</span> s <span class="token operator">=</span> <span class="token function">n</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>          <span class="token punctuation">,</span> r <span class="token operator">=</span> <span class="token function">n</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>          <span class="token punctuation">,</span> c <span class="token operator">=</span> <span class="token number">0</span>          <span class="token punctuation">,</span> <span class="token function-variable function">l</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> t <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span>hasOwnProperty <span class="token operator">&amp;&amp;</span> t <span class="token keyword">instanceof</span> <span class="token class-name">n</span>        <span class="token punctuation">&#125;</span>          <span class="token punctuation">,</span> <span class="token function-variable function">d</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> t<span class="token punctuation">.</span>requestAnimationFrame <span class="token operator">||</span> t<span class="token punctuation">.</span>webkitRequestAnimationFrame <span class="token operator">||</span> t<span class="token punctuation">.</span>mozRequestAnimationFrame <span class="token operator">||</span> t<span class="token punctuation">.</span>oRequestAnimationFrame <span class="token operator">||</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> t<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token number">1e3</span> <span class="token operator">/</span> <span class="token number">60</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token punctuation">,</span> <span class="token function-variable function">u</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> t<span class="token punctuation">.</span>cancelAnimationFrame <span class="token operator">||</span> t<span class="token punctuation">.</span>webkitCancelAnimationFrame <span class="token operator">||</span> t<span class="token punctuation">.</span>mozCancelAnimationFrame <span class="token operator">||</span> t<span class="token punctuation">.</span>oCancelAnimationFrame <span class="token operator">||</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                t<span class="token punctuation">.</span><span class="token function">clearTimeout</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token punctuation">,</span> <span class="token function-variable function">f</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> t<span class="token punctuation">,</span> n <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"fakeelement"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> o <span class="token operator">=</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">transition</span><span class="token operator">:</span> <span class="token string">"transitionend"</span><span class="token punctuation">,</span>                <span class="token literal-property property">OTransition</span><span class="token operator">:</span> <span class="token string">"oTransitionEnd"</span><span class="token punctuation">,</span>                <span class="token literal-property property">MozTransition</span><span class="token operator">:</span> <span class="token string">"transitionend"</span><span class="token punctuation">,</span>                <span class="token literal-property property">WebkitTransition</span><span class="token operator">:</span> <span class="token string">"webkitTransitionEnd"</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>t <span class="token keyword">in</span> o<span class="token punctuation">)</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">!==</span> n<span class="token punctuation">.</span>style<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span>                    <span class="token keyword">return</span> o<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token string">"transitionend"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token punctuation">,</span> <span class="token function-variable function">p</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> t <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>offsetHeight        <span class="token punctuation">&#125;</span>          <span class="token punctuation">,</span> <span class="token function-variable function">h</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> o <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> t<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> n<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                n<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>o<span class="token punctuation">[</span>t<span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            o        <span class="token punctuation">&#125;</span>          <span class="token punctuation">,</span> <span class="token function-variable function">g</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> o<span class="token punctuation">,</span> i<span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token operator">!</span><span class="token punctuation">(</span><span class="token operator">!</span>t <span class="token operator">||</span> t<span class="token punctuation">.</span>ownerDocument <span class="token operator">!==</span> e<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">n</span><span class="token punctuation">(</span><span class="token string">".fancybox-container"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"pointer-events"</span><span class="token punctuation">,</span> <span class="token string">"none"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            o <span class="token operator">=</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">x</span><span class="token operator">:</span> t<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>left <span class="token operator">+</span> t<span class="token punctuation">.</span>offsetWidth <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span>                <span class="token literal-property property">y</span><span class="token operator">:</span> t<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>top <span class="token operator">+</span> t<span class="token punctuation">.</span>offsetHeight <span class="token operator">/</span> <span class="token number">2</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            i <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">elementFromPoint</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>x<span class="token punctuation">,</span> o<span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">===</span> t<span class="token punctuation">,</span>            <span class="token function">n</span><span class="token punctuation">(</span><span class="token string">".fancybox-container"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"pointer-events"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            i<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>          <span class="token punctuation">,</span> <span class="token function-variable function">b</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e<span class="token punctuation">,</span> o</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>            i<span class="token punctuation">.</span>opts <span class="token operator">=</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                <span class="token literal-property property">index</span><span class="token operator">:</span> o            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span>defaults<span class="token punctuation">)</span><span class="token punctuation">,</span>            n<span class="token punctuation">.</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>i<span class="token punctuation">.</span>opts <span class="token operator">=</span> <span class="token function">h</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>opts<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span>isMobile <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>i<span class="token punctuation">.</span>opts <span class="token operator">=</span> <span class="token function">h</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>opts<span class="token punctuation">,</span> i<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>mobile<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>id <span class="token operator">=</span> i<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>id <span class="token operator">||</span> <span class="token operator">++</span>c<span class="token punctuation">,</span>            i<span class="token punctuation">.</span>currIndex <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>index<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>prevIndex <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>prevPos <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>currPos <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>firstRun <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>group <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>slides <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span><span class="token function">addContent</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>group<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> i<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        n<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>prototype<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>            <span class="token function-variable function">init</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> o<span class="token punctuation">,</span> i<span class="token punctuation">,</span> a <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span> s <span class="token operator">=</span> a<span class="token punctuation">.</span>group<span class="token punctuation">[</span>a<span class="token punctuation">.</span>currIndex<span class="token punctuation">]</span><span class="token punctuation">,</span> r <span class="token operator">=</span> s<span class="token punctuation">.</span>opts<span class="token punctuation">;</span>                r<span class="token punctuation">.</span>closeExisting <span class="token operator">&amp;&amp;</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token function">n</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-active"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token operator">!</span>n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token number">1</span> <span class="token operator">!==</span> r<span class="token punctuation">.</span>hideScrollbar <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span>isMobile <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollHeight <span class="token operator">></span> t<span class="token punctuation">.</span>innerHeight <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">n</span><span class="token punctuation">(</span><span class="token string">"head"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'&lt;style id="fancybox-style-noscroll" type="text/css">.compensate-for-scrollbar&#123;margin-right:'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>innerWidth <span class="token operator">-</span> e<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientWidth<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"px;&#125;&lt;/style>"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token function">n</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"compensate-for-scrollbar"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                i <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">,</span>                n<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>buttons<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    i <span class="token operator">+=</span> r<span class="token punctuation">.</span>btnTpl<span class="token punctuation">[</span>e<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token string">""</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                o <span class="token operator">=</span> <span class="token function">n</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> r<span class="token punctuation">.</span>baseTpl<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"&#123;&#123;buttons&#125;&#125;"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"&#123;&#123;arrows&#125;&#125;"</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span>btnTpl<span class="token punctuation">.</span>arrowLeft <span class="token operator">+</span> r<span class="token punctuation">.</span>btnTpl<span class="token punctuation">.</span>arrowRight<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">,</span> <span class="token string">"fancybox-container-"</span> <span class="token operator">+</span> a<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>baseClass<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">"FancyBox"</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>parentEl<span class="token punctuation">)</span><span class="token punctuation">,</span>                a<span class="token punctuation">.</span>$refs <span class="token operator">=</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">container</span><span class="token operator">:</span> o                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token punctuation">[</span><span class="token string">"bg"</span><span class="token punctuation">,</span> <span class="token string">"inner"</span><span class="token punctuation">,</span> <span class="token string">"infobar"</span><span class="token punctuation">,</span> <span class="token string">"toolbar"</span><span class="token punctuation">,</span> <span class="token string">"stage"</span><span class="token punctuation">,</span> <span class="token string">"caption"</span><span class="token punctuation">,</span> <span class="token string">"navigation"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    a<span class="token punctuation">.</span>$refs<span class="token punctuation">[</span>t<span class="token punctuation">]</span> <span class="token operator">=</span> o<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">".fancybox-"</span> <span class="token operator">+</span> t<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                a<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"onInit"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                a<span class="token punctuation">.</span><span class="token function">activate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                a<span class="token punctuation">.</span><span class="token function">jumpTo</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>currIndex<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">translate</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> n <span class="token operator">=</span> t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>i18n<span class="token punctuation">[</span>t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>lang<span class="token punctuation">]</span> <span class="token operator">||</span> t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>i18n<span class="token punctuation">.</span>en<span class="token punctuation">;</span>                <span class="token keyword">return</span> e<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\&#123;\&#123;(\w+)\&#125;\&#125;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">return</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">===</span> n<span class="token punctuation">[</span>e<span class="token punctuation">]</span> <span class="token operator">?</span> t <span class="token operator">:</span> n<span class="token punctuation">[</span>e<span class="token punctuation">]</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">addContent</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> e<span class="token punctuation">,</span> o <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span> i <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token function">makeArray</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>                n<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">var</span> i<span class="token punctuation">,</span> a<span class="token punctuation">,</span> s<span class="token punctuation">,</span> r<span class="token punctuation">,</span> c<span class="token punctuation">,</span> l <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> d <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>                    n<span class="token punctuation">.</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span>l <span class="token operator">=</span> e<span class="token punctuation">,</span>                    d <span class="token operator">=</span> e<span class="token punctuation">.</span>opts <span class="token operator">||</span> e<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">"object"</span> <span class="token operator">===</span> n<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">n</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">?</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token function">n</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>                    d <span class="token operator">=</span> i<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    d <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> d<span class="token punctuation">,</span> d<span class="token punctuation">.</span>options<span class="token punctuation">)</span><span class="token punctuation">,</span>                    d<span class="token punctuation">.</span>$orig <span class="token operator">=</span> i<span class="token punctuation">,</span>                    l<span class="token punctuation">.</span>src <span class="token operator">=</span> o<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>src <span class="token operator">||</span> d<span class="token punctuation">.</span>src <span class="token operator">||</span> i<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"href"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    l<span class="token punctuation">.</span>type <span class="token operator">||</span> l<span class="token punctuation">.</span>src <span class="token operator">||</span> <span class="token punctuation">(</span>l<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">"inline"</span><span class="token punctuation">,</span>                    l<span class="token punctuation">.</span>src <span class="token operator">=</span> e<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> l <span class="token operator">=</span> <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"html"</span><span class="token punctuation">,</span>                        <span class="token literal-property property">src</span><span class="token operator">:</span> e <span class="token operator">+</span> <span class="token string">""</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    l<span class="token punctuation">.</span>opts <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> o<span class="token punctuation">.</span>opts<span class="token punctuation">,</span> d<span class="token punctuation">)</span><span class="token punctuation">,</span>                    n<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>buttons<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>l<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>buttons <span class="token operator">=</span> d<span class="token punctuation">.</span>buttons<span class="token punctuation">)</span><span class="token punctuation">,</span>                    n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span>isMobile <span class="token operator">&amp;&amp;</span> l<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>mobile <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>l<span class="token punctuation">.</span>opts <span class="token operator">=</span> <span class="token function">h</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>opts<span class="token punctuation">,</span> l<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>mobile<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    a <span class="token operator">=</span> l<span class="token punctuation">.</span>type <span class="token operator">||</span> l<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>type<span class="token punctuation">,</span>                    r <span class="token operator">=</span> l<span class="token punctuation">.</span>src <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">,</span>                    <span class="token operator">!</span>a <span class="token operator">&amp;&amp;</span> r <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>s <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(mp4|mov|ogv|webm)((\?|#).*)?$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span>a <span class="token operator">=</span> <span class="token string">"video"</span><span class="token punctuation">,</span>                    l<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>video<span class="token punctuation">.</span>format <span class="token operator">||</span> <span class="token punctuation">(</span>l<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>video<span class="token punctuation">.</span>format <span class="token operator">=</span> <span class="token string">"video/"</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token string">"ogv"</span> <span class="token operator">===</span> s<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token string">"ogg"</span> <span class="token operator">:</span> s<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> r<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^data:image\/[a-z0-9+\/=]*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg|ico)((\?|#).*)?$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span> <span class="token operator">?</span> a <span class="token operator">=</span> <span class="token string">"image"</span> <span class="token operator">:</span> r<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\.(pdf)((\?|#).*)?$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span>a <span class="token operator">=</span> <span class="token string">"iframe"</span><span class="token punctuation">,</span>                    l <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span> l<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">contentType</span><span class="token operator">:</span> <span class="token string">"pdf"</span><span class="token punctuation">,</span>                        <span class="token literal-property property">opts</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                            <span class="token literal-property property">iframe</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                                <span class="token literal-property property">preload</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span>                            <span class="token punctuation">&#125;</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">"#"</span> <span class="token operator">===</span> r<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>a <span class="token operator">=</span> <span class="token string">"inline"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    a <span class="token operator">?</span> l<span class="token punctuation">.</span>type <span class="token operator">=</span> a <span class="token operator">:</span> o<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"objectNeedsType"</span><span class="token punctuation">,</span> l<span class="token punctuation">)</span><span class="token punctuation">,</span>                    l<span class="token punctuation">.</span>contentType <span class="token operator">||</span> <span class="token punctuation">(</span>l<span class="token punctuation">.</span>contentType <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token function">inArray</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>type<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"html"</span><span class="token punctuation">,</span> <span class="token string">"inline"</span><span class="token punctuation">,</span> <span class="token string">"ajax"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">?</span> <span class="token string">"html"</span> <span class="token operator">:</span> l<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">,</span>                    l<span class="token punctuation">.</span>index <span class="token operator">=</span> o<span class="token punctuation">.</span>group<span class="token punctuation">.</span>length<span class="token punctuation">,</span>                    <span class="token string">"auto"</span> <span class="token operator">==</span> l<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>smallBtn <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>l<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>smallBtn <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token function">inArray</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>type<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"html"</span><span class="token punctuation">,</span> <span class="token string">"inline"</span><span class="token punctuation">,</span> <span class="token string">"ajax"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token string">"auto"</span> <span class="token operator">===</span> l<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>toolbar <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>l<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>toolbar <span class="token operator">=</span> <span class="token operator">!</span>l<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>smallBtn<span class="token punctuation">)</span><span class="token punctuation">,</span>                    l<span class="token punctuation">.</span>$thumb <span class="token operator">=</span> l<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>$thumb <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">,</span>                    l<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>$trigger <span class="token operator">&amp;&amp;</span> l<span class="token punctuation">.</span>index <span class="token operator">===</span> o<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>index <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>l<span class="token punctuation">.</span>$thumb <span class="token operator">=</span> l<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>$trigger<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"img:first"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    l<span class="token punctuation">.</span>$thumb<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>l<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>$orig <span class="token operator">=</span> l<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>$trigger<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    l<span class="token punctuation">.</span>$thumb <span class="token operator">&amp;&amp;</span> l<span class="token punctuation">.</span>$thumb<span class="token punctuation">.</span>length <span class="token operator">||</span> <span class="token operator">!</span>l<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>$orig <span class="token operator">||</span> <span class="token punctuation">(</span>l<span class="token punctuation">.</span>$thumb <span class="token operator">=</span> l<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>$orig<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"img:first"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    l<span class="token punctuation">.</span>$thumb <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>l<span class="token punctuation">.</span>$thumb<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>l<span class="token punctuation">.</span>$thumb <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    l<span class="token punctuation">.</span>thumb <span class="token operator">=</span> l<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>thumb <span class="token operator">||</span> <span class="token punctuation">(</span>l<span class="token punctuation">.</span>$thumb <span class="token operator">?</span> l<span class="token punctuation">.</span>$thumb<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>src <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token string">"function"</span> <span class="token operator">===</span> n<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span>l<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>caption<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>l<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>caption <span class="token operator">=</span> l<span class="token punctuation">.</span>opts<span class="token punctuation">.</span><span class="token function">caption</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token punctuation">[</span>o<span class="token punctuation">,</span> l<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token string">"function"</span> <span class="token operator">===</span> n<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>caption<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>l<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>caption <span class="token operator">=</span> o<span class="token punctuation">.</span>opts<span class="token punctuation">.</span><span class="token function">caption</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token punctuation">[</span>o<span class="token punctuation">,</span> l<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    l<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>caption <span class="token keyword">instanceof</span> <span class="token class-name">n</span> <span class="token operator">||</span> <span class="token punctuation">(</span>l<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>caption <span class="token operator">=</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">===</span> l<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>caption <span class="token operator">?</span> <span class="token string">""</span> <span class="token operator">:</span> l<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>caption <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token string">"ajax"</span> <span class="token operator">===</span> l<span class="token punctuation">.</span>type <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>c <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\s+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    c<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>l<span class="token punctuation">.</span>src <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    l<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>filter <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    l<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>modal <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>l<span class="token punctuation">.</span>opts <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span> l<span class="token punctuation">.</span>opts<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">trapFocus</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>                        <span class="token literal-property property">infobar</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                        <span class="token literal-property property">toolbar</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                        <span class="token literal-property property">smallBtn</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                        <span class="token literal-property property">keyboard</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                        <span class="token literal-property property">slideShow</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                        <span class="token literal-property property">fullScreen</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                        <span class="token literal-property property">thumbs</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                        <span class="token literal-property property">touch</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                        <span class="token literal-property property">clickContent</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>                        <span class="token literal-property property">clickSlide</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>                        <span class="token literal-property property">clickOutside</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>                        <span class="token literal-property property">dblclickContent</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>                        <span class="token literal-property property">dblclickSlide</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>                        <span class="token literal-property property">dblclickOutside</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    o<span class="token punctuation">.</span>group<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>slides<span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span><span class="token function">updateControls</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">(</span>e <span class="token operator">=</span> o<span class="token punctuation">.</span>Thumbs<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>isActive <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                e<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">addEvents</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>                e<span class="token punctuation">.</span><span class="token function">removeEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                e<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>container<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"click.fb-close"</span><span class="token punctuation">,</span> <span class="token string">"[data-fancybox-close]"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    t<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    t<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    e<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"touchstart.fb-prev click.fb-prev"</span><span class="token punctuation">,</span> <span class="token string">"[data-fancybox-prev]"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    t<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    t<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    e<span class="token punctuation">.</span><span class="token function">previous</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"touchstart.fb-next click.fb-next"</span><span class="token punctuation">,</span> <span class="token string">"[data-fancybox-next]"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    t<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    t<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    e<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"click.fb"</span><span class="token punctuation">,</span> <span class="token string">"[data-fancybox-zoom]"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    e<span class="token punctuation">[</span>e<span class="token punctuation">.</span><span class="token function">isScaledDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">"scaleToActual"</span> <span class="token operator">:</span> <span class="token string">"scaleToFit"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                s<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"orientationchange.fb resize.fb"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    t <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span>originalEvent <span class="token operator">&amp;&amp;</span> <span class="token string">"resize"</span> <span class="token operator">===</span> t<span class="token punctuation">.</span>originalEvent<span class="token punctuation">.</span>type <span class="token operator">?</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>requestId <span class="token operator">&amp;&amp;</span> <span class="token function">u</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>requestId<span class="token punctuation">)</span><span class="token punctuation">,</span>                    e<span class="token punctuation">.</span>requestId <span class="token operator">=</span> <span class="token function">d</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        e<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>current <span class="token operator">&amp;&amp;</span> <span class="token string">"iframe"</span> <span class="token operator">===</span> e<span class="token punctuation">.</span>current<span class="token punctuation">.</span>type <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>stage<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        e<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>stage<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        e<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span>isMobile <span class="token operator">?</span> <span class="token number">600</span> <span class="token operator">:</span> <span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                r<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"keydown.fb"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">var</span> o <span class="token operator">=</span> n<span class="token punctuation">.</span>fancybox <span class="token operator">?</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span>                      <span class="token punctuation">,</span> i <span class="token operator">=</span> o<span class="token punctuation">.</span>current                      <span class="token punctuation">,</span> a <span class="token operator">=</span> t<span class="token punctuation">.</span>keyCode <span class="token operator">||</span> t<span class="token punctuation">.</span>which<span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">9</span> <span class="token operator">==</span> a<span class="token punctuation">)</span>                        <span class="token keyword">return</span> <span class="token keyword">void</span> <span class="token punctuation">(</span>i<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>trapFocus <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token operator">!</span>i<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>keyboard <span class="token operator">||</span> t<span class="token punctuation">.</span>ctrlKey <span class="token operator">||</span> t<span class="token punctuation">.</span>altKey <span class="token operator">||</span> t<span class="token punctuation">.</span>shiftKey <span class="token operator">||</span> <span class="token function">n</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">"input,textarea,video,audio,select"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token keyword">return</span> <span class="token number">8</span> <span class="token operator">===</span> a <span class="token operator">||</span> <span class="token number">27</span> <span class="token operator">===</span> a <span class="token operator">?</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token keyword">void</span> e<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token number">37</span> <span class="token operator">===</span> a <span class="token operator">||</span> <span class="token number">38</span> <span class="token operator">===</span> a <span class="token operator">?</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token keyword">void</span> e<span class="token punctuation">.</span><span class="token function">previous</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token number">39</span> <span class="token operator">===</span> a <span class="token operator">||</span> <span class="token number">40</span> <span class="token operator">===</span> a <span class="token operator">?</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token keyword">void</span> e<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">void</span> e<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"afterKeydown"</span><span class="token punctuation">,</span> t<span class="token punctuation">,</span> a<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                e<span class="token punctuation">.</span>group<span class="token punctuation">[</span>e<span class="token punctuation">.</span>currIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>opts<span class="token punctuation">.</span>idleTime <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>idleSecondsCounter <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>                r<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"mousemove.fb-idle mouseleave.fb-idle mousedown.fb-idle touchstart.fb-idle touchmove.fb-idle scroll.fb-idle keydown.fb-idle"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    e<span class="token punctuation">.</span>idleSecondsCounter <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>                    e<span class="token punctuation">.</span>isIdle <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span><span class="token function">showControls</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    e<span class="token punctuation">.</span>isIdle <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                e<span class="token punctuation">.</span>idleInterval <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token operator">++</span>e<span class="token punctuation">.</span>idleSecondsCounter <span class="token operator">>=</span> e<span class="token punctuation">.</span>group<span class="token punctuation">[</span>e<span class="token punctuation">.</span>currIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>opts<span class="token punctuation">.</span>idleTime <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>e<span class="token punctuation">.</span>isDragging <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>isIdle <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>                    e<span class="token punctuation">.</span>idleSecondsCounter <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>                    e<span class="token punctuation">.</span><span class="token function">hideControls</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1e3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">removeEvents</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>                s<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">"orientationchange.fb resize.fb"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                r<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">"keydown.fb .fb-idle"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>container<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">".fb-close .fb-prev .fb-next"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                e<span class="token punctuation">.</span>idleInterval <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">clearInterval</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>idleInterval<span class="token punctuation">)</span><span class="token punctuation">,</span>                e<span class="token punctuation">.</span>idleInterval <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">previous</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">jumpTo</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>currPos <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">next</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">jumpTo</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>currPos <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">jumpTo</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> o<span class="token punctuation">,</span> i<span class="token punctuation">,</span> a<span class="token punctuation">,</span> s<span class="token punctuation">,</span> r<span class="token punctuation">,</span> c<span class="token punctuation">,</span> l<span class="token punctuation">,</span> d<span class="token punctuation">,</span> u<span class="token punctuation">,</span> f <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span> h <span class="token operator">=</span> f<span class="token punctuation">.</span>group<span class="token punctuation">.</span>length<span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>isDragging <span class="token operator">||</span> f<span class="token punctuation">.</span>isClosing <span class="token operator">||</span> f<span class="token punctuation">.</span>isAnimating <span class="token operator">&amp;&amp;</span> f<span class="token punctuation">.</span>firstRun<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token operator">!</span><span class="token punctuation">(</span>a <span class="token operator">=</span> f<span class="token punctuation">.</span>current <span class="token operator">?</span> f<span class="token punctuation">.</span>current<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>loop <span class="token operator">:</span> f<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>loop<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>t <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> t <span class="token operator">>=</span> h<span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token keyword">return</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token operator">=</span> f<span class="token punctuation">.</span>firstRun <span class="token operator">=</span> <span class="token operator">!</span>Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>slides<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">,</span>                    r <span class="token operator">=</span> f<span class="token punctuation">.</span>current<span class="token punctuation">,</span>                    f<span class="token punctuation">.</span>prevIndex <span class="token operator">=</span> f<span class="token punctuation">.</span>currIndex<span class="token punctuation">,</span>                    f<span class="token punctuation">.</span>prevPos <span class="token operator">=</span> f<span class="token punctuation">.</span>currPos<span class="token punctuation">,</span>                    s <span class="token operator">=</span> f<span class="token punctuation">.</span><span class="token function">createSlide</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>                    h <span class="token operator">></span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a <span class="token operator">||</span> s<span class="token punctuation">.</span>index <span class="token operator">&lt;</span> h <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> f<span class="token punctuation">.</span><span class="token function">createSlide</span><span class="token punctuation">(</span>t <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token punctuation">(</span>a <span class="token operator">||</span> s<span class="token punctuation">.</span>index <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> f<span class="token punctuation">.</span><span class="token function">createSlide</span><span class="token punctuation">(</span>t <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    f<span class="token punctuation">.</span>current <span class="token operator">=</span> s<span class="token punctuation">,</span>                    f<span class="token punctuation">.</span>currIndex <span class="token operator">=</span> s<span class="token punctuation">.</span>index<span class="token punctuation">,</span>                    f<span class="token punctuation">.</span>currPos <span class="token operator">=</span> s<span class="token punctuation">.</span>pos<span class="token punctuation">,</span>                    f<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"beforeShow"</span><span class="token punctuation">,</span> o<span class="token punctuation">)</span><span class="token punctuation">,</span>                    f<span class="token punctuation">.</span><span class="token function">updateControls</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    s<span class="token punctuation">.</span>forcedDuration <span class="token operator">=</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">,</span>                    n<span class="token punctuation">.</span><span class="token function">isNumeric</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">?</span> s<span class="token punctuation">.</span>forcedDuration <span class="token operator">=</span> e <span class="token operator">:</span> e <span class="token operator">=</span> s<span class="token punctuation">.</span>opts<span class="token punctuation">[</span>o <span class="token operator">?</span> <span class="token string">"animationDuration"</span> <span class="token operator">:</span> <span class="token string">"transitionDuration"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                    e <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    i <span class="token operator">=</span> f<span class="token punctuation">.</span><span class="token function">isMoved</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span>                    s<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-slide--current"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    o<span class="token punctuation">)</span>                        <span class="token keyword">return</span> s<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>animationEffect <span class="token operator">&amp;&amp;</span> e <span class="token operator">&amp;&amp;</span> f<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>container<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"transition-duration"</span><span class="token punctuation">,</span> e <span class="token operator">+</span> <span class="token string">"ms"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        f<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>container<span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-is-open"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"focus"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        f<span class="token punctuation">.</span><span class="token function">loadSlide</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token keyword">void</span> f<span class="token punctuation">.</span><span class="token function">preload</span><span class="token punctuation">(</span><span class="token string">"image"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    c <span class="token operator">=</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">getTranslate</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>$slide<span class="token punctuation">)</span><span class="token punctuation">,</span>                    l <span class="token operator">=</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">getTranslate</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>stage<span class="token punctuation">)</span><span class="token punctuation">,</span>                    n<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>slides<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>$slide<span class="token punctuation">,</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    r<span class="token punctuation">.</span>pos <span class="token operator">!==</span> s<span class="token punctuation">.</span>pos <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span>isComplete <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    r<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-slide--complete fancybox-slide--current"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    i <span class="token operator">?</span> <span class="token punctuation">(</span>u <span class="token operator">=</span> c<span class="token punctuation">.</span>left <span class="token operator">-</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span>pos <span class="token operator">*</span> c<span class="token punctuation">.</span>width <span class="token operator">+</span> r<span class="token punctuation">.</span>pos <span class="token operator">*</span> r<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>gutter<span class="token punctuation">)</span><span class="token punctuation">,</span>                    n<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>slides<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> o</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        o<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-animated"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            <span class="token keyword">return</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^|\s)fancybox-fx-\S+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">var</span> i <span class="token operator">=</span> o<span class="token punctuation">.</span>pos <span class="token operator">*</span> c<span class="token punctuation">.</span>width <span class="token operator">+</span> o<span class="token punctuation">.</span>pos <span class="token operator">*</span> o<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>gutter<span class="token punctuation">;</span>                        n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">setTranslate</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>$slide<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>                            <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                            <span class="token literal-property property">left</span><span class="token operator">:</span> i <span class="token operator">-</span> l<span class="token punctuation">.</span>left <span class="token operator">+</span> u                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        o<span class="token punctuation">.</span>pos <span class="token operator">!==</span> s<span class="token punctuation">.</span>pos <span class="token operator">&amp;&amp;</span> o<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-slide--"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span>pos <span class="token operator">></span> s<span class="token punctuation">.</span>pos <span class="token operator">?</span> <span class="token string">"next"</span> <span class="token operator">:</span> <span class="token string">"previous"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token function">p</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>$slide<span class="token punctuation">)</span><span class="token punctuation">,</span>                        n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>$slide<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>                            <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                            <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span>pos <span class="token operator">-</span> s<span class="token punctuation">.</span>pos<span class="token punctuation">)</span> <span class="token operator">*</span> c<span class="token punctuation">.</span>width <span class="token operator">+</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span>pos <span class="token operator">-</span> s<span class="token punctuation">.</span>pos<span class="token punctuation">)</span> <span class="token operator">*</span> o<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>gutter                        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> e<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            o<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                                <span class="token literal-property property">transform</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>                                <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token string">""</span>                            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-slide--next fancybox-slide--previous"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                            o<span class="token punctuation">.</span>pos <span class="token operator">===</span> f<span class="token punctuation">.</span>currPos <span class="token operator">&amp;&amp;</span> f<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> e <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>transitionEffect <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>d <span class="token operator">=</span> <span class="token string">"fancybox-animated fancybox-fx-"</span> <span class="token operator">+</span> s<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>transitionEffect<span class="token punctuation">,</span>                    r<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-slide--"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span>pos <span class="token operator">></span> s<span class="token punctuation">.</span>pos <span class="token operator">?</span> <span class="token string">"next"</span> <span class="token operator">:</span> <span class="token string">"previous"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>$slide<span class="token punctuation">,</span> d<span class="token punctuation">,</span> e<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        r<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-slide--next fancybox-slide--previous"</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    s<span class="token punctuation">.</span>isLoaded <span class="token operator">?</span> f<span class="token punctuation">.</span><span class="token function">revealContent</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">:</span> f<span class="token punctuation">.</span><span class="token function">loadSlide</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span>                    f<span class="token punctuation">.</span><span class="token function">preload</span><span class="token punctuation">(</span><span class="token string">"image"</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">createSlide</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> e<span class="token punctuation">,</span> o<span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> o <span class="token operator">=</span> t <span class="token operator">%</span> i<span class="token punctuation">.</span>group<span class="token punctuation">.</span>length<span class="token punctuation">,</span>                o <span class="token operator">=</span> o <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> i<span class="token punctuation">.</span>group<span class="token punctuation">.</span>length <span class="token operator">+</span> o <span class="token operator">:</span> o<span class="token punctuation">,</span>                <span class="token operator">!</span>i<span class="token punctuation">.</span>slides<span class="token punctuation">[</span>t<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> i<span class="token punctuation">.</span>group<span class="token punctuation">[</span>o<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> <span class="token function">n</span><span class="token punctuation">(</span><span class="token string">'&lt;div class="fancybox-slide">&lt;/div>'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>stage<span class="token punctuation">)</span><span class="token punctuation">,</span>                i<span class="token punctuation">.</span>slides<span class="token punctuation">[</span>t<span class="token punctuation">]</span> <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> i<span class="token punctuation">.</span>group<span class="token punctuation">[</span>o<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">pos</span><span class="token operator">:</span> t<span class="token punctuation">,</span>                    <span class="token literal-property property">$slide</span><span class="token operator">:</span> e<span class="token punctuation">,</span>                    <span class="token literal-property property">isLoaded</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                i<span class="token punctuation">.</span><span class="token function">updateSlide</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>slides<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                i<span class="token punctuation">.</span>slides<span class="token punctuation">[</span>t<span class="token punctuation">]</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">scaleToActual</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e<span class="token punctuation">,</span> o</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> i<span class="token punctuation">,</span> a<span class="token punctuation">,</span> s<span class="token punctuation">,</span> r<span class="token punctuation">,</span> c<span class="token punctuation">,</span> l <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span> d <span class="token operator">=</span> l<span class="token punctuation">.</span>current<span class="token punctuation">,</span> u <span class="token operator">=</span> d<span class="token punctuation">.</span>$content<span class="token punctuation">,</span> f <span class="token operator">=</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">getTranslate</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>$slide<span class="token punctuation">)</span><span class="token punctuation">.</span>width<span class="token punctuation">,</span> p <span class="token operator">=</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">getTranslate</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>$slide<span class="token punctuation">)</span><span class="token punctuation">.</span>height<span class="token punctuation">,</span> h <span class="token operator">=</span> d<span class="token punctuation">.</span>width<span class="token punctuation">,</span> g <span class="token operator">=</span> d<span class="token punctuation">.</span>height<span class="token punctuation">;</span>                l<span class="token punctuation">.</span>isAnimating <span class="token operator">||</span> l<span class="token punctuation">.</span><span class="token function">isMoved</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span>u <span class="token operator">||</span> <span class="token string">"image"</span> <span class="token operator">!=</span> d<span class="token punctuation">.</span>type <span class="token operator">||</span> <span class="token operator">!</span>d<span class="token punctuation">.</span>isLoaded <span class="token operator">||</span> d<span class="token punctuation">.</span>hasError <span class="token operator">||</span> <span class="token punctuation">(</span>l<span class="token punctuation">.</span>isAnimating <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>                n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">,</span>                t <span class="token operator">=</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">===</span> t <span class="token operator">?</span> <span class="token number">.5</span> <span class="token operator">*</span> f <span class="token operator">:</span> t<span class="token punctuation">,</span>                e <span class="token operator">=</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">===</span> e <span class="token operator">?</span> <span class="token number">.5</span> <span class="token operator">*</span> p <span class="token operator">:</span> e<span class="token punctuation">,</span>                i <span class="token operator">=</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">getTranslate</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">,</span>                i<span class="token punctuation">.</span>top <span class="token operator">-=</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">getTranslate</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>$slide<span class="token punctuation">)</span><span class="token punctuation">.</span>top<span class="token punctuation">,</span>                i<span class="token punctuation">.</span>left <span class="token operator">-=</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">getTranslate</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>$slide<span class="token punctuation">)</span><span class="token punctuation">.</span>left<span class="token punctuation">,</span>                r <span class="token operator">=</span> h <span class="token operator">/</span> i<span class="token punctuation">.</span>width<span class="token punctuation">,</span>                c <span class="token operator">=</span> g <span class="token operator">/</span> i<span class="token punctuation">.</span>height<span class="token punctuation">,</span>                a <span class="token operator">=</span> <span class="token number">.5</span> <span class="token operator">*</span> f <span class="token operator">-</span> <span class="token number">.5</span> <span class="token operator">*</span> h<span class="token punctuation">,</span>                s <span class="token operator">=</span> <span class="token number">.5</span> <span class="token operator">*</span> p <span class="token operator">-</span> <span class="token number">.5</span> <span class="token operator">*</span> g<span class="token punctuation">,</span>                h <span class="token operator">></span> f <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>a <span class="token operator">=</span> i<span class="token punctuation">.</span>left <span class="token operator">*</span> r <span class="token operator">-</span> <span class="token punctuation">(</span>t <span class="token operator">*</span> r <span class="token operator">-</span> t<span class="token punctuation">)</span><span class="token punctuation">,</span>                a <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                a <span class="token operator">&lt;</span> f <span class="token operator">-</span> h <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>a <span class="token operator">=</span> f <span class="token operator">-</span> h<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                g <span class="token operator">></span> p <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>s <span class="token operator">=</span> i<span class="token punctuation">.</span>top <span class="token operator">*</span> c <span class="token operator">-</span> <span class="token punctuation">(</span>e <span class="token operator">*</span> c <span class="token operator">-</span> e<span class="token punctuation">)</span><span class="token punctuation">,</span>                s <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>s <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                s <span class="token operator">&lt;</span> p <span class="token operator">-</span> g <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>s <span class="token operator">=</span> p <span class="token operator">-</span> g<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                l<span class="token punctuation">.</span><span class="token function">updateCursor</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> g<span class="token punctuation">)</span><span class="token punctuation">,</span>                n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">top</span><span class="token operator">:</span> s<span class="token punctuation">,</span>                    <span class="token literal-property property">left</span><span class="token operator">:</span> a<span class="token punctuation">,</span>                    <span class="token literal-property property">scaleX</span><span class="token operator">:</span> r<span class="token punctuation">,</span>                    <span class="token literal-property property">scaleY</span><span class="token operator">:</span> c                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> o <span class="token operator">||</span> <span class="token number">366</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    l<span class="token punctuation">.</span>isAnimating <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                l<span class="token punctuation">.</span>SlideShow <span class="token operator">&amp;&amp;</span> l<span class="token punctuation">.</span>SlideShow<span class="token punctuation">.</span>isActive <span class="token operator">&amp;&amp;</span> l<span class="token punctuation">.</span>SlideShow<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">scaleToFit</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> e<span class="token punctuation">,</span> o <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span> i <span class="token operator">=</span> o<span class="token punctuation">.</span>current<span class="token punctuation">,</span> a <span class="token operator">=</span> i<span class="token punctuation">.</span>$content<span class="token punctuation">;</span>                o<span class="token punctuation">.</span>isAnimating <span class="token operator">||</span> o<span class="token punctuation">.</span><span class="token function">isMoved</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span>a <span class="token operator">||</span> <span class="token string">"image"</span> <span class="token operator">!=</span> i<span class="token punctuation">.</span>type <span class="token operator">||</span> <span class="token operator">!</span>i<span class="token punctuation">.</span>isLoaded <span class="token operator">||</span> i<span class="token punctuation">.</span>hasError <span class="token operator">||</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span>isAnimating <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>                n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span>                e <span class="token operator">=</span> o<span class="token punctuation">.</span><span class="token function">getFitPos</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span>                o<span class="token punctuation">.</span><span class="token function">updateCursor</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>width<span class="token punctuation">,</span> e<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">,</span>                n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">top</span><span class="token operator">:</span> e<span class="token punctuation">.</span>top<span class="token punctuation">,</span>                    <span class="token literal-property property">left</span><span class="token operator">:</span> e<span class="token punctuation">.</span>left<span class="token punctuation">,</span>                    <span class="token literal-property property">scaleX</span><span class="token operator">:</span> e<span class="token punctuation">.</span>width <span class="token operator">/</span> a<span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token literal-property property">scaleY</span><span class="token operator">:</span> e<span class="token punctuation">.</span>height <span class="token operator">/</span> a<span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> t <span class="token operator">||</span> <span class="token number">366</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    o<span class="token punctuation">.</span>isAnimating <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">getFitPos</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> e<span class="token punctuation">,</span> o<span class="token punctuation">,</span> i<span class="token punctuation">,</span> a<span class="token punctuation">,</span> s <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span> r <span class="token operator">=</span> t<span class="token punctuation">.</span>$content<span class="token punctuation">,</span> c <span class="token operator">=</span> t<span class="token punctuation">.</span>$slide<span class="token punctuation">,</span> l <span class="token operator">=</span> t<span class="token punctuation">.</span>width <span class="token operator">||</span> t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>width<span class="token punctuation">,</span> d <span class="token operator">=</span> t<span class="token punctuation">.</span>height <span class="token operator">||</span> t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>height<span class="token punctuation">,</span> u <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>isLoaded <span class="token operator">&amp;&amp;</span> r <span class="token operator">&amp;&amp;</span> r<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">getTranslate</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>stage<span class="token punctuation">)</span><span class="token punctuation">.</span>width<span class="token punctuation">,</span>                o <span class="token operator">=</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">getTranslate</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>stage<span class="token punctuation">)</span><span class="token punctuation">.</span>height<span class="token punctuation">,</span>                e <span class="token operator">-=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"paddingLeft"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"paddingRight"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"marginLeft"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"marginRight"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                o <span class="token operator">-=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"paddingTop"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"paddingBottom"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"marginTop"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"marginBottom"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                l <span class="token operator">&amp;&amp;</span> d <span class="token operator">||</span> <span class="token punctuation">(</span>l <span class="token operator">=</span> e<span class="token punctuation">,</span>                d <span class="token operator">=</span> o<span class="token punctuation">)</span><span class="token punctuation">,</span>                i <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> e <span class="token operator">/</span> l<span class="token punctuation">,</span> o <span class="token operator">/</span> d<span class="token punctuation">)</span><span class="token punctuation">,</span>                l <span class="token operator">*=</span> i<span class="token punctuation">,</span>                d <span class="token operator">*=</span> i<span class="token punctuation">,</span>                l <span class="token operator">></span> e <span class="token operator">-</span> <span class="token number">.5</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>l <span class="token operator">=</span> e<span class="token punctuation">)</span><span class="token punctuation">,</span>                d <span class="token operator">></span> o <span class="token operator">-</span> <span class="token number">.5</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>d <span class="token operator">=</span> o<span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token string">"image"</span> <span class="token operator">===</span> t<span class="token punctuation">.</span>type <span class="token operator">?</span> <span class="token punctuation">(</span>u<span class="token punctuation">.</span>top <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token number">.5</span> <span class="token operator">*</span> <span class="token punctuation">(</span>o <span class="token operator">-</span> d<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"paddingTop"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                u<span class="token punctuation">.</span>left <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token number">.5</span> <span class="token operator">*</span> <span class="token punctuation">(</span>e <span class="token operator">-</span> l<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"paddingLeft"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">"video"</span> <span class="token operator">===</span> t<span class="token punctuation">.</span>contentType <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>a <span class="token operator">=</span> t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>width <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>height <span class="token operator">?</span> l <span class="token operator">/</span> d <span class="token operator">:</span> t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>ratio <span class="token operator">||</span> <span class="token number">16</span> <span class="token operator">/</span> <span class="token number">9</span><span class="token punctuation">,</span>                d <span class="token operator">></span> l <span class="token operator">/</span> a <span class="token operator">?</span> d <span class="token operator">=</span> l <span class="token operator">/</span> a <span class="token operator">:</span> l <span class="token operator">></span> d <span class="token operator">*</span> a <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>l <span class="token operator">=</span> d <span class="token operator">*</span> a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                u<span class="token punctuation">.</span>width <span class="token operator">=</span> l<span class="token punctuation">,</span>                u<span class="token punctuation">.</span>height <span class="token operator">=</span> d<span class="token punctuation">,</span>                u<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">update</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>                n<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>slides<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">,</span> o</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    e<span class="token punctuation">.</span><span class="token function">updateSlide</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> t<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">updateSlide</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> o <span class="token operator">=</span> <span class="token keyword">this</span>                  <span class="token punctuation">,</span> i <span class="token operator">=</span> t <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span>$content                  <span class="token punctuation">,</span> a <span class="token operator">=</span> t<span class="token punctuation">.</span>width <span class="token operator">||</span> t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>width                  <span class="token punctuation">,</span> s <span class="token operator">=</span> t<span class="token punctuation">.</span>height <span class="token operator">||</span> t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>height                  <span class="token punctuation">,</span> r <span class="token operator">=</span> t<span class="token punctuation">.</span>$slide<span class="token punctuation">;</span>                o<span class="token punctuation">.</span><span class="token function">adjustCaption</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>                i <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>a <span class="token operator">||</span> s <span class="token operator">||</span> <span class="token string">"video"</span> <span class="token operator">===</span> t<span class="token punctuation">.</span>contentType<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>t<span class="token punctuation">.</span>hasError <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span>                n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">setTranslate</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> o<span class="token punctuation">.</span><span class="token function">getFitPos</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>pos <span class="token operator">===</span> o<span class="token punctuation">.</span>currPos <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span>isAnimating <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>                o<span class="token punctuation">.</span><span class="token function">updateCursor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                o<span class="token punctuation">.</span><span class="token function">adjustLayout</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>                r<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"refresh"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>pos <span class="token operator">===</span> o<span class="token punctuation">.</span>currPos <span class="token operator">&amp;&amp;</span> o<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>toolbar<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>navigation<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">".fancybox-button--arrow_right"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">"compensate-for-scrollbar"</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>scrollHeight <span class="token operator">></span> r<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>clientHeight<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                o<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"onUpdate"</span><span class="token punctuation">,</span> t<span class="token punctuation">,</span> e<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">centerSlide</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token keyword">this</span>                  <span class="token punctuation">,</span> o <span class="token operator">=</span> e<span class="token punctuation">.</span>current                  <span class="token punctuation">,</span> i <span class="token operator">=</span> o<span class="token punctuation">.</span>$slide<span class="token punctuation">;</span>                <span class="token operator">!</span>e<span class="token punctuation">.</span>isClosing <span class="token operator">&amp;&amp;</span> o <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>i<span class="token punctuation">.</span><span class="token function">siblings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                    <span class="token literal-property property">transform</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>                    <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token string">""</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                i<span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-slide--previous fancybox-slide--next"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                    <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                    <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token number">1</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">===</span> t <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> t<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    i<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                        <span class="token literal-property property">transform</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>                        <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token string">""</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    o<span class="token punctuation">.</span>isComplete <span class="token operator">||</span> e<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">isMoved</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> e<span class="token punctuation">,</span> o<span class="token punctuation">,</span> i <span class="token operator">=</span> t <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>current<span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span>i <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>o <span class="token operator">=</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">getTranslate</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>stage<span class="token punctuation">)</span><span class="token punctuation">,</span>                e <span class="token operator">=</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">getTranslate</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>$slide<span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token operator">!</span>i<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-animated"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>top <span class="token operator">-</span> o<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">.5</span> <span class="token operator">||</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>left <span class="token operator">-</span> o<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">updateCursor</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> o<span class="token punctuation">,</span> i<span class="token punctuation">,</span> a <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span> s <span class="token operator">=</span> a<span class="token punctuation">.</span>current<span class="token punctuation">,</span> r <span class="token operator">=</span> a<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>container<span class="token punctuation">;</span>                s <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>a<span class="token punctuation">.</span>isClosing <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">.</span>Guestures <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-is-zoomable fancybox-can-zoomIn fancybox-can-zoomOut fancybox-can-swipe fancybox-can-pan"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                o <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">canPan</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">,</span>                i <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>o <span class="token operator">||</span> a<span class="token punctuation">.</span><span class="token function">isZoomable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                r<span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-is-zoomable"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token function">n</span><span class="token punctuation">(</span><span class="token string">"[data-fancybox-zoom]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">"disabled"</span><span class="token punctuation">,</span> <span class="token operator">!</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span>                o <span class="token operator">?</span> r<span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-can-pan"</span><span class="token punctuation">)</span> <span class="token operator">:</span> i <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token string">"zoom"</span> <span class="token operator">===</span> s<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>clickContent <span class="token operator">||</span> n<span class="token punctuation">.</span><span class="token function">isFunction</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>clickContent<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token string">"zoom"</span> <span class="token operator">==</span> s<span class="token punctuation">.</span>opts<span class="token punctuation">.</span><span class="token function">clickContent</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> r<span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-can-zoomIn"</span><span class="token punctuation">)</span> <span class="token operator">:</span> s<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>touch <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>touch<span class="token punctuation">.</span>vertical <span class="token operator">||</span> a<span class="token punctuation">.</span>group<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token string">"video"</span> <span class="token operator">!==</span> s<span class="token punctuation">.</span>contentType <span class="token operator">&amp;&amp;</span> r<span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-can-swipe"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">isZoomable</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> t<span class="token punctuation">,</span> e <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span> n <span class="token operator">=</span> e<span class="token punctuation">.</span>current<span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>e<span class="token punctuation">.</span>isClosing <span class="token operator">&amp;&amp;</span> <span class="token string">"image"</span> <span class="token operator">===</span> n<span class="token punctuation">.</span>type <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>n<span class="token punctuation">.</span>hasError<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>n<span class="token punctuation">.</span>isLoaded<span class="token punctuation">)</span>                        <span class="token keyword">return</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>t <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getFitPos</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n<span class="token punctuation">.</span>width <span class="token operator">></span> t<span class="token punctuation">.</span>width <span class="token operator">||</span> n<span class="token punctuation">.</span>height <span class="token operator">></span> t<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token keyword">return</span> <span class="token operator">!</span><span class="token number">0</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">return</span> <span class="token operator">!</span><span class="token number">1</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">isScaledDown</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> o <span class="token operator">=</span> <span class="token keyword">this</span>                  <span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span>                  <span class="token punctuation">,</span> a <span class="token operator">=</span> o<span class="token punctuation">.</span>current                  <span class="token punctuation">,</span> s <span class="token operator">=</span> a<span class="token punctuation">.</span>$content<span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">!==</span> t <span class="token operator">&amp;&amp;</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">!==</span> e <span class="token operator">?</span> i <span class="token operator">=</span> t <span class="token operator">&lt;</span> a<span class="token punctuation">.</span>width <span class="token operator">&amp;&amp;</span> e <span class="token operator">&lt;</span> a<span class="token punctuation">.</span>height <span class="token operator">:</span> s <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">getTranslate</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span>                i <span class="token operator">=</span> i<span class="token punctuation">.</span>width <span class="token operator">&lt;</span> a<span class="token punctuation">.</span>width <span class="token operator">&amp;&amp;</span> i<span class="token punctuation">.</span>height <span class="token operator">&lt;</span> a<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">,</span>                i            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">canPan</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> o <span class="token operator">=</span> <span class="token keyword">this</span>                  <span class="token punctuation">,</span> i <span class="token operator">=</span> o<span class="token punctuation">.</span>current                  <span class="token punctuation">,</span> a <span class="token operator">=</span> <span class="token keyword">null</span>                  <span class="token punctuation">,</span> s <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token string">"image"</span> <span class="token operator">===</span> i<span class="token punctuation">.</span>type <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>i<span class="token punctuation">.</span>isComplete <span class="token operator">||</span> t <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>i<span class="token punctuation">.</span>hasError <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>s <span class="token operator">=</span> o<span class="token punctuation">.</span><span class="token function">getFitPos</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">!==</span> t <span class="token operator">&amp;&amp;</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">!==</span> e <span class="token operator">?</span> a <span class="token operator">=</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">width</span><span class="token operator">:</span> t<span class="token punctuation">,</span>                    <span class="token literal-property property">height</span><span class="token operator">:</span> e                <span class="token punctuation">&#125;</span> <span class="token operator">:</span> i<span class="token punctuation">.</span>isComplete <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>a <span class="token operator">=</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">getTranslate</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>$content<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                a <span class="token operator">&amp;&amp;</span> s <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>s <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>width <span class="token operator">-</span> s<span class="token punctuation">.</span>width<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">1.5</span> <span class="token operator">||</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>height <span class="token operator">-</span> s<span class="token punctuation">.</span>height<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">1.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                s            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">loadSlide</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> e<span class="token punctuation">,</span> o<span class="token punctuation">,</span> i<span class="token punctuation">,</span> a <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>t<span class="token punctuation">.</span>isLoading <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>t<span class="token punctuation">.</span>isLoaded<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>isLoading <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>                    <span class="token operator">!</span><span class="token number">1</span> <span class="token operator">===</span> a<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"beforeLoad"</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">)</span>                        <span class="token keyword">return</span> t<span class="token punctuation">.</span>isLoading <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>                        <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">;</span>                    <span class="token keyword">switch</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> t<span class="token punctuation">.</span>type<span class="token punctuation">,</span>                    o <span class="token operator">=</span> t<span class="token punctuation">.</span>$slide<span class="token punctuation">,</span>                    o<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">"refresh"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"onReset"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>slideClass<span class="token punctuation">)</span><span class="token punctuation">,</span>                    e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">case</span> <span class="token string">"image"</span><span class="token operator">:</span>                        a<span class="token punctuation">.</span><span class="token function">setImage</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token keyword">case</span> <span class="token string">"iframe"</span><span class="token operator">:</span>                        a<span class="token punctuation">.</span><span class="token function">setIframe</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token keyword">case</span> <span class="token string">"html"</span><span class="token operator">:</span>                        a<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> t<span class="token punctuation">.</span>src <span class="token operator">||</span> t<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token keyword">case</span> <span class="token string">"video"</span><span class="token operator">:</span>                        a<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>video<span class="token punctuation">.</span>tpl<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\&#123;\&#123;src\&#125;\&#125;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>src<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"&#123;&#123;format&#125;&#125;"</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>videoFormat <span class="token operator">||</span> t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>video<span class="token punctuation">.</span>format <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"&#123;&#123;poster&#125;&#125;"</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>thumb <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token keyword">case</span> <span class="token string">"inline"</span><span class="token operator">:</span>                        <span class="token function">n</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>src<span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">?</span> a<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token function">n</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>src<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> a<span class="token punctuation">.</span><span class="token function">setError</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token keyword">case</span> <span class="token string">"ajax"</span><span class="token operator">:</span>                        a<span class="token punctuation">.</span><span class="token function">showLoading</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>                        i <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>ajax<span class="token punctuation">.</span>settings<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>                            <span class="token literal-property property">url</span><span class="token operator">:</span> t<span class="token punctuation">.</span>src<span class="token punctuation">,</span>                            <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                                <span class="token string">"success"</span> <span class="token operator">===</span> n <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> e<span class="token punctuation">)</span>                            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                            <span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                                e <span class="token operator">&amp;&amp;</span> <span class="token string">"abort"</span> <span class="token operator">!==</span> n <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">.</span><span class="token function">setError</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>                            <span class="token punctuation">&#125;</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        o<span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span><span class="token string">"onReset"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            i<span class="token punctuation">.</span><span class="token function">abort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">break</span><span class="token punctuation">;</span>                    <span class="token keyword">default</span><span class="token operator">:</span>                        a<span class="token punctuation">.</span><span class="token function">setError</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                    <span class="token keyword">return</span> <span class="token operator">!</span><span class="token number">0</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">setImage</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> o<span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>                <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">var</span> e <span class="token operator">=</span> t<span class="token punctuation">.</span>$image<span class="token punctuation">;</span>                    i<span class="token punctuation">.</span>isClosing <span class="token operator">||</span> <span class="token operator">!</span>t<span class="token punctuation">.</span>isLoading <span class="token operator">||</span> e <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>complete <span class="token operator">||</span> t<span class="token punctuation">.</span>hasError <span class="token operator">||</span> i<span class="token punctuation">.</span><span class="token function">showLoading</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                i<span class="token punctuation">.</span><span class="token function">checkSrcset</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>$content <span class="token operator">=</span> <span class="token function">n</span><span class="token punctuation">(</span><span class="token string">'&lt;div class="fancybox-content">&lt;/div>'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-is-hidden"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-slide--image"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token operator">!</span><span class="token number">1</span> <span class="token operator">!==</span> t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>preload <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>width <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>height <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span>thumb <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>width <span class="token operator">=</span> t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>width<span class="token punctuation">,</span>                t<span class="token punctuation">.</span>height <span class="token operator">=</span> t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>height<span class="token punctuation">,</span>                o <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                o<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token function">n</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    t<span class="token punctuation">.</span>$ghost <span class="token operator">=</span> <span class="token keyword">null</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">,</span>                o<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    i<span class="token punctuation">.</span><span class="token function">afterLoad</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>                <span class="token punctuation">,</span>                t<span class="token punctuation">.</span>$ghost <span class="token operator">=</span> <span class="token function">n</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-image"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>$content<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"src"</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>thumb<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                i<span class="token punctuation">.</span><span class="token function">setBigImage</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">checkSrcset</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> n<span class="token punctuation">,</span> o<span class="token punctuation">,</span> i<span class="token punctuation">,</span> a<span class="token punctuation">,</span> s <span class="token operator">=</span> e<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>srcset <span class="token operator">||</span> e<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>image<span class="token punctuation">.</span>srcset<span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    i <span class="token operator">=</span> t<span class="token punctuation">.</span>devicePixelRatio <span class="token operator">||</span> <span class="token number">1</span><span class="token punctuation">,</span>                    a <span class="token operator">=</span> t<span class="token punctuation">.</span>innerWidth <span class="token operator">*</span> i<span class="token punctuation">,</span>                    o <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>                        <span class="token keyword">return</span> t<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\s+</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            <span class="token keyword">var</span> o <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">===</span> n<span class="token punctuation">)</span>                                <span class="token keyword">return</span> e<span class="token punctuation">.</span>url <span class="token operator">=</span> t<span class="token punctuation">;</span>                            o <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>value <span class="token operator">=</span> o<span class="token punctuation">,</span>                            e<span class="token punctuation">.</span>postfix <span class="token operator">=</span> t<span class="token punctuation">[</span>t<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        e                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    o<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">return</span> t<span class="token punctuation">.</span>value <span class="token operator">-</span> e<span class="token punctuation">.</span>value                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> r <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> r <span class="token operator">&lt;</span> o<span class="token punctuation">.</span>length<span class="token punctuation">;</span> r<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">var</span> c <span class="token operator">=</span> o<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"w"</span> <span class="token operator">===</span> c<span class="token punctuation">.</span>postfix <span class="token operator">&amp;&amp;</span> c<span class="token punctuation">.</span>value <span class="token operator">>=</span> a <span class="token operator">||</span> <span class="token string">"x"</span> <span class="token operator">===</span> c<span class="token punctuation">.</span>postfix <span class="token operator">&amp;&amp;</span> c<span class="token punctuation">.</span>value <span class="token operator">>=</span> i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                            n <span class="token operator">=</span> c<span class="token punctuation">;</span>                            <span class="token keyword">break</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token operator">!</span>n <span class="token operator">&amp;&amp;</span> o<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> o<span class="token punctuation">[</span>o<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    n <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>src <span class="token operator">=</span> n<span class="token punctuation">.</span>url<span class="token punctuation">,</span>                    e<span class="token punctuation">.</span>width <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>height <span class="token operator">&amp;&amp;</span> <span class="token string">"w"</span> <span class="token operator">==</span> n<span class="token punctuation">.</span>postfix <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>height <span class="token operator">=</span> e<span class="token punctuation">.</span>width <span class="token operator">/</span> e<span class="token punctuation">.</span>height <span class="token operator">*</span> n<span class="token punctuation">.</span>value<span class="token punctuation">,</span>                    e<span class="token punctuation">.</span>width <span class="token operator">=</span> n<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">,</span>                    e<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>srcset <span class="token operator">=</span> s<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">setBigImage</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> o <span class="token operator">=</span> <span class="token keyword">this</span>                  <span class="token punctuation">,</span> i <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">)</span>                  <span class="token punctuation">,</span> a <span class="token operator">=</span> <span class="token function">n</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                t<span class="token punctuation">.</span>$image <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span><span class="token string">"error"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    o<span class="token punctuation">.</span><span class="token function">setError</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span><span class="token string">"load"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">var</span> e<span class="token punctuation">;</span>                    t<span class="token punctuation">.</span>$ghost <span class="token operator">||</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span><span class="token function">resolveImageSlideSize</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>naturalWidth<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>naturalHeight<span class="token punctuation">)</span><span class="token punctuation">,</span>                    o<span class="token punctuation">.</span><span class="token function">afterLoad</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    o<span class="token punctuation">.</span>isClosing <span class="token operator">||</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>srcset <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>sizes<span class="token punctuation">,</span>                    e <span class="token operator">&amp;&amp;</span> <span class="token string">"auto"</span> <span class="token operator">!==</span> e <span class="token operator">||</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>width <span class="token operator">/</span> t<span class="token punctuation">.</span>height <span class="token operator">></span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> s<span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">"100"</span> <span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>width <span class="token operator">/</span> t<span class="token punctuation">.</span>height <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"vw"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    a<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"sizes"</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"srcset"</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>srcset<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    t<span class="token punctuation">.</span>$ghost <span class="token operator">&amp;&amp;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        t<span class="token punctuation">.</span>$ghost <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>o<span class="token punctuation">.</span>isClosing <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span>$ghost<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">1e3</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token number">1600</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    o<span class="token punctuation">.</span><span class="token function">hideLoading</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-image"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"src"</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>src<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>$content<span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">(</span>i<span class="token punctuation">.</span>complete <span class="token operator">||</span> <span class="token string">"complete"</span> <span class="token operator">==</span> i<span class="token punctuation">.</span>readyState<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">.</span>naturalWidth <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">.</span>naturalHeight <span class="token operator">?</span> a<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"load"</span><span class="token punctuation">)</span> <span class="token operator">:</span> i<span class="token punctuation">.</span>error <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"error"</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">resolveImageSlideSize</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> o <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>width<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>                  <span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>height<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                t<span class="token punctuation">.</span>width <span class="token operator">=</span> e<span class="token punctuation">,</span>                t<span class="token punctuation">.</span>height <span class="token operator">=</span> n<span class="token punctuation">,</span>                o <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>width <span class="token operator">=</span> o<span class="token punctuation">,</span>                t<span class="token punctuation">.</span>height <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>o <span class="token operator">*</span> n <span class="token operator">/</span> e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                i <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>width <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>i <span class="token operator">*</span> e <span class="token operator">/</span> n<span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>height <span class="token operator">=</span> i<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">setIframe</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> e<span class="token punctuation">,</span> o <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span> i <span class="token operator">=</span> t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>iframe<span class="token punctuation">,</span> a <span class="token operator">=</span> t<span class="token punctuation">.</span>$slide<span class="token punctuation">;</span>                t<span class="token punctuation">.</span>$content <span class="token operator">=</span> <span class="token function">n</span><span class="token punctuation">(</span><span class="token string">'&lt;div class="fancybox-content'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i<span class="token punctuation">.</span>preload <span class="token operator">?</span> <span class="token string">" fancybox-is-hidden"</span> <span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'">&lt;/div>'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>css<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span>                a<span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-slide--"</span> <span class="token operator">+</span> t<span class="token punctuation">.</span>contentType<span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>$iframe <span class="token operator">=</span> e <span class="token operator">=</span> <span class="token function">n</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>tpl<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\&#123;rnd\&#125;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>attr<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>$content<span class="token punctuation">)</span><span class="token punctuation">,</span>                i<span class="token punctuation">.</span>preload <span class="token operator">?</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span><span class="token function">showLoading</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>                e<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"load.fb error.fb"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>isReady <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>                    t<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"refresh"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    o<span class="token punctuation">.</span><span class="token function">afterLoad</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                a<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"refresh.fb"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">var</span> n<span class="token punctuation">,</span> o<span class="token punctuation">,</span> s <span class="token operator">=</span> t<span class="token punctuation">.</span>$content<span class="token punctuation">,</span> r <span class="token operator">=</span> i<span class="token punctuation">.</span>css<span class="token punctuation">.</span>width<span class="token punctuation">,</span> c <span class="token operator">=</span> i<span class="token punctuation">.</span>css<span class="token punctuation">.</span>height<span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">===</span> e<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>isReady<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                            n <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">contents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                            o <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span>                        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>                        o <span class="token operator">&amp;&amp;</span> o<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> o<span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"overflow"</span><span class="token punctuation">,</span> <span class="token string">"visible"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        s<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                            <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">"100%"</span><span class="token punctuation">,</span>                            <span class="token string-property property">"max-width"</span><span class="token operator">:</span> <span class="token string">"100%"</span><span class="token punctuation">,</span>                            <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token string">"9999px"</span>                        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">===</span> r <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>r <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>o<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientWidth<span class="token punctuation">,</span> o<span class="token punctuation">.</span><span class="token function">outerWidth</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        s<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"width"</span><span class="token punctuation">,</span> r <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"max-width"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">===</span> c <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>c <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>o<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientHeight<span class="token punctuation">,</span> o<span class="token punctuation">.</span><span class="token function">outerHeight</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        s<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"height"</span><span class="token punctuation">,</span> c <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        a<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"overflow"</span><span class="token punctuation">,</span> <span class="token string">"auto"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        s<span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-is-hidden"</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> o<span class="token punctuation">.</span><span class="token function">afterLoad</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>                e<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"src"</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>src<span class="token punctuation">)</span><span class="token punctuation">,</span>                a<span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span><span class="token string">"onReset"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                        <span class="token function">n</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"iframe"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unbind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"src"</span><span class="token punctuation">,</span> <span class="token string">"//about:blank"</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>                    <span class="token function">n</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">"refresh.fb"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    t<span class="token punctuation">.</span>isLoaded <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>                    t<span class="token punctuation">.</span>isRevealed <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">setContent</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> o <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>                o<span class="token punctuation">.</span>isClosing <span class="token operator">||</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span><span class="token function">hideLoading</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>$content <span class="token operator">&amp;&amp;</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>$content<span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token function">l</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-content"</span><span class="token punctuation">)</span> <span class="token operator">||</span> e<span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-content"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span><span class="token function">parents</span><span class="token punctuation">(</span><span class="token string">".fancybox-slide"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"onReset"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>$placeholder <span class="token operator">=</span> <span class="token function">n</span><span class="token punctuation">(</span><span class="token string">"&lt;div>"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insertAfter</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>                e<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"display"</span><span class="token punctuation">,</span> <span class="token string">"inline-block"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> t<span class="token punctuation">.</span>hasError <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token string">"string"</span> <span class="token operator">===</span> n<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> <span class="token function">n</span><span class="token punctuation">(</span><span class="token string">"&lt;div>"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>filter <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> <span class="token function">n</span><span class="token punctuation">(</span><span class="token string">"&lt;div>"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>filter<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span><span class="token string">"onReset"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token function">n</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"video,audio"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    t<span class="token punctuation">.</span>$placeholder <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>$placeholder<span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-content"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    t<span class="token punctuation">.</span>$placeholder <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    t<span class="token punctuation">.</span>$smallBtn <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>$smallBtn<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    t<span class="token punctuation">.</span>$smallBtn <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    t<span class="token punctuation">.</span>hasError <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token function">n</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    t<span class="token punctuation">.</span>isLoaded <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>                    t<span class="token punctuation">.</span>isRevealed <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token function">n</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>$slide<span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token function">n</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">"video,audio"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">n</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-video"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token function">n</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span><span class="token string">"&lt;div>&lt;/div>"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>contentType <span class="token operator">=</span> <span class="token string">"video"</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>width <span class="token operator">=</span> t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>width <span class="token operator">||</span> <span class="token function">n</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"width"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>height <span class="token operator">=</span> t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>height <span class="token operator">||</span> <span class="token function">n</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"height"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>$content <span class="token operator">=</span> t<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token string">"div,form,main,video,audio,article,.fancybox-content"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>$content<span class="token punctuation">.</span><span class="token function">siblings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>$content<span class="token punctuation">.</span>length <span class="token operator">||</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>$content <span class="token operator">=</span> t<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">wrapInner</span><span class="token punctuation">(</span><span class="token string">"&lt;div>&lt;/div>"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>$content<span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-content"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-slide--"</span> <span class="token operator">+</span> t<span class="token punctuation">.</span>contentType<span class="token punctuation">)</span><span class="token punctuation">,</span>                o<span class="token punctuation">.</span><span class="token function">afterLoad</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">setError</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                t<span class="token punctuation">.</span>hasError <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"onReset"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-slide--"</span> <span class="token operator">+</span> t<span class="token punctuation">.</span>contentType<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-slide--error"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>contentType <span class="token operator">=</span> <span class="token string">"html"</span><span class="token punctuation">,</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>errorTpl<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>pos <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>currPos <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>isAnimating <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">showLoading</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>                <span class="token punctuation">(</span>t <span class="token operator">=</span> t <span class="token operator">||</span> e<span class="token punctuation">.</span>current<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>t<span class="token punctuation">.</span>$spinner <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>$spinner <span class="token operator">=</span> <span class="token function">n</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> e<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>spinnerTpl<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>$slide<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeIn</span><span class="token punctuation">(</span><span class="token string">"fast"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">hideLoading</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>                <span class="token punctuation">(</span>t <span class="token operator">=</span> t <span class="token operator">||</span> e<span class="token punctuation">.</span>current<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span>$spinner <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>$spinner<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">delete</span> t<span class="token punctuation">.</span>$spinner<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">afterLoad</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>                e<span class="token punctuation">.</span>isClosing <span class="token operator">||</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>isLoading <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>isLoaded <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>                e<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"afterLoad"</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">,</span>                e<span class="token punctuation">.</span><span class="token function">hideLoading</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token operator">!</span>t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>smallBtn <span class="token operator">||</span> t<span class="token punctuation">.</span>$smallBtn <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span>$smallBtn<span class="token punctuation">.</span>length <span class="token operator">||</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>$smallBtn <span class="token operator">=</span> <span class="token function">n</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>btnTpl<span class="token punctuation">.</span>smallBtn<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>$content<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>protect <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span>$content <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>t<span class="token punctuation">.</span>hasError <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>$content<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"contextmenu.fb"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">return</span> <span class="token number">2</span> <span class="token operator">==</span> t<span class="token punctuation">.</span>button <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token operator">!</span><span class="token number">0</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token string">"image"</span> <span class="token operator">===</span> t<span class="token punctuation">.</span>type <span class="token operator">&amp;&amp;</span> <span class="token function">n</span><span class="token punctuation">(</span><span class="token string">'&lt;div class="fancybox-spaceball">&lt;/div>'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>$content<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                e<span class="token punctuation">.</span><span class="token function">adjustCaption</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>                e<span class="token punctuation">.</span><span class="token function">adjustLayout</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>pos <span class="token operator">===</span> e<span class="token punctuation">.</span>currPos <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span><span class="token function">updateCursor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                e<span class="token punctuation">.</span><span class="token function">revealContent</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">adjustCaption</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> e<span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span> o <span class="token operator">=</span> t <span class="token operator">||</span> n<span class="token punctuation">.</span>current<span class="token punctuation">,</span> i <span class="token operator">=</span> o<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>caption<span class="token punctuation">,</span> a <span class="token operator">=</span> o<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>preventCaptionOverlap<span class="token punctuation">,</span> s <span class="token operator">=</span> n<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>caption<span class="token punctuation">,</span> r <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">;</span>                s<span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-caption--separate"</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">,</span>                a <span class="token operator">&amp;&amp;</span> i <span class="token operator">&amp;&amp;</span> i<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span>pos <span class="token operator">!==</span> n<span class="token punctuation">.</span>currPos <span class="token operator">?</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                e<span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span>                r <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">outerHeight</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                e<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> n<span class="token punctuation">.</span>$caption <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>r <span class="token operator">=</span> n<span class="token punctuation">.</span>$caption<span class="token punctuation">.</span><span class="token function">outerHeight</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                o<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"padding-bottom"</span><span class="token punctuation">,</span> r <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">adjustLayout</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> e<span class="token punctuation">,</span> n<span class="token punctuation">,</span> o<span class="token punctuation">,</span> i<span class="token punctuation">,</span> a <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span> s <span class="token operator">=</span> t <span class="token operator">||</span> a<span class="token punctuation">.</span>current<span class="token punctuation">;</span>                s<span class="token punctuation">.</span>isLoaded <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token number">0</span> <span class="token operator">!==</span> s<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>disableLayoutFix <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>$content<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"margin-bottom"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                s<span class="token punctuation">.</span>$content<span class="token punctuation">.</span><span class="token function">outerHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> s<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">.5</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>o <span class="token operator">=</span> s<span class="token punctuation">.</span>$slide<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">[</span><span class="token string">"padding-bottom"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                i <span class="token operator">=</span> s<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"padding-bottom"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token function">parseFloat</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> s<span class="token punctuation">.</span>$slide<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>scrollHeight<span class="token punctuation">,</span>                s<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"padding-bottom"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>e <span class="token operator">-</span> s<span class="token punctuation">.</span>$slide<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>scrollHeight<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> i<span class="token punctuation">)</span><span class="token punctuation">,</span>                s<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"padding-bottom"</span><span class="token punctuation">,</span> o<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                s<span class="token punctuation">.</span>$content<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"margin-bottom"</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">revealContent</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> e<span class="token punctuation">,</span> o<span class="token punctuation">,</span> i<span class="token punctuation">,</span> a<span class="token punctuation">,</span> s <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span> r <span class="token operator">=</span> t<span class="token punctuation">.</span>$slide<span class="token punctuation">,</span> c <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span> l <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span> d <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">isMoved</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span> u <span class="token operator">=</span> t<span class="token punctuation">.</span>isRevealed<span class="token punctuation">;</span>                <span class="token keyword">return</span> t<span class="token punctuation">.</span>isRevealed <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>                e <span class="token operator">=</span> t<span class="token punctuation">.</span>opts<span class="token punctuation">[</span>s<span class="token punctuation">.</span>firstRun <span class="token operator">?</span> <span class="token string">"animationEffect"</span> <span class="token operator">:</span> <span class="token string">"transitionEffect"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                i <span class="token operator">=</span> t<span class="token punctuation">.</span>opts<span class="token punctuation">[</span>s<span class="token punctuation">.</span>firstRun <span class="token operator">?</span> <span class="token string">"animationDuration"</span> <span class="token operator">:</span> <span class="token string">"transitionDuration"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                i <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">===</span> t<span class="token punctuation">.</span>forcedDuration <span class="token operator">?</span> i <span class="token operator">:</span> t<span class="token punctuation">.</span>forcedDuration<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token operator">!</span>d <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span>pos <span class="token operator">===</span> s<span class="token punctuation">.</span>currPos <span class="token operator">&amp;&amp;</span> i <span class="token operator">||</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token string">"zoom"</span> <span class="token operator">===</span> e <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>pos <span class="token operator">===</span> s<span class="token punctuation">.</span>currPos <span class="token operator">&amp;&amp;</span> i <span class="token operator">&amp;&amp;</span> <span class="token string">"image"</span> <span class="token operator">===</span> t<span class="token punctuation">.</span>type <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>t<span class="token punctuation">.</span>hasError <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>l <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">getThumbPos</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> c <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">getFitPos</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">:</span> e <span class="token operator">=</span> <span class="token string">"fade"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token string">"zoom"</span> <span class="token operator">===</span> e <span class="token operator">?</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>isAnimating <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>                c<span class="token punctuation">.</span>scaleX <span class="token operator">=</span> c<span class="token punctuation">.</span>width <span class="token operator">/</span> l<span class="token punctuation">.</span>width<span class="token punctuation">,</span>                c<span class="token punctuation">.</span>scaleY <span class="token operator">=</span> c<span class="token punctuation">.</span>height <span class="token operator">/</span> l<span class="token punctuation">.</span>height<span class="token punctuation">,</span>                a <span class="token operator">=</span> t<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>zoomOpacity<span class="token punctuation">,</span>                <span class="token string">"auto"</span> <span class="token operator">==</span> a <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>a <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>width <span class="token operator">/</span> t<span class="token punctuation">.</span>height <span class="token operator">-</span> l<span class="token punctuation">.</span>width <span class="token operator">/</span> l<span class="token punctuation">.</span>height<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">.1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                a <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>l<span class="token punctuation">.</span>opacity <span class="token operator">=</span> <span class="token number">.1</span><span class="token punctuation">,</span>                c<span class="token punctuation">.</span>opacity <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">setTranslate</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>$content<span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-is-hidden"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> l<span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token function">p</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>$content<span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">void</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>$content<span class="token punctuation">,</span> c<span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    s<span class="token punctuation">.</span>isAnimating <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>                    s<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">updateSlide</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>                e <span class="token operator">?</span> <span class="token punctuation">(</span>n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">,</span>                o <span class="token operator">=</span> <span class="token string">"fancybox-slide--"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>pos <span class="token operator">>=</span> s<span class="token punctuation">.</span>prevPos <span class="token operator">?</span> <span class="token string">"next"</span> <span class="token operator">:</span> <span class="token string">"previous"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" fancybox-animated fancybox-fx-"</span> <span class="token operator">+</span> e<span class="token punctuation">,</span>                r<span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-slide--current"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>$content<span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-is-hidden"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token function">p</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token string">"image"</span> <span class="token operator">!==</span> t<span class="token punctuation">.</span>type <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span>$content<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">void</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> <span class="token string">"fancybox-slide--current"</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    r<span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                        <span class="token literal-property property">transform</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>                        <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token string">""</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    t<span class="token punctuation">.</span>pos <span class="token operator">===</span> s<span class="token punctuation">.</span>currPos <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>$content<span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-is-hidden"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                u <span class="token operator">||</span> <span class="token operator">!</span>d <span class="token operator">||</span> <span class="token string">"image"</span> <span class="token operator">!==</span> t<span class="token punctuation">.</span>type <span class="token operator">||</span> t<span class="token punctuation">.</span>hasError <span class="token operator">||</span> t<span class="token punctuation">.</span>$content<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeIn</span><span class="token punctuation">(</span><span class="token string">"fast"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">void</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>pos <span class="token operator">===</span> s<span class="token punctuation">.</span>currPos <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">getThumbPos</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> e<span class="token punctuation">,</span> o<span class="token punctuation">,</span> i<span class="token punctuation">,</span> a<span class="token punctuation">,</span> s<span class="token punctuation">,</span> r <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span> c <span class="token operator">=</span> t<span class="token punctuation">.</span>$thumb<span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token operator">!</span><span class="token punctuation">(</span><span class="token operator">!</span>c <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">g</span><span class="token punctuation">(</span>c<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">getTranslate</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">,</span>                o <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"border-top-width"</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                i <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"border-right-width"</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                a <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"border-bottom-width"</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                s <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"border-left-width"</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                r <span class="token operator">=</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">top</span><span class="token operator">:</span> e<span class="token punctuation">.</span>top <span class="token operator">+</span> o<span class="token punctuation">,</span>                    <span class="token literal-property property">left</span><span class="token operator">:</span> e<span class="token punctuation">.</span>left <span class="token operator">+</span> s<span class="token punctuation">,</span>                    <span class="token literal-property property">width</span><span class="token operator">:</span> e<span class="token punctuation">.</span>width <span class="token operator">-</span> i <span class="token operator">-</span> s<span class="token punctuation">,</span>                    <span class="token literal-property property">height</span><span class="token operator">:</span> e<span class="token punctuation">.</span>height <span class="token operator">-</span> o <span class="token operator">-</span> a<span class="token punctuation">,</span>                    <span class="token literal-property property">scaleX</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>                    <span class="token literal-property property">scaleY</span><span class="token operator">:</span> <span class="token number">1</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                e<span class="token punctuation">.</span>width <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>height <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> r<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">complete</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> t<span class="token punctuation">,</span> e <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span> o <span class="token operator">=</span> e<span class="token punctuation">.</span>current<span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>                <span class="token operator">!</span>e<span class="token punctuation">.</span><span class="token function">isMoved</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> o<span class="token punctuation">.</span>isLoaded <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span>isComplete <span class="token operator">||</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span>isComplete <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>                o<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">siblings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"onReset"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                e<span class="token punctuation">.</span><span class="token function">preload</span><span class="token punctuation">(</span><span class="token string">"inline"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token function">p</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>$slide<span class="token punctuation">)</span><span class="token punctuation">,</span>                o<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-slide--complete"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                n<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>slides<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> o</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    o<span class="token punctuation">.</span>pos <span class="token operator">>=</span> e<span class="token punctuation">.</span>currPos <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> o<span class="token punctuation">.</span>pos <span class="token operator">&lt;=</span> e<span class="token punctuation">.</span>currPos <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">?</span> i<span class="token punctuation">[</span>o<span class="token punctuation">.</span>pos<span class="token punctuation">]</span> <span class="token operator">=</span> o <span class="token operator">:</span> o <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>$slide<span class="token punctuation">)</span><span class="token punctuation">,</span>                    o<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                e<span class="token punctuation">.</span>slides <span class="token operator">=</span> i<span class="token punctuation">)</span><span class="token punctuation">,</span>                e<span class="token punctuation">.</span>isAnimating <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>                e<span class="token punctuation">.</span><span class="token function">updateCursor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                e<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"afterShow"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                o<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>video<span class="token punctuation">.</span>autoStart <span class="token operator">&amp;&amp;</span> o<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"video,audio"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token string">":visible:first"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"play"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span><span class="token string">"ended"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    Document<span class="token punctuation">.</span>exitFullscreen <span class="token operator">?</span> Document<span class="token punctuation">.</span><span class="token function">exitFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>webkitExitFullscreen <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">webkitExitFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    e<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                o<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>autoFocus <span class="token operator">&amp;&amp;</span> <span class="token string">"html"</span> <span class="token operator">===</span> o<span class="token punctuation">.</span>contentType <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>t <span class="token operator">=</span> o<span class="token punctuation">.</span>$content<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"input[autofocus]:enabled:visible:first"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>length <span class="token operator">?</span> t<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"focus"</span><span class="token punctuation">)</span> <span class="token operator">:</span> e<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                o<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">scrollTop</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollLeft</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">preload</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> e<span class="token punctuation">,</span> n<span class="token punctuation">,</span> o <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>                o<span class="token punctuation">.</span>group<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token operator">||</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> o<span class="token punctuation">.</span>slides<span class="token punctuation">[</span>o<span class="token punctuation">.</span>currPos <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                e <span class="token operator">=</span> o<span class="token punctuation">.</span>slides<span class="token punctuation">[</span>o<span class="token punctuation">.</span>currPos <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                e <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>type <span class="token operator">===</span> t <span class="token operator">&amp;&amp;</span> o<span class="token punctuation">.</span><span class="token function">loadSlide</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>                n <span class="token operator">&amp;&amp;</span> n<span class="token punctuation">.</span>type <span class="token operator">===</span> t <span class="token operator">&amp;&amp;</span> o<span class="token punctuation">.</span><span class="token function">loadSlide</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">focus</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> o</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> i<span class="token punctuation">,</span> a<span class="token punctuation">,</span> s <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span> r <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"a[href]"</span><span class="token punctuation">,</span> <span class="token string">"area[href]"</span><span class="token punctuation">,</span> <span class="token string">'input:not([disabled]):not([type="hidden"]):not([aria-hidden])'</span><span class="token punctuation">,</span> <span class="token string">"select:not([disabled]):not([aria-hidden])"</span><span class="token punctuation">,</span> <span class="token string">"textarea:not([disabled]):not([aria-hidden])"</span><span class="token punctuation">,</span> <span class="token string">"button:not([disabled]):not([aria-hidden])"</span><span class="token punctuation">,</span> <span class="token string">"iframe"</span><span class="token punctuation">,</span> <span class="token string">"object"</span><span class="token punctuation">,</span> <span class="token string">"embed"</span><span class="token punctuation">,</span> <span class="token string">"video"</span><span class="token punctuation">,</span> <span class="token string">"audio"</span><span class="token punctuation">,</span> <span class="token string">"[contenteditable]"</span><span class="token punctuation">,</span> <span class="token string">'[tabindex]:not([tabindex^="-"])'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                s<span class="token punctuation">.</span>isClosing <span class="token operator">||</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token operator">!</span>t <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">.</span>current <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">.</span>current<span class="token punctuation">.</span>isComplete <span class="token operator">?</span> s<span class="token punctuation">.</span>current<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"*:visible"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>o <span class="token operator">?</span> <span class="token string">":not(.fancybox-close-small)"</span> <span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> s<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>container<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"*:visible"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                i <span class="token operator">=</span> i<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">return</span> <span class="token string">"hidden"</span> <span class="token operator">!==</span> <span class="token function">n</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"visibility"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">n</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token string">"disabled"</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                i<span class="token punctuation">.</span>length <span class="token operator">?</span> <span class="token punctuation">(</span>a <span class="token operator">=</span> i<span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>activeElement<span class="token punctuation">)</span><span class="token punctuation">,</span>                t <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span>shiftKey <span class="token operator">?</span> <span class="token punctuation">(</span>a <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token number">0</span> <span class="token operator">==</span> a<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                i<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"focus"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>a <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> a <span class="token operator">==</span> i<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>t <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                i<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"focus"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> s<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>container<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"focus"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">activate</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> t <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>                <span class="token function">n</span><span class="token punctuation">(</span><span class="token string">".fancybox-container"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token function">n</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">"FancyBox"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    e <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>id <span class="token operator">!==</span> t<span class="token punctuation">.</span>id <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>e<span class="token punctuation">.</span>isClosing <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"onDeactivate"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    e<span class="token punctuation">.</span><span class="token function">removeEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    e<span class="token punctuation">.</span>isVisible <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>isVisible <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>                <span class="token punctuation">(</span>t<span class="token punctuation">.</span>current <span class="token operator">||</span> t<span class="token punctuation">.</span>isIdle<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span><span class="token function">updateControls</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"onActivate"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span><span class="token function">addEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">close</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> o<span class="token punctuation">,</span> i<span class="token punctuation">,</span> a<span class="token punctuation">,</span> s<span class="token punctuation">,</span> r<span class="token punctuation">,</span> c<span class="token punctuation">,</span> l<span class="token punctuation">,</span> u <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span> f <span class="token operator">=</span> u<span class="token punctuation">.</span>current<span class="token punctuation">,</span> <span class="token function-variable function">h</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    u<span class="token punctuation">.</span><span class="token function">cleanUp</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token operator">!</span>u<span class="token punctuation">.</span>isClosing <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>u<span class="token punctuation">.</span>isClosing <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>                <span class="token operator">!</span><span class="token number">1</span> <span class="token operator">===</span> u<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"beforeClose"</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span>u<span class="token punctuation">.</span>isClosing <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>                <span class="token function">d</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    u<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>u<span class="token punctuation">.</span><span class="token function">removeEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                a <span class="token operator">=</span> f<span class="token punctuation">.</span>$content<span class="token punctuation">,</span>                o <span class="token operator">=</span> f<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>animationEffect<span class="token punctuation">,</span>                i <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token function">isNumeric</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">?</span> e <span class="token operator">:</span> o <span class="token operator">?</span> f<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>animationDuration <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                f<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-slide--complete fancybox-slide--next fancybox-slide--previous fancybox-animated"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token operator">!</span><span class="token number">0</span> <span class="token operator">!==</span> t <span class="token operator">?</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>$slide<span class="token punctuation">)</span> <span class="token operator">:</span> o <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>                f<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">siblings</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"onReset"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                i <span class="token operator">&amp;&amp;</span> u<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>container<span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-is-open"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-is-closing"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"transition-duration"</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token string">"ms"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                u<span class="token punctuation">.</span><span class="token function">hideLoading</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">,</span>                u<span class="token punctuation">.</span><span class="token function">hideControls</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                u<span class="token punctuation">.</span><span class="token function">updateCursor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token string">"zoom"</span> <span class="token operator">!==</span> o <span class="token operator">||</span> a <span class="token operator">&amp;&amp;</span> i <span class="token operator">&amp;&amp;</span> <span class="token string">"image"</span> <span class="token operator">===</span> f<span class="token punctuation">.</span>type <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>u<span class="token punctuation">.</span><span class="token function">isMoved</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>f<span class="token punctuation">.</span>hasError <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>l <span class="token operator">=</span> u<span class="token punctuation">.</span><span class="token function">getThumbPos</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>o <span class="token operator">=</span> <span class="token string">"fade"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token string">"zoom"</span> <span class="token operator">===</span> o <span class="token operator">?</span> <span class="token punctuation">(</span>n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span>                s <span class="token operator">=</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">getTranslate</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span>                c <span class="token operator">=</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">top</span><span class="token operator">:</span> s<span class="token punctuation">.</span>top<span class="token punctuation">,</span>                    <span class="token literal-property property">left</span><span class="token operator">:</span> s<span class="token punctuation">.</span>left<span class="token punctuation">,</span>                    <span class="token literal-property property">scaleX</span><span class="token operator">:</span> s<span class="token punctuation">.</span>width <span class="token operator">/</span> l<span class="token punctuation">.</span>width<span class="token punctuation">,</span>                    <span class="token literal-property property">scaleY</span><span class="token operator">:</span> s<span class="token punctuation">.</span>height <span class="token operator">/</span> l<span class="token punctuation">.</span>height<span class="token punctuation">,</span>                    <span class="token literal-property property">width</span><span class="token operator">:</span> l<span class="token punctuation">.</span>width<span class="token punctuation">,</span>                    <span class="token literal-property property">height</span><span class="token operator">:</span> l<span class="token punctuation">.</span>height                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                r <span class="token operator">=</span> f<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>zoomOpacity<span class="token punctuation">,</span>                <span class="token string">"auto"</span> <span class="token operator">==</span> r <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>r <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>width <span class="token operator">/</span> f<span class="token punctuation">.</span>height <span class="token operator">-</span> l<span class="token punctuation">.</span>width <span class="token operator">/</span> l<span class="token punctuation">.</span>height<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">.1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                r <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>l<span class="token punctuation">.</span>opacity <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">setTranslate</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token function">p</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span>                n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> l<span class="token punctuation">,</span> i<span class="token punctuation">,</span> h<span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>o <span class="token operator">&amp;&amp;</span> i <span class="token operator">?</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-slide--previous"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-slide--current"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"fancybox-animated fancybox-fx-"</span> <span class="token operator">+</span> o<span class="token punctuation">,</span> i<span class="token punctuation">,</span> h<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token operator">!</span><span class="token number">0</span> <span class="token operator">===</span> t <span class="token operator">?</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">h</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">cleanUp</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> o<span class="token punctuation">,</span> i<span class="token punctuation">,</span> a<span class="token punctuation">,</span> s <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span> r <span class="token operator">=</span> s<span class="token punctuation">.</span>current<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>$orig<span class="token punctuation">;</span>                s<span class="token punctuation">.</span>current<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"onReset"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                s<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>container<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                s<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"afterClose"</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">,</span>                s<span class="token punctuation">.</span>current<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>backFocus <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>r <span class="token operator">&amp;&amp;</span> r<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> r<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">":visible"</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>r <span class="token operator">=</span> s<span class="token punctuation">.</span>$trigger<span class="token punctuation">)</span><span class="token punctuation">,</span>                r <span class="token operator">&amp;&amp;</span> r<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> t<span class="token punctuation">.</span>scrollX<span class="token punctuation">,</span>                a <span class="token operator">=</span> t<span class="token punctuation">.</span>scrollY<span class="token punctuation">,</span>                r<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"focus"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token function">n</span><span class="token punctuation">(</span><span class="token string">"html, body"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollTop</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollLeft</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                s<span class="token punctuation">.</span>current <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>                o <span class="token operator">=</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                o <span class="token operator">?</span> o<span class="token punctuation">.</span><span class="token function">activate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token function">n</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-active compensate-for-scrollbar"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token function">n</span><span class="token punctuation">(</span><span class="token string">"#fancybox-style-noscroll"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">trigger</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> o<span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> a <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span> s <span class="token operator">=</span> e <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>opts <span class="token operator">?</span> e <span class="token operator">:</span> a<span class="token punctuation">.</span>current<span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">?</span> i<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">:</span> s <span class="token operator">=</span> a<span class="token punctuation">,</span>                i<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">,</span>                n<span class="token punctuation">.</span><span class="token function">isFunction</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>opts<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>o <span class="token operator">=</span> s<span class="token punctuation">.</span>opts<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token operator">!</span><span class="token number">1</span> <span class="token operator">===</span> o<span class="token punctuation">)</span>                    <span class="token keyword">return</span> o<span class="token punctuation">;</span>                <span class="token string">"afterClose"</span> <span class="token operator">!==</span> t <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">.</span>$refs <span class="token operator">?</span> a<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>container<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span>t <span class="token operator">+</span> <span class="token string">".fb"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">:</span> r<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span>t <span class="token operator">+</span> <span class="token string">".fb"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">updateControls</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> t <span class="token operator">=</span> <span class="token keyword">this</span>                  <span class="token punctuation">,</span> o <span class="token operator">=</span> t<span class="token punctuation">.</span>current                  <span class="token punctuation">,</span> i <span class="token operator">=</span> o<span class="token punctuation">.</span>index                  <span class="token punctuation">,</span> a <span class="token operator">=</span> t<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>container                  <span class="token punctuation">,</span> s <span class="token operator">=</span> t<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>caption                  <span class="token punctuation">,</span> r <span class="token operator">=</span> o<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>caption<span class="token punctuation">;</span>                o<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"refresh"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                r <span class="token operator">&amp;&amp;</span> r<span class="token punctuation">.</span>length <span class="token operator">?</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>$caption <span class="token operator">=</span> s<span class="token punctuation">,</span>                s<span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> t<span class="token punctuation">.</span>$caption <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>hasHiddenControls <span class="token operator">||</span> t<span class="token punctuation">.</span>isIdle <span class="token operator">||</span> t<span class="token punctuation">.</span><span class="token function">showControls</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                a<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"[data-fancybox-count]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>group<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">,</span>                a<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"[data-fancybox-index]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                a<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"[data-fancybox-prev]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">"disabled"</span><span class="token punctuation">,</span> <span class="token operator">!</span>o<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>loop <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                a<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"[data-fancybox-next]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">"disabled"</span><span class="token punctuation">,</span> <span class="token operator">!</span>o<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>loop <span class="token operator">&amp;&amp;</span> i <span class="token operator">>=</span> t<span class="token punctuation">.</span>group<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token string">"image"</span> <span class="token operator">===</span> o<span class="token punctuation">.</span>type <span class="token operator">?</span> a<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"[data-fancybox-zoom]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"[data-fancybox-download]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"href"</span><span class="token punctuation">,</span> o<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>image<span class="token punctuation">.</span>src <span class="token operator">||</span> o<span class="token punctuation">.</span>src<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> o<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>toolbar <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"[data-fancybox-download],[data-fancybox-zoom]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token function">n</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>activeElement<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">":hidden,[disabled]"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>container<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"focus"</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">hideControls</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token keyword">this</span>                  <span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"infobar"</span><span class="token punctuation">,</span> <span class="token string">"toolbar"</span><span class="token punctuation">,</span> <span class="token string">"nav"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token operator">!</span>t <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>current<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>preventCaptionOverlap <span class="token operator">||</span> n<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">"caption"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>container<span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">return</span> <span class="token string">"fancybox-show-"</span> <span class="token operator">+</span> t                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>hasHiddenControls <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">showControls</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> t <span class="token operator">=</span> <span class="token keyword">this</span>                  <span class="token punctuation">,</span> e <span class="token operator">=</span> t<span class="token punctuation">.</span>current <span class="token operator">?</span> t<span class="token punctuation">.</span>current<span class="token punctuation">.</span>opts <span class="token operator">:</span> t<span class="token punctuation">.</span>opts                  <span class="token punctuation">,</span> n <span class="token operator">=</span> t<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>container<span class="token punctuation">;</span>                t<span class="token punctuation">.</span>hasHiddenControls <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>idleSecondsCounter <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>                n<span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-show-toolbar"</span><span class="token punctuation">,</span> <span class="token operator">!</span><span class="token punctuation">(</span><span class="token operator">!</span>e<span class="token punctuation">.</span>toolbar <span class="token operator">||</span> <span class="token operator">!</span>e<span class="token punctuation">.</span>buttons<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-show-infobar"</span><span class="token punctuation">,</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>infobar <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span>group<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-show-caption"</span><span class="token punctuation">,</span> <span class="token operator">!</span><span class="token operator">!</span>t<span class="token punctuation">.</span>$caption<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-show-nav"</span><span class="token punctuation">,</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>arrows <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span>group<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-is-modal"</span><span class="token punctuation">,</span> <span class="token operator">!</span><span class="token operator">!</span>e<span class="token punctuation">.</span>modal<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">toggleControls</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>hasHiddenControls <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">showControls</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">hideControls</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        n<span class="token punctuation">.</span>fancybox <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">version</span><span class="token operator">:</span> <span class="token string">"3.5.7"</span><span class="token punctuation">,</span>            <span class="token literal-property property">defaults</span><span class="token operator">:</span> a<span class="token punctuation">,</span>            <span class="token function-variable function">getInstance</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token function">n</span><span class="token punctuation">(</span><span class="token string">'.fancybox-container:not(".fancybox-is-closing"):last'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">"FancyBox"</span><span class="token punctuation">)</span>                  <span class="token punctuation">,</span> o <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> e <span class="token keyword">instanceof</span> <span class="token class-name">b</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token string">"string"</span> <span class="token operator">===</span> n<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">?</span> e<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> o<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">"function"</span> <span class="token operator">===</span> n<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">t</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> o<span class="token punctuation">)</span><span class="token punctuation">,</span>                e<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">open</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">b</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">close</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                e <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token operator">!</span><span class="token number">0</span> <span class="token operator">===</span> t <span class="token operator">&amp;&amp;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">destroy</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                r<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">"click.fb-start"</span><span class="token punctuation">,</span> <span class="token string">"**"</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">isMobile</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function-variable function">use3d</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> n <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> t<span class="token punctuation">.</span>getComputedStyle <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPropertyValue</span><span class="token punctuation">(</span><span class="token string">"transform"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>documentMode <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>documentMode <span class="token operator">&lt;</span> <span class="token number">11</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token function-variable function">getTranslate</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> e<span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token operator">!</span><span class="token punctuation">(</span><span class="token operator">!</span>t <span class="token operator">||</span> <span class="token operator">!</span>t<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> t<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">top</span><span class="token operator">:</span> e<span class="token punctuation">.</span>top <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">,</span>                    <span class="token literal-property property">left</span><span class="token operator">:</span> e<span class="token punctuation">.</span>left <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">,</span>                    <span class="token literal-property property">width</span><span class="token operator">:</span> e<span class="token punctuation">.</span>width<span class="token punctuation">,</span>                    <span class="token literal-property property">height</span><span class="token operator">:</span> e<span class="token punctuation">.</span>height<span class="token punctuation">,</span>                    <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"opacity"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">setTranslate</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token string">""</span>                  <span class="token punctuation">,</span> o <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">)</span>                    <span class="token keyword">return</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">===</span> e<span class="token punctuation">.</span>left <span class="token operator">&amp;&amp;</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">===</span> e<span class="token punctuation">.</span>top <span class="token operator">||</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">===</span> e<span class="token punctuation">.</span>left <span class="token operator">?</span> t<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>left <span class="token operator">:</span> e<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"px, "</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">===</span> e<span class="token punctuation">.</span>top <span class="token operator">?</span> t<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>top <span class="token operator">:</span> e<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"px"</span><span class="token punctuation">,</span>                    n <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>use3d <span class="token operator">?</span> <span class="token string">"translate3d("</span> <span class="token operator">+</span> n <span class="token operator">+</span> <span class="token string">", 0px)"</span> <span class="token operator">:</span> <span class="token string">"translate("</span> <span class="token operator">+</span> n <span class="token operator">+</span> <span class="token string">")"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">!==</span> e<span class="token punctuation">.</span>scaleX <span class="token operator">&amp;&amp;</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">!==</span> e<span class="token punctuation">.</span>scaleY <span class="token operator">?</span> n <span class="token operator">+=</span> <span class="token string">" scale("</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>scaleX <span class="token operator">+</span> <span class="token string">", "</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>scaleY <span class="token operator">+</span> <span class="token string">")"</span> <span class="token operator">:</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">!==</span> e<span class="token punctuation">.</span>scaleX <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">+=</span> <span class="token string">" scaleX("</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>scaleX <span class="token operator">+</span> <span class="token string">")"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    n<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span>transform <span class="token operator">=</span> n<span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">!==</span> e<span class="token punctuation">.</span>opacity <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span>opacity <span class="token operator">=</span> e<span class="token punctuation">.</span>opacity<span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">!==</span> e<span class="token punctuation">.</span>width <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span>width <span class="token operator">=</span> e<span class="token punctuation">.</span>width<span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">!==</span> e<span class="token punctuation">.</span>height <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span>height <span class="token operator">=</span> e<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">,</span>                    t<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">animate</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e<span class="token punctuation">,</span> o<span class="token punctuation">,</span> i<span class="token punctuation">,</span> a</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> s<span class="token punctuation">,</span> r <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>                n<span class="token punctuation">.</span><span class="token function">isFunction</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> o<span class="token punctuation">,</span>                o <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                r<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>                s <span class="token operator">=</span> r<span class="token punctuation">.</span><span class="token function">getTranslate</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>f<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">c</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token punctuation">(</span><span class="token operator">!</span>c <span class="token operator">||</span> <span class="token operator">!</span>c<span class="token punctuation">.</span>originalEvent <span class="token operator">||</span> t<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span>originalEvent<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token string">"z-index"</span> <span class="token operator">!=</span> c<span class="token punctuation">.</span>originalEvent<span class="token punctuation">.</span>propertyName<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>                    n<span class="token punctuation">.</span><span class="token function">isNumeric</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"transition-duration"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    n<span class="token punctuation">.</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">!==</span> e<span class="token punctuation">.</span>scaleX <span class="token operator">&amp;&amp;</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">!==</span> e<span class="token punctuation">.</span>scaleY <span class="token operator">&amp;&amp;</span> r<span class="token punctuation">.</span><span class="token function">setTranslate</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">top</span><span class="token operator">:</span> e<span class="token punctuation">.</span>top<span class="token punctuation">,</span>                        <span class="token literal-property property">left</span><span class="token operator">:</span> e<span class="token punctuation">.</span>left<span class="token punctuation">,</span>                        <span class="token literal-property property">width</span><span class="token operator">:</span> s<span class="token punctuation">.</span>width <span class="token operator">*</span> e<span class="token punctuation">.</span>scaleX<span class="token punctuation">,</span>                        <span class="token literal-property property">height</span><span class="token operator">:</span> s<span class="token punctuation">.</span>height <span class="token operator">*</span> e<span class="token punctuation">.</span>scaleY<span class="token punctuation">,</span>                        <span class="token literal-property property">scaleX</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>                        <span class="token literal-property property">scaleY</span><span class="token operator">:</span> <span class="token number">1</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token operator">!</span><span class="token number">0</span> <span class="token operator">!==</span> a <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>                    n<span class="token punctuation">.</span><span class="token function">isFunction</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">i</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                n<span class="token punctuation">.</span><span class="token function">isNumeric</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"transition-duration"</span><span class="token punctuation">,</span> o <span class="token operator">+</span> <span class="token string">"ms"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                n<span class="token punctuation">.</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">!==</span> e<span class="token punctuation">.</span>scaleX <span class="token operator">&amp;&amp;</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">!==</span> e<span class="token punctuation">.</span>scaleY <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token keyword">delete</span> e<span class="token punctuation">.</span>width<span class="token punctuation">,</span>                <span class="token keyword">delete</span> e<span class="token punctuation">.</span>height<span class="token punctuation">,</span>                t<span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-slide--image"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-is-scaling"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">setTranslate</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> t<span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">"timer"</span><span class="token punctuation">,</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    t<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> o <span class="token operator">+</span> <span class="token number">33</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">stop</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                t <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">clearTimeout</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">"timer"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                e <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"transition-duration"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-is-scaling"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        n<span class="token punctuation">.</span>fn<span class="token punctuation">.</span><span class="token function-variable function">fancybox</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> e<span class="token punctuation">;</span>            <span class="token keyword">return</span> t <span class="token operator">=</span> t <span class="token operator">||</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            e <span class="token operator">=</span> t<span class="token punctuation">.</span>selector <span class="token operator">||</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>            e <span class="token operator">?</span> <span class="token function">n</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">"click.fb-start"</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"click.fb-start"</span><span class="token punctuation">,</span> e<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">options</span><span class="token operator">:</span> t            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">"click.fb-start"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"click.fb-start"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">items</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">,</span>                <span class="token literal-property property">options</span><span class="token operator">:</span> t            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token keyword">this</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">,</span>        r<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"click.fb-start"</span><span class="token punctuation">,</span> <span class="token string">"[data-fancybox]"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">,</span>        r<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"click.fb-start"</span><span class="token punctuation">,</span> <span class="token string">"[data-fancybox-trigger]"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">n</span><span class="token punctuation">(</span><span class="token string">'[data-fancybox="'</span> <span class="token operator">+</span> <span class="token function">n</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"data-fancybox-trigger"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'"]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token function">n</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"data-fancybox-index"</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"click.fb-start"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">$trigger</span><span class="token operator">:</span> <span class="token function">n</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> t <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            r<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"mousedown mouseup focus blur"</span><span class="token punctuation">,</span> <span class="token string">".fancybox-button"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">switch</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">case</span> <span class="token string">"mousedown"</span><span class="token operator">:</span>                    t <span class="token operator">=</span> <span class="token function">n</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token string">"mouseup"</span><span class="token operator">:</span>                    t <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token string">"focusin"</span><span class="token operator">:</span>                    <span class="token function">n</span><span class="token punctuation">(</span><span class="token string">".fancybox-button"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-focus"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    <span class="token function">n</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">n</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">"[disabled]"</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">n</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-focus"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token string">"focusout"</span><span class="token operator">:</span>                    <span class="token function">n</span><span class="token punctuation">(</span><span class="token string">".fancybox-button"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-focus"</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> document<span class="token punctuation">,</span> jQuery<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token string">"use strict"</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">youtube</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">matcher</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(youtube\.com|youtu\.be|youtube\-nocookie\.com)\/(watch\?(.*&amp;)?v=|v\/|u\/|embed\/?)?(videoseries\?list=(.*)|[\w-]&#123;11&#125;|\?listType=(.*)&amp;list=(.*))(.*)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>            <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">autoplay</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>                <span class="token literal-property property">autohide</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>                <span class="token literal-property property">fs</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>                <span class="token literal-property property">rel</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                <span class="token literal-property property">hd</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>                <span class="token literal-property property">wmode</span><span class="token operator">:</span> <span class="token string">"transparent"</span><span class="token punctuation">,</span>                <span class="token literal-property property">enablejsapi</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>                <span class="token literal-property property">html5</span><span class="token operator">:</span> <span class="token number">1</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">paramPlace</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"iframe"</span><span class="token punctuation">,</span>            <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">"https://www.youtube-nocookie.com/embed/$4"</span><span class="token punctuation">,</span>            <span class="token literal-property property">thumb</span><span class="token operator">:</span> <span class="token string">"https://img.youtube.com/vi/$4/hqdefault.jpg"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token literal-property property">vimeo</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">matcher</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^.+vimeo.com\/(.*\/)?([\d]+)(.*)?</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>            <span class="token literal-property property">params</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">autoplay</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>                <span class="token literal-property property">hd</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>                <span class="token literal-property property">show_title</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>                <span class="token literal-property property">show_byline</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>                <span class="token literal-property property">show_portrait</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                <span class="token literal-property property">fullscreen</span><span class="token operator">:</span> <span class="token number">1</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">paramPlace</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"iframe"</span><span class="token punctuation">,</span>            <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">"//player.vimeo.com/video/$2"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token literal-property property">instagram</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">matcher</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(instagr\.am|instagram\.com)\/p\/([a-zA-Z0-9_\-]+)\/?</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"image"</span><span class="token punctuation">,</span>            <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">"//$1/p/$2/media/?size=l"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token literal-property property">gmap_place</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">matcher</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(maps\.)?google\.([a-z]&#123;2,3&#125;(\.[a-z]&#123;2&#125;)?)\/(((maps\/(place\/(.*)\/)?\@(.*),(\d+.?\d+?)z))|(\?ll=))(.*)?</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"iframe"</span><span class="token punctuation">,</span>            <span class="token function-variable function">url</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token string">"//maps.google."</span> <span class="token operator">+</span> t<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">"/?ll="</span> <span class="token operator">+</span> <span class="token punctuation">(</span>t<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">?</span> t<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">"&amp;z="</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>t<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">?</span> t<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\/</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">"&amp;"</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token operator">:</span> t<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\?</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">"&amp;"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"&amp;output="</span> <span class="token operator">+</span> <span class="token punctuation">(</span>t<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"layer=c"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">"svembed"</span> <span class="token operator">:</span> <span class="token string">"embed"</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token literal-property property">gmap_search</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">matcher</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(maps\.)?google\.([a-z]&#123;2,3&#125;(\.[a-z]&#123;2&#125;)?)\/(maps\/search\/)(.*)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span>            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"iframe"</span><span class="token punctuation">,</span>            <span class="token function-variable function">url</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token string">"//maps.google."</span> <span class="token operator">+</span> t<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">"/maps?q="</span> <span class="token operator">+</span> t<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"query="</span><span class="token punctuation">,</span> <span class="token string">"q="</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"api=1"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"&amp;output=embed"</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>      <span class="token punctuation">,</span> <span class="token function-variable function">n</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span> n<span class="token punctuation">,</span> o</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span>            <span class="token keyword">return</span> o <span class="token operator">=</span> o <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token string">"object"</span> <span class="token operator">===</span> t<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>o <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">param</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            t<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"$"</span> <span class="token operator">+</span> t<span class="token punctuation">,</span> n <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            o<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>e <span class="token operator">+=</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"?"</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">"&amp;"</span> <span class="token operator">:</span> <span class="token string">"?"</span><span class="token punctuation">)</span> <span class="token operator">+</span> o<span class="token punctuation">)</span><span class="token punctuation">,</span>            e    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token function">t</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"objectNeedsType.fb"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">o<span class="token punctuation">,</span> i<span class="token punctuation">,</span> a</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> s<span class="token punctuation">,</span> r<span class="token punctuation">,</span> c<span class="token punctuation">,</span> l<span class="token punctuation">,</span> d<span class="token punctuation">,</span> u<span class="token punctuation">,</span> f<span class="token punctuation">,</span> p <span class="token operator">=</span> a<span class="token punctuation">.</span>src <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">,</span> h <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">;</span>        s <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> e<span class="token punctuation">,</span> a<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>media<span class="token punctuation">)</span><span class="token punctuation">,</span>        t<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span> o</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>matcher<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>h <span class="token operator">=</span> o<span class="token punctuation">.</span>type<span class="token punctuation">,</span>                f <span class="token operator">=</span> e<span class="token punctuation">,</span>                u <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                o<span class="token punctuation">.</span>paramPlace <span class="token operator">&amp;&amp;</span> c<span class="token punctuation">[</span>o<span class="token punctuation">.</span>paramPlace<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    d <span class="token operator">=</span> c<span class="token punctuation">[</span>o<span class="token punctuation">.</span>paramPlace<span class="token punctuation">]</span><span class="token punctuation">,</span>                    <span class="token string">"?"</span> <span class="token operator">==</span> d<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>d <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    d <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"&amp;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> d<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">var</span> s <span class="token operator">=</span> d<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token number">2</span> <span class="token operator">==</span> s<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>u<span class="token punctuation">[</span>s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">decodeURIComponent</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">" "</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">return</span> l <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> o<span class="token punctuation">.</span>params<span class="token punctuation">,</span> a<span class="token punctuation">.</span>opts<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">,</span> u<span class="token punctuation">)</span><span class="token punctuation">,</span>                p <span class="token operator">=</span> <span class="token string">"function"</span> <span class="token operator">===</span> t<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>url<span class="token punctuation">)</span> <span class="token operator">?</span> o<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> c<span class="token punctuation">,</span> l<span class="token punctuation">,</span> a<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">n</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>url<span class="token punctuation">,</span> c<span class="token punctuation">,</span> l<span class="token punctuation">)</span><span class="token punctuation">,</span>                r <span class="token operator">=</span> <span class="token string">"function"</span> <span class="token operator">===</span> t<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>thumb<span class="token punctuation">)</span> <span class="token operator">?</span> o<span class="token punctuation">.</span><span class="token function">thumb</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> c<span class="token punctuation">,</span> l<span class="token punctuation">,</span> a<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">n</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>thumb<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token string">"youtube"</span> <span class="token operator">===</span> e <span class="token operator">?</span> p <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&amp;t=((\d+)m)?(\d+)s</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">,</span> o</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">return</span> <span class="token string">"&amp;start="</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>n <span class="token operator">?</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>o<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">"vimeo"</span> <span class="token operator">===</span> e <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>p <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"&amp;%23"</span><span class="token punctuation">,</span> <span class="token string">"#"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token operator">!</span><span class="token number">1</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        h <span class="token operator">?</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>thumb <span class="token operator">||</span> a<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>$thumb <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>$thumb<span class="token punctuation">.</span>length <span class="token operator">||</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>thumb <span class="token operator">=</span> r<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token string">"iframe"</span> <span class="token operator">===</span> h <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>opts <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span>opts<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">iframe</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">preload</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>                <span class="token literal-property property">attr</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">scrolling</span><span class="token operator">:</span> <span class="token string">"no"</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        t<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">type</span><span class="token operator">:</span> h<span class="token punctuation">,</span>            <span class="token literal-property property">src</span><span class="token operator">:</span> p<span class="token punctuation">,</span>            <span class="token literal-property property">origSrc</span><span class="token operator">:</span> a<span class="token punctuation">.</span>src<span class="token punctuation">,</span>            <span class="token literal-property property">contentSource</span><span class="token operator">:</span> f<span class="token punctuation">,</span>            <span class="token literal-property property">contentType</span><span class="token operator">:</span> <span class="token string">"image"</span> <span class="token operator">===</span> h <span class="token operator">?</span> <span class="token string">"image"</span> <span class="token operator">:</span> <span class="token string">"gmap_place"</span> <span class="token operator">==</span> f <span class="token operator">||</span> <span class="token string">"gmap_search"</span> <span class="token operator">==</span> f <span class="token operator">?</span> <span class="token string">"map"</span> <span class="token operator">:</span> <span class="token string">"video"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> p <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>type <span class="token operator">=</span> a<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>defaultType<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> o <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">youtube</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">src</span><span class="token operator">:</span> <span class="token string">"https://www.youtube.com/iframe_api"</span><span class="token punctuation">,</span>            <span class="token keyword">class</span><span class="token operator">:</span> <span class="token string">"YT"</span><span class="token punctuation">,</span>            <span class="token literal-property property">loading</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token literal-property property">loaded</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token literal-property property">vimeo</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">src</span><span class="token operator">:</span> <span class="token string">"https://player.vimeo.com/api/player.js"</span><span class="token punctuation">,</span>            <span class="token keyword">class</span><span class="token operator">:</span> <span class="token string">"Vimeo"</span><span class="token punctuation">,</span>            <span class="token literal-property property">loading</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token literal-property property">loaded</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function-variable function">load</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> e<span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>loaded<span class="token punctuation">)</span>                <span class="token keyword">return</span> <span class="token keyword">void</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    n<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>loading <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>loading <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>            e <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"script"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            e<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">"text/javascript"</span><span class="token punctuation">,</span>            e<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>src<span class="token punctuation">,</span>            <span class="token string">"youtube"</span> <span class="token operator">===</span> t <span class="token operator">?</span> window<span class="token punctuation">.</span><span class="token function-variable function">onYouTubeIframeAPIReady</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                n<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>loaded <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>                n<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token operator">:</span> e<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                n<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>loaded <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>                n<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">,</span>            document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function-variable function">done</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> n<span class="token punctuation">,</span> o<span class="token punctuation">,</span> i<span class="token punctuation">;</span>            <span class="token string">"youtube"</span> <span class="token operator">===</span> e <span class="token operator">&amp;&amp;</span> <span class="token keyword">delete</span> window<span class="token punctuation">.</span>onYouTubeIframeAPIReady<span class="token punctuation">,</span>            <span class="token punctuation">(</span>n <span class="token operator">=</span> t<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>o <span class="token operator">=</span> n<span class="token punctuation">.</span>current<span class="token punctuation">.</span>$content<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"iframe"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string">"youtube"</span> <span class="token operator">===</span> e <span class="token operator">&amp;&amp;</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">!==</span> <span class="token constant">YT</span> <span class="token operator">&amp;&amp;</span> <span class="token constant">YT</span> <span class="token operator">?</span> i <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">YT<span class="token punctuation">.</span>Player</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>                <span class="token literal-property property">events</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token function-variable function">onStateChange</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token number">0</span> <span class="token operator">==</span> t<span class="token punctuation">.</span>data <span class="token operator">&amp;&amp;</span> n<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">"vimeo"</span> <span class="token operator">===</span> e <span class="token operator">&amp;&amp;</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">!==</span> Vimeo <span class="token operator">&amp;&amp;</span> Vimeo <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vimeo<span class="token punctuation">.</span>Player</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"ended"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                n<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token function">t</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token string-property property">"afterShow.fb"</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span>group<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token string">"youtube"</span> <span class="token operator">===</span> n<span class="token punctuation">.</span>contentSource <span class="token operator">||</span> <span class="token string">"vimeo"</span> <span class="token operator">===</span> n<span class="token punctuation">.</span>contentSource<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> o<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span>contentSource<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span>jQuery<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token string">"use strict"</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> <span class="token function-variable function">o</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> t<span class="token punctuation">.</span>requestAnimationFrame <span class="token operator">||</span> t<span class="token punctuation">.</span>webkitRequestAnimationFrame <span class="token operator">||</span> t<span class="token punctuation">.</span>mozRequestAnimationFrame <span class="token operator">||</span> t<span class="token punctuation">.</span>oRequestAnimationFrame <span class="token operator">||</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> t<span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token number">1e3</span> <span class="token operator">/</span> <span class="token number">60</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">,</span> <span class="token function-variable function">i</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> t<span class="token punctuation">.</span>cancelAnimationFrame <span class="token operator">||</span> t<span class="token punctuation">.</span>webkitCancelAnimationFrame <span class="token operator">||</span> t<span class="token punctuation">.</span>mozCancelAnimationFrame <span class="token operator">||</span> t<span class="token punctuation">.</span>oCancelAnimationFrame <span class="token operator">||</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            t<span class="token punctuation">.</span><span class="token function">clearTimeout</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">,</span> <span class="token function-variable function">a</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        e <span class="token operator">=</span> e<span class="token punctuation">.</span>originalEvent <span class="token operator">||</span> e <span class="token operator">||</span> t<span class="token punctuation">.</span>e<span class="token punctuation">,</span>        e <span class="token operator">=</span> e<span class="token punctuation">.</span>touches <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>touches<span class="token punctuation">.</span>length <span class="token operator">?</span> e<span class="token punctuation">.</span>touches <span class="token operator">:</span> e<span class="token punctuation">.</span>changedTouches <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>changedTouches<span class="token punctuation">.</span>length <span class="token operator">?</span> e<span class="token punctuation">.</span>changedTouches <span class="token operator">:</span> <span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> o <span class="token keyword">in</span> e<span class="token punctuation">)</span>            e<span class="token punctuation">[</span>o<span class="token punctuation">]</span><span class="token punctuation">.</span>pageX <span class="token operator">?</span> n<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                <span class="token literal-property property">x</span><span class="token operator">:</span> e<span class="token punctuation">[</span>o<span class="token punctuation">]</span><span class="token punctuation">.</span>pageX<span class="token punctuation">,</span>                <span class="token literal-property property">y</span><span class="token operator">:</span> e<span class="token punctuation">[</span>o<span class="token punctuation">]</span><span class="token punctuation">.</span>pageY            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token operator">:</span> e<span class="token punctuation">[</span>o<span class="token punctuation">]</span><span class="token punctuation">.</span>clientX <span class="token operator">&amp;&amp;</span> n<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                <span class="token literal-property property">x</span><span class="token operator">:</span> e<span class="token punctuation">[</span>o<span class="token punctuation">]</span><span class="token punctuation">.</span>clientX<span class="token punctuation">,</span>                <span class="token literal-property property">y</span><span class="token operator">:</span> e<span class="token punctuation">[</span>o<span class="token punctuation">]</span><span class="token punctuation">.</span>clientY            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> n    <span class="token punctuation">&#125;</span>      <span class="token punctuation">,</span> <span class="token function-variable function">s</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> e <span class="token operator">&amp;&amp;</span> t <span class="token operator">?</span> <span class="token string">"x"</span> <span class="token operator">===</span> n <span class="token operator">?</span> t<span class="token punctuation">.</span>x <span class="token operator">-</span> e<span class="token punctuation">.</span>x <span class="token operator">:</span> <span class="token string">"y"</span> <span class="token operator">===</span> n <span class="token operator">?</span> t<span class="token punctuation">.</span>y <span class="token operator">-</span> e<span class="token punctuation">.</span>y <span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>x <span class="token operator">-</span> e<span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>y <span class="token operator">-</span> e<span class="token punctuation">.</span>y<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token number">0</span>    <span class="token punctuation">&#125;</span>      <span class="token punctuation">,</span> <span class="token function-variable function">r</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">'a,area,button,[role="button"],input,label,select,summary,textarea,video,audio,iframe'</span><span class="token punctuation">)</span> <span class="token operator">||</span> n<span class="token punctuation">.</span><span class="token function">isFunction</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span>onclick<span class="token punctuation">)</span> <span class="token operator">||</span> t<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">"selectable"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> o <span class="token operator">=</span> t<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>attributes<span class="token punctuation">,</span> i <span class="token operator">=</span> o<span class="token punctuation">.</span>length<span class="token punctuation">;</span> e <span class="token operator">&lt;</span> i<span class="token punctuation">;</span> e<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">"data-fancybox-"</span> <span class="token operator">===</span> o<span class="token punctuation">[</span>e<span class="token punctuation">]</span><span class="token punctuation">.</span>nodeName<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">return</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token operator">!</span><span class="token number">1</span>    <span class="token punctuation">&#125;</span>      <span class="token punctuation">,</span> <span class="token function-variable function">c</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> n <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"overflow-y"</span><span class="token punctuation">]</span>          <span class="token punctuation">,</span> o <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">getComputedStyle</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">"overflow-x"</span><span class="token punctuation">]</span>          <span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"scroll"</span> <span class="token operator">===</span> n <span class="token operator">||</span> <span class="token string">"auto"</span> <span class="token operator">===</span> n<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>scrollHeight <span class="token operator">></span> e<span class="token punctuation">.</span>clientHeight          <span class="token punctuation">,</span> a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"scroll"</span> <span class="token operator">===</span> o <span class="token operator">||</span> <span class="token string">"auto"</span> <span class="token operator">===</span> o<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>scrollWidth <span class="token operator">></span> e<span class="token punctuation">.</span>clientWidth<span class="token punctuation">;</span>        <span class="token keyword">return</span> i <span class="token operator">||</span> a    <span class="token punctuation">&#125;</span>      <span class="token punctuation">,</span> <span class="token function-variable function">l</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token punctuation">;</span> <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> <span class="token function">c</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">break</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>t <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token operator">!</span>t<span class="token punctuation">.</span>length <span class="token operator">||</span> t<span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-stage"</span><span class="token punctuation">)</span> <span class="token operator">||</span> t<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">break</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> e    <span class="token punctuation">&#125;</span>      <span class="token punctuation">,</span> <span class="token function-variable function">d</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>        e<span class="token punctuation">.</span>instance <span class="token operator">=</span> t<span class="token punctuation">,</span>        e<span class="token punctuation">.</span>$bg <span class="token operator">=</span> t<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>bg<span class="token punctuation">,</span>        e<span class="token punctuation">.</span>$stage <span class="token operator">=</span> t<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>stage<span class="token punctuation">,</span>        e<span class="token punctuation">.</span>$container <span class="token operator">=</span> t<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>container<span class="token punctuation">,</span>        e<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        e<span class="token punctuation">.</span>$container<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"touchstart.fb.touch mousedown.fb.touch"</span><span class="token punctuation">,</span> n<span class="token punctuation">.</span><span class="token function">proxy</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token string">"ontouchstart"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    d<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">destroy</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> t <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>        t<span class="token punctuation">.</span>$container<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">".fb.touch"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token function">n</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">".fb.touch"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        t<span class="token punctuation">.</span>requestId <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">i</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>requestId<span class="token punctuation">)</span><span class="token punctuation">,</span>        t<span class="token punctuation">.</span>requestId <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        t<span class="token punctuation">.</span>tapped <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">clearTimeout</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>tapped<span class="token punctuation">)</span><span class="token punctuation">,</span>        t<span class="token punctuation">.</span>tapped <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">,</span>    d<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">ontouchstart</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token keyword">this</span>          <span class="token punctuation">,</span> c <span class="token operator">=</span> <span class="token function">n</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>target<span class="token punctuation">)</span>          <span class="token punctuation">,</span> d <span class="token operator">=</span> i<span class="token punctuation">.</span>instance          <span class="token punctuation">,</span> u <span class="token operator">=</span> d<span class="token punctuation">.</span>current          <span class="token punctuation">,</span> f <span class="token operator">=</span> u<span class="token punctuation">.</span>$slide          <span class="token punctuation">,</span> p <span class="token operator">=</span> u<span class="token punctuation">.</span>$content          <span class="token punctuation">,</span> h <span class="token operator">=</span> <span class="token string">"touchstart"</span> <span class="token operator">==</span> o<span class="token punctuation">.</span>type<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>h <span class="token operator">&amp;&amp;</span> i<span class="token punctuation">.</span>$container<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">"mousedown.fb.touch"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">(</span><span class="token operator">!</span>o<span class="token punctuation">.</span>originalEvent <span class="token operator">||</span> <span class="token number">2</span> <span class="token operator">!=</span> o<span class="token punctuation">.</span>originalEvent<span class="token punctuation">.</span>button<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> f<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> c<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">r</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">r</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>originalEvent<span class="token punctuation">.</span>clientX <span class="token operator">></span> c<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientWidth <span class="token operator">+</span> c<span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>u <span class="token operator">||</span> d<span class="token punctuation">.</span>isAnimating <span class="token operator">||</span> u<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-animated"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">return</span> o<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token keyword">void</span> o<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            i<span class="token punctuation">.</span>realPoints <span class="token operator">=</span> i<span class="token punctuation">.</span>startPoints <span class="token operator">=</span> <span class="token function">a</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>startPoints<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>u<span class="token punctuation">.</span>touch <span class="token operator">&amp;&amp;</span> o<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>startEvent <span class="token operator">=</span> o<span class="token punctuation">,</span>            i<span class="token punctuation">.</span>canTap <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>$target <span class="token operator">=</span> c<span class="token punctuation">,</span>            i<span class="token punctuation">.</span>$content <span class="token operator">=</span> p<span class="token punctuation">,</span>            i<span class="token punctuation">.</span>opts <span class="token operator">=</span> u<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>touch<span class="token punctuation">,</span>            i<span class="token punctuation">.</span>isPanning <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>isSwiping <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>isZooming <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>isScrolling <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>canPan <span class="token operator">=</span> d<span class="token punctuation">.</span><span class="token function">canPan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>startTime <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>distanceX <span class="token operator">=</span> i<span class="token punctuation">.</span>distanceY <span class="token operator">=</span> i<span class="token punctuation">.</span>distance <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>canvasWidth <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientWidth<span class="token punctuation">)</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>canvasHeight <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientHeight<span class="token punctuation">)</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>contentLastPos <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>contentStartPos <span class="token operator">=</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">getTranslate</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>$content<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>                <span class="token literal-property property">left</span><span class="token operator">:</span> <span class="token number">0</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>sliderStartPos <span class="token operator">=</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">getTranslate</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>stagePos <span class="token operator">=</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">getTranslate</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>stage<span class="token punctuation">)</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>sliderStartPos<span class="token punctuation">.</span>top <span class="token operator">-=</span> i<span class="token punctuation">.</span>stagePos<span class="token punctuation">.</span>top<span class="token punctuation">,</span>            i<span class="token punctuation">.</span>sliderStartPos<span class="token punctuation">.</span>left <span class="token operator">-=</span> i<span class="token punctuation">.</span>stagePos<span class="token punctuation">.</span>left<span class="token punctuation">,</span>            i<span class="token punctuation">.</span>contentStartPos<span class="token punctuation">.</span>top <span class="token operator">-=</span> i<span class="token punctuation">.</span>stagePos<span class="token punctuation">.</span>top<span class="token punctuation">,</span>            i<span class="token punctuation">.</span>contentStartPos<span class="token punctuation">.</span>left <span class="token operator">-=</span> i<span class="token punctuation">.</span>stagePos<span class="token punctuation">.</span>left<span class="token punctuation">,</span>            <span class="token function">n</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">".fb.touch"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>h <span class="token operator">?</span> <span class="token string">"touchend.fb.touch touchcancel.fb.touch"</span> <span class="token operator">:</span> <span class="token string">"mouseup.fb.touch mouseleave.fb.touch"</span><span class="token punctuation">,</span> n<span class="token punctuation">.</span><span class="token function">proxy</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token string">"ontouchend"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>h <span class="token operator">?</span> <span class="token string">"touchmove.fb.touch"</span> <span class="token operator">:</span> <span class="token string">"mousemove.fb.touch"</span><span class="token punctuation">,</span> n<span class="token punctuation">.</span><span class="token function">proxy</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token string">"ontouchmove"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span>isMobile <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"scroll"</span><span class="token punctuation">,</span> i<span class="token punctuation">.</span>onscroll<span class="token punctuation">,</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>opts <span class="token operator">||</span> i<span class="token punctuation">.</span>canPan<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>$stage<span class="token punctuation">)</span> <span class="token operator">||</span> i<span class="token punctuation">.</span>$stage<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">".fancybox-image"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> o<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span>isMobile <span class="token operator">&amp;&amp;</span> c<span class="token punctuation">.</span><span class="token function">parents</span><span class="token punctuation">(</span><span class="token string">".fancybox-caption"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>i<span class="token punctuation">.</span>isScrollable <span class="token operator">=</span> <span class="token function">l</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">l</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span>isMobile <span class="token operator">&amp;&amp;</span> i<span class="token punctuation">.</span>isScrollable <span class="token operator">||</span> o<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">===</span> i<span class="token punctuation">.</span>startPoints<span class="token punctuation">.</span>length <span class="token operator">||</span> u<span class="token punctuation">.</span>hasError<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>i<span class="token punctuation">.</span>canPan <span class="token operator">?</span> <span class="token punctuation">(</span>n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>$content<span class="token punctuation">)</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>isPanning <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">:</span> i<span class="token punctuation">.</span>isSwiping <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>$container<span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-is-grabbing"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token number">2</span> <span class="token operator">===</span> i<span class="token punctuation">.</span>startPoints<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> <span class="token string">"image"</span> <span class="token operator">===</span> u<span class="token punctuation">.</span>type <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>u<span class="token punctuation">.</span>isLoaded <span class="token operator">||</span> u<span class="token punctuation">.</span>$ghost<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>i<span class="token punctuation">.</span>canTap <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>isSwiping <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>isPanning <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>isZooming <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>            n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>$content<span class="token punctuation">)</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>centerPointStartX <span class="token operator">=</span> <span class="token number">.5</span> <span class="token operator">*</span> <span class="token punctuation">(</span>i<span class="token punctuation">.</span>startPoints<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">+</span> i<span class="token punctuation">.</span>startPoints<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">n</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>centerPointStartY <span class="token operator">=</span> <span class="token number">.5</span> <span class="token operator">*</span> <span class="token punctuation">(</span>i<span class="token punctuation">.</span>startPoints<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">+</span> i<span class="token punctuation">.</span>startPoints<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">n</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            i<span class="token punctuation">.</span>percentageOfImageAtPinchPointX <span class="token operator">=</span> <span class="token punctuation">(</span>i<span class="token punctuation">.</span>centerPointStartX <span class="token operator">-</span> i<span class="token punctuation">.</span>contentStartPos<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token operator">/</span> i<span class="token punctuation">.</span>contentStartPos<span class="token punctuation">.</span>width<span class="token punctuation">,</span>            i<span class="token punctuation">.</span>percentageOfImageAtPinchPointY <span class="token operator">=</span> <span class="token punctuation">(</span>i<span class="token punctuation">.</span>centerPointStartY <span class="token operator">-</span> i<span class="token punctuation">.</span>contentStartPos<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token operator">/</span> i<span class="token punctuation">.</span>contentStartPos<span class="token punctuation">.</span>height<span class="token punctuation">,</span>            i<span class="token punctuation">.</span>startDistanceBetweenFingers <span class="token operator">=</span> <span class="token function">s</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>startPoints<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">.</span>startPoints<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">,</span>    d<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">onscroll</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>        n<span class="token punctuation">.</span>isScrolling <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>        e<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">"scroll"</span><span class="token punctuation">,</span> n<span class="token punctuation">.</span>onscroll<span class="token punctuation">,</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">,</span>    d<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">ontouchmove</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">!==</span> t<span class="token punctuation">.</span>originalEvent<span class="token punctuation">.</span>buttons <span class="token operator">&amp;&amp;</span> <span class="token number">0</span> <span class="token operator">===</span> t<span class="token punctuation">.</span>originalEvent<span class="token punctuation">.</span>buttons <span class="token operator">?</span> <span class="token keyword">void</span> e<span class="token punctuation">.</span><span class="token function">ontouchend</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">:</span> e<span class="token punctuation">.</span>isScrolling <span class="token operator">?</span> <span class="token keyword">void</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>canTap <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>newPoints <span class="token operator">=</span> <span class="token function">a</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>opts <span class="token operator">||</span> e<span class="token punctuation">.</span>canPan<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>newPoints<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>newPoints<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>isSwiping <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token number">0</span> <span class="token operator">===</span> e<span class="token punctuation">.</span>isSwiping <span class="token operator">||</span> t<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        e<span class="token punctuation">.</span>distanceX <span class="token operator">=</span> <span class="token function">s</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>newPoints<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>startPoints<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"x"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        e<span class="token punctuation">.</span>distanceY <span class="token operator">=</span> <span class="token function">s</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>newPoints<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>startPoints<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"y"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        e<span class="token punctuation">.</span>distance <span class="token operator">=</span> <span class="token function">s</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>newPoints<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>startPoints<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        e<span class="token punctuation">.</span>distance <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>isSwiping <span class="token operator">?</span> e<span class="token punctuation">.</span><span class="token function">onSwipe</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">:</span> e<span class="token punctuation">.</span>isPanning <span class="token operator">?</span> e<span class="token punctuation">.</span><span class="token function">onPan</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> e<span class="token punctuation">.</span>isZooming <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span><span class="token function">onZoom</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">,</span>    d<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">onSwipe</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> a<span class="token punctuation">,</span> s <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span> r <span class="token operator">=</span> s<span class="token punctuation">.</span>instance<span class="token punctuation">,</span> c <span class="token operator">=</span> s<span class="token punctuation">.</span>isSwiping<span class="token punctuation">,</span> l <span class="token operator">=</span> s<span class="token punctuation">.</span>sliderStartPos<span class="token punctuation">.</span>left <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token number">0</span> <span class="token operator">!==</span> c<span class="token punctuation">)</span>            <span class="token string">"x"</span> <span class="token operator">==</span> c <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>distanceX <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>instance<span class="token punctuation">.</span>group<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token operator">||</span> <span class="token number">0</span> <span class="token operator">===</span> s<span class="token punctuation">.</span>instance<span class="token punctuation">.</span>current<span class="token punctuation">.</span>index <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>s<span class="token punctuation">.</span>instance<span class="token punctuation">.</span>current<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>loop<span class="token punctuation">)</span> <span class="token operator">?</span> l <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>distanceX<span class="token punctuation">,</span> <span class="token number">.8</span><span class="token punctuation">)</span> <span class="token operator">:</span> s<span class="token punctuation">.</span>distanceX <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>instance<span class="token punctuation">.</span>group<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token operator">||</span> s<span class="token punctuation">.</span>instance<span class="token punctuation">.</span>current<span class="token punctuation">.</span>index <span class="token operator">===</span> s<span class="token punctuation">.</span>instance<span class="token punctuation">.</span>group<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>s<span class="token punctuation">.</span>instance<span class="token punctuation">.</span>current<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>loop<span class="token punctuation">)</span> <span class="token operator">?</span> l <span class="token operator">-=</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token operator">-</span>s<span class="token punctuation">.</span>distanceX<span class="token punctuation">,</span> <span class="token number">.8</span><span class="token punctuation">)</span> <span class="token operator">:</span> l <span class="token operator">+=</span> s<span class="token punctuation">.</span>distanceX<span class="token punctuation">)</span><span class="token punctuation">,</span>            s<span class="token punctuation">.</span>sliderLastPos <span class="token operator">=</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">top</span><span class="token operator">:</span> <span class="token string">"x"</span> <span class="token operator">==</span> c <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> s<span class="token punctuation">.</span>sliderStartPos<span class="token punctuation">.</span>top <span class="token operator">+</span> s<span class="token punctuation">.</span>distanceY<span class="token punctuation">,</span>                <span class="token literal-property property">left</span><span class="token operator">:</span> l            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            s<span class="token punctuation">.</span>requestId <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">i</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>requestId<span class="token punctuation">)</span><span class="token punctuation">,</span>            s<span class="token punctuation">.</span>requestId <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            s<span class="token punctuation">.</span>requestId <span class="token operator">=</span> <span class="token function">o</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                s<span class="token punctuation">.</span>sliderLastPos <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>instance<span class="token punctuation">.</span>slides<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">var</span> o <span class="token operator">=</span> e<span class="token punctuation">.</span>pos <span class="token operator">-</span> s<span class="token punctuation">.</span>instance<span class="token punctuation">.</span>currPos<span class="token punctuation">;</span>                    n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">setTranslate</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>$slide<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>                        <span class="token literal-property property">top</span><span class="token operator">:</span> s<span class="token punctuation">.</span>sliderLastPos<span class="token punctuation">.</span>top<span class="token punctuation">,</span>                        <span class="token literal-property property">left</span><span class="token operator">:</span> s<span class="token punctuation">.</span>sliderLastPos<span class="token punctuation">.</span>left <span class="token operator">+</span> o <span class="token operator">*</span> s<span class="token punctuation">.</span>canvasWidth <span class="token operator">+</span> o <span class="token operator">*</span> e<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>gutter                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                s<span class="token punctuation">.</span>$container<span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-is-sliding"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>distance<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>canTap <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>            r<span class="token punctuation">.</span>group<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>vertical <span class="token operator">?</span> s<span class="token punctuation">.</span>isSwiping <span class="token operator">=</span> <span class="token string">"y"</span> <span class="token operator">:</span> r<span class="token punctuation">.</span>isDragging <span class="token operator">||</span> <span class="token operator">!</span><span class="token number">1</span> <span class="token operator">===</span> s<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>vertical <span class="token operator">||</span> <span class="token string">"auto"</span> <span class="token operator">===</span> s<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>vertical <span class="token operator">&amp;&amp;</span> <span class="token function">n</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">800</span> <span class="token operator">?</span> s<span class="token punctuation">.</span>isSwiping <span class="token operator">=</span> <span class="token string">"x"</span> <span class="token operator">:</span> <span class="token punctuation">(</span>a <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token number">180</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">atan2</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>distanceY<span class="token punctuation">,</span> s<span class="token punctuation">.</span>distanceX<span class="token punctuation">)</span> <span class="token operator">/</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            s<span class="token punctuation">.</span>isSwiping <span class="token operator">=</span> a <span class="token operator">></span> <span class="token number">45</span> <span class="token operator">&amp;&amp;</span> a <span class="token operator">&lt;</span> <span class="token number">135</span> <span class="token operator">?</span> <span class="token string">"y"</span> <span class="token operator">:</span> <span class="token string">"x"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string">"y"</span> <span class="token operator">===</span> s<span class="token punctuation">.</span>isSwiping <span class="token operator">&amp;&amp;</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span>isMobile <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">.</span>isScrollable<span class="token punctuation">)</span>                <span class="token keyword">return</span> <span class="token keyword">void</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>isScrolling <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            r<span class="token punctuation">.</span>isDragging <span class="token operator">=</span> s<span class="token punctuation">.</span>isSwiping<span class="token punctuation">,</span>            s<span class="token punctuation">.</span>startPoints <span class="token operator">=</span> s<span class="token punctuation">.</span>newPoints<span class="token punctuation">,</span>            n<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>slides<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> o<span class="token punctuation">,</span> i<span class="token punctuation">;</span>                n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>$slide<span class="token punctuation">)</span><span class="token punctuation">,</span>                o <span class="token operator">=</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">getTranslate</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>$slide<span class="token punctuation">)</span><span class="token punctuation">,</span>                i <span class="token operator">=</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">getTranslate</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>stage<span class="token punctuation">)</span><span class="token punctuation">,</span>                e<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                    <span class="token literal-property property">transform</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>                    <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>                    <span class="token string-property property">"transition-duration"</span><span class="token operator">:</span> <span class="token string">""</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-animated"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">return</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(^|\s)fancybox-fx-\S+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                e<span class="token punctuation">.</span>pos <span class="token operator">===</span> r<span class="token punctuation">.</span>current<span class="token punctuation">.</span>pos <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>sliderStartPos<span class="token punctuation">.</span>top <span class="token operator">=</span> o<span class="token punctuation">.</span>top <span class="token operator">-</span> i<span class="token punctuation">.</span>top<span class="token punctuation">,</span>                s<span class="token punctuation">.</span>sliderStartPos<span class="token punctuation">.</span>left <span class="token operator">=</span> o<span class="token punctuation">.</span>left <span class="token operator">-</span> i<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">,</span>                n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">setTranslate</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>$slide<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">top</span><span class="token operator">:</span> o<span class="token punctuation">.</span>top <span class="token operator">-</span> i<span class="token punctuation">.</span>top<span class="token punctuation">,</span>                    <span class="token literal-property property">left</span><span class="token operator">:</span> o<span class="token punctuation">.</span>left <span class="token operator">-</span> i<span class="token punctuation">.</span>left                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            r<span class="token punctuation">.</span>SlideShow <span class="token operator">&amp;&amp;</span> r<span class="token punctuation">.</span>SlideShow<span class="token punctuation">.</span>isActive <span class="token operator">&amp;&amp;</span> r<span class="token punctuation">.</span>SlideShow<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">,</span>    d<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">onPan</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> t <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">s</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>newPoints<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> t<span class="token punctuation">.</span>realPoints<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token punctuation">(</span>n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span>isMobile <span class="token operator">?</span> <span class="token number">10</span> <span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token keyword">void</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>startPoints <span class="token operator">=</span> t<span class="token punctuation">.</span>newPoints<span class="token punctuation">)</span><span class="token punctuation">;</span>        t<span class="token punctuation">.</span>canTap <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>        t<span class="token punctuation">.</span>contentLastPos <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">limitMovement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        t<span class="token punctuation">.</span>requestId <span class="token operator">&amp;&amp;</span> <span class="token function">i</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>requestId<span class="token punctuation">)</span><span class="token punctuation">,</span>        t<span class="token punctuation">.</span>requestId <span class="token operator">=</span> <span class="token function">o</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">setTranslate</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>$content<span class="token punctuation">,</span> t<span class="token punctuation">.</span>contentLastPos<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">,</span>    d<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">limitMovement</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> t<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">,</span> o<span class="token punctuation">,</span> i<span class="token punctuation">,</span> a<span class="token punctuation">,</span> s <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span> r <span class="token operator">=</span> s<span class="token punctuation">.</span>canvasWidth<span class="token punctuation">,</span> c <span class="token operator">=</span> s<span class="token punctuation">.</span>canvasHeight<span class="token punctuation">,</span> l <span class="token operator">=</span> s<span class="token punctuation">.</span>distanceX<span class="token punctuation">,</span> d <span class="token operator">=</span> s<span class="token punctuation">.</span>distanceY<span class="token punctuation">,</span> u <span class="token operator">=</span> s<span class="token punctuation">.</span>contentStartPos<span class="token punctuation">,</span> f <span class="token operator">=</span> u<span class="token punctuation">.</span>left<span class="token punctuation">,</span> p <span class="token operator">=</span> u<span class="token punctuation">.</span>top<span class="token punctuation">,</span> h <span class="token operator">=</span> u<span class="token punctuation">.</span>width<span class="token punctuation">,</span> g <span class="token operator">=</span> u<span class="token punctuation">.</span>height<span class="token punctuation">;</span>        <span class="token keyword">return</span> i <span class="token operator">=</span> h <span class="token operator">></span> r <span class="token operator">?</span> f <span class="token operator">+</span> l <span class="token operator">:</span> f<span class="token punctuation">,</span>        a <span class="token operator">=</span> p <span class="token operator">+</span> d<span class="token punctuation">,</span>        t <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">.5</span> <span class="token operator">*</span> r <span class="token operator">-</span> <span class="token number">.5</span> <span class="token operator">*</span> h<span class="token punctuation">)</span><span class="token punctuation">,</span>        e <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">.5</span> <span class="token operator">*</span> c <span class="token operator">-</span> <span class="token number">.5</span> <span class="token operator">*</span> g<span class="token punctuation">)</span><span class="token punctuation">,</span>        n <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>r <span class="token operator">-</span> h<span class="token punctuation">,</span> <span class="token number">.5</span> <span class="token operator">*</span> r <span class="token operator">-</span> <span class="token number">.5</span> <span class="token operator">*</span> h<span class="token punctuation">)</span><span class="token punctuation">,</span>        o <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>c <span class="token operator">-</span> g<span class="token punctuation">,</span> <span class="token number">.5</span> <span class="token operator">*</span> c <span class="token operator">-</span> <span class="token number">.5</span> <span class="token operator">*</span> g<span class="token punctuation">)</span><span class="token punctuation">,</span>        l <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> i <span class="token operator">></span> t <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> t <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token operator">-</span>t <span class="token operator">+</span> f <span class="token operator">+</span> l<span class="token punctuation">,</span> <span class="token number">.8</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        l <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;</span> n <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> n <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>n <span class="token operator">-</span> f <span class="token operator">-</span> l<span class="token punctuation">,</span> <span class="token number">.8</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        d <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> a <span class="token operator">></span> e <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>a <span class="token operator">=</span> e <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token operator">-</span>e <span class="token operator">+</span> p <span class="token operator">+</span> d<span class="token punctuation">,</span> <span class="token number">.8</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        d <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> a <span class="token operator">&lt;</span> o <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>a <span class="token operator">=</span> o <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>o <span class="token operator">-</span> p <span class="token operator">-</span> d<span class="token punctuation">,</span> <span class="token number">.8</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token literal-property property">top</span><span class="token operator">:</span> a<span class="token punctuation">,</span>            <span class="token literal-property property">left</span><span class="token operator">:</span> i        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">,</span>    d<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">limitPosition</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">,</span> o</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token keyword">this</span>          <span class="token punctuation">,</span> a <span class="token operator">=</span> i<span class="token punctuation">.</span>canvasWidth          <span class="token punctuation">,</span> s <span class="token operator">=</span> i<span class="token punctuation">.</span>canvasHeight<span class="token punctuation">;</span>        <span class="token keyword">return</span> n <span class="token operator">></span> a <span class="token operator">?</span> <span class="token punctuation">(</span>t <span class="token operator">=</span> t <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> t<span class="token punctuation">,</span>        t <span class="token operator">=</span> t <span class="token operator">&lt;</span> a <span class="token operator">-</span> n <span class="token operator">?</span> a <span class="token operator">-</span> n <span class="token operator">:</span> t<span class="token punctuation">)</span> <span class="token operator">:</span> t <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> a <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> n <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        o <span class="token operator">></span> s <span class="token operator">?</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> e <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> e<span class="token punctuation">,</span>        e <span class="token operator">=</span> e <span class="token operator">&lt;</span> s <span class="token operator">-</span> o <span class="token operator">?</span> s <span class="token operator">-</span> o <span class="token operator">:</span> e<span class="token punctuation">)</span> <span class="token operator">:</span> e <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> s <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> o <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>            <span class="token literal-property property">top</span><span class="token operator">:</span> e<span class="token punctuation">,</span>            <span class="token literal-property property">left</span><span class="token operator">:</span> t        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">,</span>    d<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">onZoom</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token keyword">this</span>          <span class="token punctuation">,</span> a <span class="token operator">=</span> e<span class="token punctuation">.</span>contentStartPos          <span class="token punctuation">,</span> r <span class="token operator">=</span> a<span class="token punctuation">.</span>width          <span class="token punctuation">,</span> c <span class="token operator">=</span> a<span class="token punctuation">.</span>height          <span class="token punctuation">,</span> l <span class="token operator">=</span> a<span class="token punctuation">.</span>left          <span class="token punctuation">,</span> d <span class="token operator">=</span> a<span class="token punctuation">.</span>top          <span class="token punctuation">,</span> u <span class="token operator">=</span> <span class="token function">s</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>newPoints<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>newPoints<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>          <span class="token punctuation">,</span> f <span class="token operator">=</span> u <span class="token operator">/</span> e<span class="token punctuation">.</span>startDistanceBetweenFingers          <span class="token punctuation">,</span> p <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>r <span class="token operator">*</span> f<span class="token punctuation">)</span>          <span class="token punctuation">,</span> h <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>c <span class="token operator">*</span> f<span class="token punctuation">)</span>          <span class="token punctuation">,</span> g <span class="token operator">=</span> <span class="token punctuation">(</span>r <span class="token operator">-</span> p<span class="token punctuation">)</span> <span class="token operator">*</span> e<span class="token punctuation">.</span>percentageOfImageAtPinchPointX          <span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token punctuation">(</span>c <span class="token operator">-</span> h<span class="token punctuation">)</span> <span class="token operator">*</span> e<span class="token punctuation">.</span>percentageOfImageAtPinchPointY          <span class="token punctuation">,</span> m <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>newPoints<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">+</span> e<span class="token punctuation">.</span>newPoints<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token function">n</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token punctuation">,</span> v <span class="token operator">=</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>newPoints<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">+</span> e<span class="token punctuation">.</span>newPoints<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>y<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token function">n</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token punctuation">,</span> y <span class="token operator">=</span> m <span class="token operator">-</span> e<span class="token punctuation">.</span>centerPointStartX          <span class="token punctuation">,</span> x <span class="token operator">=</span> v <span class="token operator">-</span> e<span class="token punctuation">.</span>centerPointStartY          <span class="token punctuation">,</span> w <span class="token operator">=</span> l <span class="token operator">+</span> <span class="token punctuation">(</span>g <span class="token operator">+</span> y<span class="token punctuation">)</span>          <span class="token punctuation">,</span> $ <span class="token operator">=</span> d <span class="token operator">+</span> <span class="token punctuation">(</span>b <span class="token operator">+</span> x<span class="token punctuation">)</span>          <span class="token punctuation">,</span> <span class="token constant">S</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">top</span><span class="token operator">:</span> $<span class="token punctuation">,</span>            <span class="token literal-property property">left</span><span class="token operator">:</span> w<span class="token punctuation">,</span>            <span class="token literal-property property">scaleX</span><span class="token operator">:</span> f<span class="token punctuation">,</span>            <span class="token literal-property property">scaleY</span><span class="token operator">:</span> f        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        e<span class="token punctuation">.</span>canTap <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>        e<span class="token punctuation">.</span>newWidth <span class="token operator">=</span> p<span class="token punctuation">,</span>        e<span class="token punctuation">.</span>newHeight <span class="token operator">=</span> h<span class="token punctuation">,</span>        e<span class="token punctuation">.</span>contentLastPos <span class="token operator">=</span> <span class="token constant">S</span><span class="token punctuation">,</span>        e<span class="token punctuation">.</span>requestId <span class="token operator">&amp;&amp;</span> <span class="token function">i</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>requestId<span class="token punctuation">)</span><span class="token punctuation">,</span>        e<span class="token punctuation">.</span>requestId <span class="token operator">=</span> <span class="token function">o</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">setTranslate</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>$content<span class="token punctuation">,</span> e<span class="token punctuation">.</span>contentLastPos<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">,</span>    d<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">ontouchend</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> o <span class="token operator">=</span> <span class="token keyword">this</span>          <span class="token punctuation">,</span> s <span class="token operator">=</span> o<span class="token punctuation">.</span>isSwiping          <span class="token punctuation">,</span> r <span class="token operator">=</span> o<span class="token punctuation">.</span>isPanning          <span class="token punctuation">,</span> c <span class="token operator">=</span> o<span class="token punctuation">.</span>isZooming          <span class="token punctuation">,</span> l <span class="token operator">=</span> o<span class="token punctuation">.</span>isScrolling<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span>endPoints <span class="token operator">=</span> <span class="token function">a</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span>        o<span class="token punctuation">.</span>dMs <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> o<span class="token punctuation">.</span>startTime<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        o<span class="token punctuation">.</span>$container<span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-is-grabbing"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token function">n</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">".fb.touch"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        e<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">"scroll"</span><span class="token punctuation">,</span> o<span class="token punctuation">.</span>onscroll<span class="token punctuation">,</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        o<span class="token punctuation">.</span>requestId <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">i</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>requestId<span class="token punctuation">)</span><span class="token punctuation">,</span>        o<span class="token punctuation">.</span>requestId <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        o<span class="token punctuation">.</span>isSwiping <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>        o<span class="token punctuation">.</span>isPanning <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>        o<span class="token punctuation">.</span>isZooming <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>        o<span class="token punctuation">.</span>isScrolling <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>        o<span class="token punctuation">.</span>instance<span class="token punctuation">.</span>isDragging <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>        o<span class="token punctuation">.</span>canTap<span class="token punctuation">)</span>            <span class="token keyword">return</span> o<span class="token punctuation">.</span><span class="token function">onTap</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>        o<span class="token punctuation">.</span>speed <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">,</span>        o<span class="token punctuation">.</span>velocityX <span class="token operator">=</span> o<span class="token punctuation">.</span>distanceX <span class="token operator">/</span> o<span class="token punctuation">.</span>dMs <span class="token operator">*</span> <span class="token number">.5</span><span class="token punctuation">,</span>        o<span class="token punctuation">.</span>velocityY <span class="token operator">=</span> o<span class="token punctuation">.</span>distanceY <span class="token operator">/</span> o<span class="token punctuation">.</span>dMs <span class="token operator">*</span> <span class="token number">.5</span><span class="token punctuation">,</span>        r <span class="token operator">?</span> o<span class="token punctuation">.</span><span class="token function">endPanning</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> c <span class="token operator">?</span> o<span class="token punctuation">.</span><span class="token function">endZooming</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> o<span class="token punctuation">.</span><span class="token function">endSwiping</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> l<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">,</span>    d<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">endSwiping</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> o <span class="token operator">=</span> <span class="token keyword">this</span>          <span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span>          <span class="token punctuation">,</span> a <span class="token operator">=</span> o<span class="token punctuation">.</span>instance<span class="token punctuation">.</span>group<span class="token punctuation">.</span>length          <span class="token punctuation">,</span> s <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>distanceX<span class="token punctuation">)</span>          <span class="token punctuation">,</span> r <span class="token operator">=</span> <span class="token string">"x"</span> <span class="token operator">==</span> t <span class="token operator">&amp;&amp;</span> a <span class="token operator">></span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span>dMs <span class="token operator">></span> <span class="token number">130</span> <span class="token operator">&amp;&amp;</span> s <span class="token operator">></span> <span class="token number">10</span> <span class="token operator">||</span> s <span class="token operator">></span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        o<span class="token punctuation">.</span>sliderLastPos <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>        <span class="token string">"y"</span> <span class="token operator">==</span> t <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>e <span class="token operator">&amp;&amp;</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>distanceY<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">50</span> <span class="token operator">?</span> <span class="token punctuation">(</span>n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>instance<span class="token punctuation">.</span>current<span class="token punctuation">.</span>$slide<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">top</span><span class="token operator">:</span> o<span class="token punctuation">.</span>sliderStartPos<span class="token punctuation">.</span>top <span class="token operator">+</span> o<span class="token punctuation">.</span>distanceY <span class="token operator">+</span> <span class="token number">150</span> <span class="token operator">*</span> o<span class="token punctuation">.</span>velocityY<span class="token punctuation">,</span>            <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token number">0</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        i <span class="token operator">=</span> o<span class="token punctuation">.</span>instance<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> r <span class="token operator">&amp;&amp;</span> o<span class="token punctuation">.</span>distanceX <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">?</span> i <span class="token operator">=</span> o<span class="token punctuation">.</span>instance<span class="token punctuation">.</span><span class="token function">previous</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span> <span class="token operator">:</span> r <span class="token operator">&amp;&amp;</span> o<span class="token punctuation">.</span>distanceX <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> o<span class="token punctuation">.</span>instance<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token operator">!</span><span class="token number">1</span> <span class="token operator">!==</span> i <span class="token operator">||</span> <span class="token string">"x"</span> <span class="token operator">!=</span> t <span class="token operator">&amp;&amp;</span> <span class="token string">"y"</span> <span class="token operator">!=</span> t <span class="token operator">||</span> o<span class="token punctuation">.</span>instance<span class="token punctuation">.</span><span class="token function">centerSlide</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        o<span class="token punctuation">.</span>$container<span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-is-sliding"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">,</span>    d<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">endPanning</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> t<span class="token punctuation">,</span> e<span class="token punctuation">,</span> o<span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>        i<span class="token punctuation">.</span>contentLastPos <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token number">1</span> <span class="token operator">===</span> i<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>momentum <span class="token operator">||</span> i<span class="token punctuation">.</span>dMs <span class="token operator">></span> <span class="token number">350</span> <span class="token operator">?</span> <span class="token punctuation">(</span>t <span class="token operator">=</span> i<span class="token punctuation">.</span>contentLastPos<span class="token punctuation">.</span>left<span class="token punctuation">,</span>        e <span class="token operator">=</span> i<span class="token punctuation">.</span>contentLastPos<span class="token punctuation">.</span>top<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>t <span class="token operator">=</span> i<span class="token punctuation">.</span>contentLastPos<span class="token punctuation">.</span>left <span class="token operator">+</span> <span class="token number">500</span> <span class="token operator">*</span> i<span class="token punctuation">.</span>velocityX<span class="token punctuation">,</span>        e <span class="token operator">=</span> i<span class="token punctuation">.</span>contentLastPos<span class="token punctuation">.</span>top <span class="token operator">+</span> <span class="token number">500</span> <span class="token operator">*</span> i<span class="token punctuation">.</span>velocityY<span class="token punctuation">)</span><span class="token punctuation">,</span>        o <span class="token operator">=</span> i<span class="token punctuation">.</span><span class="token function">limitPosition</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> e<span class="token punctuation">,</span> i<span class="token punctuation">.</span>contentStartPos<span class="token punctuation">.</span>width<span class="token punctuation">,</span> i<span class="token punctuation">.</span>contentStartPos<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">,</span>        o<span class="token punctuation">.</span>width <span class="token operator">=</span> i<span class="token punctuation">.</span>contentStartPos<span class="token punctuation">.</span>width<span class="token punctuation">,</span>        o<span class="token punctuation">.</span>height <span class="token operator">=</span> i<span class="token punctuation">.</span>contentStartPos<span class="token punctuation">.</span>height<span class="token punctuation">,</span>        n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>$content<span class="token punctuation">,</span> o<span class="token punctuation">,</span> <span class="token number">366</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">,</span>    d<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">endZooming</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> t<span class="token punctuation">,</span> e<span class="token punctuation">,</span> o<span class="token punctuation">,</span> i<span class="token punctuation">,</span> a <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span> s <span class="token operator">=</span> a<span class="token punctuation">.</span>instance<span class="token punctuation">.</span>current<span class="token punctuation">,</span> r <span class="token operator">=</span> a<span class="token punctuation">.</span>newWidth<span class="token punctuation">,</span> c <span class="token operator">=</span> a<span class="token punctuation">.</span>newHeight<span class="token punctuation">;</span>        a<span class="token punctuation">.</span>contentLastPos <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>t <span class="token operator">=</span> a<span class="token punctuation">.</span>contentLastPos<span class="token punctuation">.</span>left<span class="token punctuation">,</span>        e <span class="token operator">=</span> a<span class="token punctuation">.</span>contentLastPos<span class="token punctuation">.</span>top<span class="token punctuation">,</span>        i <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">top</span><span class="token operator">:</span> e<span class="token punctuation">,</span>            <span class="token literal-property property">left</span><span class="token operator">:</span> t<span class="token punctuation">,</span>            <span class="token literal-property property">width</span><span class="token operator">:</span> r<span class="token punctuation">,</span>            <span class="token literal-property property">height</span><span class="token operator">:</span> c<span class="token punctuation">,</span>            <span class="token literal-property property">scaleX</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>            <span class="token literal-property property">scaleY</span><span class="token operator">:</span> <span class="token number">1</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">setTranslate</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>$content<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">,</span>        r <span class="token operator">&lt;</span> a<span class="token punctuation">.</span>canvasWidth <span class="token operator">&amp;&amp;</span> c <span class="token operator">&lt;</span> a<span class="token punctuation">.</span>canvasHeight <span class="token operator">?</span> a<span class="token punctuation">.</span>instance<span class="token punctuation">.</span><span class="token function">scaleToFit</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">)</span> <span class="token operator">:</span> r <span class="token operator">></span> s<span class="token punctuation">.</span>width <span class="token operator">||</span> c <span class="token operator">></span> s<span class="token punctuation">.</span>height <span class="token operator">?</span> a<span class="token punctuation">.</span>instance<span class="token punctuation">.</span><span class="token function">scaleToActual</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>centerPointStartX<span class="token punctuation">,</span> a<span class="token punctuation">.</span>centerPointStartY<span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>o <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">limitPosition</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> e<span class="token punctuation">,</span> r<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">,</span>        n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>$content<span class="token punctuation">,</span> o<span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">,</span>    d<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">onTap</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> o<span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span> s <span class="token operator">=</span> <span class="token function">n</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">,</span> r <span class="token operator">=</span> i<span class="token punctuation">.</span>instance<span class="token punctuation">,</span> c <span class="token operator">=</span> r<span class="token punctuation">.</span>current<span class="token punctuation">,</span> l <span class="token operator">=</span> e <span class="token operator">&amp;&amp;</span> <span class="token function">a</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">||</span> i<span class="token punctuation">.</span>startPoints<span class="token punctuation">,</span> d <span class="token operator">=</span> l<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">?</span> l<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token function">n</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> i<span class="token punctuation">.</span>stagePos<span class="token punctuation">.</span>left <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> u <span class="token operator">=</span> l<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">?</span> l<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>y <span class="token operator">-</span> <span class="token function">n</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> i<span class="token punctuation">.</span>stagePos<span class="token punctuation">.</span>top <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function-variable function">f</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> o <span class="token operator">=</span> c<span class="token punctuation">.</span>opts<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>n<span class="token punctuation">.</span><span class="token function">isFunction</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>o <span class="token operator">=</span> <span class="token function">o</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> <span class="token punctuation">[</span>c<span class="token punctuation">,</span> e<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            o<span class="token punctuation">)</span>                <span class="token keyword">switch</span> <span class="token punctuation">(</span>o<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">case</span> <span class="token string">"close"</span><span class="token operator">:</span>                    r<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>startEvent<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token string">"toggleControls"</span><span class="token operator">:</span>                    r<span class="token punctuation">.</span><span class="token function">toggleControls</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token string">"next"</span><span class="token operator">:</span>                    r<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token string">"nextOrClose"</span><span class="token operator">:</span>                    r<span class="token punctuation">.</span>group<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">1</span> <span class="token operator">?</span> r<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> r<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>startEvent<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token keyword">case</span> <span class="token string">"zoom"</span><span class="token operator">:</span>                    <span class="token string">"image"</span> <span class="token operator">==</span> c<span class="token punctuation">.</span>type <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>c<span class="token punctuation">.</span>isLoaded <span class="token operator">||</span> c<span class="token punctuation">.</span>$ghost<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">canPan</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> r<span class="token punctuation">.</span><span class="token function">scaleToFit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> r<span class="token punctuation">.</span><span class="token function">isScaledDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> r<span class="token punctuation">.</span><span class="token function">scaleToActual</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span> u<span class="token punctuation">)</span> <span class="token operator">:</span> r<span class="token punctuation">.</span>group<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span> r<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>startEvent<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">!</span>e<span class="token punctuation">.</span>originalEvent <span class="token operator">||</span> <span class="token number">2</span> <span class="token operator">!=</span> e<span class="token punctuation">.</span>originalEvent<span class="token punctuation">.</span>button<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token punctuation">(</span>d <span class="token operator">></span> s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>clientWidth <span class="token operator">+</span> s<span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">".fancybox-bg,.fancybox-inner,.fancybox-outer,.fancybox-container"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                o <span class="token operator">=</span> <span class="token string">"Outside"</span><span class="token punctuation">;</span>            <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">".fancybox-slide"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                o <span class="token operator">=</span> <span class="token string">"Slide"</span><span class="token punctuation">;</span>            <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>r<span class="token punctuation">.</span>current<span class="token punctuation">.</span>$content <span class="token operator">||</span> <span class="token operator">!</span>r<span class="token punctuation">.</span>current<span class="token punctuation">.</span>$content<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addBack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span>                    <span class="token keyword">return</span><span class="token punctuation">;</span>                o <span class="token operator">=</span> <span class="token string">"Content"</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>i<span class="token punctuation">.</span>tapped<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">clearTimeout</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>tapped<span class="token punctuation">)</span><span class="token punctuation">,</span>                i<span class="token punctuation">.</span>tapped <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>                Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>d <span class="token operator">-</span> i<span class="token punctuation">.</span>tapX<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">50</span> <span class="token operator">||</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>u <span class="token operator">-</span> i<span class="token punctuation">.</span>tapY<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">50</span><span class="token punctuation">)</span>                    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>                <span class="token function">f</span><span class="token punctuation">(</span><span class="token string">"dblclick"</span> <span class="token operator">+</span> o<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span>                i<span class="token punctuation">.</span>tapX <span class="token operator">=</span> d<span class="token punctuation">,</span>                i<span class="token punctuation">.</span>tapY <span class="token operator">=</span> u<span class="token punctuation">,</span>                c<span class="token punctuation">.</span>opts<span class="token punctuation">[</span><span class="token string">"dblclick"</span> <span class="token operator">+</span> o<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> c<span class="token punctuation">.</span>opts<span class="token punctuation">[</span><span class="token string">"dblclick"</span> <span class="token operator">+</span> o<span class="token punctuation">]</span> <span class="token operator">!==</span> c<span class="token punctuation">.</span>opts<span class="token punctuation">[</span><span class="token string">"click"</span> <span class="token operator">+</span> o<span class="token punctuation">]</span> <span class="token operator">?</span> i<span class="token punctuation">.</span>tapped <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    i<span class="token punctuation">.</span>tapped <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>                    r<span class="token punctuation">.</span>isAnimating <span class="token operator">||</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token string">"click"</span> <span class="token operator">+</span> o<span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token string">"click"</span> <span class="token operator">+</span> o<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token keyword">this</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">,</span>    <span class="token function">n</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"onActivate.fb"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        e <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>e<span class="token punctuation">.</span>Guestures <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>Guestures <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">d</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"beforeClose.fb"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        e <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>Guestures <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>Guestures<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> document<span class="token punctuation">,</span> jQuery<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token string">"use strict"</span><span class="token punctuation">;</span>    e<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span>defaults<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">btnTpl</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">slideShow</span><span class="token operator">:</span> <span class="token string">'&lt;button data-fancybox-play class="fancybox-button fancybox-button--play" title="&#123;&#123;PLAY_START&#125;&#125;">&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path d="M6.5 5.4v13.2l11-6.6z"/>&lt;/svg>&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path d="M8.33 5.75h2.2v12.5h-2.2V5.75zm5.15 0h2.2v12.5h-2.2V5.75z"/>&lt;/svg>&lt;/button>'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token literal-property property">slideShow</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">autoStart</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token literal-property property">speed</span><span class="token operator">:</span> <span class="token number">3e3</span><span class="token punctuation">,</span>            <span class="token literal-property property">progress</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">0</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> <span class="token function-variable function">n</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>instance <span class="token operator">=</span> t<span class="token punctuation">,</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    e<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span>prototype<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">timer</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>        <span class="token literal-property property">isActive</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>        <span class="token literal-property property">$button</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>        <span class="token function-variable function">init</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> t <span class="token operator">=</span> <span class="token keyword">this</span>              <span class="token punctuation">,</span> n <span class="token operator">=</span> t<span class="token punctuation">.</span>instance              <span class="token punctuation">,</span> o <span class="token operator">=</span> n<span class="token punctuation">.</span>group<span class="token punctuation">[</span>n<span class="token punctuation">.</span>currIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>opts<span class="token punctuation">.</span>slideShow<span class="token punctuation">;</span>            t<span class="token punctuation">.</span>$button <span class="token operator">=</span> n<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>toolbar<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"[data-fancybox-play]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                t<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            n<span class="token punctuation">.</span>group<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token operator">||</span> <span class="token operator">!</span>o <span class="token operator">?</span> t<span class="token punctuation">.</span>$button<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> o<span class="token punctuation">.</span>progress <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>$progress <span class="token operator">=</span> <span class="token function">e</span><span class="token punctuation">(</span><span class="token string">'&lt;div class="fancybox-progress">&lt;/div>'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>inner<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token keyword">this</span>              <span class="token punctuation">,</span> o <span class="token operator">=</span> n<span class="token punctuation">.</span>instance              <span class="token punctuation">,</span> i <span class="token operator">=</span> o<span class="token punctuation">.</span>current<span class="token punctuation">;</span>            i <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token number">0</span> <span class="token operator">===</span> t <span class="token operator">||</span> i<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>loop <span class="token operator">||</span> o<span class="token punctuation">.</span>currIndex <span class="token operator">&lt;</span> o<span class="token punctuation">.</span>group<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">?</span> n<span class="token punctuation">.</span>isActive <span class="token operator">&amp;&amp;</span> <span class="token string">"video"</span> <span class="token operator">!==</span> i<span class="token punctuation">.</span>contentType <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n<span class="token punctuation">.</span>$progress <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span>$progress<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">scaleX</span><span class="token operator">:</span> <span class="token number">1</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> i<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>slideShow<span class="token punctuation">.</span>speed<span class="token punctuation">)</span><span class="token punctuation">,</span>            n<span class="token punctuation">.</span>timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                o<span class="token punctuation">.</span>current<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>loop <span class="token operator">||</span> o<span class="token punctuation">.</span>current<span class="token punctuation">.</span>index <span class="token operator">!=</span> o<span class="token punctuation">.</span>group<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">?</span> o<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> o<span class="token punctuation">.</span><span class="token function">jumpTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> i<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>slideShow<span class="token punctuation">.</span>speed<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>n<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            o<span class="token punctuation">.</span>idleSecondsCounter <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>            o<span class="token punctuation">.</span><span class="token function">showControls</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function-variable function">clear</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> t <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>            <span class="token function">clearTimeout</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>timer<span class="token punctuation">)</span><span class="token punctuation">,</span>            t<span class="token punctuation">.</span>timer <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>            t<span class="token punctuation">.</span>$progress <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span>$progress<span class="token punctuation">.</span><span class="token function">removeAttr</span><span class="token punctuation">(</span><span class="token string">"style"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function-variable function">start</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> t <span class="token operator">=</span> <span class="token keyword">this</span>              <span class="token punctuation">,</span> e <span class="token operator">=</span> t<span class="token punctuation">.</span>instance<span class="token punctuation">.</span>current<span class="token punctuation">;</span>            e <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>$button<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>i18n<span class="token punctuation">[</span>e<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>lang<span class="token punctuation">]</span> <span class="token operator">||</span> e<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>i18n<span class="token punctuation">.</span>en<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token constant">PLAY_STOP</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-button--play"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-button--pause"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            t<span class="token punctuation">.</span>isActive <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>            e<span class="token punctuation">.</span>isComplete <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            t<span class="token punctuation">.</span>instance<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"onSlideShowChange"</span><span class="token punctuation">,</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function-variable function">stop</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> t <span class="token operator">=</span> <span class="token keyword">this</span>              <span class="token punctuation">,</span> e <span class="token operator">=</span> t<span class="token punctuation">.</span>instance<span class="token punctuation">.</span>current<span class="token punctuation">;</span>            t<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            t<span class="token punctuation">.</span>$button<span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"title"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>i18n<span class="token punctuation">[</span>e<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>lang<span class="token punctuation">]</span> <span class="token operator">||</span> e<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>i18n<span class="token punctuation">.</span>en<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token constant">PLAY_START</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-button--pause"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-button--play"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            t<span class="token punctuation">.</span>isActive <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>            t<span class="token punctuation">.</span>instance<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"onSlideShowChange"</span><span class="token punctuation">,</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            t<span class="token punctuation">.</span>$progress <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span>$progress<span class="token punctuation">.</span><span class="token function">removeAttr</span><span class="token punctuation">(</span><span class="token string">"style"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function-variable function">toggle</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> t <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>            t<span class="token punctuation">.</span>isActive <span class="token operator">?</span> t<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> t<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">e</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token string-property property">"onInit.fb"</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>e<span class="token punctuation">.</span>SlideShow <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>SlideShow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">n</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token string-property property">"beforeShow.fb"</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">,</span> o</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> i <span class="token operator">=</span> e <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>SlideShow<span class="token punctuation">;</span>            o <span class="token operator">?</span> i <span class="token operator">&amp;&amp;</span> n<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>slideShow<span class="token punctuation">.</span>autoStart <span class="token operator">&amp;&amp;</span> i<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> i <span class="token operator">&amp;&amp;</span> i<span class="token punctuation">.</span>isActive <span class="token operator">&amp;&amp;</span> i<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token string-property property">"afterShow.fb"</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> o <span class="token operator">=</span> e <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>SlideShow<span class="token punctuation">;</span>            o <span class="token operator">&amp;&amp;</span> o<span class="token punctuation">.</span>isActive <span class="token operator">&amp;&amp;</span> o<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token string-property property">"afterKeydown.fb"</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">,</span> o<span class="token punctuation">,</span> i<span class="token punctuation">,</span> a<span class="token punctuation">,</span> s</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> r <span class="token operator">=</span> o <span class="token operator">&amp;&amp;</span> o<span class="token punctuation">.</span>SlideShow<span class="token punctuation">;</span>            <span class="token operator">!</span>r <span class="token operator">||</span> <span class="token operator">!</span>i<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>slideShow <span class="token operator">||</span> <span class="token number">80</span> <span class="token operator">!==</span> s <span class="token operator">&amp;&amp;</span> <span class="token number">32</span> <span class="token operator">!==</span> s <span class="token operator">||</span> <span class="token function">e</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>activeElement<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span><span class="token string">"button,a,input"</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            r<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token string-property property">"beforeClose.fb onDeactivate.fb"</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> n <span class="token operator">=</span> e <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>SlideShow<span class="token punctuation">;</span>            n <span class="token operator">&amp;&amp;</span> n<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">e</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"visibilitychange"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> n <span class="token operator">=</span> e<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token punctuation">,</span> o <span class="token operator">=</span> n <span class="token operator">&amp;&amp;</span> n<span class="token punctuation">.</span>SlideShow<span class="token punctuation">;</span>        o <span class="token operator">&amp;&amp;</span> o<span class="token punctuation">.</span>isActive <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>hidden <span class="token operator">?</span> o<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> o<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span>document<span class="token punctuation">,</span> jQuery<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token string">"use strict"</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> <span class="token function-variable function">n</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">"requestFullscreen"</span><span class="token punctuation">,</span> <span class="token string">"exitFullscreen"</span><span class="token punctuation">,</span> <span class="token string">"fullscreenElement"</span><span class="token punctuation">,</span> <span class="token string">"fullscreenEnabled"</span><span class="token punctuation">,</span> <span class="token string">"fullscreenchange"</span><span class="token punctuation">,</span> <span class="token string">"fullscreenerror"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"webkitRequestFullscreen"</span><span class="token punctuation">,</span> <span class="token string">"webkitExitFullscreen"</span><span class="token punctuation">,</span> <span class="token string">"webkitFullscreenElement"</span><span class="token punctuation">,</span> <span class="token string">"webkitFullscreenEnabled"</span><span class="token punctuation">,</span> <span class="token string">"webkitfullscreenchange"</span><span class="token punctuation">,</span> <span class="token string">"webkitfullscreenerror"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"webkitRequestFullScreen"</span><span class="token punctuation">,</span> <span class="token string">"webkitCancelFullScreen"</span><span class="token punctuation">,</span> <span class="token string">"webkitCurrentFullScreenElement"</span><span class="token punctuation">,</span> <span class="token string">"webkitCancelFullScreen"</span><span class="token punctuation">,</span> <span class="token string">"webkitfullscreenchange"</span><span class="token punctuation">,</span> <span class="token string">"webkitfullscreenerror"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"mozRequestFullScreen"</span><span class="token punctuation">,</span> <span class="token string">"mozCancelFullScreen"</span><span class="token punctuation">,</span> <span class="token string">"mozFullScreenElement"</span><span class="token punctuation">,</span> <span class="token string">"mozFullScreenEnabled"</span><span class="token punctuation">,</span> <span class="token string">"mozfullscreenchange"</span><span class="token punctuation">,</span> <span class="token string">"mozfullscreenerror"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">"msRequestFullscreen"</span><span class="token punctuation">,</span> <span class="token string">"msExitFullscreen"</span><span class="token punctuation">,</span> <span class="token string">"msFullscreenElement"</span><span class="token punctuation">,</span> <span class="token string">"msFullscreenEnabled"</span><span class="token punctuation">,</span> <span class="token string">"MSFullscreenChange"</span><span class="token punctuation">,</span> <span class="token string">"MSFullscreenError"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> o <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> o <span class="token operator">&lt;</span> e<span class="token punctuation">.</span>length<span class="token punctuation">;</span> o<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> i <span class="token operator">=</span> e<span class="token punctuation">[</span>o<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&amp;&amp;</span> i<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">in</span> t<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> a <span class="token operator">&lt;</span> i<span class="token punctuation">.</span>length<span class="token punctuation">;</span> a<span class="token operator">++</span><span class="token punctuation">)</span>                    n<span class="token punctuation">[</span>e<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> n            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token operator">!</span><span class="token number">1</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> o <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token function-variable function">request</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e <span class="token operator">=</span> e <span class="token operator">||</span> t<span class="token punctuation">.</span>documentElement<span class="token punctuation">,</span>                e<span class="token punctuation">[</span>n<span class="token punctuation">.</span>requestFullscreen<span class="token punctuation">]</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token constant">ALLOW_KEYBOARD_INPUT</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">exit</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                t<span class="token punctuation">[</span>n<span class="token punctuation">.</span>exitFullscreen<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">toggle</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e <span class="token operator">=</span> e <span class="token operator">||</span> t<span class="token punctuation">.</span>documentElement<span class="token punctuation">,</span>                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">isFullscreen</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token function">Boolean</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>n<span class="token punctuation">.</span>fullscreenElement<span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">enabled</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token function">Boolean</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>n<span class="token punctuation">.</span>fullscreenEnabled<span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        e<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span>defaults<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">btnTpl</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">fullScreen</span><span class="token operator">:</span> <span class="token string">'&lt;button data-fancybox-fullscreen class="fancybox-button fancybox-button--fsenter" title="&#123;&#123;FULL_SCREEN&#125;&#125;">&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path d="M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z"/>&lt;/svg>&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path d="M5 16h3v3h2v-5H5zm3-8H5v2h5V5H8zm6 11h2v-3h3v-2h-5zm2-11V5h-2v5h5V8z"/>&lt;/svg>&lt;/button>'</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">fullScreen</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">autoStart</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token function">e</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span>fullscreenchange<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> t <span class="token operator">=</span> o<span class="token punctuation">.</span><span class="token function">isFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token punctuation">,</span> n <span class="token operator">=</span> e<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            n <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n<span class="token punctuation">.</span>current <span class="token operator">&amp;&amp;</span> <span class="token string">"image"</span> <span class="token operator">===</span> n<span class="token punctuation">.</span>current<span class="token punctuation">.</span>type <span class="token operator">&amp;&amp;</span> n<span class="token punctuation">.</span>isAnimating <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n<span class="token punctuation">.</span>isAnimating <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>            n<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            n<span class="token punctuation">.</span>isComplete <span class="token operator">||</span> n<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            n<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"onFullscreenChange"</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">,</span>            n<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>container<span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-is-fullscreen"</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">,</span>            n<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>toolbar<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"[data-fancybox-fullscreen]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-button--fsenter"</span><span class="token punctuation">,</span> <span class="token operator">!</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-button--fsexit"</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token function">e</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token string-property property">"onInit.fb"</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> i<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>n<span class="token punctuation">)</span>                <span class="token keyword">return</span> <span class="token keyword">void</span> e<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>toolbar<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"[data-fancybox-fullscreen]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            e <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>group<span class="token punctuation">[</span>e<span class="token punctuation">.</span>currIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>opts<span class="token punctuation">.</span>fullScreen <span class="token operator">?</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> e<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>container<span class="token punctuation">,</span>            i<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"click.fb-fullscreen"</span><span class="token punctuation">,</span> <span class="token string">"[data-fancybox-fullscreen]"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                t<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                o<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            e<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>fullScreen <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token number">0</span> <span class="token operator">===</span> e<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>fullScreen<span class="token punctuation">.</span>autoStart <span class="token operator">&amp;&amp;</span> o<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            e<span class="token punctuation">.</span>FullScreen <span class="token operator">=</span> o<span class="token punctuation">)</span> <span class="token operator">:</span> e <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>toolbar<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"[data-fancybox-fullscreen]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token string-property property">"afterKeydown.fb"</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">,</span> o<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>FullScreen <span class="token operator">&amp;&amp;</span> <span class="token number">70</span> <span class="token operator">===</span> i <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            e<span class="token punctuation">.</span>FullScreen<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token string-property property">"beforeClose.fb"</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>FullScreen <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>container<span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-is-fullscreen"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> o<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span>document<span class="token punctuation">,</span> jQuery<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token string">"use strict"</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token string">"fancybox-thumbs"</span><span class="token punctuation">;</span>    e<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span>defaults <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">btnTpl</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">thumbs</span><span class="token operator">:</span> <span class="token string">'&lt;button data-fancybox-thumbs class="fancybox-button fancybox-button--thumbs" title="&#123;&#123;THUMBS&#125;&#125;">&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path d="M14.59 14.59h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76H5.65v-3.76zm8.94-4.47h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76h-3.76v-3.76zm-4.47 0h3.76v3.76H5.65v-3.76zm8.94-4.47h3.76v3.76h-3.76V5.65zm-4.47 0h3.76v3.76h-3.76V5.65zm-4.47 0h3.76v3.76H5.65V5.65z"/>&lt;/svg>&lt;/button>'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token literal-property property">thumbs</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">autoStart</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token literal-property property">hideOnClose</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>            <span class="token literal-property property">parentEl</span><span class="token operator">:</span> <span class="token string">".fancybox-container"</span><span class="token punctuation">,</span>            <span class="token literal-property property">axis</span><span class="token operator">:</span> <span class="token string">"y"</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span>defaults<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> <span class="token function-variable function">o</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    e<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>prototype<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">$button</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>        <span class="token literal-property property">$grid</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>        <span class="token literal-property property">$list</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>        <span class="token literal-property property">isVisible</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>        <span class="token literal-property property">isActive</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>        <span class="token function-variable function">init</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token keyword">this</span>              <span class="token punctuation">,</span> n <span class="token operator">=</span> t<span class="token punctuation">.</span>group              <span class="token punctuation">,</span> o <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            e<span class="token punctuation">.</span>instance <span class="token operator">=</span> t<span class="token punctuation">,</span>            e<span class="token punctuation">.</span>opts <span class="token operator">=</span> n<span class="token punctuation">[</span>t<span class="token punctuation">.</span>currIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>opts<span class="token punctuation">.</span>thumbs<span class="token punctuation">,</span>            t<span class="token punctuation">.</span>Thumbs <span class="token operator">=</span> e<span class="token punctuation">,</span>            e<span class="token punctuation">.</span>$button <span class="token operator">=</span> t<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>toolbar<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">"[data-fancybox-thumbs]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> a <span class="token operator">=</span> n<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> a <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>thumb <span class="token operator">&amp;&amp;</span> o<span class="token operator">++</span><span class="token punctuation">,</span>            <span class="token operator">!</span><span class="token punctuation">(</span>o <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>                <span class="token punctuation">;</span>            o <span class="token operator">></span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>opts <span class="token operator">?</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>$button<span class="token punctuation">.</span><span class="token function">removeAttr</span><span class="token punctuation">(</span><span class="token string">"style"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                e<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            e<span class="token punctuation">.</span>isActive <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">:</span> e<span class="token punctuation">.</span>$button<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function-variable function">create</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> t<span class="token punctuation">,</span> o <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span> i <span class="token operator">=</span> o<span class="token punctuation">.</span>instance<span class="token punctuation">,</span> a <span class="token operator">=</span> o<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>parentEl<span class="token punctuation">,</span> s <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            o<span class="token punctuation">.</span>$grid <span class="token operator">||</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span>$grid <span class="token operator">=</span> <span class="token function">e</span><span class="token punctuation">(</span><span class="token string">'&lt;div class="'</span> <span class="token operator">+</span> n <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> n <span class="token operator">+</span> <span class="token string">"-"</span> <span class="token operator">+</span> o<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>axis <span class="token operator">+</span> <span class="token string">'">&lt;/div>'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>container<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addBack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            o<span class="token punctuation">.</span>$grid<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                i<span class="token punctuation">.</span><span class="token function">jumpTo</span><span class="token punctuation">(</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"data-index"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            o<span class="token punctuation">.</span>$list <span class="token operator">||</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span>$list <span class="token operator">=</span> <span class="token function">e</span><span class="token punctuation">(</span><span class="token string">'&lt;div class="'</span> <span class="token operator">+</span> n <span class="token operator">+</span> <span class="token string">'__list">'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>$grid<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            e<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>group<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                t <span class="token operator">=</span> n<span class="token punctuation">.</span>thumb<span class="token punctuation">,</span>                t <span class="token operator">||</span> <span class="token string">"image"</span> <span class="token operator">!==</span> n<span class="token punctuation">.</span>type <span class="token operator">||</span> <span class="token punctuation">(</span>t <span class="token operator">=</span> n<span class="token punctuation">.</span>src<span class="token punctuation">)</span><span class="token punctuation">,</span>                s<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'&lt;a href="javascript:;" tabindex="0" data-index="'</span> <span class="token operator">+</span> e <span class="token operator">+</span> <span class="token string">'"'</span> <span class="token operator">+</span> <span class="token punctuation">(</span>t <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span>length <span class="token operator">?</span> <span class="token string">' style="background-image:url('</span> <span class="token operator">+</span> t <span class="token operator">+</span> <span class="token string">')"'</span> <span class="token operator">:</span> <span class="token string">'class="fancybox-thumbs-missing"'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">">&lt;/a>"</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            o<span class="token punctuation">.</span>$list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string">"x"</span> <span class="token operator">===</span> o<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>axis <span class="token operator">&amp;&amp;</span> o<span class="token punctuation">.</span>$list<span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>$grid<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"padding-right"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">+</span> i<span class="token punctuation">.</span>group<span class="token punctuation">.</span>length <span class="token operator">*</span> o<span class="token punctuation">.</span>$list<span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">outerWidth</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function-variable function">focus</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> e<span class="token punctuation">,</span> n<span class="token punctuation">,</span> o <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span> i <span class="token operator">=</span> o<span class="token punctuation">.</span>$list<span class="token punctuation">,</span> a <span class="token operator">=</span> o<span class="token punctuation">.</span>$grid<span class="token punctuation">;</span>            o<span class="token punctuation">.</span>instance<span class="token punctuation">.</span>current <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> i<span class="token punctuation">.</span><span class="token function">children</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-thumbs-active"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token string">'[data-index="'</span> <span class="token operator">+</span> o<span class="token punctuation">.</span>instance<span class="token punctuation">.</span>current<span class="token punctuation">.</span>index <span class="token operator">+</span> <span class="token string">'"]'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-thumbs-active"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            n <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token string">"y"</span> <span class="token operator">===</span> o<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>axis <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n<span class="token punctuation">.</span>top <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> n<span class="token punctuation">.</span>top <span class="token operator">></span> i<span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> e<span class="token punctuation">.</span><span class="token function">outerHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> i<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                <span class="token literal-property property">scrollTop</span><span class="token operator">:</span> i<span class="token punctuation">.</span><span class="token function">scrollTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> n<span class="token punctuation">.</span>top            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">"x"</span> <span class="token operator">===</span> o<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>axis <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n<span class="token punctuation">.</span>left <span class="token operator">&lt;</span> a<span class="token punctuation">.</span><span class="token function">scrollLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> n<span class="token punctuation">.</span>left <span class="token operator">></span> a<span class="token punctuation">.</span><span class="token function">scrollLeft</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> e<span class="token punctuation">.</span><span class="token function">outerWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> i<span class="token punctuation">.</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>                <span class="token literal-property property">scrollLeft</span><span class="token operator">:</span> n<span class="token punctuation">.</span>left            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function-variable function">update</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> t <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>            t<span class="token punctuation">.</span>instance<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>container<span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-show-thumbs"</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>isVisible<span class="token punctuation">)</span><span class="token punctuation">,</span>            t<span class="token punctuation">.</span>isVisible <span class="token operator">?</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>$grid <span class="token operator">||</span> t<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            t<span class="token punctuation">.</span>instance<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"onThumbsShow"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            t<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> t<span class="token punctuation">.</span>$grid <span class="token operator">&amp;&amp;</span> t<span class="token punctuation">.</span>instance<span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"onThumbsHide"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            t<span class="token punctuation">.</span>instance<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function-variable function">hide</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>isVisible <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function-variable function">show</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>isVisible <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token function-variable function">toggle</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>isVisible <span class="token operator">=</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>isVisible<span class="token punctuation">,</span>            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">e</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token string-property property">"onInit.fb"</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> n<span class="token punctuation">;</span>            e <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>e<span class="token punctuation">.</span>Thumbs <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">o</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span>            n<span class="token punctuation">.</span>isActive <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token number">0</span> <span class="token operator">===</span> n<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>autoStart <span class="token operator">&amp;&amp;</span> n<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token string-property property">"beforeShow.fb"</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">,</span> o</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> i <span class="token operator">=</span> e <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>Thumbs<span class="token punctuation">;</span>            i <span class="token operator">&amp;&amp;</span> i<span class="token punctuation">.</span>isVisible <span class="token operator">&amp;&amp;</span> i<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span>o <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token number">250</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token string-property property">"afterKeydown.fb"</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">,</span> o<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> a <span class="token operator">=</span> e <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>Thumbs<span class="token punctuation">;</span>            a <span class="token operator">&amp;&amp;</span> a<span class="token punctuation">.</span>isActive <span class="token operator">&amp;&amp;</span> <span class="token number">71</span> <span class="token operator">===</span> i <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            a<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token string-property property">"beforeClose.fb"</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> n <span class="token operator">=</span> e <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>Thumbs<span class="token punctuation">;</span>            n <span class="token operator">&amp;&amp;</span> n<span class="token punctuation">.</span>isVisible <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token number">1</span> <span class="token operator">!==</span> n<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>hideOnClose <span class="token operator">&amp;&amp;</span> n<span class="token punctuation">.</span>$grid<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span>document<span class="token punctuation">,</span> jQuery<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token string">"use strict"</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">n</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token string-property property">"&amp;"</span><span class="token operator">:</span> <span class="token string">"&amp;amp;"</span><span class="token punctuation">,</span>            <span class="token string-property property">"&lt;"</span><span class="token operator">:</span> <span class="token string">"&amp;lt;"</span><span class="token punctuation">,</span>            <span class="token string-property property">">"</span><span class="token operator">:</span> <span class="token string">"&amp;gt;"</span><span class="token punctuation">,</span>            <span class="token string-property property">'"'</span><span class="token operator">:</span> <span class="token string">"&amp;quot;"</span><span class="token punctuation">,</span>            <span class="token string-property property">"'"</span><span class="token operator">:</span> <span class="token string">"&amp;#39;"</span><span class="token punctuation">,</span>            <span class="token string-property property">"/"</span><span class="token operator">:</span> <span class="token string">"&amp;#x2F;"</span><span class="token punctuation">,</span>            <span class="token string-property property">"`"</span><span class="token operator">:</span> <span class="token string">"&amp;#x60;"</span><span class="token punctuation">,</span>            <span class="token string-property property">"="</span><span class="token operator">:</span> <span class="token string">"&amp;#x3D;"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">String</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[&amp;&lt;>"'`=\/]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> e<span class="token punctuation">[</span>t<span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    e<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span>defaults<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">btnTpl</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">share</span><span class="token operator">:</span> <span class="token string">'&lt;button data-fancybox-share class="fancybox-button fancybox-button--share" title="&#123;&#123;SHARE&#125;&#125;">&lt;svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">&lt;path d="M2.55 19c1.4-8.4 9.1-9.8 11.9-9.8V5l7 7-7 6.3v-3.5c-2.8 0-10.5 2.1-11.9 4.2z"/>&lt;/svg>&lt;/button>'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token literal-property property">share</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token function-variable function">url</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token operator">!</span>t<span class="token punctuation">.</span>currentHash <span class="token operator">&amp;&amp;</span> <span class="token string">"inline"</span> <span class="token operator">!==</span> e<span class="token punctuation">.</span>type <span class="token operator">&amp;&amp;</span> <span class="token string">"html"</span> <span class="token operator">!==</span> e<span class="token punctuation">.</span>type <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>origSrc <span class="token operator">||</span> e<span class="token punctuation">.</span>src<span class="token punctuation">)</span> <span class="token operator">||</span> window<span class="token punctuation">.</span>location            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token literal-property property">tpl</span><span class="token operator">:</span> <span class="token string">'&lt;div class="fancybox-share">&lt;h1>&#123;&#123;SHARE&#125;&#125;&lt;/h1>&lt;p>&lt;a class="fancybox-share__button fancybox-share__button--fb" href="https://www.facebook.com/sharer/sharer.php?u=&#123;&#123;url&#125;&#125;">&lt;svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">&lt;path d="m287 456v-299c0-21 6-35 35-35h38v-63c-7-1-29-3-55-3-54 0-91 33-91 94v306m143-254h-205v72h196" />&lt;/svg>&lt;span>Facebook&lt;/span>&lt;/a>&lt;a class="fancybox-share__button fancybox-share__button--tw" href="https://twitter.com/intent/tweet?url=&#123;&#123;url&#125;&#125;&amp;text=&#123;&#123;descr&#125;&#125;">&lt;svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">&lt;path d="m456 133c-14 7-31 11-47 13 17-10 30-27 37-46-15 10-34 16-52 20-61-62-157-7-141 75-68-3-129-35-169-85-22 37-11 86 26 109-13 0-26-4-37-9 0 39 28 72 65 80-12 3-25 4-37 2 10 33 41 57 77 57-42 30-77 38-122 34 170 111 378-32 359-208 16-11 30-25 41-42z" />&lt;/svg>&lt;span>Twitter&lt;/span>&lt;/a>&lt;a class="fancybox-share__button fancybox-share__button--pt" href="https://www.pinterest.com/pin/create/button/?url=&#123;&#123;url&#125;&#125;&amp;description=&#123;&#123;descr&#125;&#125;&amp;media=&#123;&#123;media&#125;&#125;">&lt;svg viewBox="0 0 512 512" xmlns="http://www.w3.org/2000/svg">&lt;path d="m265 56c-109 0-164 78-164 144 0 39 15 74 47 87 5 2 10 0 12-5l4-19c2-6 1-8-3-13-9-11-15-25-15-45 0-58 43-110 113-110 62 0 96 38 96 88 0 67-30 122-73 122-24 0-42-19-36-44 6-29 20-60 20-81 0-19-10-35-31-35-25 0-44 26-44 60 0 21 7 36 7 36l-30 125c-8 37-1 83 0 87 0 3 4 4 5 2 2-3 32-39 42-75l16-64c8 16 31 29 56 29 74 0 124-67 124-157 0-69-58-132-146-132z" fill="#fff"/>&lt;/svg>&lt;span>Pinterest&lt;/span>&lt;/a>&lt;/p>&lt;p>&lt;input class="fancybox-share__input" type="text" value="&#123;&#123;url_raw&#125;&#125;" onclick="select()" />&lt;/p>&lt;/div>'</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">e</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span> <span class="token string">"[data-fancybox-share]"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> t<span class="token punctuation">,</span> o<span class="token punctuation">,</span> i <span class="token operator">=</span> e<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> a <span class="token operator">=</span> i<span class="token punctuation">.</span>current <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        a <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token string">"function"</span> <span class="token operator">===</span> e<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>share<span class="token punctuation">.</span>url<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>t <span class="token operator">=</span> a<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>share<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token punctuation">[</span>i<span class="token punctuation">,</span> a<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        o <span class="token operator">=</span> a<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>share<span class="token punctuation">.</span>tpl<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\&#123;\&#123;media\&#125;\&#125;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">"image"</span> <span class="token operator">===</span> a<span class="token punctuation">.</span>type <span class="token operator">?</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>src<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\&#123;\&#123;url\&#125;\&#125;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\&#123;\&#123;url_raw\&#125;\&#125;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token function">n</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\&#123;\&#123;descr\&#125;\&#125;</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> i<span class="token punctuation">.</span>$caption <span class="token operator">?</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span>$caption<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        e<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token literal-property property">src</span><span class="token operator">:</span> i<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> o<span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"html"</span><span class="token punctuation">,</span>            <span class="token literal-property property">opts</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">touch</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>                <span class="token literal-property property">animationEffect</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span><span class="token punctuation">,</span>                <span class="token function-variable function">afterLoad</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    i<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>container<span class="token punctuation">.</span><span class="token function">one</span><span class="token punctuation">(</span><span class="token string">"beforeClose.fb"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        t<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                    e<span class="token punctuation">.</span>$content<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token string">".fancybox-share__button"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">return</span> window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>href<span class="token punctuation">,</span> <span class="token string">"Share"</span><span class="token punctuation">,</span> <span class="token string">"width=550, height=450"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                        <span class="token operator">!</span><span class="token number">1</span>                    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                <span class="token literal-property property">mobile</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>                    <span class="token literal-property property">autoFocus</span><span class="token operator">:</span> <span class="token operator">!</span><span class="token number">1</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span>document<span class="token punctuation">,</span> jQuery<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token string">"use strict"</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">o</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> e <span class="token operator">=</span> t<span class="token punctuation">.</span>location<span class="token punctuation">.</span>hash<span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>          <span class="token punctuation">,</span> n <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span>          <span class="token punctuation">,</span> o <span class="token operator">=</span> n<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\+?\d+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>n<span class="token punctuation">[</span>n<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token number">1</span>          <span class="token punctuation">,</span> i <span class="token operator">=</span> n<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">"-"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">hash</span><span class="token operator">:</span> e<span class="token punctuation">,</span>            <span class="token literal-property property">index</span><span class="token operator">:</span> o <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> o<span class="token punctuation">,</span>            <span class="token literal-property property">gallery</span><span class="token operator">:</span> i        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">i</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token string">""</span> <span class="token operator">!==</span> t<span class="token punctuation">.</span>gallery <span class="token operator">&amp;&amp;</span> <span class="token function">n</span><span class="token punctuation">(</span><span class="token string">"[data-fancybox='"</span> <span class="token operator">+</span> n<span class="token punctuation">.</span><span class="token function">escapeSelector</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>gallery<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"']"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>index <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trigger</span><span class="token punctuation">(</span><span class="token string">"click.fb-start"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> e<span class="token punctuation">,</span> n<span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span>t <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>e <span class="token operator">=</span> t<span class="token punctuation">.</span>current <span class="token operator">?</span> t<span class="token punctuation">.</span>current<span class="token punctuation">.</span>opts <span class="token operator">:</span> t<span class="token punctuation">.</span>opts<span class="token punctuation">,</span>        <span class="token string">""</span> <span class="token operator">!==</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> e<span class="token punctuation">.</span>hash <span class="token operator">||</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>$orig <span class="token operator">?</span> e<span class="token punctuation">.</span>$orig<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">"fancybox"</span><span class="token punctuation">)</span> <span class="token operator">||</span> e<span class="token punctuation">.</span>$orig<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">"fancybox-trigger"</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> n<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    n<span class="token punctuation">.</span>escapeSelector <span class="token operator">||</span> <span class="token punctuation">(</span>n<span class="token punctuation">.</span><span class="token function-variable function">escapeSelector</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>t <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> e <span class="token operator">?</span> <span class="token string">"\0"</span> <span class="token operator">===</span> t <span class="token operator">?</span> <span class="token string">"�"</span> <span class="token operator">:</span> t<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\\"</span> <span class="token operator">+</span> t<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">:</span> <span class="token string">"\\"</span> <span class="token operator">+</span> t        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token function">n</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token operator">!</span><span class="token number">1</span> <span class="token operator">!==</span> n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>hash <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">n</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            <span class="token string-property property">"onInit.fb"</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> n<span class="token punctuation">,</span> i<span class="token punctuation">;</span>                <span class="token operator">!</span><span class="token number">1</span> <span class="token operator">!==</span> e<span class="token punctuation">.</span>group<span class="token punctuation">[</span>e<span class="token punctuation">.</span>currIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>opts<span class="token punctuation">.</span>hash <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> <span class="token function">o</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token function">a</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> n<span class="token punctuation">.</span>gallery <span class="token operator">&amp;&amp;</span> i <span class="token operator">==</span> n<span class="token punctuation">.</span>gallery <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>currIndex <span class="token operator">=</span> n<span class="token punctuation">.</span>index <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token string-property property">"beforeShow.fb"</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">,</span> o<span class="token punctuation">,</span> i<span class="token punctuation">,</span> s</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> r<span class="token punctuation">;</span>                i <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token number">1</span> <span class="token operator">!==</span> i<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>hash <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>r <span class="token operator">=</span> <span class="token function">a</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span>currentHash <span class="token operator">=</span> r <span class="token operator">+</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span>group<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">"-"</span> <span class="token operator">+</span> <span class="token punctuation">(</span>i<span class="token punctuation">.</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span>location<span class="token punctuation">.</span>hash <span class="token operator">!==</span> <span class="token string">"#"</span> <span class="token operator">+</span> o<span class="token punctuation">.</span>currentHash <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>s <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>o<span class="token punctuation">.</span>origHash <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span>origHash <span class="token operator">=</span> t<span class="token punctuation">.</span>location<span class="token punctuation">.</span>hash<span class="token punctuation">)</span><span class="token punctuation">,</span>                o<span class="token punctuation">.</span>hashTimer <span class="token operator">&amp;&amp;</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>hashTimer<span class="token punctuation">)</span><span class="token punctuation">,</span>                o<span class="token punctuation">.</span>hashTimer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token string">"replaceState"</span><span class="token keyword">in</span> t<span class="token punctuation">.</span>history <span class="token operator">?</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span>history<span class="token punctuation">[</span>s <span class="token operator">?</span> <span class="token string">"pushState"</span> <span class="token operator">:</span> <span class="token string">"replaceState"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>title<span class="token punctuation">,</span> t<span class="token punctuation">.</span>location<span class="token punctuation">.</span>pathname <span class="token operator">+</span> t<span class="token punctuation">.</span>location<span class="token punctuation">.</span>search <span class="token operator">+</span> <span class="token string">"#"</span> <span class="token operator">+</span> o<span class="token punctuation">.</span>currentHash<span class="token punctuation">)</span><span class="token punctuation">,</span>                    s <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span>hasCreatedHistory <span class="token operator">=</span> <span class="token operator">!</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> t<span class="token punctuation">.</span>location<span class="token punctuation">.</span>hash <span class="token operator">=</span> o<span class="token punctuation">.</span>currentHash<span class="token punctuation">,</span>                    o<span class="token punctuation">.</span>hashTimer <span class="token operator">=</span> <span class="token keyword">null</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token string-property property">"beforeClose.fb"</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">,</span> o<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                i <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token number">1</span> <span class="token operator">!==</span> i<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>hash <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">clearTimeout</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span>hashTimer<span class="token punctuation">)</span><span class="token punctuation">,</span>                o<span class="token punctuation">.</span>currentHash <span class="token operator">&amp;&amp;</span> o<span class="token punctuation">.</span>hasCreatedHistory <span class="token operator">?</span> t<span class="token punctuation">.</span>history<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> o<span class="token punctuation">.</span>currentHash <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token string">"replaceState"</span><span class="token keyword">in</span> t<span class="token punctuation">.</span>history <span class="token operator">?</span> t<span class="token punctuation">.</span>history<span class="token punctuation">.</span><span class="token function">replaceState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>title<span class="token punctuation">,</span> t<span class="token punctuation">.</span>location<span class="token punctuation">.</span>pathname <span class="token operator">+</span> t<span class="token punctuation">.</span>location<span class="token punctuation">.</span>search <span class="token operator">+</span> <span class="token punctuation">(</span>o<span class="token punctuation">.</span>origHash <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> t<span class="token punctuation">.</span>location<span class="token punctuation">.</span>hash <span class="token operator">=</span> o<span class="token punctuation">.</span>origHash<span class="token punctuation">)</span><span class="token punctuation">,</span>                o<span class="token punctuation">.</span>currentHash <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token function">n</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"hashchange.fb"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">var</span> t <span class="token operator">=</span> <span class="token function">o</span><span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token punctuation">,</span> e <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>            n<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token function">n</span><span class="token punctuation">(</span><span class="token string">".fancybox-container"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> o</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token function">n</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token string">"FancyBox"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&amp;&amp;</span> i<span class="token punctuation">.</span>currentHash<span class="token punctuation">)</span>                    <span class="token keyword">return</span> e <span class="token operator">=</span> i<span class="token punctuation">,</span>                    <span class="token operator">!</span><span class="token number">1</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            e <span class="token operator">?</span> e<span class="token punctuation">.</span>currentHash <span class="token operator">===</span> t<span class="token punctuation">.</span>gallery <span class="token operator">+</span> <span class="token string">"-"</span> <span class="token operator">+</span> t<span class="token punctuation">.</span>index <span class="token operator">||</span> <span class="token number">1</span> <span class="token operator">===</span> t<span class="token punctuation">.</span>index <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>currentHash <span class="token operator">==</span> t<span class="token punctuation">.</span>gallery <span class="token operator">||</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>currentHash <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>            e<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token string">""</span> <span class="token operator">!==</span> t<span class="token punctuation">.</span>gallery <span class="token operator">&amp;&amp;</span> <span class="token function">i</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            n<span class="token punctuation">.</span>fancybox<span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">i</span><span class="token punctuation">(</span><span class="token function">o</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> document<span class="token punctuation">,</span> jQuery<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token string">"use strict"</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> n <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">e</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token string-property property">"onInit.fb"</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t<span class="token punctuation">,</span> e<span class="token punctuation">,</span> o</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            e<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>stage<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"mousewheel DOMMouseScroll wheel MozMousePixelScroll"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">t</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">var</span> o <span class="token operator">=</span> e<span class="token punctuation">.</span>current                  <span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                e<span class="token punctuation">.</span>group<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token number">1</span> <span class="token operator">===</span> o<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>wheel <span class="token operator">||</span> <span class="token string">"auto"</span> <span class="token operator">===</span> o<span class="token punctuation">.</span>opts<span class="token punctuation">.</span>wheel <span class="token operator">&amp;&amp;</span> <span class="token string">"image"</span> <span class="token operator">!==</span> o<span class="token punctuation">.</span>type <span class="token operator">||</span> <span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                t<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                o<span class="token punctuation">.</span>$slide<span class="token punctuation">.</span><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token string">"fancybox-animated"</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>t <span class="token operator">=</span> t<span class="token punctuation">.</span>originalEvent <span class="token operator">||</span> t<span class="token punctuation">,</span>                i <span class="token operator">-</span> n <span class="token operator">&lt;</span> <span class="token number">250</span> <span class="token operator">||</span> <span class="token punctuation">(</span>n <span class="token operator">=</span> i<span class="token punctuation">,</span>                e<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">-</span>t<span class="token punctuation">.</span>deltaY <span class="token operator">||</span> <span class="token operator">-</span>t<span class="token punctuation">.</span>deltaX <span class="token operator">||</span> t<span class="token punctuation">.</span>wheelDelta <span class="token operator">||</span> <span class="token operator">-</span>t<span class="token punctuation">.</span>detail<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">"next"</span> <span class="token operator">:</span> <span class="token string">"previous"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span>document<span class="token punctuation">,</span> jQuery<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>jquery.fancybox.min.css</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">body.compensate-for-scrollbar</span> <span class="token punctuation">&#123;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-active</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> auto<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-is-hidden</span> <span class="token punctuation">&#123;</span>    <span class="token property">left</span><span class="token punctuation">:</span> -9999px<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> -9999px<span class="token punctuation">;</span>    <span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-container</span> <span class="token punctuation">&#123;</span>    <span class="token property">-webkit-backface-visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>    <span class="token property">-webkit-tap-highlight-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">-ms-touch-action</span><span class="token punctuation">:</span> manipulation<span class="token punctuation">;</span>    <span class="token property">touch-action</span><span class="token punctuation">:</span> manipulation<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 99992<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-container *</span> <span class="token punctuation">&#123;</span>    <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-bg,.fancybox-inner,.fancybox-outer,.fancybox-stage</span> <span class="token punctuation">&#123;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-outer</span> <span class="token punctuation">&#123;</span>    <span class="token property">-webkit-overflow-scrolling</span><span class="token punctuation">:</span> touch<span class="token punctuation">;</span>    <span class="token property">overflow-y</span><span class="token punctuation">:</span> auto<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-bg</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #1e1e1e<span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">transition-duration</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>    <span class="token property">transition-property</span><span class="token punctuation">:</span> opacity<span class="token punctuation">;</span>    <span class="token property">transition-timing-function</span><span class="token punctuation">:</span> <span class="token function">cubic-bezier</span><span class="token punctuation">(</span>.47<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.74<span class="token punctuation">,</span>.71<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">.fancybox-is-open .fancybox-bg</span> <span class="token punctuation">&#123;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> .9<span class="token punctuation">;</span>    <span class="token property">transition-timing-function</span><span class="token punctuation">:</span> <span class="token function">cubic-bezier</span><span class="token punctuation">(</span>.22<span class="token punctuation">,</span>.61<span class="token punctuation">,</span>.36<span class="token punctuation">,</span>1<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">.fancybox-caption,.fancybox-infobar,.fancybox-navigation .fancybox-button,.fancybox-toolbar</span> <span class="token punctuation">&#123;</span>    <span class="token property">direction</span><span class="token punctuation">:</span> ltr<span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> opacity .25s ease<span class="token punctuation">,</span>visibility 0s ease .25s<span class="token punctuation">;</span>    <span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 99997<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-show-caption .fancybox-caption,.fancybox-show-infobar .fancybox-infobar,.fancybox-show-nav .fancybox-navigation .fancybox-button,.fancybox-show-toolbar .fancybox-toolbar</span> <span class="token punctuation">&#123;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> opacity .25s ease 0s<span class="token punctuation">,</span>visibility 0s ease 0s<span class="token punctuation">;</span>    <span class="token property">visibility</span><span class="token punctuation">:</span> visible<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-infobar</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 13px<span class="token punctuation">;</span>    <span class="token property">-webkit-font-smoothing</span><span class="token punctuation">:</span> subpixel-antialiased<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 44px<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 44px<span class="token punctuation">;</span>    <span class="token property">min-width</span><span class="token punctuation">:</span> 44px<span class="token punctuation">;</span>    <span class="token property">mix-blend-mode</span><span class="token punctuation">:</span> difference<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0 10px<span class="token punctuation">;</span>    <span class="token property">pointer-events</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">-webkit-touch-callout</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">-webkit-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">-moz-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">-ms-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-toolbar</span> <span class="token punctuation">&#123;</span>    <span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-stage</span> <span class="token punctuation">&#123;</span>    <span class="token property">direction</span><span class="token punctuation">:</span> ltr<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> visible<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 99994<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-is-open .fancybox-stage</span> <span class="token punctuation">&#123;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-slide</span> <span class="token punctuation">&#123;</span>    <span class="token property">-webkit-backface-visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>    <span class="token property">-webkit-overflow-scrolling</span><span class="token punctuation">:</span> touch<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 44px<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">transition-property</span><span class="token punctuation">:</span> transform<span class="token punctuation">,</span>opacity<span class="token punctuation">;</span>    <span class="token property">white-space</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 99994<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-slide:before</span> <span class="token punctuation">&#123;</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 0<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-is-sliding .fancybox-slide,.fancybox-slide--current,.fancybox-slide--next,.fancybox-slide--previous</span> <span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-slide--image</span> <span class="token punctuation">&#123;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 44px 0<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-slide--image:before</span> <span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-slide--html</span> <span class="token punctuation">&#123;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 6px<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-content</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">max-width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>    <span class="token property">-webkit-overflow-scrolling</span><span class="token punctuation">:</span> touch<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 44px<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>    <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-slide--image .fancybox-content</span> <span class="token punctuation">&#123;</span>    <span class="token property">animation-timing-function</span><span class="token punctuation">:</span> <span class="token function">cubic-bezier</span><span class="token punctuation">(</span>.5<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.14<span class="token punctuation">,</span>1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">-webkit-backface-visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>    <span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>    <span class="token property">background-size</span><span class="token punctuation">:</span> 100% 100%<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">max-width</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> visible<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">transform-origin</span><span class="token punctuation">:</span> top left<span class="token punctuation">;</span>    <span class="token property">transition-property</span><span class="token punctuation">:</span> transform<span class="token punctuation">,</span>opacity<span class="token punctuation">;</span>    <span class="token property">-webkit-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">-moz-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">-ms-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 99995<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-can-zoomOut .fancybox-content</span> <span class="token punctuation">&#123;</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> zoom-out<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-can-zoomIn .fancybox-content</span> <span class="token punctuation">&#123;</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> zoom-in<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-can-pan .fancybox-content,.fancybox-can-swipe .fancybox-content</span> <span class="token punctuation">&#123;</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> grab<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-is-grabbing .fancybox-content</span> <span class="token punctuation">&#123;</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> grabbing<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-container [data-selectable=true]</span> <span class="token punctuation">&#123;</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> text<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-image,.fancybox-spaceball</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">max-height</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">max-width</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">-webkit-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">-moz-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">-ms-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-spaceball</span> <span class="token punctuation">&#123;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 1<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-slide--iframe .fancybox-content,.fancybox-slide--map .fancybox-content,.fancybox-slide--pdf .fancybox-content,.fancybox-slide--video .fancybox-content</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> visible<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-slide--video .fancybox-content</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #000<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-slide--map .fancybox-content</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #e5e3df<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-slide--iframe .fancybox-content</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #fff<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-iframe,.fancybox-video</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-iframe</span> <span class="token punctuation">&#123;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-error</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> default<span class="token punctuation">;</span>    <span class="token property">max-width</span><span class="token punctuation">:</span> 400px<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-error p</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #444<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-button</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>30<span class="token punctuation">,</span>30<span class="token punctuation">,</span>30<span class="token punctuation">,</span>.6<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 44px<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> color .2s<span class="token punctuation">;</span>    <span class="token property">vertical-align</span><span class="token punctuation">:</span> top<span class="token punctuation">;</span>    <span class="token property">visibility</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 44px<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-button,.fancybox-button:link,.fancybox-button:visited</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-button:hover</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-button:focus</span> <span class="token punctuation">&#123;</span>    <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-button.fancybox-focus</span> <span class="token punctuation">&#123;</span>    <span class="token property">outline</span><span class="token punctuation">:</span> 1px dotted<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-button[disabled],.fancybox-button[disabled]:hover</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #888<span class="token punctuation">;</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> default<span class="token punctuation">;</span>    <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-button div</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-button svg</span> <span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> visible<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-button svg path</span> <span class="token punctuation">&#123;</span>    <span class="token property">fill</span><span class="token punctuation">:</span> currentColor<span class="token punctuation">;</span>    <span class="token property">stroke-width</span><span class="token punctuation">:</span> 0<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-button--fsenter svg:nth-child(2),.fancybox-button--fsexit svg:first-child,.fancybox-button--pause svg:first-child,.fancybox-button--play svg:nth-child(2)</span> <span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-progress</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #ff5268<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 2px<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scaleX</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">transform-origin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">transition-property</span><span class="token punctuation">:</span> transform<span class="token punctuation">;</span>    <span class="token property">transition-timing-function</span><span class="token punctuation">:</span> linear<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 99998<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-close-small</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">;</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> .8<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 8px<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> -12px<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> -44px<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 401<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-close-small:hover</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-slide--html .fancybox-close-small</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> currentColor<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-slide--image.fancybox-is-scaling .fancybox-content</span> <span class="token punctuation">&#123;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-is-scaling .fancybox-close-small,.fancybox-is-zoomable.fancybox-can-pan .fancybox-close-small</span> <span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-navigation .fancybox-button</span> <span class="token punctuation">&#123;</span>    <span class="token property">background-clip</span><span class="token punctuation">:</span> content-box<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>50% - 50px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 70px<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-navigation .fancybox-button div</span> <span class="token punctuation">&#123;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 7px<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-navigation .fancybox-button--arrow_left</span> <span class="token punctuation">&#123;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token function">env</span><span class="token punctuation">(</span>safe-area-inset-left<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 31px 26px 31px 6px<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-navigation .fancybox-button--arrow_right</span> <span class="token punctuation">&#123;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 31px 6px 31px 26px<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> <span class="token function">env</span><span class="token punctuation">(</span>safe-area-inset-right<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">.fancybox-caption</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>0deg<span class="token punctuation">,</span><span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.85<span class="token punctuation">)</span> 0<span class="token punctuation">,</span><span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.3<span class="token punctuation">)</span> 50%<span class="token punctuation">,</span><span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.15<span class="token punctuation">)</span> 65%<span class="token punctuation">,</span><span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.075<span class="token punctuation">)</span> 75.5%<span class="token punctuation">,</span><span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.037<span class="token punctuation">)</span> 82.85%<span class="token punctuation">,</span><span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.019<span class="token punctuation">)</span> 88%<span class="token punctuation">,</span>transparent<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #eee<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 400<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 1.5<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 75px 44px 25px<span class="token punctuation">;</span>    <span class="token property">pointer-events</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 99996<span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@supports</span> <span class="token punctuation">(</span><span class="token property">padding</span><span class="token punctuation">:</span> <span class="token function">max</span><span class="token punctuation">(</span>0px<span class="token punctuation">)</span><span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>    <span class="token selector">.fancybox-caption</span> <span class="token punctuation">&#123;</span>        <span class="token property">padding</span><span class="token punctuation">:</span>75px <span class="token function">max</span><span class="token punctuation">(</span>44px<span class="token punctuation">,</span><span class="token function">env</span><span class="token punctuation">(</span>safe-area-inset-right<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">max</span><span class="token punctuation">(</span>25px<span class="token punctuation">,</span><span class="token function">env</span><span class="token punctuation">(</span>safe-area-inset-bottom<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token function">max</span><span class="token punctuation">(</span>44px<span class="token punctuation">,</span><span class="token function">env</span><span class="token punctuation">(</span>safe-area-inset-left<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">.fancybox-caption--separate</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> -50px<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-caption__body</span> <span class="token punctuation">&#123;</span>    <span class="token property">max-height</span><span class="token punctuation">:</span> 50vh<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>    <span class="token property">pointer-events</span><span class="token punctuation">:</span> all<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-caption a,.fancybox-caption a:link,.fancybox-caption a:visited</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">;</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-caption a:hover</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-loading</span> <span class="token punctuation">&#123;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> a 1s linear infinite<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 4px solid #888<span class="token punctuation">;</span>    <span class="token property">border-bottom-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> -25px 0 0 -25px<span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> .7<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 99999<span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@keyframes</span> a</span> <span class="token punctuation">&#123;</span>    <span class="token selector">to</span> <span class="token punctuation">&#123;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>1turn<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">.fancybox-animated</span> <span class="token punctuation">&#123;</span>    <span class="token property">transition-timing-function</span><span class="token punctuation">:</span> <span class="token function">cubic-bezier</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.25<span class="token punctuation">,</span>1<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">.fancybox-fx-slide.fancybox-slide--previous</span> <span class="token punctuation">&#123;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate3d</span><span class="token punctuation">(</span>-100%<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">.fancybox-fx-slide.fancybox-slide--next</span> <span class="token punctuation">&#123;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate3d</span><span class="token punctuation">(</span>100%<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">.fancybox-fx-slide.fancybox-slide--current</span> <span class="token punctuation">&#123;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">.fancybox-fx-fade.fancybox-slide--next,.fancybox-fx-fade.fancybox-slide--previous</span> <span class="token punctuation">&#123;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">transition-timing-function</span><span class="token punctuation">:</span> <span class="token function">cubic-bezier</span><span class="token punctuation">(</span>.19<span class="token punctuation">,</span>1<span class="token punctuation">,</span>.22<span class="token punctuation">,</span>1<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">.fancybox-fx-fade.fancybox-slide--current</span> <span class="token punctuation">&#123;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-fx-zoom-in-out.fancybox-slide--previous</span> <span class="token punctuation">&#123;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale3d</span><span class="token punctuation">(</span>1.5<span class="token punctuation">,</span>1.5<span class="token punctuation">,</span>1.5<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">.fancybox-fx-zoom-in-out.fancybox-slide--next</span> <span class="token punctuation">&#123;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale3d</span><span class="token punctuation">(</span>.5<span class="token punctuation">,</span>.5<span class="token punctuation">,</span>.5<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">.fancybox-fx-zoom-in-out.fancybox-slide--current</span> <span class="token punctuation">&#123;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scaleX</span><span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">.fancybox-fx-rotate.fancybox-slide--previous</span> <span class="token punctuation">&#123;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>-1turn<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">.fancybox-fx-rotate.fancybox-slide--next</span> <span class="token punctuation">&#123;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>1turn<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">.fancybox-fx-rotate.fancybox-slide--current</span> <span class="token punctuation">&#123;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>0deg<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">.fancybox-fx-circular.fancybox-slide--previous</span> <span class="token punctuation">&#123;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale3d</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">)</span> <span class="token function">translate3d</span><span class="token punctuation">(</span>-100%<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">.fancybox-fx-circular.fancybox-slide--next</span> <span class="token punctuation">&#123;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale3d</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">)</span> <span class="token function">translate3d</span><span class="token punctuation">(</span>100%<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">.fancybox-fx-circular.fancybox-slide--current</span> <span class="token punctuation">&#123;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scaleX</span><span class="token punctuation">(</span>1<span class="token punctuation">)</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">.fancybox-fx-tube.fancybox-slide--previous</span> <span class="token punctuation">&#123;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate3d</span><span class="token punctuation">(</span>-100%<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">)</span> <span class="token function">scale</span><span class="token punctuation">(</span>.1<span class="token punctuation">)</span> <span class="token function">skew</span><span class="token punctuation">(</span>-10deg<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">.fancybox-fx-tube.fancybox-slide--next</span> <span class="token punctuation">&#123;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate3d</span><span class="token punctuation">(</span>100%<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">)</span> <span class="token function">scale</span><span class="token punctuation">(</span>.1<span class="token punctuation">)</span> <span class="token function">skew</span><span class="token punctuation">(</span>10deg<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">.fancybox-fx-tube.fancybox-slide--current</span> <span class="token punctuation">&#123;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateZ</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span> <span class="token function">scale</span><span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">max-height</span><span class="token punctuation">:</span> 576px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>    <span class="token selector">.fancybox-slide</span> <span class="token punctuation">&#123;</span>        <span class="token property">padding-left</span><span class="token punctuation">:</span>6px<span class="token punctuation">;</span>        <span class="token property">padding-right</span><span class="token punctuation">:</span> 6px    <span class="token punctuation">&#125;</span>    <span class="token selector">.fancybox-slide--image</span> <span class="token punctuation">&#123;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 6px 0    <span class="token punctuation">&#125;</span>    <span class="token selector">.fancybox-close-small</span> <span class="token punctuation">&#123;</span>        <span class="token property">right</span><span class="token punctuation">:</span> -6px    <span class="token punctuation">&#125;</span>    <span class="token selector">.fancybox-slide--image .fancybox-close-small</span> <span class="token punctuation">&#123;</span>        <span class="token property">background</span><span class="token punctuation">:</span> #4e4e4e<span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> #f2f4f6<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 36px<span class="token punctuation">;</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>        <span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 36px    <span class="token punctuation">&#125;</span>    <span class="token selector">.fancybox-caption</span> <span class="token punctuation">&#123;</span>        <span class="token property">padding-left</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>        <span class="token property">padding-right</span><span class="token punctuation">:</span> 12px    <span class="token punctuation">&#125;</span>    <span class="token atrule"><span class="token rule">@supports</span> <span class="token punctuation">(</span><span class="token property">padding</span><span class="token punctuation">:</span> <span class="token function">max</span><span class="token punctuation">(</span>0px<span class="token punctuation">)</span><span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>        <span class="token selector">.fancybox-caption</span> <span class="token punctuation">&#123;</span>            <span class="token property">padding-left</span><span class="token punctuation">:</span><span class="token function">max</span><span class="token punctuation">(</span>12px<span class="token punctuation">,</span><span class="token function">env</span><span class="token punctuation">(</span>safe-area-inset-left<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">padding-right</span><span class="token punctuation">:</span> <span class="token function">max</span><span class="token punctuation">(</span>12px<span class="token punctuation">,</span><span class="token function">env</span><span class="token punctuation">(</span>safe-area-inset-right<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">.fancybox-share</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #f4f4f4<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>    <span class="token property">max-width</span><span class="token punctuation">:</span> 90%<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-share h1</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #222<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 35px<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 700<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0 0 20px<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-share p</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-share__button</span> <span class="token punctuation">&#123;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 700<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0 5px 10px<span class="token punctuation">;</span>    <span class="token property">min-width</span><span class="token punctuation">:</span> 130px<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0 15px<span class="token punctuation">;</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all .2s<span class="token punctuation">;</span>    <span class="token property">-webkit-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">-moz-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">-ms-user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-share__button:link,.fancybox-share__button:visited</span> <span class="token punctuation">&#123;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-share__button:hover</span> <span class="token punctuation">&#123;</span>    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-share__button--fb</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #3b5998<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-share__button--fb:hover</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #344e86<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-share__button--pt</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #bd081d<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-share__button--pt:hover</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #aa0719<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-share__button--tw</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #1da1f2<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-share__button--tw:hover</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #0d95e8<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-share__button svg</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>    <span class="token property">margin-right</span><span class="token punctuation">:</span> 7px<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> -1px<span class="token punctuation">;</span>    <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 25px<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-share__button svg path</span> <span class="token punctuation">&#123;</span>    <span class="token property">fill</span><span class="token punctuation">:</span> #fff<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-share__input</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">border-bottom</span><span class="token punctuation">:</span> 1px solid #d7d7d7<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #5d5b5b<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 10px 0 0<span class="token punctuation">;</span>    <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 10px 15px<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-thumbs</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #ddd<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">-webkit-overflow-scrolling</span><span class="token punctuation">:</span> touch<span class="token punctuation">;</span>    <span class="token property">-ms-overflow-style</span><span class="token punctuation">:</span> -ms-autohiding-scrollbar<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 2px 2px 4px<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">-webkit-tap-highlight-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 212px<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 99995<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-thumbs-x</span> <span class="token punctuation">&#123;</span>    <span class="token property">overflow-x</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>    <span class="token property">overflow-y</span><span class="token punctuation">:</span> hidden<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-show-thumbs .fancybox-thumbs</span> <span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-show-thumbs .fancybox-inner</span> <span class="token punctuation">&#123;</span>    <span class="token property">right</span><span class="token punctuation">:</span> 212px<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-thumbs__list</span> <span class="token punctuation">&#123;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">overflow-x</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">overflow-y</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-thumbs-x .fancybox-thumbs__list</span> <span class="token punctuation">&#123;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-thumbs-y .fancybox-thumbs__list::-webkit-scrollbar</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 7px<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-thumbs-y .fancybox-thumbs__list::-webkit-scrollbar-track</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span> inset 0 0 6px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.3<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token selector">.fancybox-thumbs-y .fancybox-thumbs__list::-webkit-scrollbar-thumb</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> #2a2a2a<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-thumbs__list a</span> <span class="token punctuation">&#123;</span>    <span class="token property">-webkit-backface-visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">backface-visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">background-position</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>    <span class="token property">background-size</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 75px<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 2px<span class="token punctuation">;</span>    <span class="token property">max-height</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>100% - 8px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">max-width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>50% - 4px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">-webkit-tap-highlight-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-thumbs__list a:before</span> <span class="token punctuation">&#123;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 6px solid #ff5268<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> all .2s <span class="token function">cubic-bezier</span><span class="token punctuation">(</span>.25<span class="token punctuation">,</span>.46<span class="token punctuation">,</span>.45<span class="token punctuation">,</span>.94<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 99991<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-thumbs__list a:focus:before</span> <span class="token punctuation">&#123;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> .5<span class="token punctuation">&#125;</span><span class="token selector">.fancybox-thumbs__list a.fancybox-thumbs-active:before</span> <span class="token punctuation">&#123;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 576px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>    <span class="token selector">.fancybox-thumbs</span> <span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span>110px    <span class="token punctuation">&#125;</span>    <span class="token selector">.fancybox-show-thumbs .fancybox-inner</span> <span class="token punctuation">&#123;</span>        <span class="token property">right</span><span class="token punctuation">:</span> 110px    <span class="token punctuation">&#125;</span>    <span class="token selector">.fancybox-thumbs__list a</span> <span class="token punctuation">&#123;</span>        <span class="token property">max-width</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>100% - 10px<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="Todos"><a href="#Todos" class="headerlink" title="Todos"></a>Todos</h2><p><a href="https://liyangzone.com/article/2019-07-22-hexo-blog-add-gallery-tutorial/">hexo博客添加一级分类相册功能 | liyang’s blog (liyangzone.com)</a></p><p><a href="https://yafine.github.io/posts/20200221224129-3b98">修改matery原有主题相册 | 过客~励む (yafine.github.io)</a></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>通过新建相册，可以让自己的博文更加具有真实性，是十分值得拥有的，希望能帮到您。<br>最后，如果这篇教程能帮到您，请点击最后的 <strong>“赏”</strong> 字，不管多少都是对我的支持，谢谢！</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 相册 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自定义404页面</title>
      <link href="/posts/e7a5.html"/>
      <url>/posts/e7a5.html</url>
      
        <content type="html"><![CDATA[<h1 id="自定义404"><a href="#自定义404" class="headerlink" title="自定义404"></a>自定义404</h1><p>一个好的404页面能够友好地向用户解释页面未找到的原因，帮助用户继续浏览网站，从而提升用户体验。当用户访问到404页面时，如果页面设计得吸引人、有趣或富有创意，用户可能会停留更长时间，从而减少用户的流失。</p><p>虽然matery主题自带有404页面，但是不够好看，可玩性也不足。所以我决定修改404页面，大家可以选择自己DIY或者借鉴网络上大佬的作品。经过我的精挑细选，我选用的是Andrew Lawendy大佬的<a href="https://codepen.io/andrew-lawendy/pen/deOpMZ">作品</a></p><h2 id="演示效果"><a href="#演示效果" class="headerlink" title="演示效果"></a>演示效果</h2><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/404.gif" alt="404"></p><h2 id="修改步骤"><a href="#修改步骤" class="headerlink" title="修改步骤"></a>修改步骤</h2><ol><li><p>将原来source目录下的404.md文件删除，新建404.html</p><p>原404.md代码：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token front-matter yaml language-yaml">title: 404date: 2019-07-19 16:41:10type: "404"layout: "404"description: "你似乎来到了没有知识的荒原~~~"</span><span class="token punctuation">---</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>粘贴以下代码</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/html; charset=UTF-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Parallax 404 page<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>css/404.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/404.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>not-found<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>not-found parallax<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sky-bg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wave-7<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wave-6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index.html<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wave-island<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://res.cloudinary.com/andrewhani/image/upload/v1524501929/404/island.svg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Island<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wave-5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wave-lost wrp<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wave-4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wave-boat<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>boat<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://res.cloudinary.com/andrewhani/image/upload/v1524501894/404/boat.svg<span class="token punctuation">"</span></span>                <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Boat<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wave-3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wave-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wave-1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wave-message<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>You seem lost<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Click on the island to return<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意：<code>&lt;a href=&quot;index.html&quot; class=&quot;wave-island&quot;&gt;</code>，请将<code>href</code>设置为想要跳转的页面</p></blockquote></li><li><p><strong>将CSS代码添加到主题中：</strong></p><p>在matery&#x2F;source&#x2F;css下，新建404.css，粘贴以下代码(注意修改图片的路径)</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">body</span> <span class="token punctuation">&#123;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"Open Sans"</span><span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.not-found</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> -1vh -20vw<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 110vh<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.not-found [class*=wave]</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.not-found div</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.not-found div.wave-1</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>../404/wave-1.svg<span class="token punctuation">)</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.not-found div.wave-2</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>../404/wave-2.svg<span class="token punctuation">)</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.not-found div.wave-3</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>../404/wave-3.svg<span class="token punctuation">)</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.not-found div.wave-4</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>../404/wave-4.svg<span class="token punctuation">)</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.not-found div.wave-5</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>../404/wave-5.svg<span class="token punctuation">)</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.not-found div.wave-6</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>../404/wave-6.svg<span class="token punctuation">)</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.not-found div.wave-7</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>../404/wave-7.svg<span class="token punctuation">)</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.not-found div.sky-bg</span> <span class="token punctuation">&#123;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>../404/bg.svg<span class="token punctuation">)</span></span><span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.not-found div[class*=wave]</span> <span class="token punctuation">&#123;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0.99<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.not-found div[class*=wave]:not(.wave-4)</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>100% - 350px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.not-found div.wave-4</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>100% - 530px<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.not-found .boat</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> 15%<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> boat 15s <span class="token function">cubic-bezier</span><span class="token punctuation">(</span>0.65<span class="token punctuation">,</span> 0.05<span class="token punctuation">,</span> 0.36<span class="token punctuation">,</span> 1<span class="token punctuation">)</span> infinite<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.not-found .wave-lost</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 20%<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 20rem<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> surf 2s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 768px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>    <span class="token selector">.not-found .wave-lost</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 13rem<span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> 16%<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 992px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>    <span class="token selector">.not-found .wave-lost</span> <span class="token punctuation">&#123;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 20rem<span class="token punctuation">;</span>        <span class="token property">left</span><span class="token punctuation">:</span> 22%<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">.not-found .wave-lost span</span> <span class="token punctuation">&#123;</span>    <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> float 3s ease-in infinite<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.not-found .wave-lost span:nth-child(2)</span> <span class="token punctuation">&#123;</span>    <span class="token property">animation-delay</span><span class="token punctuation">:</span> 2.5s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.not-found .wave-lost span:nth-child(3)</span> <span class="token punctuation">&#123;</span>    <span class="token property">animation-delay</span><span class="token punctuation">:</span> 4.5s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.not-found .wave-island</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 40px<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 20%<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 170px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.not-found .wave-message</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token property">padding-right</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> auto <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 3rem<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> wave-message 1s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 768px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>    <span class="token selector">.not-found .wave-message</span> <span class="token punctuation">&#123;</span>        <span class="token property">left</span><span class="token punctuation">:</span> 16%<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 1.8rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 992px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>    <span class="token selector">.not-found .wave-message</span> <span class="token punctuation">&#123;</span>        <span class="token property">left</span><span class="token punctuation">:</span> 22%<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 3rem<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@keyframes</span> boat</span> <span class="token punctuation">&#123;</span>    <span class="token selector">0%</span> <span class="token punctuation">&#123;</span>        <span class="token property">transform-origin</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>-15deg<span class="token punctuation">)</span> <span class="token function">translate3d</span><span class="token punctuation">(</span>400px<span class="token punctuation">,</span> 0px<span class="token punctuation">,</span> 0px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">20%</span> <span class="token punctuation">&#123;</span>        <span class="token property">transform-origin</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>15deg<span class="token punctuation">)</span> <span class="token function">translate3d</span><span class="token punctuation">(</span>-20vw<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">25%</span> <span class="token punctuation">&#123;</span>        <span class="token property">transform-origin</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>-7deg<span class="token punctuation">)</span> <span class="token function">translate3d</span><span class="token punctuation">(</span>-25vw<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">50%</span> <span class="token punctuation">&#123;</span>        <span class="token property">transform-origin</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>5deg<span class="token punctuation">)</span> <span class="token function">translate3d</span><span class="token punctuation">(</span>-50vw<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">60%</span> <span class="token punctuation">&#123;</span>        <span class="token property">transform-origin</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>-1deg<span class="token punctuation">)</span> <span class="token function">translate3d</span><span class="token punctuation">(</span>-60vw<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>        <span class="token property">transform-origin</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>2deg<span class="token punctuation">)</span> <span class="token function">translate3d</span><span class="token punctuation">(</span>-100vw<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@keyframes</span> float</span> <span class="token punctuation">&#123;</span>    <span class="token selector">0%,    100%</span> <span class="token punctuation">&#123;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>3deg<span class="token punctuation">)</span> <span class="token function">translate3d</span><span class="token punctuation">(</span>0px<span class="token punctuation">,</span> -10px<span class="token punctuation">,</span> 0px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">50%</span> <span class="token punctuation">&#123;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>-3deg<span class="token punctuation">)</span> <span class="token function">translate3d</span><span class="token punctuation">(</span>0px<span class="token punctuation">,</span> 10px<span class="token punctuation">,</span> 0px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@keyframes</span> surf</span> <span class="token punctuation">&#123;</span>    <span class="token selector">0%</span> <span class="token punctuation">&#123;</span>        <span class="token property">transform-origin</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>15deg<span class="token punctuation">)</span> <span class="token function">translate3d</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 800px<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">30%</span> <span class="token punctuation">&#123;</span>        <span class="token property">transform-origin</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>15deg<span class="token punctuation">)</span> <span class="token function">translate3d</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 500px<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>        <span class="token property">transform-origin</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span> <span class="token function">translate3d</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@keyframes</span> wave-message</span> <span class="token punctuation">&#123;</span>    <span class="token selector">0%</span> <span class="token punctuation">&#123;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate3d</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 120%<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate3d</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>将JS代码添加到主题中：</strong></p><p>matery&#x2F;source&#x2F;js下，新建404.js，粘贴以下代码</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> <span class="token function-variable function">parallax</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> windowWidth <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>windowWidth <span class="token operator">&lt;</span> <span class="token number">768</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> parallax <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.parallax'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> halfFieldWidth <span class="token operator">=</span> parallax<span class="token punctuation">.</span>offsetWidth <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> halfFieldHeight <span class="token operator">=</span> parallax<span class="token punctuation">.</span>offsetHeight <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> fieldPos <span class="token operator">=</span> parallax<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> x <span class="token operator">=</span> e<span class="token punctuation">.</span>pageX<span class="token punctuation">;</span>  <span class="token keyword">var</span> y <span class="token operator">=</span> e<span class="token punctuation">.</span>pageY <span class="token operator">-</span> fieldPos<span class="token punctuation">.</span>top<span class="token punctuation">;</span>  <span class="token keyword">var</span> newX <span class="token operator">=</span> <span class="token punctuation">(</span>x <span class="token operator">-</span> halfFieldWidth<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">30</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> newY <span class="token operator">=</span> <span class="token punctuation">(</span>y <span class="token operator">-</span> halfFieldHeight<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">30</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> waveElements <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'.parallax [class*="wave"]'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  waveElements<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    element<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transition <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>    element<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transform <span class="token operator">=</span> <span class="token string">"translate3d("</span> <span class="token operator">+</span> index <span class="token operator">*</span> newX <span class="token operator">+</span> <span class="token string">"px,"</span> <span class="token operator">+</span> index <span class="token operator">*</span> newY <span class="token operator">+</span> <span class="token string">"px,0px"</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function-variable function">stopParallax</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> waveElements <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'.parallax [class*="wave"]'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    waveElements<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      element<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transform <span class="token operator">=</span> <span class="token string">"translate(0px, 0px)"</span><span class="token punctuation">;</span>      element<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transition <span class="token operator">=</span> <span class="token string">"all 0.7s"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      waveElements<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">element</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        element<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transition <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">700</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"not-found"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"mousemove"</span><span class="token punctuation">,</span> parallax<span class="token punctuation">)</span><span class="token punctuation">;</span>  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"not-found"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"mouseleave"</span><span class="token punctuation">,</span> stopParallax<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>配置主题以使用404页面：</strong></p><ul><li><p>打开Hexo博客根目录下的 <code>_config.yml</code> 文件。查找是否有配置项用于指定404页面，例如<code>not_found</code>,将其设置为 <code>404.html</code> 或你的自定义404页面文件名。</p></li><li><p>跳过404页面渲染，在上面打开的<code>_config.yml</code>中，找到 <code>skip_render</code> 配置项，加入404.html</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">skip_render</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> <span class="token string">"README.md"</span>  <span class="token punctuation">-</span> aboutme/<span class="token important">**</span>  <span class="token comment"># 意思为在对文件进行渲染时跳过aboutme文件下的所有文件</span>  <span class="token punctuation">-</span> 404.html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>请先使用<code>hexo cl &amp; hexo g &amp; hexo s</code>重新生成页面，再输入<code>http://localhost:4000/404</code>进行效果预览</p></blockquote></li></ul></li><li><p><strong>重新生成并部署博客：</strong></p><p>运行以下命令重新生成并部署Hexo博客：</p><pre class="line-numbers language-none"><code class="language-none">hexo cl &amp; hexo g &amp; hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>刷新你的博客，现在应该能够看到自定义的404页面了。</p></li></ol><h2 id="理解HTTP状态码"><a href="#理解HTTP状态码" class="headerlink" title="理解HTTP状态码"></a>理解HTTP状态码</h2><h3 id="信息响应（100–199）"><a href="#信息响应（100–199）" class="headerlink" title="信息响应（100–199）"></a>信息响应（100–199）</h3><ul><li><p><strong>100 Continue（继续）</strong>：服务器已收到请求头，客户端应继续发送请求体。</p></li><li><p><strong>101 Switching Protocols（切换协议）</strong>：请求者要求服务器切换协议。</p></li></ul><h3 id="成功响应（200–299）"><a href="#成功响应（200–299）" class="headerlink" title="成功响应（200–299）"></a>成功响应（200–299）</h3><ul><li><p><strong>200 OK（成功）</strong>：请求成功。</p></li><li><p><strong>201 Created（已创建）</strong>：请求成功，并创建了新的资源。</p></li><li><p><strong>204 No Content（无内容）</strong>：服务器成功处理请求，但没有额外的内容要发送。</p></li></ul><h3 id="重定向消息（300–399）"><a href="#重定向消息（300–399）" class="headerlink" title="重定向消息（300–399）"></a>重定向消息（300–399）</h3><ul><li><p><strong>301 Moved Permanently（永久移动）</strong>：所请求的资源已被永久移动。</p></li><li><p><strong>302 Found（或307 Temporary Redirect）</strong>：所请求的资源暂时存放在不同的URI下。</p></li><li><p><strong>304 Not Modified（未修改）</strong>：自请求指定的版本以来，资源未被修改。</p></li></ul><h3 id="客户端错误响应（400–499）"><a href="#客户端错误响应（400–499）" class="headerlink" title="客户端错误响应（400–499）"></a>客户端错误响应（400–499）</h3><ul><li><p><strong>400 Bad Request（错误请求）</strong>：服务器无法理解请求。</p></li><li><p><strong>401 Unauthorized（未授权）</strong>：请求要求用户身份验证。</p></li><li><p><strong>403 Forbidden（禁止）</strong>：服务器理解请求，但拒绝授权。</p></li><li><p><strong>404 Not Found（未找到）</strong>：服务器未找到请求的资源。</p></li><li><p><strong>405 Method Not Allowed（方法禁用）</strong>：请求中指定的方法不被允许。</p></li><li><p><strong>408 Request Timeout（请求超时）</strong>：服务器等待请求时发生超时。</p></li></ul><h3 id="服务器错误响应（500–599）"><a href="#服务器错误响应（500–599）" class="headerlink" title="服务器错误响应（500–599）"></a>服务器错误响应（500–599）</h3><ul><li><p><strong>500 Internal Server Error（服务器内部错误）</strong>：遇到意外条件，服务器无法完成请求。</p></li><li><p><strong>502 Bad Gateway（错误网关）</strong>：服务器作为网关或代理时，从上游服务器接收到无效的响应。</p></li><li><p><strong>503 Service Unavailable（服务不可用）</strong>：服务器暂时无法处理请求。</p></li></ul><p>参考文章：<a href="https://www.52txr.cn/2022/404html.html">好看的404模板</a></p><h2 id="页面升级"><a href="#页面升级" class="headerlink" title="页面升级"></a>页面升级</h2><p>偶然在这个网站上看到了这个效果的404动画，感觉可以把这个404页面设置为夜间模式，之前的设为日间模式</p><h3 id="夜间效果-暂未实现"><a href="#夜间效果-暂未实现" class="headerlink" title="夜间效果(暂未实现)"></a>夜间效果(暂未实现)</h3><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/404_night.gif" alt="404_night"></p><p>网站：<a href="https://www.footprintcalculator.org/not-found">Ecological Footprint Calculator</a></p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><ul><li>通过了解HTTP状态码并创建自定义404错误页面，您可以提升用户体验，留住访客，并减轻网站死链对用户的影响。定期监测网站错误并根据需要更新404页面。</li><li>如果是新建<code>404.html</code>文件的话，是可以进行本地预览的。但是这个预览不能使用 <code>http://localhost:4000/任意字符</code> 来查看，必须使用 <code>http://localhost:4000/404</code> 来进行本地预览</li><li>更多模版效果：<a href="https://frontendin.com/404-page-templates-on-codepen/?amp=1">404模版展示及源码</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 404 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OpenMP</title>
      <link href="/posts/8905.html"/>
      <url>/posts/8905.html</url>
      
        <content type="html"><![CDATA[<h1 id="OpenMP"><a href="#OpenMP" class="headerlink" title="OpenMP"></a>OpenMP</h1><h2 id="OpenMP介绍"><a href="#OpenMP介绍" class="headerlink" title="OpenMP介绍"></a>OpenMP介绍</h2><p>在C&#x2F;C++中，OpenMP可以通过使用预处理指令来让程序并行化。OpenMP指令使用的格式为:</p><pre class="line-numbers language-none"><code class="language-none">#pragma omp 指令 [子句[子句]…]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>下面是一个最简单的OpenMP程序，可以运行后观察结果与普通程序有什么不同。</p><p>请在适当的位置填上<code>#pragma omp parallel for</code> 使程序并行执行。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;omp.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> i<span class="token punctuation">;</span><span class="token comment">// YOUR CODE HERE</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token keyword">for</span> </span></span><span class="token comment">// END OF YOUR CODE</span><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"i = %d\n"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>运行结果</strong></p><pre class="line-numbers language-none"><code class="language-none">i &#x3D; 2i &#x3D; 0i &#x3D; 6i &#x3D; 1i &#x3D; 8i &#x3D; 5i &#x3D; 4i &#x3D; 7i &#x3D; 9i &#x3D; 3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="fork-join并行执行模式的概念"><a href="#fork-join并行执行模式的概念" class="headerlink" title="fork&#x2F;join并行执行模式的概念"></a>fork&#x2F;join并行执行模式的概念</h2><p>OpenMP是一套用于共享内存并行系统的多处理器程序设计的指导性的编译处理方案，从之前的介绍我们可以发现程序还是在循环结束之后才运行return 0语句，因此可以推断OpenMP并行执行的程序要全部结束后才会运行后面非并行部分的代码，这就是fork&#x2F;join并行模式。以上结论可以从示例代码中体现。</p><p>请在适当的位置填上<code>#pragma omp parallel for </code>使程序并行执行。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token keyword">for</span></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>运行结果</strong></p><pre class="line-numbers language-none"><code class="language-none">Time &#x3D; 159Time &#x3D; 161Total time &#x3D; 162<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;omp.h></span></span><span class="token keyword">void</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">1e8</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">double</span> t1 <span class="token operator">=</span> <span class="token function">omp_get_wtime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// your code</span>    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token keyword">for</span></span></span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">double</span> t2 <span class="token operator">=</span> <span class="token function">omp_get_wtime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Total time = %f seconds\n"</span><span class="token punctuation">,</span> t2 <span class="token operator">-</span> t1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="parallel-指令"><a href="#parallel-指令" class="headerlink" title="parallel 指令"></a>parallel 指令</h2><p><code>#pragma omp parallel</code> 是 OpenMP 中用于创建并行区域（parallel region）的指令，它可以搭配 <code>for</code> 或 <code>sections</code> 以及其他子句来实现不同的并行操作。</p><p>这个指令的作用是创建一个并行区域，在这个区域中的代码可以被多个线程同时执行，以充分利用多核处理器的性能优势。</p><p>下面是对 <code>#pragma omp parallel</code> 的详细解释和示例用法：</p><ul><li><p><strong>解释</strong>：</p><ul><li><code>#pragma omp</code> 是 OpenMP 指令的前缀，用于指示编译器执行并行化操作。</li><li><code>parallel</code> 指令用于创建一个并行区域，其中的代码可以由多个线程同时执行。</li><li>在并行区域中的代码将会被多个线程执行，每个线程都将执行相同的代码。每个线程都将执行这段代码，并行地进行计算，直到并行区域结束为止。</li><li>在并行区域内部的变量具有不同的作用域。比如在每个线程中，变量的值是独立的，每个线程都有自己的变量实例。</li><li>默认情况下，线程数量由系统决定，但也可以通过设置 <code>OMP_NUM_THREADS</code> 环境变量或调用 <code>omp_set_num_threads()</code> 函数来指定线程数量。</li></ul></li><li><p><strong>作用</strong>：</p><ul><li>创建一个并行区域，使其中的代码能够在多个线程中并行执行，充分利用多核处理器的性能。</li><li>用于并行化一段代码，使其能够在多个线程中同时执行，加快程序的执行速度。</li></ul></li><li><p><strong>用法</strong>：</p><ul><li><p>需要注意的是，<code>#pragma omp parallel</code> 只是创建一个并行区域，不会自动对代码进行并行化。在这个并行区域中的代码将被多个线程执行，但如果没有进一步的指示，代码仍然是串行执行的。因此，为了实现真正的并行化，需要结合其他 OpenMP 指令（比如 <code>for</code> 循环的 <code>parallel for</code> 或 <code>parallel sections</code>）来并行执行具体的任务。</p></li><li><p>与一段代码块配合使用，可以是复合语句、函数或一个 <code>for</code> 循环。</p></li><li><p><code>#pragma omp parallel</code> 可以与不同的子句一起使用，比如 <code>for</code> 或 <code>sections</code>，并可以添加其他子句来调整并行区域的行为。</p></li><li><p>示例1：与 <code>for</code> 结合使用</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token keyword">for</span></span></span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> N<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 并行执行的 for 循环代码</span>    <span class="token comment">// ...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这种用法将一个 <code>for</code> 循环中的迭代分配给多个线程并行执行。</p></li><li><p>示例2：与 <code>sections</code> 结合使用</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel sections</span></span><span class="token punctuation">&#123;</span>    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp section</span></span>    <span class="token punctuation">&#123;</span>        <span class="token comment">// 第一个部分的代码</span>        <span class="token comment">// ...</span>    <span class="token punctuation">&#125;</span>        <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp section</span></span>    <span class="token punctuation">&#123;</span>        <span class="token comment">// 第二个部分的代码</span>        <span class="token comment">// ...</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这种用法将不同的代码部分分配给不同的线程并行执行，每个 <code>section</code> 内的代码将在独立的线程中执行。</p></li></ul></li><li><p><strong>其他子句</strong>：</p><ul><li><p>可以在 <code>#pragma omp parallel</code> 后添加其他子句来调整并行区域的行为。比如设置线程数量、私有变量等等。例如：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token function">num_threads</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token function">private</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span></span></span><span class="token punctuation">&#123;</span>    <span class="token comment">// ...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>num_threads(4)</code>：指定并行区域中的线程数量为4。</li><li><code>private(x)</code>：指定变量 <code>x</code> 在每个线程中是私有的，每个线程有自己的 <code>x</code> 变量实例。</li></ul></li></ul></li></ul><p><code>#pragma omp parallel</code> 创建的并行区域中的代码将会在多个线程间并行执行。在并行区域中的变量可能具有不同的作用域和共享性质，需要小心处理共享变量可能引发的竞态条件和数据同步问题。</p><h3 id="超算习堂"><a href="#超算习堂" class="headerlink" title="超算习堂"></a>超算习堂</h3><p>parallel 是构造并行块的一个指令，同时也可以配合其他指令如for, sections等指令一起使用。在这个指令后面需要使用一对大括号来指定需要并行计算的代码。</p><pre class="line-numbers language-none"><code class="language-none">#pragma omp parallel [for | sections] [子句[子句]…] &#123; &#x2F;&#x2F;并行部分 &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>通过实例代码我们可以看出并行部分创建出了多个线程来完成。</p><p>请在适当的位置填上<code>#pragma omp parallel num_threads(6)</code> 使程序并行执行。</p><p><strong>运行结果</strong></p><pre class="line-numbers language-none"><code class="language-none">Thread: 0Thread: 2Thread: 1Thread: 3Thread: 4Thread: 5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;omp.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">// YOUR CODE HERE</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token function">num_threads</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> </span></span><span class="token comment">// END OF YOUR CODE</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Thread: %d\n"</span><span class="token punctuation">,</span> <span class="token function">omp_get_thread_num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="for-指令"><a href="#for-指令" class="headerlink" title="for 指令"></a>for 指令</h2><p>在 OpenMP 中，<code>for</code> 循环通常与 <code>#pragma omp parallel for</code> 结合使用，将一个 <code>for</code> 循环中的迭代任务分配给多个线程并行执行。用于在循环中实现并行化，允许将一个普通的for循环转换为一个并行化的for循环，从而提高程序的执行效率。这样可以有效地利用多核处理器的性能，加速循环中的计算。</p><p>以下是对 <code>#pragma omp parallel for</code> 的详细解释和使用方法：</p><ul><li><p><strong>语法</strong>：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token keyword">for</span></span></span><span class="token keyword">for</span> <span class="token punctuation">(</span>初始化语句； 循环条件； 更新语句<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// 循环体</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>作用</strong>：</p><ul><li>将一个 <code>for</code> 循环中的迭代任务分配给多个线程并行执行，加速循环的运行。</li><li>通常用于对大型迭代进行并行化处理，例如遍历数组、矩阵运算等。</li></ul></li><li><p><strong>用法</strong>：</p><ul><li><p><code>#pragma omp parallel for</code> 用于并行化一个 <code>for</code> 循环，用法示例如下：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token keyword">for</span></span></span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> N<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 并行执行的 for 循环体代码</span>    <span class="token comment">// ...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个指令将 <code>for</code> 循环中的迭代任务平均地分配给多个线程，每个线程执行一部分迭代。循环迭代会被分成多个块，每个线程执行其中的一个块。</p><p>例如，我们有一个计算数组元素平方和的简单任务，可以使用<code>#pragma omp parallel for</code>将其并行化：</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include &lt;iostream&gt;#include &lt;omp.h&gt;int main() &#123;const int N &#x3D; 1000;double sum &#x3D; 0.0;double arr[N];&#x2F;&#x2F; 初始化数组for (int i &#x3D; 0; i &lt; N; ++i) &#123;  arr[i] &#x3D; static_cast&lt;double&gt;(i);&#125;&#x2F;&#x2F; 使用#pragma omp parallel for进行并行化#pragma omp parallel for reduction(+:sum)for (int i &#x3D; 0; i &lt; N; ++i) &#123;  sum +&#x3D; arr[i] * arr[i];&#125;std::cout &lt;&lt; &quot;Sum of squares: &quot; &lt;&lt; sum &lt;&lt; std::endl;return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们使用了<code>reduction(+:sum)</code>子句来指定如何合并多个线程的结果。这样，每个线程都会计算其部分元素的平方和，并将结果累加到全局变量<code>sum</code>中。最后，主线程会输出整个数组元素平方和的结果。</p></li></ul></li><li><p><strong>注意事项</strong>：</p><ul><li>在使用 <code>#pragma omp parallel for</code> 时，循环变量（如上例中的 <code>i</code>）必须是迭代变量。OpenMP 将根据迭代变量自动进行任务分配。</li><li>循环的迭代次数应该足够大，以便在多个线程之间实现有效的并行执行。如果循环迭代次数太小，则并行化的开销可能超过了并行执行所带来的性能提升。</li></ul></li><li><p><strong>其他子句</strong>：</p><ul><li><p>可以使用其他 OpenMP 子句来进一步控制并行化的行为，例如指定私有变量、指定线程数量、设置线程绑定等。例如：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token keyword">for</span> <span class="token function">num_threads</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token function">private</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span></span></span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> N<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// ...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>num_threads(4)</code>：指定并行区域中的线程数量为4。</li><li><code>private(x)</code>：指定变量 <code>x</code> 在每个线程中是私有的，每个线程有自己的 <code>x</code> 变量实例。</li></ul></li></ul></li></ul><p><code>#pragma omp parallel for</code> 的使用可以显著提高循环迭代的效率，但需要注意并行化可能引入的数据竞争和同步问题，特别是对于共享变量的操作需要进行合适的同步控制。</p><h3 id="超算习堂-1"><a href="#超算习堂-1" class="headerlink" title="超算习堂"></a>超算习堂</h3><p>for指令的作用是使一个for循环在多个线程中执行，一般for指令会与parallel指令同时使用，即parallel for指令。此外还可以在parallel指令的并行块中单独使用，在一个并行块中可以使用多个for指令。但是单独使用for指令是没有效果的。</p><p>请在适当的位置使用for指令使程序并行执行。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;omp.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel </span></span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> i<span class="token punctuation">,</span> j<span class="token punctuation">;</span>                <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp <span class="token keyword">for</span> <span class="token function">private</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></span></span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"i = %d\n"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp <span class="token keyword">for</span> <span class="token function">private</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span></span></span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"j = %d\n"</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>运行结果</strong></p><pre class="line-numbers language-none"><code class="language-none">i &#x3D; 1i &#x3D; 0i &#x3D; 4i &#x3D; 3i &#x3D; 2j &#x3D; 0j &#x3D; 2j &#x3D; 1j &#x3D; 3j &#x3D; 4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="sections和section指令"><a href="#sections和section指令" class="headerlink" title="sections和section指令"></a>sections和section指令</h2><p>在 OpenMP 中，<code>#pragma omp sections</code> 和 <code>#pragma omp section</code> 是用于并行化代码的指令，允许将不同的代码部分分配给不同的线程并行执行。这种并行化模式允许多个线程同时执行各自的代码段，可以提高程序的效率。</p><p>以下是对 <code>#pragma omp sections</code> 和 <code>#pragma omp section</code> 的详细解释和用法：</p><ul><li><p><strong>作用</strong>：</p><ul><li><code>#pragma omp sections</code> 用于创建一个并行区域，内部包含多个 <code>section</code>，每个 <code>section</code> 中的代码可以由不同的线程并行执行。</li><li><code>#pragma omp section</code> 用于定义 <code>sections</code> 区域中的一个具体代码段。</li></ul></li><li><p><strong>用法</strong>：</p><ul><li><p><code>#pragma omp sections</code> 必须与多个 <code>#pragma omp section</code> 结合使用，代码示例如下：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel</span></span><span class="token punctuation">&#123;</span>    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp sections</span></span>    <span class="token punctuation">&#123;</span>        <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp section</span></span>        <span class="token punctuation">&#123;</span>            <span class="token comment">// 第一个 section 的代码</span>            <span class="token comment">// ...</span>        <span class="token punctuation">&#125;</span>                <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp section</span></span>        <span class="token punctuation">&#123;</span>            <span class="token comment">// 第二个 section 的代码</span>            <span class="token comment">// ...</span>        <span class="token punctuation">&#125;</span>                <span class="token comment">// 可以有更多的 sections</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这种用法将 <code>sections</code> 区域内的代码分成多个 <code>section</code>，每个 <code>section</code> 中的代码会被不同的线程并行执行。</p></li></ul></li><li><p><strong>特点</strong>：</p><ul><li>每个 <code>section</code> 中的代码都是独立执行的，各个 <code>section</code> 之间的执行顺序不确定，取决于系统调度和线程完成任务的时间。</li><li><code>sections</code> 区域中的线程数目与 <code>section</code> 的数目无关，OpenMP 会自动决定线程分配情况。</li></ul></li><li><p><strong>注意事项</strong>：</p><ul><li>每个 <code>section</code> 都应该是互相独立的任务单元，不应该有共享变量的修改或者依赖关系，以免引起竞态条件或死锁等问题。</li><li><code>sections</code> 区域中的每个 <code>section</code> 可能会被不同的线程执行，因此要确保每个 <code>section</code> 的执行是独立的，不会相互影响。</li></ul></li></ul><p><code>#pragma omp sections</code> 和 <code>#pragma omp section</code> 适用于将程序中的不同任务并行化执行，特别适用于任务间没有数据依赖性的情况。通过这种方式，可以提高程序的效率和性能，充分利用多核处理器的优势。</p><p>sections语句可以将下面的代码分成不同的分块，通过section指令来指定分块。每一个分块都会并行执行，具体格式：<br>#pragma omp [parallel] sections [子句]<br>{<br>    #pragma omp section<br>    {<br>        &#x2F;&#x2F;代码<br>    }<br>…<br>}</p><p>请在适当的位置填上使用sections指令使程序并行执行</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;omp.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel sections</span></span>    <span class="token punctuation">&#123;</span>        <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp section </span></span>        <span class="token punctuation">&#123;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Section 1 ThreadId = %d\n"</span><span class="token punctuation">,</span> <span class="token function">omp_get_thread_num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 某些代码任务</span>        <span class="token punctuation">&#125;</span>        <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp section</span></span>        <span class="token punctuation">&#123;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Section 2 ThreadId = %d\n"</span><span class="token punctuation">,</span> <span class="token function">omp_get_thread_num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">// 可能的合并任务或其他处理</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>运行结果</strong></p><pre class="line-numbers language-none"><code class="language-none">Section 2 ThreadId &#x3D; 1Section 1 ThreadId &#x3D; 0Section 4 ThreadId &#x3D; 3Section 3 ThreadId &#x3D; 2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="private-子句"><a href="#private-子句" class="headerlink" title="private 子句"></a>private 子句</h2><p>在 OpenMP 中，<code>private</code> 子句用于指定变量在并行区域中的私有性质。这意味着每个线程都会拥有该变量的一个私有副本，而不是共享同一个变量副本。这样可以避免多个线程同时访问和修改同一个变量引发的竞态条件问题。</p><p>以下是对 <code>private</code> 子句的详细解释和用法：</p><ul><li><p><strong>作用</strong>：</p><ul><li>在并行区域中，将变量指定为私有的，以确保每个线程都拥有自己的变量副本。</li><li>避免多个线程对同一个变量进行并发读写而导致的数据混乱或不确定的结果。</li></ul></li><li><p><strong>用法</strong>：</p><ul><li><p>在 OpenMP 指令中，通过 <code>private</code> 子句来指定私有变量，例如：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token function">private</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span></span></span><span class="token punctuation">&#123;</span>    <span class="token comment">// i 和 j 变量在并行区域中是私有的</span>    <span class="token comment">// 每个线程都会有自己的 i 和 j 副本</span>    <span class="token comment">// ...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中，<code>i</code> 和 <code>j</code> 变量被指定为私有变量，每个线程都会有自己的 <code>i</code> 和 <code>j</code> 的副本。任何在并行区域内声明的变量默认情况下都是共享的，使用 <code>private</code> 子句可以将其设为私有。</p></li></ul></li><li><p><strong>作用范围</strong>：</p><ul><li><code>private</code> 子句可以在不同的 OpenMP 指令中使用，比如 <code>parallel</code>, <code>for</code>, <code>sections</code> 等，并且可以在同一个指令块中同时指定多个私有变量。</li><li>如果在循环并行化 <code>for</code> 中使用了 <code>private</code> 子句，则循环索引变量通常需要被指定为私有变量。</li></ul></li><li><p><strong>注意事项</strong>：</p><ul><li>私有变量仅在并行区域中是私有的，出了并行区域后，变量仍然是原来的共享状态。</li><li>被指定为私有的变量需要在每个线程中进行初始化。因为每个线程都有自己的变量副本，变量值在不同线程中是独立的。</li></ul></li></ul><p><code>private</code> 子句是用于控制变量私有性的重要工具，在多线程并行编程中经常用于避免共享变量带来的并发访问问题，确保程序的正确性和可靠性。</p><p>private 子句可以将变量声明为线程私有，声明称线程私有变量以后，每个线程都有一个该变量的副本，线程之间不会互相影响，其他线程无法访问其他线程的副本。原变量在并行部分不起任何作用，也不会受到并行部分内部操作的影响。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;omp.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>        <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token keyword">for</span> <span class="token function">private</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></span></span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"i = %d\n"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 手动更新循环外的 i</span>    <span class="token comment">// 得到最后一个并行循环中的 i 值</span>    i <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"outside i = %d\n"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>运行结果</strong></p><pre class="line-numbers language-none"><code class="language-none">i &#x3D; 0i &#x3D; 2i &#x3D; 1i &#x3D; 4i &#x3D; 3i &#x3D; 5i &#x3D; 6i &#x3D; 7i &#x3D; 9i &#x3D; 8outside i &#x3D; 20<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="firstprivate子句"><a href="#firstprivate子句" class="headerlink" title="firstprivate子句"></a>firstprivate子句</h5><p><code>firstprivate</code> 子句是 OpenMP 中用于指定并行区域中变量的初始私有值的一种指令。它用于保留变量在并行区域外的初始值，并将其作为每个线程私有变量的初始值，以便在并行执行过程中使用。</p><p>以下是 <code>firstprivate</code> 子句的用法：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;omp.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>        <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token function">firstprivate</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span></span></span>    <span class="token punctuation">&#123;</span>        <span class="token comment">// x 变量在并行区域中是私有的，并且每个线程都有一个私有副本</span>        <span class="token comment">// 初始值是 x 在并行区域外的初始值（5）</span>                <span class="token comment">// 在并行区域内修改 x 的值</span>        x <span class="token operator">+=</span> <span class="token function">omp_get_thread_num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Thread %d: x = %d\n"</span><span class="token punctuation">,</span> <span class="token function">omp_get_thread_num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">// 在并行区域外打印 x 的值，值仍然为初始值（5）</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"After parallel region: x = %d\n"</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中，<code>firstprivate(x)</code> 将变量 <code>x</code> 指定为私有变量，并且每个线程都有自己的私有副本，初始值为并行区域外 <code>x</code> 的初始值（5）。在并行区域内，每个线程将 <code>x</code> 的值增加了当前线程编号 <code>omp_get_thread_num()</code>，然后输出结果。</p><p>值得注意的是，虽然并行区域内对 <code>x</code> 进行了修改，但在并行区域外，<code>x</code> 的值仍然保持初始值，不受并行区域内修改的影响。这是因为 <code>firstprivate</code> 子句保留了变量在并行区域外的初始值，并在并行区域内每个线程都有一个私有的初始值副本，不会影响到外部的 <code>x</code>。</p><p>private子句不能继承原变量的值，但是有时我们需要线程私有变量继承原来变量的值，这样我们就可以使用firstprivate子句来实现。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;omp.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> t <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">,</span> i<span class="token punctuation">;</span><span class="token comment">// YOUR CODE HERE</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token keyword">for</span> <span class="token function">firstprivate</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span></span></span><span class="token comment">// END OF YOUR CODE</span><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>t <span class="token operator">+=</span> i<span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"t = %d\n"</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"outside t = %d\n"</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>运行结果</strong></p><pre class="line-numbers language-none"><code class="language-none">t &#x3D; 20t &#x3D; 21t &#x3D; 23t &#x3D; 24t &#x3D; 22outside t &#x3D; 20<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="lastprivate子句"><a href="#lastprivate子句" class="headerlink" title="lastprivate子句"></a>lastprivate子句</h5><p><code>lastprivate</code> 子句是 OpenMP 中用于指定并行循环或区域结束后，从多个线程中获取最后一个迭代的变量值，并将其赋值给指定变量的一种指令。</p><p>以下是 <code>lastprivate</code> 子句的用法：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;omp.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> last_val <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token keyword">for</span> <span class="token function">lastprivate</span><span class="token punctuation">(</span>last_val<span class="token punctuation">)</span></span></span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        last_val <span class="token operator">=</span> i<span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Thread %d: i = %d\n"</span><span class="token punctuation">,</span> <span class="token function">omp_get_thread_num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">// 在并行循环结束后，获取最后一个迭代的值赋给 last_val</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Last value after parallel region: %d\n"</span><span class="token punctuation">,</span> last_val<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中，<code>lastprivate(last_val)</code> 将变量 <code>last_val</code> 指定为 <code>lastprivate</code> 变量。在并行循环中，每个线程都有一个私有的 <code>last_val</code> 变量，但最终会从多个线程中获取最后一个迭代的值，并将该值赋给外部的 <code>last_val</code>。</p><p>请注意，<code>lastprivate</code> 子句只对循环结束后的最后一个迭代有效。在并行循环执行期间，每个线程都会在自己的 <code>last_val</code> 中存储最后一个迭代的值，但只有在并行区域结束后，会将最后一个迭代的值赋给外部的 <code>last_val</code>。</p><p>这对于需要在并行循环结束后获取最后一个迭代的值并继续使用的情况非常有用，例如需要保留并利用并行循环中最后一个迭代的结果。</p><p>除了在进入并行部分时需要继承原变量的值外，有时我们还需要再退出并行部分时将计算结果赋值回原变量，lastprivate子句就可以实现这个需求。<br>需要注意的是，根据OpenMP规范，在循环迭代中，是最后一次迭代的值赋值给原变量；如果是section结构，那么是程序语法上的最后一个section语句赋值给原变量。<br>如果是类(class)变量作为lastprivate的参数时，我们需要一个缺省构造函数，除非该变量也作为firstprivate子句的参数；此外还需要一个拷贝赋值操作符。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;omp.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> t <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">,</span> i<span class="token punctuation">;</span><span class="token comment">// YOUR CODE HERE</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token keyword">for</span> <span class="token function">firstprivate</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">lastprivate</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span></span></span><span class="token comment">// END OF YOUR CODE</span><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>t <span class="token operator">+=</span> i<span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"t = %d\n"</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"outside t = %d\n"</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>运行结果</strong></p><pre class="line-numbers language-none"><code class="language-none">t &#x3D; 20t &#x3D; 22t &#x3D; 24t &#x3D; 21t &#x3D; 23outside t &#x3D; 24<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="threadprivate子句"><a href="#threadprivate子句" class="headerlink" title="threadprivate子句"></a>threadprivate子句</h5><p><code>threadprivate</code> 是 OpenMP 中用于指定全局变量在每个线程中具有自己的私有副本的指令。通常，全局变量在并行区域中是共享的，所有线程都能访问和修改它。但有时，我们需要在每个线程中拥有自己的变量副本，以便不同线程之间的修改不会相互影响。</p><p><code>threadprivate</code> 的用法如下所示：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;omp.h></span></span><span class="token comment">// 定义一个全局变量，在每个线程中将拥有自己的私有副本</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp <span class="token function">threadprivate</span><span class="token punctuation">(</span>global_var<span class="token punctuation">)</span></span></span><span class="token keyword">int</span> global_var<span class="token punctuation">;</span> <span class="token comment">// 全局变量</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    global_var <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">// 全局变量的初始值</span>        <span class="token comment">// 启动并行区域，多个线程同时访问 global_var</span>    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel</span></span>    <span class="token punctuation">&#123;</span>        <span class="token comment">// 每个线程都会有一个私有的 global_var</span>        global_var <span class="token operator">+=</span> <span class="token function">omp_get_thread_num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Thread %d: global_var = %d\n"</span><span class="token punctuation">,</span> <span class="token function">omp_get_thread_num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> global_var<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中，<code>global_var</code> 是一个全局变量，但使用了 <code>#pragma omp threadprivate(global_var)</code> 指令，因此在每个线程中都会有一个 <code>global_var</code> 的私有副本。每个线程对 <code>global_var</code> 进行操作时都在自己的私有副本上进行，不会相互干扰。</p><p>值得注意的是，<code>threadprivate</code> 用于指定全局变量在每个线程中具有自己的私有副本。这样的话，每个线程都有一个与其他线程独立的变量副本，它们互不干扰。</p><p>threadprivate子句可以将一个变量复制一个私有的拷贝给各个线程，即各个线程具有各自私有的全局对象。<br>格式：#pragma omp threadprivate(list)</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;omp.h></span></span><span class="token keyword">int</span> g <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp <span class="token function">threadprivate</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> t <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">,</span> i<span class="token punctuation">;</span><span class="token comment">// YOUR CODE HERE</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel</span></span><span class="token comment">// END OF YOUR CODE</span><span class="token punctuation">&#123;</span>g <span class="token operator">=</span> <span class="token function">omp_get_thread_num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel</span></span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"thread id: %d g: %d\n"</span><span class="token punctuation">,</span> <span class="token function">omp_get_thread_num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> g<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>运行结果</strong></p><pre class="line-numbers language-none"><code class="language-none">thread id: 1 g: 1thread id: 5 g: 5thread id: 2 g: 2thread id: 3 g: 3thread id: 6 g: 6thread id: 4 g: 4thread id: 0 g: 0thread id: 7 g: 7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="shared子句"><a href="#shared子句" class="headerlink" title="shared子句"></a>shared子句</h2><p>在 OpenMP 中，<code>shared</code> 子句用于指定变量在并行区域中的共享性质。共享变量是所有线程共同访问和修改的变量。使用 <code>shared</code> 子句可以将变量显式地声明为共享变量，以确保所有线程在并行区域中都使用同一个变量副本。</p><p>以下是对 <code>shared</code> 子句的详细解释和用法：</p><ul><li><p><strong>作用</strong>：</p><ul><li>在并行区域中将变量指定为共享变量，以确保所有线程都共享同一个变量副本。</li><li>允许多个线程同时访问和修改变量的值，适用于线程之间需要共享信息的情况。</li></ul></li><li><p><strong>用法</strong>：</p><ul><li><p>在 OpenMP 指令中，通过 <code>shared</code> 子句将变量指定为共享变量，例如：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token function">shared</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span></span></span><span class="token punctuation">&#123;</span>    <span class="token comment">// x 和 y 变量在并行区域中是共享的</span>    <span class="token comment">// 所有线程都使用同一个 x 和 y 变量副本</span>    <span class="token comment">// ...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中，<code>x</code> 和 <code>y</code> 变量被指定为共享变量，这意味着所有线程都会使用相同的 <code>x</code> 和 <code>y</code> 的副本。</p></li></ul></li><li><p><strong>默认共享性</strong>：</p><ul><li>在 OpenMP 中，默认情况下，在并行区域内声明的变量通常是共享的。因此，对于全局变量和在并行区域之外声明的变量，默认情况下是共享的。</li><li>局部变量默认情况下是私有的，每个线程都有自己的私有副本。</li></ul></li><li><p><strong>注意事项</strong>：</p><ul><li>共享变量可能存在并发访问的问题，需要注意线程之间的同步控制，避免出现数据竞争、不确定行为等问题。</li><li>如果变量在并行区域外被声明为共享的，需确保对其的访问是线程安全的，避免多个线程同时修改造成的问题。</li></ul></li></ul><p><code>shared</code> 子句用于控制变量在并行区域中的共享性质，可帮助开发者更清晰地表达并行代码中的共享数据。但需要特别注意共享变量的同步和互斥访问问题，以确保并行程序的正确性和可靠性。</p><p><code>shared</code> 子句是 OpenMP 中的一个指令，用于指定变量在并行区域中的共享性质。在并行区域内，<code>shared</code> 子句使得变量在不同线程之间共享同一个内存位置。</p><p>以下是 <code>shared</code> 子句的用法示例：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;omp.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> shared_var <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment">// 使用 shared 子句将 shared_var 变量指定为共享变量</span>    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token function">shared</span><span class="token punctuation">(</span>shared_var<span class="token punctuation">)</span></span></span>    <span class="token punctuation">&#123;</span>        shared_var <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 所有线程共享同一个 shared_var 变量</span>                <span class="token comment">// 获取当前线程号和 shared_var 的值</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Thread %d: shared_var = %d\n"</span><span class="token punctuation">,</span> <span class="token function">omp_get_thread_num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> shared_var<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">// 在并行区域结束后，输出最终 shared_var 的值</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Final value of shared_var: %d\n"</span><span class="token punctuation">,</span> shared_var<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中，<code>#pragma omp parallel shared(shared_var)</code> 将 <code>shared_var</code> 变量指定为共享变量，这意味着在并行区域中，所有线程都将共享同一个 <code>shared_var</code> 变量。</p><p>在并行区域内，每个线程都可以访问并修改 <code>shared_var</code> 的值。因此，在示例中，每个线程都对 <code>shared_var</code> 执行了加一操作，并输出了当前线程号和 <code>shared_var</code> 的值。需要注意的是，由于所有线程共享同一个 <code>shared_var</code>，可能会发生竞争条件，需要谨慎处理并发修改。</p><p>最终输出的 <code>Final value of shared_var</code> 表示并行区域结束后的 <code>shared_var</code> 的值。由于多个线程共享该变量，因此最终结果取决于并发修改的顺序和操作。</p><p>Share子句可以将一个变量声明成共享变量，并且在多个线程内共享。需要注意的是，在并行部分进行写操作时，要求共享变量进行保护，否则不要随便使用共享变量，尽量将共享变量转换为私有变量使用。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;omp.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> t <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">,</span> i<span class="token punctuation">;</span>        <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token keyword">for</span> <span class="token function">shared</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token function">private</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></span></span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp atomic</span></span>            t<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"i = %d, t = %d\n"</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>运行结果</strong></p><pre class="line-numbers language-none"><code class="language-none">i &#x3D; 0, t &#x3D; 21i &#x3D; 2, t &#x3D; 22i &#x3D; 9, t &#x3D; 23i &#x3D; 4, t &#x3D; 23i &#x3D; 8, t &#x3D; 25i &#x3D; 5, t &#x3D; 25i &#x3D; 7, t &#x3D; 24i &#x3D; 1, t &#x3D; 24i &#x3D; 3, t &#x3D; 24i &#x3D; 6, t &#x3D; 24<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="reduction子句"><a href="#reduction子句" class="headerlink" title="reduction子句"></a>reduction子句</h2><p><code>reduction</code> 子句是 OpenMP 中用于对并行循环中的变量执行归约操作的一种指令。归约操作指将并行循环中多个线程的局部结果合并为一个最终结果的过程。这种操作通常用于对变量进行累加、求和、求积等聚合运算，以避免竞态条件并提高并行程序的性能。</p><p>以下是对 <code>reduction</code> 子句的详细解释和用法：</p><ul><li><p><strong>作用</strong>：</p><ul><li>在并行循环中对指定的变量执行归约操作，将多个线程的局部结果合并为一个最终结果。</li><li>常用于求和、求积、求最大值、最小值等聚合操作。</li></ul></li><li><p><strong>用法</strong>：</p><ul><li><p>在 OpenMP 中，<code>reduction</code> 子句用于声明进行归约操作的变量，例如：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token keyword">for</span> <span class="token function">reduction</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token operator">:</span>sum<span class="token punctuation">)</span></span></span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> N<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    sum <span class="token operator">+=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中，<code>reduction(+:sum)</code> 表示对变量 <code>sum</code> 执行归约操作，使用 <code>+</code> 操作符对局部结果进行累加。</p></li></ul></li><li><p><strong>支持的操作符</strong>：</p><ul><li><code>reduction</code> 子句支持多种操作符，常用的包括 <code>+</code>、<code>*</code>、<code>-</code>、<code>&amp;</code>、<code>|</code>、<code>^</code>、<code>&amp;&amp;</code>、<code>||</code>、<code>max</code>、<code>min</code> 等。具体支持的操作符取决于编译器和 OpenMP 的实现。</li></ul></li><li><p><strong>特点</strong>：</p><ul><li><code>reduction</code> 子句会自动为每个线程创建一个局部变量，每个线程对局部变量进行归约操作，最后将所有局部变量的结果合并得到最终结果。</li><li>在并行循环结束后，变量的值会被存储在原始变量中。</li></ul></li><li><p><strong>示例</strong>：</p><ul><li><p>对数组中元素求和的示例代码：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;omp.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> array<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token keyword">for</span> <span class="token function">reduction</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token operator">:</span>sum<span class="token punctuation">)</span></span></span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        sum <span class="token operator">+=</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Sum = %d\n"</span><span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中，<code>reduction(+:sum)</code> 表示对变量 <code>sum</code> 执行累加操作，将各个线程的局部累加结果最后合并到 <code>sum</code> 中。</p></li></ul></li></ul><p><code>reduction</code> 子句是一个强大的工具，能够简化对并行循环中变量的归约操作，提高并行程序的性能，减少了手动同步和合并的复杂度。</p><p><code>reduction</code> 子句是 OpenMP 中用于执行并行归约操作的关键指令。它允许在并行循环中对指定的变量执行归约操作，并将各个线程的局部结果合并为一个最终结果。</p><p>以下是 <code>reduction</code> 子句的用法示例：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;omp.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment">// 使用 reduction 子句对 sum 变量执行归约操作</span>    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token keyword">for</span> <span class="token function">reduction</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token operator">:</span>sum<span class="token punctuation">)</span></span></span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        sum <span class="token operator">+=</span> i<span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Thread %d: sum = %d\n"</span><span class="token punctuation">,</span> <span class="token function">omp_get_thread_num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">// 在并行循环结束后，输出最终的 sum 值</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Final sum value after reduction: %d\n"</span><span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中，<code>#pragma omp parallel for reduction(+:sum)</code> 将 <code>sum</code> 变量指定为 <code>+</code> 归约运算符的归约变量。在并行循环中，每个线程都有自己的 <code>sum</code> 变量，并行地对其进行累加操作。</p><p>关键点是 <code>reduction(+:sum)</code> 中的 <code>+</code> 表示进行求和操作，这意味着各个线程各自计算自己的局部和，并在循环结束时将所有局部和合并为一个最终的总和。这种归约操作确保了并行计算的正确性，最终得到了正确的总和结果。</p><p><code>reduction</code> 子句可以用于多种归约操作，如求和、乘积、最大值、最小值等。它提供了一种简洁而有效的方法来在并行计算中执行归约操作，以提高程序性能并确保计算的准确性。</p><p>reduction子句可以对一个或者多个参数指定一个操作符，然后每一个线程都会创建这个参数的私有拷贝，在并行区域结束后，迭代运行指定的运算符，并更新原参数的值。<br>私有拷贝变量的初始值依赖于redtution的运算类型。<br>具体用法如下<br>reduction(operator:list)</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;omp.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> sum <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token comment">// YOUR CODE HERE</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token keyword">for</span> <span class="token function">reduction</span><span class="token punctuation">(</span><span class="token operator">+</span><span class="token operator">:</span> sum<span class="token punctuation">)</span></span></span><span class="token comment">// END OF YOUR CODE</span><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>sum <span class="token operator">+=</span> i<span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"sum = %d\n"</span><span class="token punctuation">,</span> sum<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>运行结果</strong></p><pre class="line-numbers language-none"><code class="language-none">0215457689sum &#x3D; 55<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="copyin子句"><a href="#copyin子句" class="headerlink" title="copyin子句"></a>copyin子句</h2><p><code>copyin</code> 子句是 OpenMP 中的一个指令，用于将数据从主线程复制到所有线程的私有副本中。它确保了并行区域中所有线程都使用相同的初始数据。</p><p>以下是 <code>copyin</code> 子句的简单示例：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;omp.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> initial_data <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>        <span class="token comment">// 使用 copyin 子句将 initial_data 数据复制到并行区域中的所有线程的私有副本</span>    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token function">copyin</span><span class="token punctuation">(</span>initial_data<span class="token punctuation">)</span></span></span>    <span class="token punctuation">&#123;</span>        <span class="token comment">// 获取每个线程的私有副本的初始数据值</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Thread %d: initial_data = %d\n"</span><span class="token punctuation">,</span> <span class="token function">omp_get_thread_num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> initial_data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中，<code>#pragma omp parallel copyin(initial_data)</code> 将 <code>initial_data</code> 变量的值复制到所有线程的私有副本中，以确保在并行区域中每个线程都有相同的初始数据。</p><p>并行区域内的每个线程都可以访问私有副本的 <code>initial_data</code>，并且这些私有副本都具有相同的初始值。在示例中，每个线程打印了自己的线程编号和 <code>initial_data</code> 的值，这些值都是从主线程复制到各自私有副本的。</p><p>需要注意的是，<code>copyin</code> 子句通常用于确保并行区域中所有线程拥有相同的初始数据。</p><p>copyin子句可以将主线程中变量的值拷贝到各个线程的私有变量中，让各个线程可以访问主线程中的变量。<br>copyin的参数必须要被声明称threadprivate，对于类的话则并且带有明确的拷贝赋值操作符。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;omp.h></span></span><span class="token keyword">int</span> g <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp <span class="token function">threadprivate</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span> </span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> i<span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token keyword">for</span>   </span></span><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>g <span class="token operator">=</span> <span class="token function">omp_get_thread_num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"thread %d, g = %d\n"</span><span class="token punctuation">,</span> <span class="token function">omp_get_thread_num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> g<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"global g: %d\n"</span><span class="token punctuation">,</span> g<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// YOUR CODE HERE</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token keyword">for</span> <span class="token function">copyin</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span></span></span><span class="token comment">// END OF YOUR CODE</span><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"thread %d, g = %d\n"</span><span class="token punctuation">,</span> <span class="token function">omp_get_thread_num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> g<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>运行结果</strong></p><pre class="line-numbers language-none"><code class="language-none">thread 0, g &#x3D; 0thread 1, g &#x3D; 1thread 2, g &#x3D; 2thread 3, g &#x3D; 3global g: 0thread 1, g &#x3D; 0thread 2, g &#x3D; 0thread 0, g &#x3D; 0thread 3, g &#x3D; 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="static字句"><a href="#static字句" class="headerlink" title="static字句"></a>static字句</h2><p>在 OpenMP 中，<code>static</code> 字句用于指定并行循环中迭代变量的存储方式。它决定了迭代变量的存储分配方式和范围。</p><p>在 <code>parallel for</code> 循环中，迭代变量可以采用不同的存储方式，其中之一就是使用 <code>static</code> 字句。<code>static</code> 字句指定了在并行循环中，迭代变量的存储分配是静态的，即在编译时就进行分配。</p><p>以下是一个示例，展示了 <code>static</code> 字句的用法：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;omp.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> i<span class="token punctuation">;</span>    <span class="token comment">// 使用 static 字句指定迭代变量 i 的存储分配方式为静态</span>    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token keyword">for</span> <span class="token function">schedule</span><span class="token punctuation">(</span><span class="token keyword">static</span><span class="token punctuation">)</span></span></span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Thread %d: i = %d\n"</span><span class="token punctuation">,</span> <span class="token function">omp_get_thread_num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中，<code>#pragma omp parallel for schedule(static)</code> 中的 <code>static</code> 字句指定了迭代变量 <code>i</code> 的存储分配方式为静态。这意味着在编译时，迭代变量 <code>i</code> 的内存空间将被分配，并在每个线程中都保持相同的内存位置。</p><p><code>static</code> 字句还可以与 <code>schedule</code> 指定循环迭代方式一起使用，比如 <code>schedule(static, chunk_size)</code>，这样可以进一步控制循环迭代的分块大小。</p><p>需要注意的是，<code>static</code> 字句是 OpenMP 中常用的一种迭代变量存储方式，它适用于并行循环中迭代变量访问频率较为均匀的情况。</p><p>当parallel for没有带schedule时，大部分情况下系统都会默认采用static调度方式。假设有n次循环迭代，t个线程，那么每个线程大约分到n&#x2F;t次迭代。这种调度方式会将循环迭代均匀的分布给各个线程，各个线程迭代次数可能相差1次。用法为schedule(method)。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;omp.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> i<span class="token punctuation">;</span><span class="token comment">// YOUR CODE HERE</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token keyword">for</span> <span class="token function">schedule</span><span class="token punctuation">(</span><span class="token keyword">static</span><span class="token punctuation">)</span></span></span><span class="token comment">// END OF YOUR CODE</span><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"i = %d, thread %d\n"</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token function">omp_get_thread_num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>运行结果</strong></p><pre class="line-numbers language-none"><code class="language-none">i &#x3D; 0, thread 0i &#x3D; 4, thread 2i &#x3D; 1, thread 0i &#x3D; 7, thread 5i &#x3D; 8, thread 6i &#x3D; 2, thread 1i &#x3D; 9, thread 7i &#x3D; 3, thread 1i &#x3D; 5, thread 3i &#x3D; 6, thread 4<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h5 id="Size参数的用法"><a href="#Size参数的用法" class="headerlink" title="Size参数的用法"></a>Size参数的用法</h5><p>在 OpenMP 的 <code>schedule</code> 指令中，<code>size</code> 参数用于指定分块的大小（chunk size），它影响了并行循环中迭代的分配方式。</p><p>在循环并行化中，通常迭代是分配给不同线程的。<code>size</code> 参数控制了每个线程获取的迭代次数。</p><p>当 <code>schedule</code> 指定为 <code>static</code> 或者 <code>dynamic</code> 时，<code>size</code> 参数可以用于控制分块的大小。当 <code>schedule</code> 设置为 <code>static</code> 时，<code>size</code> 指定的是每个线程被分配的迭代次数。在 <code>schedule(static, size)</code> 中，<code>size</code> 表示每个线程被分配的连续迭代次数。</p><p>示例如下：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;omp.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> i<span class="token punctuation">;</span>    <span class="token comment">// 使用 static 分配迭代</span>    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token keyword">for</span> <span class="token function">schedule</span><span class="token punctuation">(</span><span class="token keyword">static</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span></span></span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Thread %d: i = %d\n"</span><span class="token punctuation">,</span> <span class="token function">omp_get_thread_num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在上述示例中，<code>#pragma omp parallel for schedule(static, 3)</code> 指定了静态调度，每个线程被分配了大小为 3 的连续迭代。这样，10 个迭代会被分为三块（3, 3, 3, 1）分配给线程。</p><p>需要注意的是，<code>size</code> 参数的具体效果取决于实际问题的特征和硬件环境。在选择 <code>size</code> 参数时，应该根据问题的特性、数据大小和计算资源等因素进行调整，以获得最佳的性能。</p><p>在静态调度的时候，我们可以通过指定size参数来分配一个线程的最小迭代次数。指定size之后，每个线程最多可能相差size次迭代。可以推断出[0,size-1]的迭代是在第一个线程上运行，依次类推。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;omp.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> i<span class="token punctuation">;</span><span class="token comment">// YOUR CODE HERE</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token keyword">for</span> <span class="token function">schedule</span><span class="token punctuation">(</span><span class="token keyword">static</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span></span></span><span class="token comment">// END OF YOUR CODE</span><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"i = %d, thread %d\n"</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token function">omp_get_thread_num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>运行结果</strong></p><pre class="line-numbers language-none"><code class="language-none">i &#x3D; 6, thread 2i &#x3D; 3, thread 1i &#x3D; 4, thread 1i &#x3D; 0, thread 0i &#x3D; 5, thread 1i &#x3D; 9, thread 3i &#x3D; 1, thread 0i &#x3D; 7, thread 2i &#x3D; 2, thread 0i &#x3D; 8, thread 2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="dynamic子句指令"><a href="#dynamic子句指令" class="headerlink" title="dynamic子句指令"></a>dynamic子句指令</h2><p>在 OpenMP 中，<code>schedule</code> 指令可用于指定并行循环中迭代的调度方式。<code>schedule(dynamic, chunk_size)</code> 是其中一种调度方式，其中的 <code>dynamic</code> 子句指示编译器以动态方式调度循环的迭代，<code>chunk_size</code> 表示每次分配给线程的迭代数量。</p><p>下面是一个示例，演示了 <code>schedule(dynamic, chunk_size)</code> 的用法：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;omp.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> i<span class="token punctuation">;</span>    <span class="token comment">// 使用 dynamic 子句和 chunk_size 为 2 进行循环的动态调度</span>    <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token keyword">for</span> <span class="token function">schedule</span><span class="token punctuation">(</span>dynamic<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span></span></span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Thread %d: i = %d\n"</span><span class="token punctuation">,</span> <span class="token function">omp_get_thread_num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中，<code>#pragma omp parallel for schedule(dynamic, 2)</code> 指定了动态调度，每个线程会按需获取两个迭代。当一个线程完成它所分配的两个迭代后，它将获取更多的迭代。这种方式可在并行循环中实现更灵活的负载平衡，因为线程会动态地获取迭代，避免了静态分配中可能出现的某些线程处理的工作量较少而其他线程处理的工作量较多的情况。</p><p>需要注意的是，<code>schedule(dynamic, chunk_size)</code> 中的 <code>chunk_size</code> 决定了每次分配给线程的迭代数量。过小的 <code>chunk_size</code> 可能会增加调度开销，因此需要根据实际问题的特性和硬件环境进行调整以获取更好的性能。</p><p>动态分配是将迭代动态分配到各个线程，依赖于运行你状态来确定，所以我们无法像静态调度一样事先预计进程的分配。哪一个线程先启动，哪一个线程迭代多久，这些都取决于系统的资源和线程的调度。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;omp.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> i<span class="token punctuation">;</span><span class="token comment">// YOUR CODE HERE</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token keyword">for</span> <span class="token function">schedule</span><span class="token punctuation">(</span>dynamic<span class="token punctuation">)</span></span></span><span class="token comment">// END OF YOUR CODE</span><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"i = %d, thread %d\n"</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token function">omp_get_thread_num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>运行结果</strong></p><pre class="line-numbers language-none"><code class="language-none">i &#x3D; 0, thread 0i &#x3D; 3, thread 3i &#x3D; 8, thread 3i &#x3D; 9, thread 7i &#x3D; 2, thread 1i &#x3D; 4, thread 4i &#x3D; 5, thread 5i &#x3D; 7, thread 0i &#x3D; 1, thread 2i &#x3D; 6, thread 6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="omp-get-num-procs"><a href="#omp-get-num-procs" class="headerlink" title="omp_get_num_procs"></a>omp_get_num_procs</h2><p>返回调用函数时可用的处理器数目。<br>函数原型<br>int omp_get_num_procs(void)</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;omp.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span> <span class="token function">omp_get_num_procs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel  </span></span><span class="token punctuation">&#123;</span>    <span class="token comment">// YOUR CODE HERE</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span> <span class="token function">omp_get_num_procs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// END OF YOUR CODE</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>运行结果</strong></p><pre class="line-numbers language-none"><code class="language-none">888888888<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="omp-get-num-threads"><a href="#omp-get-num-threads" class="headerlink" title="omp_get_num_threads"></a>omp_get_num_threads</h2><p>返回当前并行区域中的活动线程个数，如果在并行区域外部调用，返回1<br>int omp_get_num_threads(void)<br><em>注意：由于程序并行执行，每次输出的结果可能会有所区别。</em></p><p><strong>运行结果</strong></p><pre class="line-numbers language-none"><code class="language-none">188888888<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-omp" data-language="omp"><code class="language-omp">#include &lt;stdio.h&gt;#include &lt;omp.h&gt;int main(int argc, char* argv[])&#123;printf(&quot;%d\n&quot;, omp_get_num_threads());#pragma omp parallel  &#123;   &#x2F;&#x2F; YOUR CODE HEREprintf(&quot;%d\n&quot;, omp_get_num_threads());&#x2F;&#x2F; YOUR CODE HERE&#125;return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="omp-get-thread-num"><a href="#omp-get-thread-num" class="headerlink" title="omp_get_thread_num"></a>omp_get_thread_num</h2><p>返回当前的线程号，注意不要和之前的omp_get_num_threads混淆。<br>函数原型<br>int omp_get_thread_num(void)<br><em>注意：由于程序并行执行，每次输出的结果可能会有所区别。</em></p><p><strong>运行结果</strong></p><pre class="line-numbers language-none"><code class="language-none">002134567<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-omp" data-language="omp"><code class="language-omp">#include &lt;stdio.h&gt;#include &lt;omp.h&gt;int main(int argc, char* argv[])&#123;printf(&quot;%d\n&quot;, omp_get_thread_num());#pragma omp parallel  &#123;        &#x2F;&#x2F; YOUR CODE HERE    printf(&quot;%d\n&quot;, omp_get_thread_num());    &#x2F;&#x2F; END OF YOUR CODE&#125;return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="omp-set-num-threads"><a href="#omp-set-num-threads" class="headerlink" title="omp_set_num_threads"></a>omp_set_num_threads</h2><p>设置进入并行区域时，将要创建的线程个数<br>函数原型<br>int omp_set_num_threads(void)<br><em>注意：由于程序并行执行，每次输出的结果可能会有所区别。</em></p><p><strong>运行结果</strong></p><pre class="line-numbers language-none"><code class="language-none">0 of 4 threads2 of 4 threads1 of 4 threads3 of 4 threads<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-omp" data-language="omp"><code class="language-omp">#include &lt;stdio.h&gt;#include &lt;omp.h&gt;int main(int argc, char* argv[])&#123;    &#x2F;&#x2F; YOUR CODE HERE    omp_set_num_threads(4);    &#x2F;&#x2F; END OF YOUR CODE#pragma omp parallel  &#123;printf(&quot;%d of %d threads\n&quot;, omp_get_thread_num(), omp_get_num_threads());&#125;return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="omp-in-parallel"><a href="#omp-in-parallel" class="headerlink" title="omp_in_parallel"></a>omp_in_parallel</h2><p>可以判断当前是否处于并行状态<br>函数原型<br>int omp_in_parallel();<br><em>注意：由于程序并行执行，每次输出的结果可能会有所区别。</em></p><p><strong>运行结果</strong></p><pre class="line-numbers language-none"><code class="language-none">01111<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-omp" data-language="omp"><code class="language-omp">#include &lt;stdio.h&gt;#include &lt;omp.h&gt;int main(int argc, char* argv[])&#123;printf(&quot;%d\n&quot;, omp_in_parallel());omp_set_num_threads(4);#pragma omp parallel  &#123;    &#x2F;&#x2F; YOUR CODE HEREprintf(&quot;%d\n&quot;, omp_in_parallel());    &#x2F;&#x2F; END OF YOUR CODE&#125;return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="omp-get-max-threads"><a href="#omp-get-max-threads" class="headerlink" title="omp_get_max_threads"></a>omp_get_max_threads</h2><p>该函数可以用于获得最大的线程数量，根据OpenMP文档中的规定，这个最大数量是指在不使用num_threads的情况下，OpenMP可以创建的最大线程数量。需要注意的是这个值是确定的，与它是否在并行区域调用没有关系。<br><em>注意：由于程序并行执行，每次输出的结果可能会有所区别。</em></p><p><strong>运行结果</strong></p><pre class="line-numbers language-none"><code class="language-none">84444<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-omp" data-language="omp"><code class="language-omp">#include &lt;stdio.h&gt;#include &lt;omp.h&gt;int main(int argc, char* argv[])&#123;    &#x2F;&#x2F; YOUR CODE HEREprintf(&quot;%d\n&quot;, omp_get_max_threads());&#x2F;&#x2F; END OF YOUR CODEomp_set_num_threads(4);#pragma omp parallel  &#123;printf(&quot;%d\n&quot;, omp_get_max_threads());&#125;return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="OpenMP中互斥锁"><a href="#OpenMP中互斥锁" class="headerlink" title="OpenMP中互斥锁"></a>OpenMP中互斥锁</h2><p>Openmp中有提供一系列函数来进行锁的操作，一般来说常用的函数的下面4个<br>void omp_init_lock(omp_lock*) 初始化互斥锁<br>void omp_destroy_lock(omp_lock*) 销毁互斥锁<br>void omp_set_lock(omp_lock*) 获得互斥锁<br>void omp_unset_lock(omp_lock*) 释放互斥锁<br><em>注意：由于程序并行执行，每次输出的结果可能会有所区别</em></p><p><strong>运行结果</strong></p><pre class="line-numbers language-none"><code class="language-none">0+0-1+1-4+4-2+2-3+3-<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;omp.h></span></span><span class="token keyword">static</span> <span class="token class-name">omp_lock_t</span> lock<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> i<span class="token punctuation">;</span><span class="token function">omp_init_lock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>lock<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">pragma</span> <span class="token expression">omp parallel <span class="token keyword">for</span>   </span></span><span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">// YOUR CODE HERE</span><span class="token function">omp_set_lock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>lock<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// END OF YOUR CODE</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d+\n"</span><span class="token punctuation">,</span> <span class="token function">omp_get_thread_num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d-\n"</span><span class="token punctuation">,</span> <span class="token function">omp_get_thread_num</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// YOUR CODE HERE</span><span class="token function">omp_unset_lock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>lock<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// END OF YOUR CODE</span><span class="token punctuation">&#125;</span><span class="token function">omp_destroy_lock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>lock<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="omp-test-lock"><a href="#omp-test-lock" class="headerlink" title="omp_test_lock"></a>omp_test_lock</h2><p>除了之前介绍的4个函数之外，与互斥锁的相关的函数还有一个，用来尝试获得锁。<br>该函数可以看作是omp_set_lock的非阻塞版本。<br>函数原型<br>bool omp_test_lock(omp_lock*)<br><em>注意：由于程序并行执行，每次输出的结果可能会有所区别</em></p><p><strong>运行结果</strong></p><pre class="line-numbers language-none"><code class="language-none">0+fail to get lockfail to get lockfail to get lock0-2+2-<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-omp" data-language="omp"><code class="language-omp">#include &lt;stdio.h&gt;#include &lt;omp.h&gt;static omp_lock_t lock;int main(int argc, char* argv[])&#123;    int i;omp_init_lock(&amp;lock); #pragma omp parallel for   for (i &#x3D; 0; i &lt; 5; ++i)&#123;    &#x2F;&#x2F; YOUR CODE HEREif (omp_test_lock(&amp;lock))&#x2F;&#x2F; END OF YOUR CODE&#123;printf(&quot;%d+\n&quot;, omp_get_thread_num());printf(&quot;%d-\n&quot;, omp_get_thread_num());omp_unset_lock(&amp;lock);&#125;else&#123;printf(&quot;fail to get lock\n&quot;);&#125;&#125;omp_destroy_lock(&amp;lock);return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="omp-set-dynamic"><a href="#omp-set-dynamic" class="headerlink" title="omp_set_dynamic"></a>omp_set_dynamic</h2><p>该函数可以设置是否允许在运行时动态调整并行区域的线程数。<br>函数原型：<br>void omp_set_dynamic(int)<br>当参数为0时，动态调整被禁用。<br>当参数为非0值时，系统会自动调整线程以最佳利用系统资源。<br><em>注意：由于程序并行执行，每次输出的结果可能会有所区别。</em></p><p><strong>运行结果</strong></p><pre class="line-numbers language-none"><code class="language-none">0123<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-omp" data-language="omp"><code class="language-omp">#include &lt;stdio.h&gt;#include &lt;omp.h&gt;int main(int argc, char* argv[])&#123;    int i;    &#x2F;&#x2F; YOUR CODE HEREomp_set_dynamic(1);&#x2F;&#x2F; END OF YOUR CODE#pragma omp parallel forfor (i &#x3D; 0; i &lt; 4; i++)&#123;printf(&quot;%d\n&quot;, omp_get_thread_num());&#125;return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="omp-get-dynamic"><a href="#omp-get-dynamic" class="headerlink" title="omp_get_dynamic"></a>omp_get_dynamic</h2><p>该函数可以返回当前程序是否允许在运行时动态调整并行区域的线程数。<br>函数原型<br>int omp_get_dynamic()<br>当返回值为非0时表示允许系统动态调整线程。<br>当返回值为0时表示不允许。<br><em>注意：由于程序并行执行，每次输出的结果可能会有所区别。</em></p><p><strong>运行结果</strong></p><pre class="line-numbers language-none"><code class="language-none">01111<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-omp" data-language="omp"><code class="language-omp">#include &lt;stdio.h&gt;#include &lt;omp.h&gt;int main(int argc, char* argv[])&#123;    int i;printf(&quot;%d\n&quot;, omp_get_dynamic());omp_set_dynamic(1);#pragma omp parallel forfor (i &#x3D; 0; i &lt; 4; i++)&#123;    &#x2F;&#x2F; YOUR CODE HEREprintf(&quot;%d\n&quot;, omp_get_dynamic());&#x2F;&#x2F; END OF YOUR CODE&#125;return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 分布式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分布式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pthreads</title>
      <link href="/posts/ef25.html"/>
      <url>/posts/ef25.html</url>
      
        <content type="html"><![CDATA[<h1 id="Pthreads"><a href="#Pthreads" class="headerlink" title="Pthreads"></a>Pthreads</h1><h2 id="创建和终止"><a href="#创建和终止" class="headerlink" title="创建和终止"></a>创建和终止</h2><p>本节展示了两个最基本的线程管理函数——创建与终止线程。</p><ul><li><code>pthread.h</code>头文件的引入</li><li><code>pthread_create</code>创建线程</li><li><code>pthread_exit</code>终止线程</li></ul><p>欢迎来到Posix Threads的世界。</p><p>为了编写Pthreads程序。首先，我们应包含头文件<code>&lt;pthread.h&gt;</code>。这个头文件包含了Pthreads程序的必要函数。</p><p>同时，我们也需要引入这些函数实现线程化的功能。</p><h3 id="函数说明"><a href="#函数说明" class="headerlink" title="函数说明"></a>函数说明</h3><p>创建线程</p><pre class="line-numbers language-none"><code class="language-none">int pthread_create(pthread_t * thread,    const pthread_attr_t * attr,   void * (*start_routine)(void *),    void *arg);参数：thread - 指向线程的指针。attr - 指向线程属性的指针。可设置为NULL。start_routine - 用于线程化的函数指针。arg - 指向函数参数的指针。返回值：线程标识id<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>pthread_create</code>是POSIX线程库中的一个函数，用于创建一个新的线程。它接受四个参数：</p><ol><li><code>pthread_t * thread</code>：这是一个指向<code>pthread_t</code>类型的指针，用于存储新创建的线程的标识符。</li><li><code>const pthread_attr_t * attr</code>：这是一个指向<code>pthread_attr_t</code>类型的指针，用于设置新线程的属性。如果设置为NULL，则使用默认属性。</li><li><code>void * (*start_routine)(void *)</code>：这是一个函数指针，指向新线程的入口点函数。这个函数将在新线程中执行。</li><li><code>void *arg</code>：这是传递给入口点函数的参数。</li></ol><p>函数返回0表示成功，非0表示失败。</p><p>退出线程</p><pre class="line-numbers language-none"><code class="language-none">void pthread_exit(void *retval);参数：retval - 指向线程返回值的指针。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><code>pthread_exit(void *retval)</code> 是一个用于终止线程的函数，它接受一个 <code>void *</code> 类型的参数 <code>retval</code>。当线程调用此函数时，它将立即返回，并将 <code>retval</code> 作为线程的退出状态传递给操作系统。</p><p><code>pthread_exit(void *retval);</code> 是一个用于终止线程的函数，它接受一个指向返回值的指针作为参数。当线程调用此函数时，它将立即终止，并将指定的返回值传递给调用者。</p><p>输出结果</p><blockquote><p>In main: creating thread 0<br>In main: creating thread 1<br>Hello World!<br>In main: creating thread 2<br>In main: creating thread 3<br>Hello World!<br>Hello World!<br>Hello World!</p></blockquote><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span> </span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span> </span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">NUM_THREADS</span><span class="token expression"><span class="token number">4</span></span></span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">PrintHello</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>null<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello World!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">pthread_exit</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>  <span class="token keyword">int</span> <span class="token function">main</span> <span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token class-name">pthread_t</span> threads<span class="token punctuation">[</span>NUM_THREADS<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">int</span> rc<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> t<span class="token punctuation">;</span> <span class="token keyword">for</span><span class="token punctuation">(</span>t<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> t<span class="token operator">&lt;</span>NUM_THREADS<span class="token punctuation">;</span> t<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"In main: creating thread %d\n"</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//your code here</span>rc <span class="token operator">=</span> <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>threads<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> PrintHello<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//end of your code</span><span class="token keyword">if</span> <span class="token punctuation">(</span>rc<span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"ERROR; return code from pthread_create() is %d\n"</span><span class="token punctuation">,</span> rc<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">exit</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token function">pthread_exit</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="向线程传递参数-1"><a href="#向线程传递参数-1" class="headerlink" title="向线程传递参数(1)"></a>向线程传递参数(1)</h2><p>本节展示了最基本的线程创建，以及向线程传递单个参数的方法。</p><ul><li><code>pthread_create</code>创建线程</li><li><code>pthread_exit</code>终止线程</li></ul><p>本例用<code>pthread_create</code>创建了4个线程。</p><p>用于线程化的线程接收唯一一个参数。</p><p>每一个线程都会打印一条表明自己线程id的消息，然后调用<code>pthread_exit</code>终止线程。</p><p>输出结果</p><p>由于并行程序执行顺序的不确定性，你的结果的顺序可能和这个结果不一致。<br>为了比较输出结果，请将环境设置中的并行核数调为1。<br>本实验暂不支持性能评测。</p><blockquote><p>In main: creating thread 0<br>In main: creating thread 1<br>Hello World! It’s me, thread #0!<br>In main: creating thread 2<br>Hello World! It’s me, thread #1!<br>In main: creating thread 3<br>Hello World! It’s me, thread #2!<br>Hello World! It’s me, thread #3!</p></blockquote><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span> </span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">NUM_THREADS</span><span class="token expression"><span class="token number">4</span></span></span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">PrintHello</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>threadid<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token keyword">int</span> tid<span class="token punctuation">;</span> tid <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token punctuation">)</span>threadid<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello World! It's me, thread #%d!\n"</span><span class="token punctuation">,</span> tid<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">free</span><span class="token punctuation">(</span>threadid<span class="token punctuation">)</span><span class="token punctuation">;</span>threadid <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token function">pthread_exit</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>  <span class="token keyword">int</span> <span class="token function">main</span> <span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token class-name">pthread_t</span> threads<span class="token punctuation">[</span>NUM_THREADS<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">int</span> rc<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> t<span class="token punctuation">;</span> <span class="token keyword">for</span><span class="token punctuation">(</span>t<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> t<span class="token operator">&lt;</span>NUM_THREADS<span class="token punctuation">;</span> t<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"In main: creating thread %d\n"</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">int</span><span class="token operator">*</span> id <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">*</span>id <span class="token operator">=</span> t<span class="token punctuation">;</span><span class="token comment">//your code here</span>rc <span class="token operator">=</span> <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>threads<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> PrintHello<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//end of your code</span><span class="token keyword">if</span> <span class="token punctuation">(</span>rc<span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"ERROR; return code from pthread_create() is %d"</span><span class="token punctuation">,</span> rc<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">exit</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token function">pthread_exit</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="向线程传递参数-2"><a href="#向线程传递参数-2" class="headerlink" title="向线程传递参数(2)"></a>向线程传递参数(2)</h2><p>本节展示了向线程传递非空参数的方法。</p><ul><li><code>pthread_create</code>创建线程，接收多参数</li></ul><p>很多时候，用于线程化的函数需要接收不止一个参数。<br>当多个参数需要被传递时，可以通过定义一个结构体包含所有要传的参数，然后用<code>pthread_create</code>传递一个指向改结构体的指针，来打破传递参数的个数的限制。</p><h3 id="输出结果"><a href="#输出结果" class="headerlink" title="输出结果"></a>输出结果</h3><p>由于并行程序执行顺序的不确定性，你的结果的顺序可能和这个结果不一致。</p><blockquote><p>msg: apple on thread 0<br>msg: cat on thread 2<br>msg: banana on thread 1<br>msg: dog on thread 3</p></blockquote><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span> </span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">NUM_THREADS</span>   <span class="token expression"><span class="token number">4</span></span></span><span class="token keyword">struct</span> <span class="token class-name">thread_data</span><span class="token punctuation">&#123;</span> <span class="token keyword">int</span>  thread_id<span class="token punctuation">;</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>message<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>thread_data_array<span class="token punctuation">[</span>NUM_THREADS<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">Print</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>threadarg<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">struct</span> <span class="token class-name">thread_data</span> <span class="token operator">*</span>my_data<span class="token punctuation">;</span> my_data <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">thread_data</span> <span class="token operator">*</span><span class="token punctuation">)</span> threadarg<span class="token punctuation">;</span> <span class="token keyword">int</span> taskid<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> msg<span class="token punctuation">;</span>taskid <span class="token operator">=</span> my_data<span class="token operator">-></span>thread_id<span class="token punctuation">;</span> msg <span class="token operator">=</span> my_data<span class="token operator">-></span>message<span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"msg: %s on thread %d\n"</span><span class="token punctuation">,</span> msg<span class="token punctuation">,</span> taskid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">pthread_exit</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>  <span class="token keyword">int</span> <span class="token function">main</span> <span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">pthread_t</span> threads<span class="token punctuation">[</span>NUM_THREADS<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">int</span> t<span class="token punctuation">,</span> rc<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> messages<span class="token punctuation">[</span>NUM_THREADS<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"apple"</span><span class="token punctuation">,</span> <span class="token string">"banana"</span><span class="token punctuation">,</span> <span class="token string">"cat"</span><span class="token punctuation">,</span> <span class="token string">"dog"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>t <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> t <span class="token operator">&lt;</span> NUM_THREADS<span class="token punctuation">;</span> t<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>thread_data_array<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>thread_id <span class="token operator">=</span> t<span class="token punctuation">;</span> thread_data_array<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span>message <span class="token operator">=</span> messages<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//your code here</span>rc <span class="token operator">=</span> <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>threads<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> Print<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>thread_data_array<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//end of your code</span><span class="token keyword">if</span> <span class="token punctuation">(</span>rc<span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"ERROR; return code from pthread_create() is %d"</span><span class="token punctuation">,</span> rc<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">exit</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token function">pthread_exit</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="线程属性-线程连接和分离-1"><a href="#线程属性-线程连接和分离-1" class="headerlink" title="线程属性 - 线程连接和分离(1)"></a>线程属性 - 线程连接和分离(1)</h2><p>本节展示了线程连接和分离的基本知识。</p><ul><li><code>pthread_join</code>主线程挂起直至目标进程返回</li><li><code>pthread_attr_init</code>初始化属性对象</li><li><code>pthread_attr_destroy</code>销毁属性对象</li><li><code>pthread_attr_setdetachstate</code>设置属性对象的分离状态</li></ul><p>当一个线程被创建，它有一个属性定义了它是可连接的(joinable)还是分离的(detached)。只有是可连接的线程才能被连接(joined)，若果创建的线程是分离的，则不能连接。<br><code>pthread_join</code>函数阻塞主线程直到指定的线程终止。“连接”是一种在线程间完成同步的方法。<br><code>pthread_detach</code>函数可以显式用于分离线程。</p><p>使用<code>pthread_create</code>的attr参数可以显式的创建可连接或分离的线程，典型四步如下：</p><ol><li>声明一个<code>pthread_attr_t</code>数据类型的线程属性变量</li><li>用<code>pthread_attr_init</code>初始化改属性变量</li><li>用<code>pthread_attr_setdetachstate</code>设置可分离状态属性</li><li>完了后，用<code>pthread_attr_destroy</code>释放属性所占用的库资源</li></ol><h3 id="函数说明-1"><a href="#函数说明-1" class="headerlink" title="函数说明"></a>函数说明</h3><p>主线程挂起直至目标进程返回</p><pre class="line-numbers language-none"><code class="language-none">int pthread_join(pthread_t thread, void **retval);参数：thread - 线程id，标识唯一线程。retval - 用户定义的指针，用来存储被等待线程的返回值。返回值：0代表成功。若失败，返回的则是错误号。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>pthread_join</code> 是一个用于等待线程结束的函数，它接受两个参数：一个是要等待的线程标识符 <code>pthread_t thread</code>，另一个是指向返回值的指针 <code>void **retval</code>。当线程结束时，<code>pthread_join</code> 会将线程的返回值存储在 <code>retval</code> 指向的内存中。</p><p>函数原型如下：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">pthread_join</span><span class="token punctuation">(</span><span class="token class-name">pthread_t</span> thread<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span><span class="token operator">*</span>retval<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参数说明：</p><ul><li><code>thread</code>：要等待的线程标识符。</li><li><code>retval</code>：指向返回值的指针。如果线程正常结束，该指针将被设置为线程的返回值；如果线程被其他线程阻塞，该指针将被设置为NULL。</li></ul><p>返回值：</p><ul><li>如果成功等待线程结束并获取返回值，返回0；</li><li>如果线程已经结束，返回0；</li><li>如果发生错误，返回非0值。</li></ul></blockquote><p>初始化属性对象</p><pre class="line-numbers language-none"><code class="language-none">int pthread_attr_init(pthread_attr_t *attr);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><code>int pthread_attr_init(pthread_attr_t *attr);</code> 是一个用于初始化线程属性的函数。它接受一个指向 <code>pthread_attr_t</code> 类型的指针作为参数，该指针用于存储线程属性的结构体。如果函数成功执行，它将返回0；否则，返回非0值。</p><p>以下是一个简单的示例代码，演示如何使用 <code>pthread_attr_init</code> 函数：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token class-name">pthread_attr_t</span> attr<span class="token punctuation">;</span> <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token function">pthread_attr_init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>attr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"线程属性初始化成功\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// 在这里可以对线程属性进行进一步的配置和设置</span>     <span class="token comment">// 在完成线程属性的使用后，记得释放资源</span>     <span class="token function">pthread_attr_destroy</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>attr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>     <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"线程属性初始化失败\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>请注意，在使用完线程属性后，需要调用 <code>pthread_attr_destroy</code> 函数来释放相关资源。</p></blockquote><p>销毁属性对象</p><pre class="line-numbers language-none"><code class="language-none">int pthread_attr_destroy(pthread_attr_t *attr);参数：attr - 指向线程属性对象的指针。返回值：0代表成功。若失败，返回的则是错误号。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>int pthread_attr_destroy(pthread_attr_t *attr);</code> 是一个用于销毁线程属性的函数。它接受一个指向 <code>pthread_attr_t</code> 类型的指针作为参数，该指针指向要销毁的线程属性结构体。如果函数成功执行，它将返回0；否则，返回非0值。</p><p>以下是一个简单的示例代码，演示如何使用 <code>pthread_attr_destroy</code> 函数：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token class-name">pthread_attr_t</span> attr<span class="token punctuation">;</span> <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token function">pthread_attr_init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>attr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token comment">// 在这里可以对线程属性进行进一步的配置和设置</span>     <span class="token comment">// 在完成线程属性的使用后，记得销毁它</span>     result <span class="token operator">=</span> <span class="token function">pthread_attr_destroy</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>attr<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"线程属性销毁成功\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>         <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"线程属性销毁失败\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>     <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"线程属性初始化失败\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><p>设置属性对象的分离状态</p><pre class="line-numbers language-none"><code class="language-none">int pthread_attr_setdetachstate(const pthread_attr_t *attr,                                int *detachstate);参数：attr - 指向线程属性对象的指针。detachstate - 设置可分离(PTHREAD_CREATE_DETACHED）或可连接属性(PTHREAD_CREATE_JOINABLE)。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>pthread_attr_setdetachstate</code> 是一个用于设置线程属性的函数，它允许你指定线程在创建后是否应该自动分离。该函数接受两个参数：</p><ol><li><code>const pthread_attr_t *attr</code>：指向要设置的属性对象的指针。这个对象包含了线程的属性信息，例如堆栈大小、优先级等。</li><li><code>int *detachstate</code>：指向一个整数变量的指针，用于存储设置的分离状态。你可以使用以下值之一来指定分离状态：<ul><li><code>PTHREAD_CREATE_JOINABLE</code>：线程可以在其他线程中被连接（join），即主线程可以等待子线程完成执行。这是默认的分离状态。</li><li><code>PTHREAD_CREATE_DETACHED</code>：线程在创建后将自动分离，即主线程无法等待其完成执行。</li></ul></li></ol><p>函数返回0表示成功设置了分离状态，非零值表示出现错误。</p><p>下面是一个示例代码，演示如何使用 <code>pthread_attr_setdetachstate</code> 函数来设置线程的分离状态：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">pthread_attr_t</span> attr<span class="token punctuation">;</span>    <span class="token keyword">int</span> detachstate <span class="token operator">=</span> PTHREAD_CREATE_JOINABLE<span class="token punctuation">;</span> <span class="token comment">// 设置分离状态为可连接</span>    <span class="token comment">// 初始化属性对象</span>    <span class="token function">pthread_attr_init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>attr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 设置分离状态</span>    <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token function">pthread_attr_setdetachstate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>attr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>detachstate<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 处理错误情况</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Failed to set detach state\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 分离状态设置成功，继续执行其他操作</span>        <span class="token comment">// ...</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 销毁属性对象</span>    <span class="token function">pthread_attr_destroy</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>attr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>请注意，在使用 <code>pthread_attr_setdetachstate</code> 函数之前，你需要先初始化属性对象，并在使用完毕后销毁它。</p></blockquote><p>运行结果</p><p>由于并行程序执行顺序的不确定性，你的结果的顺序可能和这个结果不一致。<br>为了比较输出结果，请将环境设置中的并行核数调为1。<br>本实验暂不支持性能评测。</p><blockquote><p>Creating thread 0<br>Creating thread 1<br>Creating thread 2<br>Thread 0 is running<br>Creating thread 3<br>Thread 1 is running<br>Thread 2 is running<br>Completed join with thread 0<br>Thread 3 is running<br>Completed join with thread 1<br>Completed join with thread 2<br>Completed join with thread 3</p></blockquote><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span> </span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span> </span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">NUM_THREADS</span> <span class="token expression"><span class="token number">4</span> </span></span> <span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">Print</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>threadid<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Thread %d is running\n"</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token punctuation">)</span>threadid<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">free</span><span class="token punctuation">(</span>threadid<span class="token punctuation">)</span><span class="token punctuation">;</span>threadid <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token function">pthread_exit</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>  <span class="token keyword">int</span> <span class="token function">main</span> <span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token class-name">pthread_t</span> thread<span class="token punctuation">[</span>NUM_THREADS<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token class-name">pthread_attr_t</span> attr<span class="token punctuation">;</span> <span class="token keyword">int</span> rc<span class="token punctuation">,</span> t<span class="token punctuation">;</span>  <span class="token function">pthread_attr_init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>attr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//your code here</span><span class="token function">pthread_attr_setdetachstate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>attr<span class="token punctuation">,</span> PTHREAD_CREATE_JOINABLE<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//end of your code</span><span class="token keyword">for</span><span class="token punctuation">(</span>t<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> t<span class="token operator">&lt;</span>NUM_THREADS<span class="token punctuation">;</span> t<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token keyword">int</span><span class="token operator">*</span> id <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">*</span>id <span class="token operator">=</span> t<span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Creating thread %d\n"</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span> rc <span class="token operator">=</span> <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>thread<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>attr<span class="token punctuation">,</span> Print<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>rc<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"ERROR; return code from pthread_create() is %d\n"</span><span class="token punctuation">,</span> rc<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">exit</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token function">pthread_attr_destroy</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>attr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">for</span><span class="token punctuation">(</span>t<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> t<span class="token operator">&lt;</span>NUM_THREADS<span class="token punctuation">;</span> t<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">//your code here</span>rc <span class="token operator">=</span> <span class="token function">pthread_join</span><span class="token punctuation">(</span>thread<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//end of your code</span><span class="token keyword">if</span> <span class="token punctuation">(</span>rc<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"ERROR; return code from pthread_join() is %d\n"</span><span class="token punctuation">,</span> rc<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">exit</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Completed join with thread %d\n"</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>  <span class="token function">pthread_exit</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="线程属性-栈管理"><a href="#线程属性-栈管理" class="headerlink" title="线程属性 - 栈管理"></a>线程属性 - 栈管理</h2><p>本节展示了获取与设置当前线程的栈空间的方法。</p><ul><li><code>pthread_attr_getstacksize</code>获取当前线程的栈空间</li><li><code>pthread_attr_setstacksize</code>设置当前线程的栈空间</li></ul><p>POSIX标准并没有指定线程栈的大小，依赖于实现并随实现变化。</p><p>很容易超出默认的栈大小，常见结果：程序终止或者数据损坏。</p><p>安全和可移植的程序应该不依赖于默认的栈限制，但是取而代之的是用<code>pthread_attr_setstacksize</code>分配足够的栈大小。</p><p><code>pthread_attr_getstackaddr</code>和<code>pthread_attr_setstackaddr</code>函数可以被程序用于将栈设置在指定的内存区域。</p><h3 id="函数说明-2"><a href="#函数说明-2" class="headerlink" title="函数说明"></a>函数说明</h3><p>获取当前线程的栈空间</p><pre class="line-numbers language-none"><code class="language-none">int pthread_attr_getstacksize(const pthread_attr_t *restrict attr,                              size_t *restrict stacksize);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p><code>pthread_attr_getstacksize</code> 是一个用于获取线程属性中栈大小的函数。它接受两个参数：一个指向 <code>pthread_attr_t</code> 类型的指针，表示要查询的线程属性；另一个是指向 <code>size_t</code> 类型的指针，用于存储查询到的栈大小。</p><p>函数原型如下：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">pthread_attr_getstacksize</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token class-name">pthread_attr_t</span> <span class="token operator">*</span>restrict attr<span class="token punctuation">,</span> <span class="token class-name">size_t</span> <span class="token operator">*</span>restrict stacksize<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>该函数返回一个整数，如果成功获取到栈大小，则返回0；否则返回非零值。</p><p>以下是一个示例代码，演示如何使用 <code>pthread_attr_getstacksize</code> 函数来获取线程属性中的栈大小：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token class-name">pthread_attr_t</span> attr<span class="token punctuation">;</span> <span class="token class-name">size_t</span> stacksize<span class="token punctuation">;</span> <span class="token comment">// 初始化线程属性对象</span> <span class="token function">pthread_attr_init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>attr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取线程属性中的栈大小</span> <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token function">pthread_attr_getstacksize</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>attr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>stacksize<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Stack size: %zu\n"</span><span class="token punctuation">,</span> stacksize<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>     <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Failed to get stack size\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token comment">// 销毁线程属性对象</span> <span class="token function">pthread_attr_destroy</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>attr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在上述示例中，我们首先创建了一个 <code>pthread_attr_t</code> 类型的变量 <code>attr</code>，然后使用 <code>pthread_attr_init</code> 函数进行初始化。接下来，调用 <code>pthread_attr_getstacksize</code> 函数来获取线程属性中的栈大小，并将结果存储在 <code>stacksize</code> 变量中。最后，根据返回值判断是否成功获取到栈大小，并打印相应的信息。最后，记得使用 <code>pthread_attr_destroy</code> 函数销毁线程属性对象。</p></blockquote><p>设置当前线程的栈空间</p><pre class="line-numbers language-none"><code class="language-none">int pthread_attr_setstacksize(pthread_attr_t *attr, size_t stacksize);参数：attr - 指向线程属性的指针stacksize - 栈空间大小返回值：0代表成功。若失败，返回的则是错误号。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注：restrict为C语言保留字，用于编译器优化。后同。</p><blockquote><p><code>pthread_attr_setstacksize</code> 是一个用于设置线程属性中栈大小的函数。它接受两个参数：一个指向 <code>pthread_attr_t</code> 类型的指针，表示要设置的线程属性；另一个是 <code>size_t</code> 类型的变量，表示要设置的栈大小。</p><p>函数原型如下：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">pthread_attr_setstacksize</span><span class="token punctuation">(</span><span class="token class-name">pthread_attr_t</span> <span class="token operator">*</span>attr<span class="token punctuation">,</span> <span class="token class-name">size_t</span> stacksize<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>该函数返回一个整数，如果成功设置栈大小，则返回0；否则返回非零值。</p><p>以下是一个示例代码，演示如何使用 <code>pthread_attr_setstacksize</code> 函数来设置线程属性中的栈大小：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token class-name">pthread_attr_t</span> attr<span class="token punctuation">;</span> <span class="token class-name">size_t</span> stacksize <span class="token operator">=</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">;</span> <span class="token comment">// 设置栈大小为1MB</span> <span class="token comment">// 初始化线程属性对象</span> <span class="token function">pthread_attr_init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>attr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置线程属性中的栈大小</span> <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token function">pthread_attr_setstacksize</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>attr<span class="token punctuation">,</span> stacksize<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token function">printf</span><span class="token punctuation">(</span>"Stack size set successfully"<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>     <span class="token function">printf</span><span class="token punctuation">(</span>"Failed to set stack size"<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token comment">// 销毁线程属性对象</span> <span class="token function">pthread_attr_destroy</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>attr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在上述示例中，我们首先创建了一个 <code>pthread_attr_t</code> 类型的变量 <code>attr</code>，然后使用 <code>pthread_attr_init</code> 函数进行初始化。接下来，调用 <code>pthread_attr_setstacksize</code> 函数来设置线程属性中的栈大小，并将结果存储在 <code>stacksize</code> 变量中。最后，根据返回值判断是否成功设置栈大小，并打印相应的信息。最后，记得使用 <code>pthread_attr_destroy</code> 函数销毁线程属性对象。</p></blockquote><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p>由于并行程序执行顺序的不确定性，你的结果的顺序可能和这个结果不一致。<br>为了比较输出结果，请将环境设置中的并行核数调为1。<br>本实验暂不支持性能评测。</p><blockquote><p>Default stack size &#x3D; 0<br>Amount of stack needed per thread &#x3D; 9000000<br>Creating threads with stack size &#x3D; 9000000 bytes<br>Created 4 threads.<br>Thread 1: stack size &#x3D; 9000000 bytes<br>Thread 2: stack size &#x3D; 9000000 bytes<br>Thread 0: stack size &#x3D; 9000000 bytes<br>Thread 3: stack size &#x3D; 9000000 bytes</p></blockquote><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span> </span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span> </span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">NUMTHREADS</span> <span class="token expression"><span class="token number">4</span> </span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">N</span> <span class="token expression"><span class="token number">1000</span> </span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MEGEXTRA</span> <span class="token expression"><span class="token number">1000000</span> </span></span><span class="token class-name">pthread_attr_t</span> attr<span class="token punctuation">;</span> <span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">dowork</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>threadid<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">//The 2-dim array takes up sizeof(double)*N*N bytes.</span><span class="token keyword">double</span> A<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span>j<span class="token punctuation">,</span>tid<span class="token punctuation">;</span> <span class="token class-name">size_t</span> mystacksize<span class="token punctuation">;</span>  tid <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token punctuation">)</span>threadid<span class="token punctuation">;</span> <span class="token function">pthread_attr_getstacksize</span> <span class="token punctuation">(</span><span class="token operator">&amp;</span>attr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>mystacksize<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Thread %d: stack size = %li bytes \n"</span><span class="token punctuation">,</span> tid<span class="token punctuation">,</span> mystacksize<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>N<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token keyword">for</span> <span class="token punctuation">(</span>j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span>N<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> A<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token operator">*</span>j<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">3.452</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>N<span class="token operator">-</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">free</span><span class="token punctuation">(</span>threadid<span class="token punctuation">)</span><span class="token punctuation">;</span>threadid <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token function">pthread_exit</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token class-name">pthread_t</span> threads<span class="token punctuation">[</span>NUMTHREADS<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token class-name">size_t</span> stacksize<span class="token punctuation">;</span> <span class="token keyword">int</span> rc<span class="token punctuation">,</span> t<span class="token punctuation">;</span> <span class="token function">pthread_attr_init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>attr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//your code here</span><span class="token function">pthread_attr_getstacksize</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>attr<span class="token punctuation">,</span> <span class="token operator">&amp;</span>stacksize<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//end of your code</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Default stack size = %li\n"</span><span class="token punctuation">,</span> stacksize<span class="token punctuation">)</span><span class="token punctuation">;</span> stacksize <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span><span class="token operator">*</span>N<span class="token operator">*</span>N<span class="token operator">+</span>MEGEXTRA<span class="token punctuation">;</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Amount of stack needed per thread = %li\n"</span><span class="token punctuation">,</span>stacksize<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//your code here</span><span class="token function">pthread_attr_setstacksize</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>attr<span class="token punctuation">,</span> stacksize<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//end of your code</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Creating threads with stack size = %li bytes\n"</span><span class="token punctuation">,</span>stacksize<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">for</span><span class="token punctuation">(</span>t<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> t<span class="token operator">&lt;</span>NUMTHREADS<span class="token punctuation">;</span> t<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token keyword">int</span><span class="token operator">*</span> id <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">*</span>id <span class="token operator">=</span> t<span class="token punctuation">;</span>rc <span class="token operator">=</span> <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>threads<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>attr<span class="token punctuation">,</span> dowork<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>rc<span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"ERROR; return code from pthread_create() is %d\n"</span><span class="token punctuation">,</span> rc<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">exit</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Created %d threads.\n"</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">pthread_exit</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="互斥锁-1"><a href="#互斥锁-1" class="headerlink" title="互斥锁(1)"></a>互斥锁(1)</h2><ul><li>定义一个互斥锁</li><li><code>pthread_mutex_init</code>互斥锁的初始化</li><li><code>pthread_mutex_destroy</code>互斥锁的销毁</li><li><code>pthread_mutex_lock</code>加锁</li><li><code>pthread_mutex_unlock</code>解锁</li></ul><p>互斥锁(Mutex)是“mutual exclusion”的缩写。互斥锁是实现线程同步，和保护同时写共享数据的主要方法<br>互斥锁对共享数据的保护就像一把锁。在Pthreads中，任何时候仅有一个线程可以锁定互斥锁，因此，当多个线程尝试去锁定该互斥锁时仅有一个会成功。直到锁定互斥锁的线程解锁互斥锁后，其他线程才可以去锁定互斥锁。线程必须轮着访问受保护数据。<br>互斥锁可以防止“竞争”条件。</p><p>用互斥锁的典型顺序如下：</p><ol><li>创建和初始一个互斥锁</li><li>多个线程尝试去锁定该互斥锁</li><li>仅有一个线程可以成功锁定改互斥锁</li><li>锁定成功的线程做一些处理</li><li>线程解锁该互斥锁</li><li>另外一个线程获得互斥锁，重复上述过程</li><li>最后销毁互斥锁</li></ol><h3 id="函数说明："><a href="#函数说明：" class="headerlink" title="函数说明："></a>函数说明：</h3><p>定义一个互斥锁</p><pre class="line-numbers language-none"><code class="language-none">pthread_mutex_t mutex &#x3D; PTHREAD_MUTEX_INITIALIZER;PTHREAD_MUTEX_INITIALIZER是定义在头文件中的宏，能用于初始化静态分配空间的互斥锁。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>这是C语言中用于初始化互斥锁的代码。<code>pthread_mutex_t</code> 是互斥锁的类型，<code>PTHREAD_MUTEX_INITIALIZER</code> 是一个宏，用于初始化互斥锁。</p><p>解析：</p><ol><li><code>pthread_mutex_t mutex;</code>：声明一个互斥锁变量 <code>mutex</code>。</li><li><code>= PTHREAD_MUTEX_INITIALIZER;</code>：使用 <code>PTHREAD_MUTEX_INITIALIZER</code> 宏来初始化互斥锁。</li></ol><p>代码：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">pthread_mutex_t</span> mutex <span class="token operator">=</span> PTHREAD_MUTEX_INITIALIZER<span class="token punctuation">;</span>    <span class="token comment">// 其他代码...</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><p>互斥锁的初始化</p><pre class="line-numbers language-none"><code class="language-none">int pthread_mutex_init(pthread_mutex_t *restrict mutex,                       const pthread_mutexattr_t *restrict attr);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p><code>int pthread_mutex_init(pthread_mutex_t *restrict mutex, const pthread_mutexattr_t *restrict attr);</code> 是一个用于初始化互斥锁的函数。它接受两个参数：</p><ol><li><code>pthread_mutex_t *restrict mutex</code>：指向要初始化的互斥锁对象的指针。</li><li><code>const pthread_mutexattr_t *restrict attr</code>：指向互斥锁属性对象的指针，该对象定义了互斥锁的行为和属性。如果设置为NULL，则使用默认的属性。</li></ol><p>函数返回一个整数，表示操作的结果。如果成功，返回0；否则，返回一个非零的错误码。</p><p>以下是一个示例代码，演示如何使用 <code>pthread_mutex_init</code> 函数来初始化一个互斥锁：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">pthread_mutex_t</span> myMutex<span class="token punctuation">;</span>    <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token function">pthread_mutex_init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>myMutex<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 互斥锁初始化成功</span>        <span class="token comment">// 在这里可以使用互斥锁进行线程同步操作</span>        <span class="token comment">// ...</span>        <span class="token comment">// 释放互斥锁资源</span>        <span class="token function">pthread_mutex_destroy</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>myMutex<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 互斥锁初始化失败，处理错误情况</span>        <span class="token comment">// ...</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>请注意，在使用完互斥锁后，需要调用 <code>pthread_mutex_destroy</code> 函数来释放互斥锁资源，以避免内存泄漏。</p></blockquote><p>互斥锁的销毁</p><pre class="line-numbers language-none"><code class="language-none">int pthread_mutex_destroy(pthread_mutex_t *mutex);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><code>int pthread_mutex_destroy(pthread_mutex_t *mutex);</code> 是一个用于销毁互斥锁的函数。它接受一个指向 <code>pthread_mutex_t</code> 类型的指针作为参数，该指针指向要销毁的互斥锁对象。</p><p>当调用此函数时，它将释放互斥锁所占用的系统资源，并使互斥锁处于未锁定状态。在销毁互斥锁之前，必须先确保没有任何线程正在使用该互斥锁进行同步操作。</p><p>以下是一个示例代码，演示如何使用 <code>pthread_mutex_destroy</code> 函数来销毁互斥锁：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span></span><span class="token comment">// 创建互斥锁</span><span class="token class-name">pthread_mutex_t</span> myMutex<span class="token punctuation">;</span><span class="token function">pthread_mutex_init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>myMutex<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 执行一些需要同步的操作...</span><span class="token comment">// 销毁互斥锁</span><span class="token function">pthread_mutex_destroy</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>myMutex<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>请注意，在使用 <code>pthread_mutex_destroy</code> 函数之前，必须确保互斥锁已经被正确地初始化，并且没有其他线程正在使用它进行同步操作。</p></blockquote><p>加锁</p><pre class="line-numbers language-none"><code class="language-none">int pthread_mutex_lock(pthread_mutex_t *mutex);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><code>int pthread_mutex_lock(pthread_mutex_t *mutex);</code> 是一个用于锁定互斥锁的函数。它接受一个指向 <code>pthread_mutex_t</code> 类型的指针作为参数，该指针指向要锁定的互斥锁对象。</p><p>当调用此函数时，它将尝试获取互斥锁的所有权。如果互斥锁已经被其他线程锁定，则当前线程将被阻塞，直到互斥锁被释放。如果成功获取到互斥锁的所有权，函数将返回0；否则，返回非零错误码。</p><p>以下是一个示例代码，演示如何使用 <code>pthread_mutex_lock</code> 函数来锁定互斥锁：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span></span><span class="token comment">// 创建互斥锁</span><span class="token class-name">pthread_mutex_t</span> myMutex<span class="token punctuation">;</span><span class="token function">pthread_mutex_init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>myMutex<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 执行一些需要同步的操作...</span><span class="token comment">// 锁定互斥锁</span><span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token function">pthread_mutex_lock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>myMutex<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 互斥锁已成功锁定，可以执行临界区代码</span> <span class="token comment">// ...</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 互斥锁锁定失败，处理错误情况</span> <span class="token comment">// ...</span><span class="token punctuation">&#125;</span><span class="token comment">// 解锁互斥锁</span><span class="token function">pthread_mutex_unlock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>myMutex<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 销毁互斥锁</span><span class="token function">pthread_mutex_destroy</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>myMutex<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>请注意，在使用 <code>pthread_mutex_lock</code> 函数之前，必须确保互斥锁已经被正确地初始化，并且没有其他线程正在使用它进行同步操作。在完成对互斥锁的使用后，应该使用 <code>pthread_mutex_unlock</code> 函数来释放互斥锁的所有权，并最终使用 <code>pthread_mutex_destroy</code> 函数来销毁互斥锁对象。</p></blockquote><p>解锁</p><pre class="line-numbers language-none"><code class="language-none">int pthread_mutex_unlock(pthread_mutex_t *mutex);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><code>int pthread_mutex_unlock(pthread_mutex_t *mutex);</code> 是一个用于解锁互斥锁的函数。它接受一个指向 <code>pthread_mutex_t</code> 类型的指针作为参数，该指针指向要解锁的互斥锁对象。</p><p>当调用此函数时，它将释放互斥锁的所有权，并允许其他线程获取互斥锁进行同步操作。如果成功解锁互斥锁，函数将返回0；否则，返回非零错误码。</p><p>以下是一个示例代码，演示如何使用 <code>pthread_mutex_unlock</code> 函数来解锁互斥锁：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span></span><span class="token comment">// 创建互斥锁</span><span class="token class-name">pthread_mutex_t</span> myMutex<span class="token punctuation">;</span><span class="token function">pthread_mutex_init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>myMutex<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 执行一些需要同步的操作...</span><span class="token comment">// 锁定互斥锁</span><span class="token function">pthread_mutex_lock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>myMutex<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 执行临界区代码</span><span class="token comment">// ...</span><span class="token comment">// 解锁互斥锁</span><span class="token function">pthread_mutex_unlock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>myMutex<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 销毁互斥锁</span><span class="token function">pthread_mutex_destroy</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>myMutex<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>请注意，在使用 <code>pthread_mutex_unlock</code> 函数之前，必须确保互斥锁已经被正确地初始化，并且当前线程已经获得了互斥锁的所有权。在完成对互斥锁的使用后，应该使用 <code>pthread_mutex_destroy</code> 函数来销毁互斥锁对象。</p></blockquote><h3 id="运行结果："><a href="#运行结果：" class="headerlink" title="运行结果："></a>运行结果：</h3><blockquote><p>0<br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10</p></blockquote><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span>  </span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span>  </span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h></span>  </span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span>  <span class="token keyword">int</span> i<span class="token punctuation">;</span>  <span class="token class-name">pthread_mutex_t</span> mutex1<span class="token punctuation">;</span>    <span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">readfunction</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">writefunction</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>  <span class="token class-name">pthread_t</span> thread1<span class="token punctuation">,</span>thread2<span class="token punctuation">;</span>    i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token comment">//your code here</span><span class="token function">pthread_mutex_init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mutex1<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//end of your code</span><span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>thread1<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">,</span>readfunction<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>thread2<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">,</span>writefunction<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">pthread_join</span><span class="token punctuation">(</span>thread1<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">pthread_join</span><span class="token punctuation">(</span>thread2<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//your code here</span><span class="token function">pthread_mutex_destroy</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mutex1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//end of your code</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>    <span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">readfunction</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> args<span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>  <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>  <span class="token function">usleep</span><span class="token punctuation">(</span><span class="token number">1500</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">>=</span> <span class="token number">10</span><span class="token punctuation">)</span>  <span class="token keyword">break</span><span class="token punctuation">;</span>  <span class="token function">pthread_mutex_lock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mutex1<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">pthread_mutex_unlock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mutex1<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>    <span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">writefunction</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> args<span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>  <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>  <span class="token function">pthread_mutex_lock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mutex1<span class="token punctuation">)</span><span class="token punctuation">;</span>  i<span class="token operator">++</span><span class="token punctuation">;</span>  <span class="token function">pthread_mutex_unlock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mutex1<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">usleep</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="互斥锁-2"><a href="#互斥锁-2" class="headerlink" title="互斥锁(2)"></a>互斥锁(2)</h2><ul><li><code>pthread_mutex_trylock</code>是<code>pthread_mutex_lock</code>的非阻塞版本，调用后立即返回。</li></ul><h3 id="函数原型"><a href="#函数原型" class="headerlink" title="函数原型"></a>函数原型</h3><pre class="line-numbers language-none"><code class="language-none">int pthread_mutex_trylock(pthread_mutex_t *mutex); <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>int pthread_mutex_trylock(pthread_mutex_t *mutex);</code> 是一个用于尝试获取互斥锁的函数。它接受一个指向 <code>pthread_mutex_t</code> 类型的指针作为参数，该指针指向要锁定的互斥锁对象。</p><p>如果成功获取到互斥锁的所有权，函数将返回0；否则，返回非零错误码。这个函数与 <code>pthread_mutex_lock</code> 函数类似，但不会阻塞当前线程，而是立即返回结果。这在某些情况下可能更有用，例如在高并发场景下，可以避免不必要的线程阻塞。</p><h3 id="运行结果-1"><a href="#运行结果-1" class="headerlink" title="运行结果"></a>运行结果</h3><blockquote><p>pthread b trylock<br>the main close</p></blockquote><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token class-name">pthread_mutex_t</span> mutex<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">thread_a</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>arg<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">pthread_mutex_lock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mutex<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_mutex_unlock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mutex<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">thread_b</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>arg<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token comment">/*your code here*/</span><span class="token function">pthread_mutex_trylock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mutex<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"pthread b trylock\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">pthread_mutex_unlock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mutex<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">pthread_t</span> tid_a<span class="token punctuation">,</span>tid_b<span class="token punctuation">;</span>    <span class="token function">pthread_mutex_init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mutex<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>tid_a<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">,</span>thread_a<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>tid_b<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">,</span>thread_b<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_join</span><span class="token punctuation">(</span>tid_a<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_join</span><span class="token punctuation">(</span>tid_b<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"the main close\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="条件变量-1"><a href="#条件变量-1" class="headerlink" title="条件变量(1)"></a>条件变量(1)</h2><ul><li>条件变量的初始化</li><li><code>pthread_cond_init</code>创建条件变量</li><li><code>pthread_cond_destroy</code>删除条件变量</li><li><code>pthread_cond_wait</code>等待条件变量为真</li><li><code>pthread_cond_signal</code>解锁阻塞在条件变量上的进程</li></ul><h3 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤"></a>实验步骤</h3><p>条件变量是用来通知共享数据状态信息的。<br>条件变量机制允许进程停止当前的执行，让出CPU时间，直到条件为真。<br>每个条件变量必须与一个特定的互斥量相关联以避免死锁。</p><p><code>pthread_cond_wait</code>总和一个互斥锁结合使用。<br>在调用<code>pthread_cond_wait</code>前要先获取锁。<br><code>pthread_cond_wait</code>函数执行时先自动释放指定的锁，然后等待条件变量的变化。在函数调用返回之前，自动将指定的互斥量重新锁住。<br>调用<code>pthread_cond_signal</code>后要立刻释放互斥锁。</p><h3 id="函数说明-3"><a href="#函数说明-3" class="headerlink" title="函数说明"></a>函数说明</h3><p>初始化</p><pre class="line-numbers language-none"><code class="language-none">pthread_cond_t cod &#x3D; PTHREAD_COND_INITIALIZER;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><code>pthread_cond_t cod = PTHREAD_COND_INITIALIZER;</code> 这行代码是用于初始化一个条件变量 <code>cod</code>。条件变量是一种同步原语，用于在多线程环境中实现线程间的同步和通信。</p><p>在这段代码中，<code>PTHREAD_COND_INITIALIZER</code> 是一个宏定义，它表示一个已经初始化的条件变量对象。通过将其赋值给 <code>cod</code>，我们可以将这个条件变量对象与 <code>cod</code> 关联起来。</p><p>使用条件变量可以使得多个线程等待某个条件成立时才继续执行。例如，当一个线程需要等待另一个线程完成某个任务后才能继续执行时，可以使用条件变量来实现这种同步机制。</p><p>以下是一个示例代码片段，演示如何使用条件变量进行线程同步：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token comment">// 全局变量作为条件变量的标识符</span><span class="token class-name">pthread_cond_t</span> cond <span class="token operator">=</span> PTHREAD_COND_INITIALIZER<span class="token punctuation">;</span><span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">thread1</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> arg<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 线程1等待条件变量满足</span> <span class="token function">pthread_cond_wait</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cond<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Thread 1: Condition satisfied!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">thread2</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> arg<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 线程2等待条件变量满足</span> <span class="token function">pthread_cond_wait</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cond<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Thread 2: Condition satisfied!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token class-name">pthread_t</span> t1<span class="token punctuation">,</span> t2<span class="token punctuation">;</span> <span class="token comment">// 创建两个线程并启动</span> <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>t1<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> thread1<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>t2<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> thread2<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 主线程等待一段时间，模拟其他操作</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 发送信号通知条件变量已满足</span> <span class="token function">pthread_cond_signal</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cond<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">pthread_cond_signal</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cond<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 等待线程结束</span> <span class="token function">pthread_join</span><span class="token punctuation">(</span>t1<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">pthread_join</span><span class="token punctuation">(</span>t2<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在上面的示例中，我们创建了两个线程 <code>thread1</code> 和 <code>thread2</code>，它们都等待条件变量 <code>cond</code> 被满足。在主线程中，我们通过调用 <code>pthread_cond_signal</code> 函数来发送信号，通知条件变量已满足。这样，等待的线程就可以继续执行了。</p></blockquote><p>创建条件变量</p><pre class="line-numbers language-none"><code class="language-none">int pthread_cond_init(pthread_cond_t *cond, pthread_condattr_t *condattr);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><code>int pthread_cond_init(pthread_cond_t *cond, pthread_condattr_t *condattr);</code> 是一个用于初始化条件变量的函数。它接受两个参数：</p><ol><li><code>pthread_cond_t *cond</code>：指向要初始化的条件变量的指针。</li><li><code>pthread_condattr_t *condattr</code>：指向条件变量属性的指针，可以为 NULL。如果为 NULL，则使用默认属性。</li></ol><p>函数返回一个整数，表示操作的结果。如果成功，返回 0；否则，返回错误码。</p></blockquote><p>删除条件变量</p><pre class="line-numbers language-none"><code class="language-none">int pthread_cond_destroy(pthread_cond_t *cond);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><code>int pthread_cond_destroy(pthread_cond_t *cond);</code> 是一个用于销毁条件变量的函数。它接受一个指向要销毁的条件变量的指针作为参数。</p><p>函数返回一个整数，表示操作的结果。如果成功，返回 0；否则，返回错误码。</p></blockquote><p>等待条件变量为真</p><pre class="line-numbers language-none"><code class="language-none">int pthread_cond_wait(pthread_cond_t *restrict cond, pthread_mutex_t *restrict mutex);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><code>int pthread_cond_wait(pthread_cond_t *restrict cond, pthread_mutex_t *restrict mutex);</code> 是一个用于线程等待条件的函数。它接受两个参数：</p><ol><li><code>pthread_cond_t *restrict cond</code>：指向要等待的条件变量的指针。</li><li><code>pthread_mutex_t *restrict mutex</code>：指向互斥锁的指针，用于保护条件变量。</li></ol><p>函数返回一个整数，表示操作的结果。如果成功，返回 0；否则，返回错误码。</p></blockquote><p>解锁阻塞在条件变量上的进程</p><pre class="line-numbers language-none"><code class="language-none">int pthread_cond_signal(pthread_cond_t *cond);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><code>int pthread_cond_signal(pthread_cond_t *cond);</code> 是一个用于唤醒等待条件变量的线程的函数。它接受一个指向条件变量的指针作为参数。</p><p>函数返回一个整数，表示操作的结果。如果成功，返回 0；否则，返回错误码。</p></blockquote><h3 id="运行结果-2"><a href="#运行结果-2" class="headerlink" title="运行结果"></a>运行结果</h3><blockquote><p>Counter value functionCount1: 1<br>Counter value functionCount2: 2<br>Counter value functionCount1: 3<br>Counter value functionCount2: 4<br>Counter value functionCount2: 5<br>Counter value functionCount2: 6<br>Counter value functionCount2: 7<br>Counter value functionCount2: 8<br>Counter value functionCount1: 9<br>Counter value functionCount2: 10<br>Counter value functionCount1: 11</p></blockquote><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span></span><span class="token class-name">pthread_mutex_t</span> count_mutex     <span class="token operator">=</span> PTHREAD_MUTEX_INITIALIZER<span class="token punctuation">;</span><span class="token class-name">pthread_mutex_t</span> condition_mutex <span class="token operator">=</span> PTHREAD_MUTEX_INITIALIZER<span class="token punctuation">;</span><span class="token class-name">pthread_cond_t</span>  condition_cond  <span class="token operator">=</span> PTHREAD_COND_INITIALIZER<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">functionCount1</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">functionCount2</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span>  count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">COUNT_DONE</span>  <span class="token expression"><span class="token number">10</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">COUNT_HALT1</span>  <span class="token expression"><span class="token number">3</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">COUNT_HALT2</span>  <span class="token expression"><span class="token number">6</span></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>   <span class="token class-name">pthread_t</span> thread1<span class="token punctuation">,</span> thread2<span class="token punctuation">;</span>   <span class="token function">pthread_create</span><span class="token punctuation">(</span> <span class="token operator">&amp;</span>thread1<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>functionCount1<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token function">pthread_create</span><span class="token punctuation">(</span> <span class="token operator">&amp;</span>thread2<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>functionCount2<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token function">pthread_join</span><span class="token punctuation">(</span> thread1<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token function">pthread_join</span><span class="token punctuation">(</span> thread2<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">functionCount1</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>   <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span>   <span class="token punctuation">&#123;</span>      <span class="token function">pthread_mutex_lock</span><span class="token punctuation">(</span> <span class="token operator">&amp;</span>condition_mutex <span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">while</span><span class="token punctuation">(</span> count <span class="token operator">>=</span> COUNT_HALT1 <span class="token operator">&amp;&amp;</span> count <span class="token operator">&lt;=</span> COUNT_HALT2 <span class="token punctuation">)</span>      <span class="token punctuation">&#123;</span><span class="token comment">//your code here</span>        <span class="token function">pthread_cond_wait</span><span class="token punctuation">(</span> <span class="token operator">&amp;</span>condition_cond<span class="token punctuation">,</span> <span class="token operator">&amp;</span>condition_mutex <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//end of your code</span>      <span class="token punctuation">&#125;</span>      <span class="token function">pthread_mutex_unlock</span><span class="token punctuation">(</span> <span class="token operator">&amp;</span>condition_mutex <span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">pthread_mutex_lock</span><span class="token punctuation">(</span> <span class="token operator">&amp;</span>count_mutex <span class="token punctuation">)</span><span class="token punctuation">;</span>      count<span class="token operator">++</span><span class="token punctuation">;</span>      <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Counter value functionCount1: %d\n"</span><span class="token punctuation">,</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">pthread_mutex_unlock</span><span class="token punctuation">(</span> <span class="token operator">&amp;</span>count_mutex <span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>count <span class="token operator">>=</span> COUNT_DONE<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">functionCount2</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>       <span class="token function">pthread_mutex_lock</span><span class="token punctuation">(</span> <span class="token operator">&amp;</span>condition_mutex <span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">if</span><span class="token punctuation">(</span> count <span class="token operator">&lt;</span> COUNT_HALT1 <span class="token operator">||</span> count <span class="token operator">></span> COUNT_HALT2 <span class="token punctuation">)</span>       <span class="token punctuation">&#123;</span>        <span class="token comment">//your code here</span>        <span class="token function">pthread_cond_signal</span><span class="token punctuation">(</span> <span class="token operator">&amp;</span>condition_cond <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//end of your code</span>       <span class="token punctuation">&#125;</span>       <span class="token function">pthread_mutex_unlock</span><span class="token punctuation">(</span> <span class="token operator">&amp;</span>condition_mutex <span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token function">pthread_mutex_lock</span><span class="token punctuation">(</span> <span class="token operator">&amp;</span>count_mutex <span class="token punctuation">)</span><span class="token punctuation">;</span>       count<span class="token operator">++</span><span class="token punctuation">;</span>       <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Counter value functionCount2: %d\n"</span><span class="token punctuation">,</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token function">pthread_mutex_unlock</span><span class="token punctuation">(</span> <span class="token operator">&amp;</span>count_mutex <span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">if</span><span class="token punctuation">(</span>count <span class="token operator">>=</span> COUNT_DONE<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="条件变量-2"><a href="#条件变量-2" class="headerlink" title="条件变量(2)"></a>条件变量(2)</h2><p>本节继续展示条件变量的相关方法</p><ul><li><code>pthread_cond_broadcast</code>解除所有被某个条件变量阻塞的进程</li></ul><p><code>pthread_cond_broadcast</code>可用于解除所有被某个条件变量阻塞的进程<br>与<code>pthread_cond_signal</code>函数相似，<code>pthread_cond_broadcast</code>函数执行时先自动释放指定的锁，然后等待条件变量的变化。在函数调用返回之前，自动将指定的互斥量重新锁住</p><h3 id="函数说明-4"><a href="#函数说明-4" class="headerlink" title="函数说明"></a>函数说明</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">pthread_cond_broadcast</span><span class="token punctuation">(</span><span class="token class-name">pthread_cond_t</span> <span class="token operator">*</span>cond<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>pthread_cond_broadcast</code>是一个POSIX线程库函数，用于唤醒所有等待某个条件变量的线程。它的原型如下：</p><p>参数：</p><ul><li><code>cond</code>：指向要广播的条件变量的指针</li></ul><p>返回值：</p><ul><li>成功时返回0；失败时返回错误码</li></ul><h3 id="运行结果-3"><a href="#运行结果-3" class="headerlink" title="运行结果"></a>运行结果</h3><blockquote><p>thread 1 waiting for signal<br>thread 2 waiting for signal<br>main thread broadcasts signal<br>thread 2 receives signal<br>thread 1 receives signal</p></blockquote><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span>  </span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span>  </span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h></span>  </span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span>   <span class="token keyword">static</span> <span class="token class-name">pthread_mutex_t</span> mtx<span class="token operator">=</span>PTHREAD_MUTEX_INITIALIZER<span class="token punctuation">;</span>  <span class="token keyword">static</span> <span class="token class-name">pthread_cond_t</span> cond<span class="token operator">=</span>PTHREAD_COND_INITIALIZER<span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">func_1</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> arg<span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>      <span class="token function">pthread_mutex_lock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mtx<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"thread 1 waiting for signal\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_cond_wait</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cond<span class="token punctuation">,</span> <span class="token operator">&amp;</span>mtx<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"thread 1 receives signal\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_mutex_unlock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mtx<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>    <span class="token keyword">static</span> <span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">func_2</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> arg<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token function">pthread_mutex_lock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mtx<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"thread 2 waiting for signal\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_cond_wait</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cond<span class="token punctuation">,</span> <span class="token operator">&amp;</span>mtx<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"thread 2 receives signal\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_mutex_unlock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>mtx<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>      <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>      <span class="token class-name">pthread_t</span> tid1<span class="token punctuation">,</span> tid2<span class="token punctuation">;</span>        <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>tid1<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> func_1<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>tid2<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> func_2<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"main thread broadcasts signal\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//your code here</span>    <span class="token function">pthread_cond_broadcast</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>cond<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//end of your code</span>      <span class="token function">pthread_join</span><span class="token punctuation">(</span>tid1<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">pthread_join</span><span class="token punctuation">(</span>tid2<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="障碍同步"><a href="#障碍同步" class="headerlink" title="障碍同步"></a>障碍同步</h2><p>本节展示了障碍同步的相关方法。</p><ul><li><code>pthread_barrier_init</code>障碍初始化</li><li><code>pthread_barrier_wait</code>障碍等待</li><li><code>pthread_barrier_destroy</code>障碍销毁</li></ul><p>障碍同步(Barrier Synchronization)是Pthread中另外一种同步机制。<br>barrier意为栏杆，形象的说就是把先后到达的多个线程挡在同一栏杆前，直到所有线程到齐，然后撤下栏杆同时放行。</p><h3 id="函数原型-1"><a href="#函数原型-1" class="headerlink" title="函数原型"></a>函数原型</h3><pre class="line-numbers language-none"><code class="language-none">int pthread_barrier_init(pthread_barrier_t *restrict barrier, const pthread_barrierattr_t *restrict attr, unsigned count);int pthread_barrier_wait(pthread_barrier_t *barrier);int pthread_barrier_destroy(pthread_barrier_t *barrier);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p><code>pthread_barrier_init</code>函数用于初始化一个屏障对象。它接受三个参数：</p><ol><li><code>barrier</code>：指向要初始化的屏障对象的指针。</li><li><code>attr</code>：指向屏障属性对象的指针，可以为NULL。如果为NULL，则使用默认的属性。</li><li><code>count</code>：需要等待的线程数量。当所有线程都调用了<code>pthread_barrier_wait</code>函数后，屏障将被解除。</li></ol><p>函数返回0表示成功，非0表示失败。</p></blockquote><blockquote><p><code>pthread_barrier_wait</code>函数用于让当前线程等待其他线程到达屏障。它接受一个指向<code>pthread_barrier_t</code>类型的指针作为参数，该指针指向要等待的屏障对象。</p><p>当调用<code>pthread_barrier_wait</code>时，当前线程将被阻塞，直到所有其他线程都到达屏障。一旦所有线程都到达屏障，它们将继续执行并解除阻塞。</p><p>以下是一个示例代码，演示了如何使用<code>pthread_barrier_wait</code>函数：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token comment">// 定义线程数量和屏障对象</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">NUM_THREADS</span> <span class="token expression"><span class="token number">5</span></span></span><span class="token class-name">pthread_barrier_t</span> barrier<span class="token punctuation">;</span><span class="token comment">// 线程函数</span><span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">threadFunction</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> arg<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Thread %ld is waiting on barrier\n"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">pthread_barrier_wait</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>barrier<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 等待其他线程到达屏障</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Thread %ld has crossed the barrier\n"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token class-name">pthread_t</span> threads<span class="token punctuation">[</span>NUM_THREADS<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 初始化屏障对象</span> <span class="token function">pthread_barrier_init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>barrier<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> NUM_THREADS<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 创建并启动线程</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> NUM_THREADS<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>threads<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> threadFunction<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token comment">// 等待所有线程完成</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> NUM_THREADS<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token function">pthread_join</span><span class="token punctuation">(</span>threads<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token comment">// 销毁屏障对象</span> <span class="token function">pthread_barrier_destroy</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>barrier<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在上述示例中，我们创建了一个包含5个线程的线程池，并使用<code>pthread_barrier_wait</code>函数来同步这些线程。每个线程在到达屏障之前都会打印一条消息，表示正在等待其他线程。一旦所有线程都到达屏障，它们将打印另一条消息，表示已经跨越了屏障。最后，主线程等待所有子线程完成，然后销毁屏障对象。</p></blockquote><blockquote><p><code>int pthread_barrier_destroy(pthread_barrier_t *barrier);</code> 是一个用于销毁线程屏障的函数。当一个线程屏障不再需要时，可以调用此函数来释放资源。</p><p>该函数接受一个指向 <code>pthread_barrier_t</code> 结构的指针作为参数，该结构表示要销毁的线程屏障。函数返回一个整数，表示操作的结果。如果成功销毁了线程屏障，则返回0；否则返回非零错误代码。</p><p>以下是一个示例代码，演示如何使用 <code>pthread_barrier_destroy</code> 函数：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token comment">// 定义线程数量和屏障对象</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">NUM_THREADS</span> <span class="token expression"><span class="token number">5</span></span></span><span class="token class-name">pthread_barrier_t</span> barrier<span class="token punctuation">;</span><span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">threadFunction</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> arg<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Thread %ld is waiting on barrier\n"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">pthread_barrier_wait</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>barrier<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 等待其他线程到达屏障</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Thread %ld has crossed the barrier\n"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token class-name">pthread_t</span> threads<span class="token punctuation">[</span>NUM_THREADS<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 初始化线程并启动它们</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> NUM_THREADS<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>threads<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> threadFunction<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token comment">// 等待所有线程完成</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> NUM_THREADS<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token function">pthread_join</span><span class="token punctuation">(</span>threads<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token comment">// 销毁线程屏障</span> <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token function">pthread_barrier_destroy</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>barrier<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Barrier destroyed successfully\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>     <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Failed to destroy barrier\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在上述示例中，我们创建了一个包含5个线程的线程池，每个线程都执行 <code>threadFunction</code> 函数。在函数中，线程使用 <code>pthread_barrier_wait</code> 函数等待其他线程到达屏障。一旦所有线程都到达屏障，它们将打印消息并继续执行。</p><p>在主函数中，我们首先启动所有线程，然后等待它们完成。最后，我们调用 <code>pthread_barrier_destroy</code> 函数来销毁线程屏障，并根据返回值判断是否成功销毁。</p></blockquote><h3 id="运行结果-4"><a href="#运行结果-4" class="headerlink" title="运行结果"></a>运行结果</h3><blockquote><p>Task1 will be blocked.<br>main process will sleep 1s.<br>Task2 will be blocked.<br>Task1 is running.<br>Task2 is running.</p></blockquote><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;time.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">NUM_THREADS</span> <span class="token expression"><span class="token number">2</span></span></span><span class="token class-name">pthread_barrier_t</span> barrier<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">Task1</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">Task2</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> policy<span class="token punctuation">,</span> inher<span class="token punctuation">;</span>    <span class="token class-name">pthread_t</span> tid<span class="token punctuation">;</span>    <span class="token class-name">pthread_attr_t</span> attr<span class="token punctuation">;</span>    <span class="token keyword">struct</span> <span class="token class-name">sched_param</span> param<span class="token punctuation">;</span>    <span class="token function">pthread_attr_init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>attr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_barrier_init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>barrier<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> NUM_THREADS <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>tid<span class="token punctuation">,</span> <span class="token operator">&amp;</span>attr<span class="token punctuation">,</span> Task1<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>tid<span class="token punctuation">,</span> <span class="token operator">&amp;</span>attr<span class="token punctuation">,</span> Task2<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"main process will sleep 1s.\r\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_barrier_wait</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>barrier<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_join</span><span class="token punctuation">(</span>tid<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_barrier_destroy</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>barrier<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">Task1</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>arg<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Task1 will be blocked.\r\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// your code here</span>    <span class="token function">pthread_barrier_wait</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>barrier<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// end of your code</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Task1 is running.\r\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_exit</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">Task2</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>arg<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Task2 will be blocked.\r\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// your code here</span>    <span class="token function">pthread_barrier_wait</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>barrier<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// end of your code</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Task2 is running.\r\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_exit</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="获取调用线程标识号"><a href="#获取调用线程标识号" class="headerlink" title="获取调用线程标识号"></a>获取调用线程标识号</h2><p>本节展示了获取调用线程标识号的方法。</p><ul><li><code>pthread_self</code>获取调用线程标识号</li></ul><h3 id="函数说明-5"><a href="#函数说明-5" class="headerlink" title="函数说明"></a>函数说明</h3><pre class="line-numbers language-none"><code class="language-none">pthread_t pthread_self(void);返回调用线程标识号，返回类型为pthread_t<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>pthread_t pthread_self(void);</code> 是一个用于获取当前线程标识符的函数。在C语言中，可以使用POSIX线程库（pthread）来实现多线程编程。这个函数返回一个 <code>pthread_t</code> 类型的值，表示当前线程的唯一标识符。</p><h3 id="运行结果-5"><a href="#运行结果-5" class="headerlink" title="运行结果"></a>运行结果</h3><blockquote><p>main thread:  pid 1588 tid 2 (0x2)<br>new thread:  pid 1588 tid 1 (0x1)</p></blockquote><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">printids</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>arg<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>str <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span>arg<span class="token punctuation">;</span>    <span class="token class-name">pid_t</span> pid<span class="token punctuation">;</span>    <span class="token class-name">pthread_t</span> tid<span class="token punctuation">;</span>      pid <span class="token operator">=</span> <span class="token function">getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//your code here</span>    tid <span class="token operator">=</span> <span class="token function">pthread_self</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//end of your code</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%s pid %u tid %u (0x%x)\n"</span><span class="token punctuation">,</span> str<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span>pid<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span>tid<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span>tid<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> <span class="token comment">// 添加返回语句</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">pthread_t</span> tid<span class="token punctuation">;</span>    <span class="token keyword">int</span> err<span class="token punctuation">;</span>        err <span class="token operator">=</span> <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>tid<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> printids<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token string">"new thread: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>err <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">"can't create thread: %s\n"</span><span class="token punctuation">,</span> <span class="token function">strerror</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token function">printids</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token string">"main thread: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="线程取消"><a href="#线程取消" class="headerlink" title="线程取消"></a>线程取消</h2><p>pthread_cancel调用并不等待线程终止，它只提出请求。线程在取消请求(pthread_cancel)发出后会继续运行。</p><h3 id="函数说明-6"><a href="#函数说明-6" class="headerlink" title="函数说明"></a>函数说明</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">pthread_cancel</span><span class="token punctuation">(</span><span class="token class-name">pthread_t</span> thread<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>int pthread_cancel(pthread_t thread);</code> 用于请求取消指定线程。它接受一个 <code>pthread_t</code> 类型的参数，表示要取消的线程标识符。如果成功取消线程，函数返回0；否则返回错误码。这个函数允许主线程或者其他线程发起对目标线程的取消请求。</p><p>参数说明：</p><ul><li><code>pthread_t thread</code>：要取消的线程标识符，即你想结束的那个线程的句柄。</li></ul><p>返回值：</p><ul><li>如果成功发送了取消请求，则返回0。</li><li>如果发生错误（例如，无效的线程ID），则返回非零错误代码。</li></ul><p>注意：</p><ol><li><p>取消一个线程并不意味着它会立即停止执行。目标线程必须检查并处理取消请求才能真正终止。通常情况下，线程需要在安全点检查<code>pthread_cancel</code>状态，并调用<code>pthread_testcancel</code>来响应取消请求。</p></li><li><p>线程可以通过设置取消类型为<code>PTHREAD_CANCEL_DISABLE</code>来暂时禁用取消，或者通过调用<code>pthread_setcancelstate</code>函数改变其取消状态。</p></li><li><p>为了正确地清理资源，线程可以注册一个取消处理函数(<code>pthread_cleanup_push</code>和<code>pthread_cleanup_pop</code>)，当线程被取消时，这些函数会被自动调用。</p></li><li><p>默认情况下，线程的取消类型是<code>PTHREAD_CANCEL_DEFERRED</code>，这意味着只有在线程进入取消点时才会真正取消。若要使取消立即生效，可以将线程的取消类型设置为<code>PTHREAD_CANCEL_ASYNCHRONOUS</code>。</p></li></ol><p>示例：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">thread_function</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> arg<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 在这里进行线程任务...</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 定期检查取消状态</span>        <span class="token function">pthread_testcancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 这里做一些工作...</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">pthread_t</span> thread_id<span class="token punctuation">;</span>    <span class="token keyword">int</span> rc<span class="token punctuation">;</span>    <span class="token comment">// 创建线程</span>    rc <span class="token operator">=</span> <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>thread_id<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> thread_function<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>rc<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Error: Unable to create thread, %d\n"</span><span class="token punctuation">,</span> rc<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 在某个时刻决定取消线程</span>    <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 假设等待一段时间后决定取消线程</span>    rc <span class="token operator">=</span> <span class="token function">pthread_cancel</span><span class="token punctuation">(</span>thread_id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>rc<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Error: Unable to cancel thread, %d\n"</span><span class="token punctuation">,</span> rc<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Thread cancellation requested.\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 等待被取消的线程终止</span>    <span class="token function">pthread_join</span><span class="token punctuation">(</span>thread_id<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="运行结果-6"><a href="#运行结果-6" class="headerlink" title="运行结果"></a>运行结果</h3><p>为了比较输出结果，请将环境设置中的并行核数调为1。本实验暂不支持性能评测。</p><blockquote><p>thread 1 returning<br>thread 1 exit code 1<br>thread 2 exiting<br>thread 2 exit code 2<br>thread 3 writing<br>thread 3 writing<br>thread 3 writing<br>thread 3 exit code -1</p></blockquote><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">thr_fn1</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>arg<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"thread 1 returning\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">thr_fn2</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>arg<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"thread 2 exiting\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_exit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">thr_fn3</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>arg<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> time <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        time<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"thread 3 writing\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>time <span class="token operator">>=</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">pthread_t</span> tid<span class="token punctuation">;</span>    <span class="token keyword">void</span> <span class="token operator">*</span>retval<span class="token punctuation">;</span>    <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>tid<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> thr_fn1<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_join</span><span class="token punctuation">(</span>tid<span class="token punctuation">,</span> <span class="token operator">&amp;</span>retval<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"thread 1 exit code %d\n"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token class-name">intptr_t</span><span class="token punctuation">)</span>retval<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 修复类型转换</span>    <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>tid<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> thr_fn2<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_join</span><span class="token punctuation">(</span>tid<span class="token punctuation">,</span> <span class="token operator">&amp;</span>retval<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"thread 2 exit code %d\n"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token class-name">intptr_t</span><span class="token punctuation">)</span>retval<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 修复类型转换</span>    <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>tid<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> thr_fn3<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//your code here</span>    <span class="token function">pthread_cancel</span><span class="token punctuation">(</span>tid<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//end of your code</span>    <span class="token function">pthread_join</span><span class="token punctuation">(</span>tid<span class="token punctuation">,</span> <span class="token operator">&amp;</span>retval<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 需要处理取消后的线程可能没有有效退出状态的情况</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>retval <span class="token operator">==</span> PTHREAD_CANCELED<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"thread 3 was canceled\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"thread 3 exit code %d\n"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token class-name">intptr_t</span><span class="token punctuation">)</span>retval<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 这里仍需进行正确的类型转换</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="线程属性-线程连接和分离-2"><a href="#线程属性-线程连接和分离-2" class="headerlink" title="线程属性 - 线程连接和分离(2)"></a>线程属性 - 线程连接和分离(2)</h2><p>本节展示了线程连接和分离的基本知识。</p><h3 id="基本知识"><a href="#基本知识" class="headerlink" title="基本知识"></a>基本知识</h3><ul><li><code>pthread_detach</code>将某个线程设成分离态</li></ul><p>一般情况下,线程终止后,其终止状态一直保留到其它线程调用pthread_join获取它的状态为止。但是线程也可以被置为detach状态,这样的线程一旦终止就立刻回收它占用的所有资源,而不保留终止状态。不能对一个已经处于detach状态的线程调用pthread_join,这样的调用将返回EINVAL。如果已经对一个线程调用了pthread_detach就不能再调用pthread_join了。</p><p>通常情况下，若创建一个线程不关心它的返回值,也不想使用pthread_join来回收资源(调用pthread_join的进程会阻塞)，就可以使用pthread_detach,将该线程的状态设置为分离态,使线程结束后,立即被系统回收。<br>主线程退出了，“分离线程”还是一样退出。只是“分离线程”的资源是有系统回收的。</p><h3 id="函数说明-7"><a href="#函数说明-7" class="headerlink" title="函数说明"></a>函数说明</h3><p>将某个线程设成分离态</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">pthread_detach</span><span class="token punctuation">(</span><span class="token class-name">pthread_t</span> tid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">pthread_t</span> tid<span class="token operator">:</span>　　分离线程的tid返回值<span class="token operator">:</span>成功返回<span class="token number">0</span><span class="token punctuation">,</span>失败返回错误号。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><code>pthread_detach</code>是POSIX线程库中的一个函数，用于将一个已创建的线程从其创建者分离（detach）。</p><p>函数原型：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">pthread_detach</span><span class="token punctuation">(</span><span class="token class-name">pthread_t</span> tid<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参数解释：</p><ul><li><code>pthread_t tid</code>：这是要分离的线程的标识符。在创建线程时，pthread_create函数会返回这个tid，代表新创建的线程。</li></ul><p>函数功能：<br>当一个线程被分离后，其资源（如栈空间等）将在该线程终止时自动释放，而无需调用pthread_join函数等待其完成。这意味着分离线程执行完毕后，不会保留joinable状态，因此主线程或其他线程无法通过pthread_join来获取其返回值或确保它已经结束。</p><p>返回值：</p><ul><li>若成功分离线程，则返回0。</li><li>若出错，则返回非零错误编号，具体错误信息可通过errno获取。</li></ul><p>分离线程的主要用途是在不关心线程退出状态和返回值的情况下，减轻主线程对子线程生命周期管理的负担。</p><h3 id="输出结果-1"><a href="#输出结果-1" class="headerlink" title="输出结果"></a>输出结果</h3><pre class="line-numbers language-none"><code class="language-none">thread1 running...!thread1 running...!thread1 running...!thread1 running...!thread1 running...!thread1 running...!thread1 running...!thread1 running...!thread1 running...!Leave main thread!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h3><p>由于并行程序执行顺序的不确定性，你的结果可能和这个结果不一致。</p><p>在给出的代码中，<code>thread1</code>函数是一个无限循环的线程，因此实际上调用<code>pthread_detach</code>之后主线程无法得知<code>thread1</code>何时结束。这种情况下，分离线程的意义在于主线程结束后，即使未调用<code>pthread_join</code>，系统也会自动释放<code>thread1</code>所占用的资源。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token comment">// 定义线程执行的函数</span><span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">thread1</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>arg<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// 这是一个无限循环的线程</span>    <span class="token punctuation">&#123;</span>        <span class="token function">usleep</span><span class="token punctuation">(</span><span class="token number">100</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 暂停100毫秒</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"thread1 running...!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 实际上由于是无限循环，下面这行代码可能永远不会被执行</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Leave thread1!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span> argv<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">pthread_t</span> tid<span class="token punctuation">;</span> <span class="token comment">// 创建线程标识符</span>    <span class="token comment">// 创建并启动线程</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>tid<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> thread1<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">"pthread_create failed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 分离线程，使其在完成后自动释放资源，无需等待主线程调用pthread_join</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">pthread_detach</span><span class="token punctuation">(</span>tid<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">"pthread_detach failed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 主线程暂停1秒</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Leave main thread! (The detached thread 'thread1' will continue to run in the background.)\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这段代码中，增加了对<code>pthread_create</code>和<code>pthread_detach</code>错误处理的部分，使得程序在创建或分离线程失败时能够打印错误信息并退出。同时，主线程输出信息也说明了detach线程后的情况。</p><h2 id="比较线程标识号"><a href="#比较线程标识号" class="headerlink" title="比较线程标识号"></a>比较线程标识号</h2><p>本节介绍了比较两个线程的线程标识符是否相同的方法。</p><p>线程标识号的类型为pthread_t，是不透明类型。为了使程序更容易移植，Pthreads提供了对两个线程的线程标识号进行比较的函数。</p><h3 id="函数说明-8"><a href="#函数说明-8" class="headerlink" title="函数说明"></a>函数说明</h3><p>比较两个线程的线程标识符是否相同</p><p><code>pthread_equal</code>用于比较两个线程的标识符是否相同</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">pthread_equal</span><span class="token punctuation">(</span><span class="token class-name">pthread_t</span> t1<span class="token punctuation">,</span> <span class="token class-name">pthread_t</span> t2<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参数解释：</p><ul><li><code>pthread_t t1</code>：第一个线程标识符。</li><li><code>pthread_t t2</code>：第二个线程标识符。</li></ul><p>该函数比较<code>t1</code>和<code>t2</code>两个线程标识符是否指向同一线程。如果两者指向同一个线程，则返回非零值（通常为1），否则返回0。</p><p>使用场景：<br>在多线程编程中，有时需要确定两个线程标识符是否对应于同一个线程实例。例如，在同步或通信操作中，可能需要检查当前线程是否与某个特定的已知线程相匹配。</p><p>示例代码：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token class-name">pthread_t</span> tid1<span class="token punctuation">,</span> tid2<span class="token punctuation">;</span><span class="token comment">// 假设tid1和tid2是从pthread_create得到的不同线程的标识符</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>tid1<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> thread_function1<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 创建线程成功</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>tid2<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> thread_function2<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 创建线程成功</span><span class="token punctuation">&#125;</span><span class="token comment">// 检查tid1和tid2是否代表同一个线程</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">pthread_equal</span><span class="token punctuation">(</span>tid1<span class="token punctuation">,</span> tid2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"tid1 and tid2 represent the same thread.\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"tid1 and tid2 represent different threads.\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，<code>pthread_equal(tid1, tid2)</code>将返回0，因为它们分别代表两个不同线程。</p><h3 id="运行结果-7"><a href="#运行结果-7" class="headerlink" title="运行结果"></a>运行结果</h3><pre class="line-numbers language-none"><code class="language-none">Thread ID: 1.Equal!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">pthread_t</span> thread_id<span class="token punctuation">;</span>    <span class="token comment">// 获取当前线程ID</span>    thread_id <span class="token operator">=</span> <span class="token function">pthread_self</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Thread ID: %lu.\n"</span><span class="token punctuation">,</span> thread_id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 检查两次获取的线程ID是否相同（理论上它们应该总是相同的）</span>    <span class="token keyword">int</span> t <span class="token operator">=</span> <span class="token function">pthread_equal</span><span class="token punctuation">(</span>thread_id<span class="token punctuation">,</span> <span class="token function">pthread_self</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">)</span>      <span class="token punctuation">&#123;</span>          <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"The Thread IDs are equal, as expected!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>          <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Unexpected: The Thread IDs are not equal!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>      <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="线程私有数据"><a href="#线程私有数据" class="headerlink" title="线程私有数据"></a>线程私有数据</h2><p>本节展示了线程私有数据的相关方法。</p><p><code>pthread_key_create</code>、<code>pthread_setspecific</code>、<code>pthread_getspecific</code>和<code>pthread_key_delete</code>这一系列函数主要用于管理线程特定的数据（Thread-Specific Data, TSD），也称为线程局部存储（Thread-Local Storage, TLS）</p><ul><li><code>pthread_key_create</code>创建一个键</li><li><code>pthread_setspecific</code>为一个键设置线程私有数据</li><li><code>pthread_getspecific</code>从一个键读取线程私有数据</li><li><code>pthread_key_delete</code>删除一个键</li></ul><p>在多线程的环境下，进程内的所有线程共享进程的数据空间。因此全局变量为所有线程共享。在程序设计中有时需要保存线程自己的全局变量，这种特殊的变量仅在线程内部有效。<br>线程私有数据采用了一键多值的技术，即一个键对应多个值。访问数据时都是通过键值来访问，好像是对一个变量进行访问，其实是在访问不同的数据。</p><h3 id="工作流程"><a href="#工作流程" class="headerlink" title="工作流程"></a>工作流程</h3><p>1、创建一个键<br>2、为一个键设置线程私有数据<br>3、从一个键读取线程私有数据void *pthread_getspecific(pthread_key_t key);<br>4、线程退出（退出时，会调用destructor释放分配的缓存，参数是key所关联的数据）<br>5、删除一个键</p><h3 id="函数说明-9"><a href="#函数说明-9" class="headerlink" title="函数说明"></a>函数说明</h3><p>创建一个键</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">pthread_key_create</span><span class="token punctuation">(</span><span class="token class-name">pthread_key_t</span> <span class="token operator">*</span>key<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">*</span>destructor<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>pthread_key_create(pthread_key_t *key, void (*destructor)(void*))c</code></p><ul><li>第一个参数为指向一个键值的指针，第二个参数指明了一个destructor函数，<br>如果第二个参数不为空，那么当每个线程结束时，系统将调用这个函数来释放绑定在这个键上的内存块。<br>key一旦被创建，所有线程都可以访问它，但各线程可根据自己的需要往key中填入不同的值，这就相当于提供了一个同名而不同值的全局变量，一键多值。</li><li>创建一个线程私有数据键。参数<code>key</code>是一个指向pthread_key_t类型的指针，用于存储创建的键值；<code>destructor</code>是一个可选的清理函数，当关联此键的线程终止时，该函数会被调用来释放分配给这个键的私有数据。</li></ul><p>为一个键设置线程私有数据</p><pre class="line-numbers language-none"><code class="language-none">int pthread_setspecific(pthread_key_t key,const void *pointer));<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>pthread_setspecific(pthread_key_t key, const void *value)</code></p><ul><li>为指定的键设置线程私有数据。每个线程都可以为同一个键设置不同的值，互不影响。参数<code>key</code>是通过<code>pthread_key_create</code>创建的键，<code>value</code>是要关联到此键的私有数据指针。</li></ul><p>从一个键读取线程私有数据</p><pre class="line-numbers language-none"><code class="language-none">void *pthread_getspecific(pthread_key_t key);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>void* pthread_getspecific(pthread_key_t key)</code></p><ul><li>根据指定的键获取当前线程关联的私有数据。返回与键关联的线程特定数据的指针。</li></ul><p>删除一个键</p><pre class="line-numbers language-none"><code class="language-none">int pthread_key_delete(pthread_key_t key);删除后，键所占用的内存将被释放。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>int pthread_key_delete(pthread_key_t key)</code></p><ul><li>删除已创建的线程私有数据键。一旦键被删除，所有线程与该键关联的私有数据都将失效，如果之前设置了清理函数，会在最后一个与该键关联的线程结束时执行。</li></ul><h3 id="举例说明："><a href="#举例说明：" class="headerlink" title="举例说明："></a>举例说明：</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token keyword">static</span> <span class="token class-name">pthread_key_t</span> thread_data_key<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">cleanup_thread_data</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> data<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">free</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">thread_function</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> arg<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span><span class="token operator">*</span> data <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">*</span>data <span class="token operator">=</span> <span class="token number">42</span><span class="token punctuation">;</span> <span class="token comment">// 初始化私有数据</span>    <span class="token function">pthread_setspecific</span><span class="token punctuation">(</span>thread_data_key<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 在线程执行过程中可以随时通过键访问自己的私有数据</span>    <span class="token keyword">int</span><span class="token operator">*</span> my_data <span class="token operator">=</span> <span class="token function">pthread_getspecific</span><span class="token punctuation">(</span>thread_data_key<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Thread private data: %d\n"</span><span class="token punctuation">,</span> <span class="token operator">*</span>my_data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">pthread_key_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>thread_data_key<span class="token punctuation">,</span> cleanup_thread_data<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">"pthread_key_create"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token class-name">pthread_t</span> tid<span class="token punctuation">;</span>    <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>tid<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> thread_function<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 等待子线程结束</span>    <span class="token function">pthread_join</span><span class="token punctuation">(</span>tid<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 主线程也可以有自己的私有数据，与子线程互不影响</span>    <span class="token comment">// ...</span>    <span class="token comment">// 最后删除键</span>    <span class="token function">pthread_key_delete</span><span class="token punctuation">(</span>thread_data_key<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这段代码展示了如何创建、设置、获取以及删除线程私有数据。每个线程通过<code>pthread_setspecific</code>保存自己的私有数据，并且可以在任何时候通过<code>pthread_getspecific</code>来访问这些数据，而不会影响其他线程。当线程结束时，若定义了清理函数，会自动清理其私有数据。</p><h3 id="运行结果-8"><a href="#运行结果-8" class="headerlink" title="运行结果"></a>运行结果</h3><pre class="line-numbers language-none"><code class="language-none">main thread:1 is runningthread:2 is runningthread:2 return 1thread:3 is runningthread:3 return 2thread:1 return 0main thread exit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token class-name">pthread_key_t</span> key1<span class="token punctuation">;</span><span class="token class-name">pthread_key_t</span> key2<span class="token punctuation">;</span><span class="token class-name">pthread_t</span> thid1<span class="token punctuation">;</span><span class="token class-name">pthread_t</span> thid2<span class="token punctuation">;</span><span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">thread1</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> arg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">thread2</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> arg<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">thread1</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> arg<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"thread:%lu is running\n"</span><span class="token punctuation">,</span> <span class="token function">pthread_self</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> key_va <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token function">pthread_setspecific</span><span class="token punctuation">(</span>key1<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>key_va<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>thid2<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> thread2<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_join</span><span class="token punctuation">(</span>thid2<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 添加了对线程2的等待，确保其执行完毕后再返回</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"thread:%lu return %d\n"</span><span class="token punctuation">,</span> <span class="token function">pthread_self</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">pthread_getspecific</span><span class="token punctuation">(</span>key1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">thread2</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> arg<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"thread:%lu is running\n"</span><span class="token punctuation">,</span> <span class="token function">pthread_self</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> key_va <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token function">pthread_setspecific</span><span class="token punctuation">(</span>key2<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>key_va<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"thread:%lu return %d\n"</span><span class="token punctuation">,</span> <span class="token function">pthread_self</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">pthread_getspecific</span><span class="token punctuation">(</span>key2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span> <span class="token comment">// 添加了返回语句以消除编译警告</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"main thread:%lu is running\n"</span><span class="token punctuation">,</span> <span class="token function">pthread_self</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_key_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>key1<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_key_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>key2<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>thid1<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> thread1<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">pthread_join</span><span class="token punctuation">(</span>thid1<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_key_delete</span><span class="token punctuation">(</span>key1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_key_delete</span><span class="token punctuation">(</span>key2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"main thread exit\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="读写锁"><a href="#读写锁" class="headerlink" title="读写锁"></a>读写锁</h2><p>本节展示了读写锁的相关方法。</p><h3 id="基本知识-1"><a href="#基本知识-1" class="headerlink" title="基本知识"></a>基本知识</h3><p>读写锁与互斥量类似，不过读写锁允许更高的并行性。互斥量要么是锁住状态，要么是不加锁状态，而且一次只有一个线程对其加锁。<br>读写锁可以有三种状态：读模式下加锁状态，写模式下加锁状态，不加锁状态。一次只有一个线程可以占有写模式的读写锁，但是多个线程可用同时占有读模式的读写锁。<br>读写锁也叫做共享-独占锁，当读写锁以读模式锁住时，它是以共享模式锁住的，当它以写模式锁住时，它是以独占模式锁住的。</p><ol><li>当读写锁是写加锁状态时，在这个锁被解锁之前，所有试图对这个锁加锁的线程都会被阻塞；</li><li>当读写锁在读加锁状态时，所有试图以读模式对它进行加锁的线程都可以得到访问权，但是以写模式对它进行枷锁的线程将阻塞；</li><li>当读写锁在读模式锁状态时，如果有另外线程试图以写模式加锁，读写锁通常会阻塞随后的读模式锁请求，这样可以避免读模式锁长期占用，而等待的写模式锁请求长期阻塞；</li></ol><ul><li><p><code>pthread_rwlock_init</code>创建锁</p></li><li><p><code>pthread_rwlock_destroy</code>销毁锁</p></li><li><p><code>pthread_rwlock_rdlock</code>获取一个读出锁</p></li><li><p><code>pthread_rwlock_wrlock</code>获取一个写入锁</p></li><li><p><code>pthread_rwlock_unlock</code>释放一个写入锁或者读出锁</p></li><li><p><code>pthread_rwlock_tryrdlock</code>非阻塞获得读锁</p></li><li><p><code>pthread_rwlock_trywrlock</code>非阻塞获得写锁</p></li></ul><p>在多线程编程中，读写锁（也称为读-写锁或共享-独占锁）是一种能够提供更细粒度控制的同步机制。它允许一个资源在同一时间被多个读者线程同时读取，但在任何时候只允许一个写者线程进行写入操作。这样可以提高系统并发性能，特别是在读多写少的情况下。</p><p>以下是使用读写锁的基本操作示例：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token class-name">pthread_rwlock_t</span> rwlock<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">initialize_rwlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">pthread_rwlock_init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rwlock<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">read_lock_and_operation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">pthread_rwlock_rdlock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rwlock<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 在这里执行读取操作</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Reading from a shared resource by thread %lu.\n"</span><span class="token punctuation">,</span> <span class="token function">pthread_self</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_rwlock_unlock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rwlock<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">write_lock_and_operation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">pthread_rwlock_wrlock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rwlock<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 在这里执行写入操作</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Writing to the shared resource by thread %lu.\n"</span><span class="token punctuation">,</span> <span class="token function">pthread_self</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 更新共享资源...</span>    <span class="token function">pthread_rwlock_unlock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rwlock<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">destroy_rwlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">pthread_rwlock_destroy</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rwlock<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">initialize_rwlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 创建并启动多个读线程和写线程</span>    <span class="token comment">// 例如：</span>    <span class="token class-name">pthread_t</span> reader_thread<span class="token punctuation">;</span>    <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>reader_thread<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span>read_lock_and_operation<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">pthread_t</span> writer_thread<span class="token punctuation">;</span>    <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>writer_thread<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span>write_lock_and_operation<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_join</span><span class="token punctuation">(</span>reader_thread<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_join</span><span class="token punctuation">(</span>writer_thread<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">destroy_rwlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>另外，<code>pthread_rwlock_tryrdlock</code> 和 <code>pthread_rwlock_trywrlock</code> 函数提供了非阻塞版本的读写锁获取操作，如果无法立即获取锁，则返回错误而非阻塞等待：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">pthread_rwlock_tryrdlock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rwlock<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 成功获取读锁，执行读取操作</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 锁不可用，采取相应策略（如：稍后重试、切换至其他任务等）</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">pthread_rwlock_trywrlock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rwlock<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 成功获取写锁，执行写入操作</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 锁不可用，采取相应策略</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过合理利用读写锁，可以有效避免不必要的线程阻塞，从而提升程序的并发性和整体性能。</p><h4 id="创建与销毁锁"><a href="#创建与销毁锁" class="headerlink" title="创建与销毁锁"></a>创建与销毁锁</h4><p><code>pthread_rwlock_init</code>和<code>pthread_rwlock_destroy</code>是POSIX线程库中的读写锁初始化和销毁函数。</p><ol><li><p><strong>pthread_rwlock_init</strong>：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">pthread_rwlock_init</span><span class="token punctuation">(</span><span class="token class-name">pthread_rwlock_t</span> <span class="token operator">*</span>rwlock<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token class-name">pthread_rwlockattr_t</span> <span class="token operator">*</span>attr<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>功能：初始化一个读写锁变量。这个函数用于创建一个新的读写锁，使它可以被多个线程用来同步对共享资源的读写访问。</li><li>参数：<ul><li><code>pthread_rwlock_t *rwlock</code>：指向读写锁对象的指针，需要先声明并初始化为NULL。</li><li><code>const pthread_rwlockattr_t *attr</code>：指向读写锁属性对象的指针，可以设置锁的一些高级特性（如进程间共享等）。如果不需要特殊属性，通常传入NULL即可使用默认属性。</li></ul></li></ul></li><li><p><strong>pthread_rwlock_destroy</strong>：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">pthread_rwlock_destroy</span><span class="token punctuation">(</span><span class="token class-name">pthread_rwlock_t</span> <span class="token operator">*</span>rwptr<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>功能：销毁已经初始化过的读写锁。在不再需要使用读写锁，并且所有线程都已解锁的情况下，调用此函数来释放与该锁关联的系统资源。</li><li>参数：<ul><li><code>pthread_rwlock_t *rwptr</code>：指向之前通过<code>pthread_rwlock_init</code>成功初始化过的读写锁对象的指针。</li></ul></li></ul></li></ol><p>正确使用这两个函数的方式如下：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token class-name">pthread_rwlock_t</span> my_rwlock<span class="token punctuation">;</span><span class="token comment">// 初始化读写锁</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">pthread_rwlock_init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>my_rwlock<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">"pthread_rwlock_init failed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 使用读写锁进行同步...</span><span class="token comment">// ...</span><span class="token comment">// 在不再需要读写锁时销毁它</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">pthread_rwlock_destroy</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>my_rwlock<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">"pthread_rwlock_destroy failed"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 处理错误或选择忽略（取决于程序逻辑）</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：在销毁读写锁前，必须确保没有任何线程正持有该锁（无论是读锁还是写锁），否则<code>pthread_rwlock_destroy</code>会失败并返回错误。</p><h4 id="获取和释放锁"><a href="#获取和释放锁" class="headerlink" title="获取和释放锁"></a>获取和释放锁</h4><ol><li><p><strong>pthread_rwlock_rdlock</strong>：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">pthread_rwlock_rdlock</span><span class="token punctuation">(</span><span class="token class-name">pthread_rwlock_t</span> <span class="token operator">*</span>rwptr<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>功能：对给定的读写锁（<code>rwptr</code>）进行读取锁定。当调用此函数时，如果当前没有其他线程持有写入锁，并且没有正在等待获取写入锁的线程，则当前线程可以获得读取锁并开始读取共享资源。如果有写入锁被持有或有线程在等待写入锁，那么该函数会阻塞直到可以获取读取锁。</li><li>返回值：成功返回0，出错返回非零错误代码。</li></ul></li><li><p><strong>pthread_rwlock_wrlock</strong>：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">pthread_rwlock_wrlock</span><span class="token punctuation">(</span><span class="token class-name">pthread_rwlock_t</span> <span class="token operator">*</span>rwptr<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>功能：对给定的读写锁（<code>rwptr</code>）进行写入锁定。当调用此函数时，无论是否有其他线程持有读取锁或者写入锁，都会阻塞直到当前线程能够获得写入锁。只有在没有任何线程持有读取锁或写入锁的情况下，当前线程才能获取写入锁并开始修改共享资源。</li><li>返回值：成功返回0，出错返回非零错误代码。</li></ul></li><li><p><strong>pthread_rwlock_unlock</strong>：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">pthread_rwlock_unlock</span><span class="token punctuation">(</span><span class="token class-name">pthread_rwlock_t</span> <span class="token operator">*</span>rwptr<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>功能：释放一个之前通过<code>pthread_rwlock_rdlock</code>或<code>pthread_rwlock_wrlock</code>获取的读出锁或写入锁。调用此函数后，其他等待相同锁的线程（无论是读取还是写入请求）可能会被唤醒并有机会获取锁。</li><li>返回值：成功返回0，出错返回非零错误代码。</li></ul></li></ol><p>示例使用：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token class-name">pthread_rwlock_t</span> rwlock<span class="token punctuation">;</span><span class="token keyword">int</span> shared_data<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">reader</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">pthread_rwlock_rdlock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rwlock<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 读取shared_data</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Reader: Data is %d\n"</span><span class="token punctuation">,</span> shared_data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_rwlock_unlock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rwlock<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">writer</span><span class="token punctuation">(</span><span class="token keyword">int</span> new_value<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">pthread_rwlock_wrlock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rwlock<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 修改shared_data</span>    shared_data <span class="token operator">=</span> new_value<span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Writer: Updated data to %d\n"</span><span class="token punctuation">,</span> shared_data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_rwlock_unlock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rwlock<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">pthread_rwlock_init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rwlock<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 创建和启动多个读线程与写线程</span>    <span class="token comment">// 销毁读写锁</span>    <span class="token function">pthread_rwlock_destroy</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rwlock<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="非阻塞获得读锁和写锁"><a href="#非阻塞获得读锁和写锁" class="headerlink" title="非阻塞获得读锁和写锁"></a>非阻塞获得读锁和写锁</h4><ol><li><p><strong>pthread_rwlock_tryrdlock</strong>：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">pthread_rwlock_tryrdlock</span><span class="token punctuation">(</span><span class="token class-name">pthread_rwlock_t</span> <span class="token operator">*</span>rwlock<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>功能：尝试获取给定的读写锁（<code>rwlock</code>）的读取锁，但不阻塞。如果当前没有其他线程持有写入锁，并且没有正在等待获取写入锁的线程，则立即返回并成功获取读取锁。否则，如果无法立即获取读取锁，则该函数会立即返回一个错误值。</li><li>返回值：若成功获取读取锁则返回0，若无法立即获取锁则返回一个非零错误代码（如EBUSY），表示资源已经被锁定。</li></ul></li><li><p><strong>pthread_rwlock_trywrlock</strong>：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">pthread_rwlock_trywrlock</span><span class="token punctuation">(</span><span class="token class-name">pthread_rwlock_t</span> <span class="token operator">*</span>rwlock<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>功能：尝试获取给定的读写锁（<code>rwlock</code>）的写入锁，同样不会阻塞。只有在没有任何线程持有读取锁或写入锁的情况下，该函数才能立即返回并成功获取写入锁。否则，如果无法立即获取写入锁，则该函数会立即返回一个错误值。</li><li>返回值：若成功获取写入锁则返回0，若无法立即获取锁则返回一个非零错误代码（如EBUSY），表示资源已经被锁定。</li></ul></li></ol><p>使用这两个函数可以在需要避免阻塞时尝试获取锁，例如在实时系统或者不能无限期等待锁的地方：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token class-name">pthread_rwlock_t</span> rwlock<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">non_blocking_reader</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">pthread_rwlock_tryrdlock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rwlock<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 成功获取读锁，执行读取操作</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Reader: Data is %d\n"</span><span class="token punctuation">,</span> shared_data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">pthread_rwlock_unlock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rwlock<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Reader: Could not acquire read lock, data not read.\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 执行其他操作或稍后重试</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">non_blocking_writer</span><span class="token punctuation">(</span><span class="token keyword">int</span> new_value<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">pthread_rwlock_trywrlock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rwlock<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 成功获取写锁，执行写入操作</span>        shared_data <span class="token operator">=</span> new_value<span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Writer: Updated data to %d\n"</span><span class="token punctuation">,</span> shared_data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">pthread_rwlock_unlock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rwlock<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Writer: Could not acquire write lock, data not updated.\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 执行其他操作或稍后重试</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="运行结果-9"><a href="#运行结果-9" class="headerlink" title="运行结果"></a>运行结果</h3><pre class="line-numbers language-none"><code class="language-none">reader 1 is reading data.reader 2 is reading data.reader 3 is reading data.writer 5 is writing data.writer 4 is writing data.reader 1 reads data over.reader 2 reads data over.reader 3 reads data over.writer 5 writes data over.writer 4 writes data over.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>        <span class="token macro-name">READER_MAX</span>    <span class="token expression"><span class="token number">3</span>        </span><span class="token comment">/*最多允许多少人一起读取数据*/</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span>        <span class="token macro-name">WRITER_MAX</span>    <span class="token expression"><span class="token number">2</span>        </span><span class="token comment">/*最多允许多少人写数据*/</span></span><span class="token class-name">pthread_rwlock_t</span>    rw_lock<span class="token punctuation">;</span>        <span class="token comment">/*读写锁*/</span><span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">reader_thread</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>arg<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">int</span> t<span class="token punctuation">;</span><span class="token comment">//your code here</span>t <span class="token operator">=</span> <span class="token function">pthread_rwlock_tryrdlock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rw_lock<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//end of your code</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"reader %u can't read data.\n"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token function">pthread_self</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"reader %u is reading data.\n"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token function">pthread_self</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"reader %u reads data over.\n"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token function">pthread_self</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">pthread_rwlock_unlock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rw_lock<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">writer_thread</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>arg<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">int</span> t<span class="token punctuation">;</span><span class="token comment">//your code here</span>t <span class="token operator">=</span> <span class="token function">pthread_rwlock_tryrdlock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rw_lock<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//end of your code</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"writer %u can't write data.\n"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token function">pthread_self</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"writer %u is writing data.\n"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token function">pthread_self</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"writer %u writes data over.\n"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token function">pthread_self</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">pthread_rwlock_unlock</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rw_lock<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">pthread_t</span> reader<span class="token punctuation">,</span> writer<span class="token punctuation">;</span>    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>     <span class="token function">pthread_rwlock_init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>rw_lock<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> READER_MAX<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>reader<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> reader_thread<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> WRITER_MAX<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>writer<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> writer_thread<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="一次初始化"><a href="#一次初始化" class="headerlink" title="一次初始化"></a>一次初始化</h2><ul><li><code>pthread_once</code>一次初始化</li></ul><p>在多线程环境中，有些事仅需要执行一次。通常当初始化应用程序时，可以比较容易地将其放在main函数中。但当你写一个库时，就不能在main里面初始化了，你可以用静态初始化，但使用一次初始化（pthread_once）会比较容易些。</p><p>在多线程编程环境下，尽管pthread_once()调用会出现在多个线程中，init_routine()函数仅执行一次，究竟在哪个线程中执行是不定的，是由内核调度来决定。</p><p><code>pthread_once</code>是POSIX线程库中的一个函数，用于确保某个初始化函数在整个程序生命周期内只被执行一次。这对于那些需要单次初始化且初始化过程必须在多线程环境下安全执行的情况非常有用。</p><p>函数原型：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">pthread_once</span><span class="token punctuation">(</span><span class="token class-name">pthread_once_t</span> <span class="token operator">*</span>once_control<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">*</span>init_routine<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参数解析：</p><ul><li><code>pthread_once_t *once_control</code>：指向一个pthread_once_t类型的变量的指针。这个变量是用来跟踪初始化是否已经完成的状态标志。</li><li><code>void (*init_routine)(void)</code>：这是一个指向无参数、无返回值函数的指针，即初始化函数。当<code>pthread_once</code>检测到初始化尚未执行时，它将调用这个函数进行初始化。</li></ul><p>功能描述：<br><code>pthread_once</code>函数会检查<code>once_control</code>指向的控制变量状态，如果初始化尚未执行，则调用<code>init_routine</code>函数进行初始化，并设置控制变量为已初始化状态。此函数保证了在多线程环境中即使多个线程同时调用<code>pthread_once</code>，初始化函数也只会被执行一次。</p><p>示例使用：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span></span><span class="token keyword">static</span> <span class="token class-name">pthread_once_t</span> once_control <span class="token operator">=</span> PTHREAD_ONCE_INIT<span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">int</span> shared_resource<span class="token punctuation">;</span><span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">initialize_shared_resource</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 这里进行一次性初始化操作</span>    shared_resource <span class="token operator">=</span> <span class="token function">calculate_initial_value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">access_shared_resource</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">pthread_once</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>once_control<span class="token punctuation">,</span> initialize_shared_resource<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 现在可以安全地访问shared_resource了</span>    <span class="token function">use_shared_resource</span><span class="token punctuation">(</span>shared_resource<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，<code>initialize_shared_resource</code>函数只有在第一次调用<code>access_shared_resource</code>函数并传递给<code>pthread_once</code>时才会被执行。后续对<code>access_shared_resource</code>的调用将直接跳过初始化阶段，因为<code>once_control</code>已经被标记为已初始化状态。</p><h3 id="运行结果-10"><a href="#运行结果-10" class="headerlink" title="运行结果"></a>运行结果</h3><pre class="line-numbers language-none"><code class="language-none">thread 1 entersthread 2 entersonce_run in thread 1thread 1 returnsthread 2 returns<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span>  </span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span>  </span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h></span> </span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token class-name">pthread_once_t</span> once <span class="token operator">=</span> PTHREAD_ONCE_INIT<span class="token punctuation">;</span>  <span class="token keyword">void</span> <span class="token function">once_run</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"once_run in thread %u\n"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token function">pthread_self</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>  <span class="token keyword">void</span> <span class="token operator">*</span> <span class="token function">child1</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span> arg<span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>      <span class="token class-name">pthread_t</span> tid <span class="token operator">=</span> <span class="token function">pthread_self</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"thread %u enters\n"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span>tid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//your code here</span>    <span class="token function">pthread_once</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>once<span class="token punctuation">,</span>once_run<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//end of your code</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"thread %u returns\n"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span>tid<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>  <span class="token keyword">void</span> <span class="token operator">*</span> <span class="token function">child2</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span> arg<span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>      <span class="token class-name">pthread_t</span> tid <span class="token operator">=</span> <span class="token function">pthread_self</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"thread %u enters\n"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span>tid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//your code here</span>    <span class="token function">pthread_once</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>once<span class="token punctuation">,</span>once_run<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//end of your code</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"thread %u returns\n"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span>tid<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>  <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>      <span class="token class-name">pthread_t</span> tid1<span class="token punctuation">,</span>tid2<span class="token punctuation">;</span>      <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>tid1<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">,</span>child1<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>tid2<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">,</span>child2<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">pthread_join</span><span class="token punctuation">(</span>tid1<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_join</span><span class="token punctuation">(</span>tid2<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="发送sig信号"><a href="#发送sig信号" class="headerlink" title="发送sig信号"></a>发送sig信号</h2><p>本节展示了发送sig信号的方法。</p><h3 id="基本知识-2"><a href="#基本知识-2" class="headerlink" title="基本知识"></a>基本知识</h3><ul><li><code>pthread_kill</code>发送sig信号</li></ul><p><code>pthread_kill</code>并不是结束进程的意思，而是向指定ID的线程发送一个信号，只是大部分信号的默认动作是终止进程的运行。<br>如果线程不处理该信号，则按照信号默认的行为作用于整个进程。信号值0为保留信号，作用是根据函数的返回值判断线程是不是还活着。<br><code>pthread_kill</code>的返回值：成功（0） 线程不存在（ESRCH） 信号不合法（EINVAL）</p><h3 id="函数说明-10"><a href="#函数说明-10" class="headerlink" title="函数说明"></a>函数说明</h3><p><code>pthread_kill</code>，用于向指定的线程发送信号。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">pthread_kill</span><span class="token punctuation">(</span><span class="token class-name">pthread_t</span> thread<span class="token punctuation">,</span> <span class="token keyword">int</span> sig<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参数解析：</p><ul><li><code>pthread_t thread</code>：这是目标线程的标识符，可以通过调用<code>pthread_create</code>函数创建线程时返回的值获取。</li><li><code>int sig</code>：要发送给线程的信号。这个参数可以是POSIX定义的任何有效信号（例如SIGTERM、SIGINT等），或者自定义信号（如1~31之间的数字）。</li></ul><p>功能描述：<br><code>pthread_kill</code>函数允许主线程或者其他线程向指定的线程发送一个信号。当目标线程接收到该信号后，它会根据预先注册的信号处理函数（通过<code>signal</code>或<code>sigaction</code>设置）来处理这个信号，或者是默认的行为（比如对于SIGTERM，通常会导致进程&#x2F;线程终止）。</p><p>示例使用：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;signal.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">void</span> <span class="token function">signal_handler</span><span class="token punctuation">(</span><span class="token keyword">int</span> signum<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Signal %d received in the thread\n"</span><span class="token punctuation">,</span> signum<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span><span class="token operator">*</span> <span class="token function">thread_function</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> arg<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">signal</span><span class="token punctuation">(</span>SIGUSR1<span class="token punctuation">,</span> signal_handler<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 注册信号处理器</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">pthread_t</span> tid<span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>tid<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> thread_function<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">"pthread_create"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">exit</span><span class="token punctuation">(</span>EXIT_FAILURE<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 等待线程开始运行</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">pthread_kill</span><span class="token punctuation">(</span>tid<span class="token punctuation">,</span> SIGUSR1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 向线程发送SIGUSR1信号</span>        <span class="token function">perror</span><span class="token punctuation">(</span><span class="token string">"pthread_kill"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">pthread_join</span><span class="token punctuation">(</span>tid<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 等待线程结束</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，我们创建了一个新的线程，并在其中注册了SIGUSR1信号的处理函数。然后，在主线程中使用<code>pthread_kill</code>向子线程发送SIGUSR1信号，触发其内部的信号处理函数执行。</p><h3 id="运行结果-11"><a href="#运行结果-11" class="headerlink" title="运行结果"></a>运行结果</h3><pre class="line-numbers language-none"><code class="language-none">ID 0x1 thread exits.ID 0x1 thread exits.ID 0x2 thread stays alive now.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;pthread.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;errno.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h></span> </span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;signal.h></span></span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">func1</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"ID 0x%x thread exits.\n"</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token function">pthread_self</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_exit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token function">func2</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"ID 0x%x thread exits。\n"</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token function">pthread_self</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_exit</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">test_pthread</span><span class="token punctuation">(</span><span class="token class-name">pthread_t</span> tid<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> pthread_kill_err<span class="token punctuation">;</span><span class="token comment">//your code here</span>    pthread_kill_err <span class="token operator">=</span> <span class="token function">pthread_kill</span><span class="token punctuation">(</span>tid<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//end of your code</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>pthread_kill_err <span class="token operator">==</span> ESRCH<span class="token punctuation">)</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"ID 0x%x thread exits.\n"</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span>tid<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>pthread_kill_err <span class="token operator">==</span> EINVAL<span class="token punctuation">)</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"invalid signal\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"ID 0x%x thread stays alive now.\n"</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span>tid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> ret<span class="token punctuation">;</span>    <span class="token class-name">pthread_t</span> tid1<span class="token punctuation">,</span>tid2<span class="token punctuation">;</span>        <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>tid1<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">,</span>func1<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">pthread_create</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>tid2<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">,</span>func2<span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">test_pthread</span><span class="token punctuation">(</span>tid1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">test_pthread</span><span class="token punctuation">(</span>tid2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 分布式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分布式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MPI</title>
      <link href="/posts/e16d.html"/>
      <url>/posts/e16d.html</url>
      
        <content type="html"><![CDATA[<h1 id="MPI"><a href="#MPI" class="headerlink" title="MPI"></a>MPI</h1><p>MPI（Message Passing Interface，消息传递接口）</p><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><ul><li>MPI_INT：整数类型，对应C语言中的int类型。</li><li>MPI_FLOAT：单精度浮点数类型，对应C语言中的float类型。</li><li>MPI_DOUBLE：双精度浮点数类型，对应C语言中的double类型。</li><li>MPI_CHAR：字符类型，对应C语言中的char类型。</li><li>MPI_LOGIC：逻辑类型，对应C语言中的_Bool类型（在stdbool.h头文件中定义）</li></ul><h2 id="MPI-Op"><a href="#MPI-Op" class="headerlink" title="MPI_Op"></a>MPI_Op</h2><p>MPI_Op是一个枚举类型，它定义了各种操作符，这些操作符可以用于执行元素级别的操作。以下是一些常用的操作符：</p><ul><li>MPI_OP_NULL：用于初始化操作对象。</li><li>MPI_MAX：用于找出数组中的最大值。</li><li>MPI_MIN：用于找出数组中的最小值。</li><li>MPI_SUM：用于计算数组中所有元素的和。</li><li>MPI_PROD：用于计算数组中所有元素的乘积。</li><li>MPI_LAND：用于执行元素级别的“与”操作。</li><li>MPI_BAND：用于执行元素级别的“或非”操作。</li></ul><h2 id="第一个MPI程序"><a href="#第一个MPI程序" class="headerlink" title="第一个MPI程序"></a>第一个MPI程序</h2><p>首先，我们应该先包含进一个头文件<code>&lt;mpi.h&gt;</code></p><p>MPI程序和普通的C程序的区别在于有一个开始的函数和结束的函数来标识MPI部分，再在这个部分进行你想要进行的操作</p><h3 id="函数说明"><a href="#函数说明" class="headerlink" title="函数说明"></a>函数说明</h3><h4 id="MPI-Init"><a href="#MPI-Init" class="headerlink" title="MPI_Init( )"></a>MPI_Init( )</h4><p>MPI_Init( )：进入MPI环境并完成所有的初始化工作，标志并行代码的开始</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span>argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>int MPI_Init(int *argc, char **argv)</code> ，用于初始化MPI环境</p><p>参数说明：</p><ul><li><code>argc</code>：指向整数的指针，表示命令行参数的数量。</li><li><code>argv</code>：指向字符指针的指针，表示命令行参数的值。</li></ul><p>返回值：</p><ul><li>函数执行成功时返回0。</li><li>如果发生错误，则返回非零错误代码。</li></ul><h4 id="MPI-Finalize"><a href="#MPI-Finalize" class="headerlink" title="MPI_Finalize( )"></a>MPI_Finalize( )</h4><p>MPI_Finalize( )：从MPI环境中退出，标志并行代码的结束</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>int MPI_Finalize(void)</code> ，用于结束MPI环境。</p><p>返回值：</p><ul><li>函数执行成功时返回0。</li><li>如果发生错误，则返回非零错误代码。</li></ul><h3 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;mpi.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     <span class="token comment">//your code here</span>    <span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello World!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//end of your code </span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="获取进程数量"><a href="#获取进程数量" class="headerlink" title="获取进程数量"></a>获取进程数量</h2><p>在MPI编程中，我们常常需要获取指定通信域的进程个数，以确定程序的规模。</p><p>一组可以相互发送消息的进程集合叫做通信子，通常由<code>MPI_Init()</code>在用户启动程序时，定义由用户启动的所有进程所组成的通信子，缺省值为 <em>MPI_COMM_WORLD</em> 。这个参数是MPI通信操作函数中必不可少的参数，用于限定参加通信的进程的范围。</p><h3 id="函数说明-1"><a href="#函数说明-1" class="headerlink" title="函数说明"></a>函数说明</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">MPI_Comm_size</span><span class="token punctuation">(</span>MPI_Comm comm<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>rank<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>int MPI_Comm_size(MPI_Comm comm, int *rank)</code> ，获取指定通信域的进程个数。</p><p>参数说明：</p><ul><li><code>comm</code>：通信器对象，表示一组进程之间的通信关系。</li><li><code>rank</code>：指向整数的指针，用于存储进程数量。</li></ul><p>返回值：</p><ul><li>函数执行成功时返回0。</li><li>如果发生错误，则返回非零错误代码。</li></ul><h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;mpi.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> world_size<span class="token punctuation">;</span>    <span class="token function">MPI_Comm_size</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>world_size<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取MPI_COMM_WORLD通信器中的进程数量</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Number of processes: %d\n"</span><span class="token punctuation">,</span> world_size<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在上述代码中，<code>MPI_Comm_size(MPI_COMM_WORLD, &amp;world_size)</code> 将获取默认通信器（<code>MPI_COMM_WORLD</code>，通常包含所有参与执行的应用程序进程）中的进程数量，并将其存储在 <code>world_size</code> 变量中。</p><h3 id="实验说明"><a href="#实验说明" class="headerlink" title="实验说明"></a>实验说明</h3><p>使用函数MPI_Comm_size获取通信域中的进程个数并打印出来。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;mpi.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> myid<span class="token punctuation">,</span> numprocs<span class="token punctuation">;</span><span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//your code here</span><span class="token function">MPI_Comm_size</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>numprocs<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//end of your code</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello World!I'm rank %d of %d\n"</span><span class="token punctuation">,</span> myid<span class="token punctuation">,</span> numprocs<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="获取进程id"><a href="#获取进程id" class="headerlink" title="获取进程id"></a>获取进程id</h2><p>同样，我们也常常需要输出当前进程的id，以此来判断具体哪个进程完成了对应的任务。</p><h3 id="函数说明-2"><a href="#函数说明-2" class="headerlink" title="函数说明"></a>函数说明</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">MPI_Comm_rank</span><span class="token punctuation">(</span>MPI_Comm comm<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>rank<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>int MPI_Comm_rank(MPI_Comm comm, int *rank)</code> ，用于获取当前进程在指定通信器中的编号。</p><p>参数说明：</p><ul><li><code>comm</code>：通信器对象，表示一组进程之间的通信关系。</li><li><code>rank</code>：指向整数的指针，用于存储当前进程的编号。</li></ul><p>返回值：</p><ul><li>函数执行成功时返回0。</li><li>如果发生错误，则返回非零错误代码。</li></ul><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;mpi.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> world_rank<span class="token punctuation">;</span>    <span class="token function">MPI_Comm_rank</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>world_rank<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello from rank %d\n"</span><span class="token punctuation">,</span> world_rank<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="实验说明-1"><a href="#实验说明-1" class="headerlink" title="实验说明"></a>实验说明</h3><p>在每个进程中，使用函数MPI_Comm_rank来获取当前进程的id并打印出来。</p><p>输出结果：由于并行程序执行顺序的不确定性，你的结果的顺序可能和这个结果不一致。</p><p>0</p><p>1</p><p>3</p><p>2</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;mpi.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> myid<span class="token punctuation">,</span> numprocs<span class="token punctuation">;</span><span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MPI_Comm_size</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>numprocs<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//your code here</span><span class="token function">MPI_Comm_rank</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>myid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//end of your code</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello World!I'm rank %d of %d\n"</span><span class="token punctuation">,</span> myid<span class="token punctuation">,</span> numprocs<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="消息传递"><a href="#消息传递" class="headerlink" title="消息传递"></a>消息传递</h2><p>在并行编程中，消息传递占了很大的比重。良好的消息传递是正常完成进程&#x2F;节点之间操作的基本条件</p><p>在这里先介绍的最基本发送&#x2F;接收函数</p><p>最基本的发送 &#x2F; 接收函数都是以缓冲区作为端点，通过参数配置来完成指定操作</p><h3 id="函数说明-3"><a href="#函数说明-3" class="headerlink" title="函数说明"></a>函数说明</h3><h4 id="发送数据"><a href="#发送数据" class="headerlink" title="发送数据"></a>发送数据</h4><p>发送缓冲区中的信息到目标进程</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">MPI_Send</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> msg_buf_p<span class="token punctuation">,</span>  <span class="token keyword">int</span> msg_size<span class="token punctuation">,</span>  MPI_Datatype msg_type<span class="token punctuation">,</span> <span class="token keyword">int</span> dest<span class="token punctuation">,</span>  <span class="token keyword">int</span> tag<span class="token punctuation">,</span>   MPI_Comm communicator<span class="token punctuation">)</span>   缓冲区的起始地址    缓冲区大小  发送信息的数据类型   目标进程的id 消息标签  通信子<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>MPI_Send(void* msg_buf_p, int msg_size, MPI_Datatype msg_type, int dest, int tag, MPI_Comm communicator)</code> ，用于将数据从源进程发送到目标进程。</p><p>参数说明：</p><ul><li><code>msg_buf_p</code>：指向要发送数据的缓冲区的指针。</li><li><code>msg_size</code>：要发送的数据的大小（以字节为单位）。</li><li><code>msg_type</code>：数据的类型。</li><li><code>dest</code>：目标进程的标识符。</li><li><code>tag</code>：一个整数标签，用于区分不同的消息。</li><li><code>communicator</code>：通信器对象，表示一组进程之间的通信关系。</li></ul><p>返回值：</p><ul><li>函数执行成功时返回0。</li><li>如果发生错误，则返回非零错误代码。</li></ul><h4 id="接收数据"><a href="#接收数据" class="headerlink" title="接收数据"></a>接收数据</h4><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">MPI_Recv</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> msg_buf_p<span class="token punctuation">,</span> <span class="token keyword">int</span> buf_size<span class="token punctuation">,</span> MPI_Datatype msg_type<span class="token punctuation">,</span> <span class="token keyword">int</span> source<span class="token punctuation">,</span> <span class="token keyword">int</span> tag<span class="token punctuation">,</span> MPI_Comm communicator， MPI_Status <span class="token operator">*</span>status_p<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>用于在并行计算环境中接收来自特定源进程的数据，并将其存储在指定的接收缓冲区中。</p><ul><li><code>void* msg_buf_p</code>: 这是指向接收缓冲区的指针。该缓冲区将存储从源进程接收到的数据。</li><li><code>int buf_size</code>: 这是接收缓冲区的大小（以字节为单位）。它应该与发送缓冲区的大小相匹配。</li><li><code>MPI_Datatype msg_type</code>: 这是指定接收缓冲区中数据类型的MPI数据类型对象。</li><li><code>int source</code>: 这是发送数据的源进程的标识符。MPI库将只从这个进程接收数据。</li><li><code>int tag</code>: 这是用于区分不同消息的整数标签。如果两个进程同时发送数据，它们可以使用不同的标签来区分它们的消息。</li><li><code>MPI_Comm communicator</code>: 这是通信器对象，它定义了进程组和通信模式。在这个例子中，通信器对象表示一个并行计算环境。</li><li><code>MPI_Status *status_p</code>: 这是指向MPI状态对象的指针。MPI状态对象包含了关于接收操作的信息，如是否成功接收到数据、接收时间等。</li></ul><h3 id="实验说明-2"><a href="#实验说明-2" class="headerlink" title="实验说明"></a>实验说明</h3><p>把id为0的进程当作根进程，然后在除此之外的进程中使用函数MPI_Send发送一句”hello world!”到根进程中，然后在根进程中把这些信息打印出来。</p><p>输出结果：一系列的”hello world!”</p><blockquote><p>字符串的名字就是字符串的首地址。在C语言中，字符串是由字符数组表示的，每个字符都有一个唯一的地址。所以，字符串的名字实际上就是指向字符串首字符的指针。</p></blockquote><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;mpi.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> myid<span class="token punctuation">,</span> numprocs<span class="token punctuation">,</span> source<span class="token punctuation">;</span>MPI_Status status<span class="token punctuation">;</span><span class="token keyword">char</span> message<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_rank</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>myid<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MPI_Comm_size</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>numprocs<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>myid <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">strcpy</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token string">"hello world!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//your code here</span>    <span class="token function">MPI_Send</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> MPI_CHAR<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> MPI_COMM_WORLD<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//end of your code</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>         <span class="token comment">//myid == 0</span><span class="token keyword">for</span><span class="token punctuation">(</span>source<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> source<span class="token operator">&lt;</span>numprocs<span class="token punctuation">;</span> source<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">//your code here</span><span class="token function">MPI_Recv</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> MPI_CHAR<span class="token punctuation">,</span> source<span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//end of your code</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%s\n"</span><span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="规约（reduce）"><a href="#规约（reduce）" class="headerlink" title="规约（reduce）"></a>规约（reduce）</h2><p>在现实生活中，我们常常需要对于数据做同一种操作，并将结果返回到指定的进程中，这个过程称为集合通信。例如，将数据分散到各个进程中，先在各个进程内进行求和，再在全局完成求和-平均这个操作，这个过程是一个规约的过程。</p><p>一般来说，集合通信包括通信、同步和计算三个功能。不过，目前我们暂时不需要关注整个过程，而是先使用一个规约函数去体验一下集合通信。</p><h3 id="函数说明-4"><a href="#函数说明-4" class="headerlink" title="函数说明"></a>函数说明</h3><blockquote><p>规约函数，所有进程将待处理数据通过输入的操作子operator计算为最终结果并将它存入目标进程中。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">MPI_Reduce</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span> input_data_p<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span> output_data_p<span class="token punctuation">,</span> <span class="token keyword">int</span> count<span class="token punctuation">,</span> MPI_Datatype datatype<span class="token punctuation">,</span> MPI_Op operator<span class="token punctuation">,</span> <span class="token keyword">int</span> dest_process<span class="token punctuation">,</span> MPI_Comm comm<span class="token punctuation">)</span>进程的待处理数据存放的地址； 存放最终结果的目标进程的地址；缓冲区中的数据个数；数据类型；操作子（加减）；目标进程的编号；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>int MPI_Reduce(void * input_data_p, void * output_data_p, int count, MPI_Datatype datatype, MPI_Op operator, int dest_process, MPI_Comm comm)</code> ，用于将数据从源进程收集到目标进程。</p><p>参数说明：</p><ul><li><code>input_data_p</code>：指向输入数据的指针。</li><li><code>output_data_p</code>：指向输出数据的指针。</li><li><code>count</code>：要处理的元素数量。</li><li><code>datatype</code>：数据类型。</li><li><code>operator</code>：MPI操作符，用于指定如何组合输入数据以生成输出数据。</li><li><code>dest_process</code>：目标进程的标识符。</li><li><code>comm</code>：通信器对象，表示一组进程之间的通信关系。</li></ul><p>返回值：</p><ul><li>函数执行成功时返回0。</li><li>如果发生错误，则返回非零错误代码。</li></ul></blockquote><blockquote><p><code>MPI_Reduce()</code>函数是Message Passing Interface (MPI) 库中用于并行计算的一个重要函数，主要用于在一组进程间对数据进行规约操作（如求和、最大值、最小值等）。以下是该函数的详细解析：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">int</span> <span class="token function">MPI_Reduce</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span>input_data_p<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>output_data_p<span class="token punctuation">,</span>             <span class="token keyword">int</span> count<span class="token punctuation">,</span> MPI_Datatype datatype<span class="token punctuation">,</span>             MPI_Op op<span class="token punctuation">,</span> <span class="token keyword">int</span> dest_process<span class="token punctuation">,</span>             MPI_Comm comm<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p><strong>参数解释：</strong></p><ul><li><p><code>void *input_data_p</code>: 指向参与规约操作的输入缓冲区的指针。每个进程提供一块相同大小的数据区域，这些数据将按照指定的操作符被规约。</p></li><li><p><code>void *output_data_p</code>: 指向规约结果存储位置的指针。只有指定的目标进程（dest_process）会接收到最终的规约结果。</p></li><li><p><code>int count</code>: 表示要处理的数据元素个数。例如，如果datatype是MPI_INT且count为10，则表示有10个整数参与规约。</p></li><li><p><code>MPI_Datatype datatype</code>: 指定参与规约的数据类型，可以是MPI预定义的类型，如MPI_INT、MPI_FLOAT、MPI_DOUBLE等，也可以是用户自定义的复合数据类型。</p></li><li><p><code>MPI_Op op</code>: 指定要执行的规约操作，例如MPI_SUM（求和）、MPI_MAX（求最大值）、MPI_MIN（求最小值）等。也可以通过MPI_Op_create自定义规约操作。</p></li><li><p><code>int dest_process</code>: 规约结果存放的目标进程的 rank（标识符）。所有进程都将它们的局部结果发送到这个目标进程，然后由目标进程执行最后的规约操作得到全局结果。</p></li><li><p><code>MPI_Comm comm</code>: 指定通信器，通常是一个进程组（communicator），如MPI_COMM_WORLD，它包含了参与规约的所有进程。</p></li></ul></li></ul><p>函数返回一个整数值，若成功则返回MPI_SUCCESS，否则返回错误代码。</p><p>示例用法：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;mpi.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span> argv<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> my_rank<span class="token punctuation">,</span> size<span class="token punctuation">;</span>    <span class="token function">MPI_Comm_rank</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>my_rank<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MPI_Comm_size</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">double</span> local_sum <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">;</span>    <span class="token comment">// 假设我们已经填充了本地数据</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        local_sum <span class="token operator">+=</span> some_local_array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">double</span> global_sum<span class="token punctuation">;</span>    <span class="token function">MPI_Reduce</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>local_sum<span class="token punctuation">,</span> <span class="token operator">&amp;</span>global_sum<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> MPI_DOUBLE<span class="token punctuation">,</span> MPI_SUM<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> MPI_COMM_WORLD<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>my_rank <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"The global sum is: %f\n"</span><span class="token punctuation">,</span> global_sum<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，所有进程都会计算其本地数据之和，然后通过<code>MPI_Reduce</code>函数将各自的局部和规约成一个全局总和，结果存储在rank为0的进程中。</p></blockquote><blockquote><p>在上面的示例中，<code>count</code>设置为1表示每个进程中参与规约操作的数据元素个数为1。这意味着我们正在对单个double类型的数值进行规约。</p><p>然而，在实际应用中，<code>count</code>可以根据需要设置成任意大于0的整数。例如，如果每个进程有一段包含多个相同类型数据（如一个double数组）的缓冲区，并希望对这些数据进行规约，那么<code>count</code>应设为该数组的元素个数。</p><p>假设每个进程都有一个长度为100的double数组，想要求和：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">double</span> local_data<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 初始化local_data...</span><span class="token keyword">double</span> global_sum<span class="token punctuation">;</span><span class="token function">MPI_Reduce</span><span class="token punctuation">(</span>local_data<span class="token punctuation">,</span> <span class="token operator">&amp;</span>global_sum<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> MPI_DOUBLE<span class="token punctuation">,</span> MPI_SUM<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> MPI_COMM_WORLD<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>在这个例子中，<code>count</code>被设置为100，表示每个进程将它所拥有的100个double元素进行规约。最终结果是一个全局的总和，存储在rank为0的进程中的<code>global_sum</code>变量中。</p></blockquote><h3 id="实验说明-3"><a href="#实验说明-3" class="headerlink" title="实验说明"></a>实验说明</h3><p>使用函数MPI_Reduce来完成加法规约到根进程的操作，并在根进程打印出总和和平均值。</p><p>输出结果：由于这里是测试用例，所以每个进程的数值都是取3.0。所以，输出的平均值应该是3。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;mpi.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> myid<span class="token punctuation">,</span> numprocs<span class="token punctuation">;</span><span class="token keyword">double</span> local_num <span class="token operator">=</span> <span class="token number">3.0</span><span class="token punctuation">;</span> <span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_rank</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>myid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_size</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>numprocs<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">double</span> global_num<span class="token punctuation">;</span>        <span class="token comment">//your code here</span>    <span class="token function">MPI_Reduce</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>local_num<span class="token punctuation">,</span> <span class="token operator">&amp;</span>global_num<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> MPI_DOUBLE<span class="token punctuation">,</span> MPI_SUM<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> MPI_COMM_WORLD<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//end of your code</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>myid <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Total sum = %f, avg = %f\n"</span><span class="token punctuation">,</span> global_num<span class="token punctuation">,</span> global_num <span class="token operator">/</span> numprocs<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="广播（Bcast）"><a href="#广播（Bcast）" class="headerlink" title="广播（Bcast）"></a>广播（Bcast）</h2><p>在一个集合通信中，如果属于一个进程的数据被发送到通信子中的所有进程，这样的集合通信叫做广播。</p><h3 id="函数说明-5"><a href="#函数说明-5" class="headerlink" title="函数说明"></a>函数说明</h3><p>广播函数，从一个id值为source的进程将一条消息广播发送到通信子内的所有进程,包括它本身在内。</p><pre class="line-numbers language-none"><code class="language-none">int MPI_Bcast(void* buffer, int count, MPI_Datatype datatype, int source, MPI_Comm comm)缓冲区起始地址； 缓冲区数据个数； 数据类型； 发送信息的进程id； 通信子； <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>int MPI_Bcast(void* buffer, int count, MPI_Datatype datatype, int source, MPI_Comm comm)</code> ，用于在并行计算中广播数据。</p><p>参数说明：</p><ul><li><code>buffer</code>：指向要广播的缓冲区的指针。</li><li><code>count</code>：要广播的元素数量。</li><li><code>datatype</code>：缓冲区中元素的数据类型。</li><li><code>source</code>：广播数据的源进程的标识符。如果为0，则表示使用默认的源进程。</li><li><code>comm</code>：通信器对象，表示一组进程之间的通信关系。</li></ul><p>返回值：</p><ul><li>函数执行成功时返回0。</li><li>如果发生错误，则返回非零错误代码。</li></ul><blockquote><p><code>MPI_Bcast</code>，用于在并行计算环境中的所有进程间进行广播操作。该函数将源进程（由参数<code>source</code>指定）的数据广播到 communicator (<code>comm</code>) 中的其他所有进程中。</p><p>函数原型：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">MPI_Bcast</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> buffer<span class="token punctuation">,</span> <span class="token keyword">int</span> count<span class="token punctuation">,</span> MPI_Datatype datatype<span class="token punctuation">,</span> <span class="token keyword">int</span> source<span class="token punctuation">,</span> MPI_Comm comm<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参数解析：</p><ul><li><p><code>void* buffer</code>: 指向要发送或接收数据的缓冲区的指针。在非源进程中，这个缓冲区会被来自<code>source</code>进程的数据覆盖；在源进程中，它包含要广播的数据。</p></li><li><p><code>int count</code>: 要发送或接收的数据元素个数。例如，如果数据类型为<code>MPI_INT</code>，则<code>count</code>表示整数的数量。</p></li><li><p><code>MPI_Datatype datatype</code>: 数据类型的标识符，可以是预定义的基本类型如<code>MPI_INT</code>、<code>MPI_DOUBLE</code>等，也可以是用户自定义的复合类型。</p></li><li><p><code>int source</code>: 广播源进程的rank（编号）。只有这个进程提供数据，其余所有进程都会接收到同样的数据。</p></li><li><p><code>MPI_Comm comm</code>: 通信器，它定义了参与此次广播的所有进程集合。通常使用<code>MPI_COMM_WORLD</code>，即包含了所有参与计算的进程。</p></li></ul><p>函数返回值：<br><code>MPI_Bcast</code>函数返回一个<code>int</code>型数值，如果成功完成，则返回<code>MPI_SUCCESS</code>，否则返回错误代码。</p><p>功能描述：<br><code>MPI_Bcast</code>函数使得所有进程中的<code>buffer</code>区域内容相同，其内容来源于<code>source</code>进程的相应内存区域。这样，在并行程序中，一个进程可以通过广播的方式快速地将其数据同步给其他所有进程。</p></blockquote><h3 id="实验说明-4"><a href="#实验说明-4" class="headerlink" title="实验说明"></a>实验说明</h3><p>使用函数MPI_Bcast在根进程中发送一个数组到其他进程，并在其他进程中打印出来。</p><p>输出结果：<br>In process 1, arr[0]&#x3D;1 arr[1]&#x3D;2 arr[2]&#x3D;3 arr[3]&#x3D;4 arr[4]&#x3D;5<br>In process 3, arr[0]&#x3D;1 arr[1]&#x3D;2 arr[2]&#x3D;3 arr[3]&#x3D;4 arr[4]&#x3D;5<br>…<br>In process n, arr[0]&#x3D;1 arr[1]&#x3D;2 arr[2]&#x3D;3 arr[3]&#x3D;4 arr[4]&#x3D;5<br>…</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;mpi.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> myid<span class="token punctuation">,</span> numprocs<span class="token punctuation">;</span><span class="token keyword">int</span> source <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> array<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">int</span> i<span class="token punctuation">;</span><span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_rank</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>myid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_size</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>numprocs<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>myid <span class="token operator">==</span> source<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>            array<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">//your code here</span>    <span class="token function">MPI_Bcast</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> MPI_INT<span class="token punctuation">,</span> source<span class="token punctuation">,</span> MPI_COMM_WORLD<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//end of your code</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>myid <span class="token operator">!=</span> source<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"In process %d, "</span><span class="token punctuation">,</span> myid<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"arr[%d]=%d\t"</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="收集（gather）"><a href="#收集（gather）" class="headerlink" title="收集（gather）"></a>收集（gather）</h2><p>有时候我们希望在一个进程中从所有进程获取信息，例如将所有进程中的一个数组都收集到根进程中作进一步的处理，这样的集合通信我们叫做收集。</p><h3 id="函数说明-6"><a href="#函数说明-6" class="headerlink" title="函数说明"></a>函数说明</h3><p>收集函数，根进程（目标进程）从所有进程（包括它自己）收集发送缓冲区的数据，再根据发送这些数据的进程id将它们依次存放到自已的缓冲区中</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">MPI_Gather</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> sendbuf<span class="token punctuation">,</span> <span class="token keyword">int</span> sendcount<span class="token punctuation">,</span> MPI_Datatype sendtype<span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">*</span> recvbuf<span class="token punctuation">,</span> <span class="token keyword">int</span> recvcount<span class="token punctuation">,</span> MPI_Datatype recvtype<span class="token punctuation">,</span> <span class="token keyword">int</span> root<span class="token punctuation">,</span> MPI_Comm comm<span class="token punctuation">)</span> 发送缓冲区的起始地址；发送的数据个数；数据类型；接收缓冲区的起始地址；待接收的元素个数；接收的数据类型；接收进程id ；通信子 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>int MPI_Gather(void* sendbuf, int sendcount, MPI_Datatype sendtype, void* recvbuf, int recvcount, MPI_Datatype recvtype, int root, MPI_Comm comm)</code> ，用于将一个进程的局部数据收集到根进程中。</p><p>参数说明：</p><ul><li><code>sendbuf</code>：指向发送缓冲区的指针，该缓冲区包含要发送的数据。</li><li><code>sendcount</code>：要发送的元素数量。</li><li><code>sendtype</code>：发送缓冲区中元素的数据类型。</li><li><code>recvbuf</code>：指向接收缓冲区的指针，该缓冲区将存储接收到的数据。</li><li><code>recvcount</code>：每个进程应接收的元素数量。</li><li><code>recvtype</code>：接收缓冲区中元素的数据类型。</li><li><code>root</code>：根进程的标识符，即数据分发的起点。</li><li><code>comm</code>：通信器对象，表示一组进程之间的通信关系。</li></ul><p>返回值：</p><ul><li>函数执行成功时返回0。</li><li>如果发生错误，则返回非零错误代码。</li></ul><h3 id="实验说明："><a href="#实验说明：" class="headerlink" title="实验说明："></a>实验说明：</h3><p>使用函数MPI_Gather在根进程中从所有进程接收一个数组，并在根进程中打印出来。</p><p>输出结果：<br>Now is process 1’s data: arr[0]&#x3D;1 arr[1]&#x3D;2 arr[2]&#x3D;3 arr[3]&#x3D;4 arr[4]&#x3D;5<br>Now is process 4’s data: arr[0]&#x3D;1 arr[1]&#x3D;2 arr[2]&#x3D;3 arr[3]&#x3D;4 arr[4]&#x3D;5<br>Now is process 2’s data: arr[0]&#x3D;1 arr[1]&#x3D;2 arr[2]&#x3D;3 arr[3]&#x3D;4 arr[4]&#x3D;5<br>…<br>Now is process n’s data: arr[0]&#x3D;1 arr[1]&#x3D;2 arr[2]&#x3D;3 arr[3]&#x3D;4 arr[4]&#x3D;5</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;mpi.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> myid<span class="token punctuation">,</span> numprocs<span class="token punctuation">;</span><span class="token keyword">int</span> dest <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> array<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token operator">*</span>rbuf<span class="token punctuation">;</span> <span class="token keyword">int</span> i<span class="token punctuation">,</span>j<span class="token punctuation">;</span><span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_rank</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>myid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_size</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>numprocs<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>myid <span class="token operator">==</span> dest<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    rbuf<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span>numprocs<span class="token operator">*</span><span class="token number">5</span><span class="token operator">*</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//your code here</span><span class="token function">MPI_Gather</span><span class="token punctuation">(</span>array<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> MPI_INT<span class="token punctuation">,</span> rbuf<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> MPI_INT<span class="token punctuation">,</span> dest<span class="token punctuation">,</span> MPI_COMM_WORLD<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//end of your code</span><span class="token keyword">if</span><span class="token punctuation">(</span>myid <span class="token operator">==</span> dest<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span>dest<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>numprocs<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Now is process %d's data: "</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"array[%d]=%d\t"</span><span class="token punctuation">,</span> j<span class="token punctuation">,</span> rbuf<span class="token punctuation">[</span>i<span class="token operator">*</span><span class="token number">5</span><span class="token operator">+</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="散发（scatter）"><a href="#散发（scatter）" class="headerlink" title="散发（scatter）"></a>散发（scatter）</h2><p>在前面我们学习了收集（gather）操作，那么与之相对应也有一个相反的集合通信操作，即根进程向所有进程发送缓冲区的数据，称为散发。</p><p>需要特别说明的是，散发操作和广播操作的区别在于发送到各个进程的信息可以是不同的。</p><h3 id="函数说明-7"><a href="#函数说明-7" class="headerlink" title="函数说明"></a>函数说明</h3><blockquote><p>MPI_SCATTER是MPI_GATHER的逆操作，另外一种解释是根进程通过MPI_Send发送一条消息,这条消息被分成n等份,第i份发送给组中的第i个处理器, 然后每个处理器如上所述接收相应的消息。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">MPI_Scatter</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> sendbuf<span class="token punctuation">,</span> <span class="token keyword">int</span> sendcount<span class="token punctuation">,</span> MPI_Datatype sendtype<span class="token punctuation">,</span> <span class="token keyword">void</span><span class="token operator">*</span> recvbuf<span class="token punctuation">,</span> <span class="token keyword">int</span> recvcount<span class="token punctuation">,</span> MPI_Datatype recvtype<span class="token punctuation">,</span><span class="token keyword">int</span> root<span class="token punctuation">,</span> MPI_Comm comm<span class="token punctuation">)</span> 发送缓冲区的起始地址；发送的数据个数；数据类型；接收缓冲区的起始地址；待接收的元素个数；数据类型；发送进程id；通信子 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>int MPI_Scatter(void* sendbuf, int sendcount, MPI_Datatype sendtype, void* recvbuf, int recvcount, MPI_Datatype recvtype,int root, MPI_Comm comm)</code> ，用于在并行计算中将数据从根进程分散到其他所有进程。</p><p>参数说明：</p><ul><li><code>sendbuf</code>：指向发送缓冲区的指针，该缓冲区包含要发送的数据。</li><li><code>sendcount</code>：要发送的元素数量。</li><li><code>sendtype</code>：发送缓冲区中元素的数据类型。</li><li><code>recvbuf</code>：指向接收缓冲区的指针，该缓冲区将存储接收到的数据。</li><li><code>recvcount</code>：每个进程应接收的元素数量。</li><li><code>recvtype</code>：接收缓冲区中元素的数据类型。</li><li><code>root</code>：根进程的标识符，即数据分发的起点。</li><li><code>comm</code>：通信器对象，表示一组进程之间的通信关系。</li></ul><p>返回值：</p><ul><li>函数执行成功时返回0。</li><li>如果发生错误，则返回非零错误代码。</li></ul><p>使用示例：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;mpi.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span> argv<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> rank<span class="token punctuation">,</span> size<span class="token punctuation">;</span>    <span class="token function">MPI_Comm_rank</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>rank<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MPI_Comm_size</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>size<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> sendbuf<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> recvbuf<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>rank <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 根进程初始化发送缓冲区</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            sendbuf<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 使用MPI_Scatter进行数据分发</span>    <span class="token function">MPI_Scatter</span><span class="token punctuation">(</span>sendbuf<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> MPI_INT<span class="token punctuation">,</span> recvbuf<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> MPI_INT<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> MPI_COMM_WORLD<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Process %d received data: "</span><span class="token punctuation">,</span> rank<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d "</span><span class="token punctuation">,</span> recvbuf<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上述示例演示了如何使用<code>MPI_Scatter</code>函数将数据从根进程分散到其他所有进程。根进程初始化发送缓冲区，然后调用<code>MPI_Scatter</code>函数进行数据分发。其他进程接收到数据后，将其打印出来。</p></blockquote><h3 id="实验说明：-1"><a href="#实验说明：-1" class="headerlink" title="实验说明："></a>实验说明：</h3><p>使用函数MPI_Scatter在根进程中向所有进程发送对应数组，并在对应进程中打印出来。</p><p>输出结果：<br>Now is process 1: arr[0]&#x3D;5 arr[1]&#x3D;6 arr[2]&#x3D;7 arr[3]&#x3D;8 arr[4]&#x3D;9<br>Now is process 4: arr[0]&#x3D;20 arr[1]&#x3D;21 arr[2]&#x3D;22 arr[3]&#x3D;23 arr[4]&#x3D;24<br>Now is process 2: arr[0]&#x3D;10 arr[1]&#x3D;11 arr[2]&#x3D;12 arr[3]&#x3D;13 arr[4]&#x3D;14<br>…<br>Now is process n: arr[0]&#x3D;5<em>n arr[1]&#x3D;5</em>n+1 arr[2]&#x3D;5<em>n+2 arr[3]&#x3D;5</em>n+3 arr[4]&#x3D;5*n+4<br>…</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;mpi.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdlib.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> myid<span class="token punctuation">,</span> numprocs<span class="token punctuation">;</span><span class="token keyword">int</span> source <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token operator">*</span>sbuf<span class="token punctuation">;</span><span class="token keyword">int</span> rbuf<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">int</span> i<span class="token punctuation">;</span><span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_rank</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>myid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_size</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>numprocs<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>myid <span class="token operator">==</span> source<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    sbuf<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span>numprocs<span class="token operator">*</span><span class="token number">5</span><span class="token operator">*</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>numprocs<span class="token operator">*</span><span class="token number">5</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    sbuf<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>    <span class="token comment">// your code here</span>    <span class="token function">MPI_Scatter</span><span class="token punctuation">(</span>sbuf<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> MPI_INT<span class="token punctuation">,</span> rbuf<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> MPI_INT<span class="token punctuation">,</span> source<span class="token punctuation">,</span> MPI_COMM_WORLD<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// end of your code</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Now is process %d: "</span><span class="token punctuation">,</span> myid<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"array[%d]=%d\t"</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> rbuf<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Reduce和Gatherr的区别"><a href="#Reduce和Gatherr的区别" class="headerlink" title="Reduce和Gatherr的区别"></a>Reduce和Gatherr的区别</h2><p><code>MPI_Reduce</code> 和 <code>MPI_Gather</code> 是 MPI（Message Passing Interface）中用于并行计算中的两种不同的集合通信操作。它们的主要区别在于数据的处理方式和目的：</p><ol><li><p><strong>MPI_Reduce</strong>：</p><ul><li>功能：<code>MPI_Reduce</code>函数是用来执行一个全局的规约操作，例如求和、最大值、最小值等，将所有进程中的独立数据集合到一个进程中去，并且在这个过程中应用了一个指定的操作符对这些数据进行归约。</li><li>用法：每个进程提供一块本地数据，然后通过调用<code>MPI_Reduce</code>函数，系统会根据提供的操作符（如<code>MPI_SUM</code>、<code>MPI_MAX</code>等）在所有进程中对该类型的数据进行归约运算，最终结果只存在于调用者指定的一个进程中（通常称为根进程，由参数决定）。</li><li>示例：如果每个进程有一个整数变量，使用<code>MPI_Reduce</code>可以将所有进程的整数加起来得到总的和。</li></ul></li><li><p><strong>MPI_Gather</strong>：</p><ul><li>功能：<code>MPI_Gather</code>函数则是用来从所有参与通信的进程中收集相同数量的数据，并将这些数据按照进程的秩顺序排列后，合并到根进程的一个连续内存区域中。</li><li>用法：每个进程都有一个本地数据缓冲区，调用<code>MPI_Gather</code>后，所有进程的数据都会被收集到根进程的一个大缓冲区中，形成一个数组，其中数组的第i个元素来自于秩为i的进程的本地数据。</li><li>示例：如果有10个进程，每个进程有一个长度为10的浮点数数组，使用<code>MPI_Gather</code>可以在根进程处创建一个新的大小为10x10的二维数组，其中每一列来自一个进程的原始数组。</li></ul></li></ol><p>总结来说，<code>MPI_Reduce</code>是做数据的聚合和操作，目标是得到单个进程上的唯一结果；而<code>MPI_Gather</code>则更像是数据的汇总，不涉及数据之间的操作，目标是将各个进程的数据拼接到一起形成一个完整的集合。</p><h2 id="Bcast和Scatter的区别"><a href="#Bcast和Scatter的区别" class="headerlink" title="Bcast和Scatter的区别"></a>Bcast和Scatter的区别</h2><p><code>MPI_Bcast</code>（Broadcast）和<code>MPI_Scatter</code>（Scatter）是Message Passing Interface (MPI) 中用于并行计算的两种集合通信操作，它们的主要区别在于数据分发的方式和目的：</p><ol><li><p><strong>MPI_Bcast</strong>：</p><ul><li>功能：<code>MPI_Bcast</code>函数执行的是广播操作，即从一个指定的进程（称为“根进程”）将相同的数据发送给 communicator 内的所有其他进程。</li><li>用法：在调用<code>MPI_Bcast</code>时，所有进程都会提供一个缓冲区，但只有根进程的缓冲区中的数据会被广播。执行后，所有参与通信的进程中缓冲区的内容都会被更新为根进程缓冲区中广播出去的数据。</li><li>示例场景：例如，如果根进程有一个全局参数需要所有的其他进程知道，那么就可以使用<code>MPI_Bcast</code>来快速地让所有进程获取到相同的参数值。</li></ul></li><li><p><strong>MPI_Scatter</strong>：</p><ul><li>功能：<code>MPI_Scatter</code>函数则负责将根进程的一个大数组分割成多个子块，并将这些子块分别发送给 communicator 内的不同进程。</li><li>用法：每个进程都提供一个接收缓冲区，但内容大小通常小于或等于根进程的发送缓冲区。执行后，各个进程接收到的数据来自原始大数组的不同部分，而不是完全相同的数据。</li><li>示例场景：比如，在分布式矩阵乘法中，根进程拥有一个大的矩阵A，它可能需要将矩阵A的各行分散给不同的进程进行局部计算，这时可以使用<code>MPI_Scatter</code>将矩阵A拆分成多份并分发给各个进程。</li></ul></li></ol><p>总结来说，<code>MPI_Bcast</code>用于向所有进程发送相同的数据副本，而<code>MPI_Scatter</code>则是将数据分解后分配给各个进程，每个进程得到的数据不同，通常是原始数据的一个子集。</p><h2 id="计算运行时间"><a href="#计算运行时间" class="headerlink" title="计算运行时间"></a>计算运行时间</h2><p>可以使用MPI_Wtime函数在并行代码中计算运行时间，用MPI_Wtick来查看精度。</p><h3 id="函数说明-8"><a href="#函数说明-8" class="headerlink" title="函数说明"></a>函数说明</h3><p>MPI_WTIME：<code>返回</code>一个用浮点数表示的秒数, 它表示从过去某一时刻到调用时刻所经历的时间</p><p>MPI_WTICK：<code>返回</code>MPI_WTIME的精度，单位是秒，可以认为是一个时钟滴答所占用的时间</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">double</span> <span class="token function">MPI_Wtime</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token keyword">double</span> <span class="token function">MPI_Wtick</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><code>double MPI_Wtime(void)</code> 是一个用于获取当前进程的墙钟时间的函数。它返回一个双精度浮点数，表示从某个固定时间点（通常是程序启动时）到现在所经过的时间，单位为秒。这个函数通常用于性能分析和调试。</p><p><code>double MPI_Wtick(void)</code> 是一个用于获取当前进程的墙钟时间间隔的函数。它返回一个双精度浮点数，表示从上一次调用 <code>MPI_Wtime()</code> 函数到现在所经过的时间间隔，单位为秒。这个函数通常用于性能分析和调试。</p><h3 id="实验说明-5"><a href="#实验说明-5" class="headerlink" title="实验说明"></a>实验说明</h3><p>使用函数MPI_Wtime计算并行代码的运行时间，并且在两次计算时间的函数之间用函数MPI_WTICK打印出精度</p><p>输出结果：</p><p>The precision is: 1e-06<br>Hello World!I’m rank … of …, running … seconds</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;mpi.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> myid<span class="token punctuation">,</span> numprocs<span class="token punctuation">;</span><span class="token keyword">double</span> start<span class="token punctuation">,</span> finish<span class="token punctuation">;</span><span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MPI_Comm_rank</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>myid<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MPI_Comm_size</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>numprocs<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//your code here</span>start <span class="token operator">=</span> <span class="token function">MPI_Wtime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"The precision is: %f\n"</span><span class="token punctuation">,</span> <span class="token function">MPI_Wtick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>finish <span class="token operator">=</span> <span class="token function">MPI_Wtime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//your code here</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello World!I'm rank %d of %d, running %f seconds.\n"</span><span class="token punctuation">,</span> myid<span class="token punctuation">,</span> numprocs<span class="token punctuation">,</span> finish<span class="token operator">-</span>start<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h2><p>例如，希望保证所有进程中并行代码在某个地方同时开始运行，或者在某个函数调用结束之前不能返回。</p><p>这时候我们就需要使用到MPI_Barrier函数。</p><h3 id="函数说明："><a href="#函数说明：" class="headerlink" title="函数说明："></a>函数说明：</h3><p>阻止调用直到communicator中所有进程已经完成调用，就是说，任意一次进程的调用只能在所有communicator中的成员已经开始调用之后进行。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">MPI_Barrier</span><span class="token punctuation">(</span>MPI_Comm comm<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>MPI_Barrier(MPI_Comm comm)</code> 是一个用于同步进程的函数。它接受一个参数：</p><ol><li><code>MPI_Comm comm</code>：一个通信器对象，表示要同步的进程组。</li></ol><p>该函数返回一个整数，表示操作的结果。如果操作成功，返回值为 <code>MPI_SUCCESS</code>；否则，返回一个非零的错误代码。</p><h3 id="实验说明：-2"><a href="#实验说明：-2" class="headerlink" title="实验说明："></a>实验说明：</h3><p>在计算运行时间的信息之前调用MPI_Barrier函数完成同步。</p><p>输出结果：</p><p>The precision is: 1e-06<br>Hello World!I’m rank … of …, running … seconds.</p><p>在此示例程序中，可能是否调用函数不影响最终输出，但这并不意味着效果相同。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;mpi.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> myid<span class="token punctuation">,</span> numprocs<span class="token punctuation">;</span><span class="token keyword">double</span> start<span class="token punctuation">,</span> finish<span class="token punctuation">;</span><span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MPI_Comm_rank</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>myid<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MPI_Comm_size</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>numprocs<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//your code here</span><span class="token function">MPI_Barrier</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//end of your code</span>start <span class="token operator">=</span> <span class="token function">MPI_Wtime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"The precision is: %f\n"</span><span class="token punctuation">,</span> <span class="token function">MPI_Wtick</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>finish <span class="token operator">=</span> <span class="token function">MPI_Wtime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello World!I'm rank %d of %d, running %f seconds.\n"</span><span class="token punctuation">,</span> myid<span class="token punctuation">,</span> numprocs<span class="token punctuation">,</span> finish<span class="token operator">-</span>start<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="组的管理"><a href="#组的管理" class="headerlink" title="组的管理"></a>组的管理</h2><h3 id="创建（1）"><a href="#创建（1）" class="headerlink" title="创建（1）"></a>创建（1）</h3><p>组是一个进程的有序集合，在实现中可以看作是进程标识符的一个有序集。组内的每个进程与一个整数rank相联系，序列号从0开始并且是连续的。我们可以在通信组中使用组，来描述通信空间中的参与者并对这些参与者进行分级（这样在通信空间中为它们赋予了唯一的名字）</p><p>由此可见，组是我们对进程集合更高一级的抽象，我们可以在组的基础上对各个进程进行更进一步的操作，例如通过虚拟拓扑来辅助并行操作的实现。</p><p>在这里我们先介绍两个特殊的预定义组，MPI_GROUP_EMPTY和MPI_GROUP_NULL。<br>需要特别说明的是，前者是一个空组的有效句柄，可以在组操作中作为一个参数使用；而后者是一个无效句柄，在组释放时会被返回。</p><h4 id="函数说明-9"><a href="#函数说明-9" class="headerlink" title="函数说明"></a>函数说明</h4><blockquote><p>MPI_Comm_group用来建立一个通信组对应的新进程组</p><p>MPI_Group_rank查询调用进程在进程组里的rank</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">MPI_Comm_group</span><span class="token punctuation">(</span>MPI_Comm comm<span class="token punctuation">,</span> MPI_Group <span class="token operator">*</span>group<span class="token punctuation">)</span><span class="token keyword">int</span> <span class="token function">MPI_Group_rank</span><span class="token punctuation">(</span>MPI_Group group<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>rank<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><code>MPI_Comm_group(MPI_Comm comm, MPI_Group *group)</code> 是一个用于获取进程组的函数。它接受两个参数：</p><ol><li><code>MPI_Comm comm</code>：一个通信器对象，表示要查询的进程组所属的通信器。</li><li><code>MPI_Group *group</code>：一个指向 <code>MPI_Group</code> 类型的指针，用于存储查询到的进程组。</li></ol><p>该函数返回一个整数，表示操作的结果。如果操作成功，返回值为 <code>MPI_SUCCESS</code>；否则，返回一个非零的错误代码。</p><p><code>MPI_Group_rank(MPI_Group group, int *rank)</code> 是一个用于获取进程组中某个进程的排名的函数。它接受两个参数：</p><ol><li><code>MPI_Group group</code>：一个进程组对象，表示要查询的进程组。</li><li><code>int *rank</code>：一个指向整数类型的指针，用于存储查询到的进程排名。</li></ol><p>该函数返回一个整数，表示操作的结果。如果操作成功，返回值为 <code>MPI_SUCCESS</code>；否则，返回一个非零的错误代码。</p></blockquote><h4 id="实验说明-6"><a href="#实验说明-6" class="headerlink" title="实验说明"></a>实验说明</h4><p>建立一个与初始通信子MPI_COMM_WORLD相联系的组，打印出当前进程在进程组的rank。</p><p>输出结果:<br>rank： 1<br>rank： 0<br>…<br>rank： n</p><p>顺序不唯一</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;mpi.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> myid<span class="token punctuation">,</span> numprocs<span class="token punctuation">;</span>MPI_Group group_world<span class="token punctuation">;</span><span class="token keyword">int</span> rank_of_group<span class="token punctuation">;</span><span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_rank</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>myid<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MPI_Comm_size</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>numprocs<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// your code here</span><span class="token function">MPI_Comm_group</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>group_world<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Group_rank</span><span class="token punctuation">(</span>group_world<span class="token punctuation">,</span> <span class="token operator">&amp;</span>rank_of_group<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// end of your code</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"rank: %d\n"</span><span class="token punctuation">,</span> rank_of_group<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="创建（2）"><a href="#创建（2）" class="headerlink" title="创建（2）"></a>创建（2）</h3><p>上一节我们知道，可以用MPI_Comm_group函数来获得与通信组MPI_COMM_WORLD相关联的组句柄。<br>那么我们可以用这个组句柄做什么呢？</p><p>首先，我们可以通过这个最原始的组句柄来创建更多的、满足我们需要的组。</p><p>在这里需要特别说明的是，MPI没提供凭空构造一个组的的机制，而只能从其它以前定义的组中构造。最基本的组是与初始通信子MPI_COMM_WORLD相联系的组（可通过函数MPI_COMM_GROUP获得〕，其它的组在该组基础上定义。</p><h4 id="函数说明-10"><a href="#函数说明-10" class="headerlink" title="函数说明"></a>函数说明</h4><blockquote><p>基于已经存在的进程组创建一个新的组，并指明被包含(included)其中的成员进程。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">MPI_Group_incl</span><span class="token punctuation">(</span>MPI_Group old_group<span class="token punctuation">,</span> <span class="token keyword">int</span> count<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>members<span class="token punctuation">,</span> MPI_Group <span class="token operator">*</span>new_group<span class="token punctuation">)</span>旧进程组要包含在新进程组的进程数量  要放入新进程组的进程的编号数组 指针指向新进程组<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这个函数用于创建一个新的进程组，该组包含旧进程组中指定的成员。</p><p>参数解析：</p><ul><li><code>old_group</code>：一个MPI_Group类型的变量，表示要复制的旧进程组。</li><li><code>count</code>：一个整数，表示要包含在新的进程组中的进程数量。</li><li><code>members</code>：一个整数数组，包含了要包含在新进程组中的进程的标识符。</li><li><code>new_group</code>：一个MPI_Group类型的指针，指向新创建的进程组。</li></ul><p>函数执行后，<code>new_group</code>将指向一个新创建的进程组，该进程组包含了<code>old_group</code>中指定的成员。</p></blockquote><h4 id="实验说明-7"><a href="#实验说明-7" class="headerlink" title="实验说明"></a>实验说明</h4><p>基于与初始通信子MPI_COMM_WORLD相联系的组创建一个新的组，这个新的组的成员是通信者MPI_COMM_WORLD的奇数编号的进程。</p><p>输出结果格式应如下：<br>In process n: odd rank is x<br>…</p><p>需要特别说明的是，如果在偶数编号的进程中，也就是不属于这个组的进程中输出这个值，MPI_Group_rank会返回MPI_UNDEFINED作为group_rank的值，表示它不是 worker_group的成员，在MPICH里是-32766。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;mpi.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> myid<span class="token punctuation">,</span> numprocs<span class="token punctuation">,</span> odd_rank<span class="token punctuation">;</span>MPI_Group group_world<span class="token punctuation">,</span> odd_group<span class="token punctuation">;</span><span class="token keyword">int</span> i<span class="token punctuation">;</span><span class="token keyword">int</span> members<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_rank</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>myid<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MPI_Comm_size</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>numprocs<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_group</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>group_world<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>numprocs<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>members<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">*</span>i<span class="token operator">+</span><span class="token number">1</span> <span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// your code here</span><span class="token function">MPI_Group_incl</span><span class="token punctuation">(</span>group_world<span class="token punctuation">,</span> numprocs<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span> members<span class="token punctuation">,</span> <span class="token operator">&amp;</span>odd_group<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// end of your code</span><span class="token function">MPI_Group_rank</span><span class="token punctuation">(</span>odd_group<span class="token punctuation">,</span> <span class="token operator">&amp;</span>odd_rank<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"In process %d: odd rank is %d\n"</span><span class="token punctuation">,</span> myid<span class="token punctuation">,</span> odd_rank<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="创建（3）"><a href="#创建（3）" class="headerlink" title="创建（3）"></a>创建（3）</h3><p>同样，我们在基于旧进程组创建一个新的组的时候，可能希望排除一些成员进程。</p><p>当然，我们可以通过选择出剩下的成员进程的方法来达成我们的目的，但是MPI提供了更好的办法去实现它。</p><h4 id="函数说明-11"><a href="#函数说明-11" class="headerlink" title="函数说明"></a>函数说明</h4><blockquote><p>基于已经存在的进程组创建一个新的组，并指明不被包含(excluded)其中的成员进程。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">MPI_Group_excl</span><span class="token punctuation">(</span>MPI_Group old_group<span class="token punctuation">,</span> <span class="token keyword">int</span> count<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>nonmembers<span class="token punctuation">,</span> MPI_Group <span class="token operator">*</span>new_group<span class="token punctuation">)</span>旧进程组；要包含在新的进程组中的进程数量；不需要放入新进程组的进程的编号；新进程组的指针；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这个函数用于创建一个新的进程组，该组包含旧进程组中指定的成员，但不包含非成员列表中的进程。</p><p>参数解析：</p><ul><li><code>old_group</code>：一个MPI_Group类型的变量，表示要复制的旧进程组。</li><li><code>count</code>：一个整数，表示要包含在新的进程组中的进程数量。</li><li><code>nonmembers</code>：一个整数数组，包含了不包含在新进程组中的进程的标识符。</li><li><code>new_group</code>：一个MPI_Group类型的指针，指向新创建的进程组。</li></ul><p>函数执行后，<code>new_group</code>将指向一个新创建的进程组，该进程组包含了<code>old_group</code>中指定的成员，但不包含<code>nonmembers</code>列表中的进程。</p></blockquote><h4 id="实验说明-8"><a href="#实验说明-8" class="headerlink" title="实验说明"></a>实验说明</h4><p>基于与初始通信子MPI_COMM_WORLD相联系的组创建一个新的组，这个新的组的成员是通信者MPI_COMM_WORLD的偶数编号的进程。</p><p>输出结果格式应如下：<br>In process n: even rank is x<br>…</p><p>需要特别说明的是，如果在奇数编号的进程中，也就是不属于这个组的进程中输出这个值，MPI_Group_rank会返回MPI_UNDEFINED作为group_rank的值，表示它不是 worker_group的成员，在MPICH里这个值是-32766。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;mpi.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> myid<span class="token punctuation">,</span> numprocs<span class="token punctuation">,</span> even_rank<span class="token punctuation">;</span>MPI_Group group_world<span class="token punctuation">,</span> even_group<span class="token punctuation">;</span><span class="token keyword">int</span> i<span class="token punctuation">;</span><span class="token keyword">int</span> nonmembers<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_rank</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>myid<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MPI_Comm_size</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>numprocs<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_group</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>group_world<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>numprocs<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>nonmembers<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">*</span>i<span class="token operator">+</span><span class="token number">1</span> <span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// your code here</span><span class="token function">MPI_Group_excl</span><span class="token punctuation">(</span>group_world<span class="token punctuation">,</span> numprocs<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span> nonmembers<span class="token punctuation">,</span> <span class="token operator">&amp;</span>even_group<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// end of your code</span><span class="token function">MPI_Group_rank</span><span class="token punctuation">(</span>even_group<span class="token punctuation">,</span> <span class="token operator">&amp;</span>even_rank<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"In process %d: even rank is %d\n"</span><span class="token punctuation">,</span> myid<span class="token punctuation">,</span> even_rank<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="相对编号"><a href="#相对编号" class="headerlink" title="相对编号"></a>相对编号</h3><p>在创建组之后，可能会有这个疑惑：如果知道了在组MPI_COMM_WORLD中某些进程的编号，如何根据这些编号来操作在不同组的同一进程来完成不同的任务呢？</p><p>MPI提供了这样的函数以应付这种常见的情景。</p><h4 id="函数说明-12"><a href="#函数说明-12" class="headerlink" title="函数说明"></a>函数说明</h4><p>检测两个不同组中相同进程的相对编号。如果属于进程组1的某个进程可以在ranks1中找到，而这个进程不属于进程组2，则在ranks2中对应ranks1的位置返回值为MPI_UNDEFINED。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">MPI_Group_translate_ranks</span><span class="token punctuation">(</span>MPI_Group group1<span class="token punctuation">,</span> <span class="token keyword">int</span> count<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>ranks1<span class="token punctuation">,</span> MPI_Group group2<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>ranks2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>MPI_Group_translate_ranks</code>函数用于将一个进程组中的进程排名映射到另一个进程组中的进程排名。它接受以下参数：</p><ul><li><code>group1</code>：第一个进程组，类型为<code>MPI_Group</code>。</li><li><code>count</code>：要转换的进程数量，类型为整数。</li><li><code>ranks1</code>：指向包含要转换的进程排名的数组的指针，类型为整数指针。</li><li><code>group2</code>：第二个进程组，类型为<code>MPI_Group</code>。</li><li><code>ranks2</code>：指向存储转换后的进程排名的数组的指针，类型为整数指针。</li></ul><p>该函数返回一个<code>int</code>类型的值，表示操作的结果。如果操作成功，返回值为<code>MPI_SUCCESS</code>；否则，返回一个非零的错误代码。</p><h4 id="实验说明-9"><a href="#实验说明-9" class="headerlink" title="实验说明"></a>实验说明</h4><p>建立两个进程组，打印出进程组2中对应进程组1的进程的编号。</p><p>输出结果格式：<br>The rank in group2 is: -32766<br>The rank in group2 is: 0<br>…</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;mpi.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> myid<span class="token punctuation">,</span> numprocs<span class="token punctuation">;</span>MPI_Group group_world<span class="token punctuation">,</span> group1<span class="token punctuation">,</span> group2<span class="token punctuation">;</span><span class="token keyword">int</span> i<span class="token punctuation">;</span><span class="token keyword">int</span> ranks1<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> ranks2<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> ranks_output<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_rank</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>myid<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MPI_Comm_size</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>numprocs<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_group</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>group_world<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>numprocs<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>ranks1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i <span class="token punctuation">;</span>ranks2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token operator">+</span><span class="token number">1</span> <span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">MPI_Group_incl</span><span class="token punctuation">(</span>group_world<span class="token punctuation">,</span> numprocs<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> ranks1<span class="token punctuation">,</span> <span class="token operator">&amp;</span>group1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Group_incl</span><span class="token punctuation">(</span>group_world<span class="token punctuation">,</span> numprocs<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> ranks2<span class="token punctuation">,</span> <span class="token operator">&amp;</span>group2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// your code here</span><span class="token function">MPI_Group_translate_ranks</span><span class="token punctuation">(</span>group1<span class="token punctuation">,</span> numprocs<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> ranks1<span class="token punctuation">,</span> group2<span class="token punctuation">,</span> ranks_output<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// end of your code</span><span class="token keyword">if</span> <span class="token punctuation">(</span>myid <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>numprocs<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"The rank in group2 is: %d\n"</span><span class="token punctuation">,</span> ranks_output<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="释放"><a href="#释放" class="headerlink" title="释放"></a>释放</h3><p>既然有了组的构造，那么与之对应也存在组的析构。</p><h4 id="函数说明-13"><a href="#函数说明-13" class="headerlink" title="函数说明"></a>函数说明</h4><blockquote><p>调用函数会标记一个被释放的组对象，组句柄被调用置为MPI_GROUP_NULL。任何正在使用此组的操作将正常完成。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">MPI_Group_free</span><span class="token punctuation">(</span>MPI_Group <span class="token operator">*</span>group<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>int MPI_Group_free(MPI_Group *group)</code> 是一个MPI（Message Passing Interface，消息传递接口）函数，用于释放一个已经创建的进程组。</p><p>参数：</p><ul><li><code>group</code>：指向要释放的进程组的指针。</li></ul><p>返回值：</p><ul><li>函数执行成功时返回0。</li><li>如果发生错误，则返回非零错误代码。</li></ul></blockquote><h4 id="实验说明-10"><a href="#实验说明-10" class="headerlink" title="实验说明"></a>实验说明</h4><p>建立一个进程组，打印出它的size，然后释放它。</p><p>输出结果格式应如下：<br>Now the size is n<br>Now the group is freed.</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;mpi.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> myid<span class="token punctuation">,</span> numprocs<span class="token punctuation">;</span>MPI_Group group_world<span class="token punctuation">;</span><span class="token keyword">int</span> size0<span class="token punctuation">;</span><span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_rank</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>myid<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MPI_Comm_size</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>numprocs<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_group</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>group_world<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Group_size</span><span class="token punctuation">(</span>group_world<span class="token punctuation">,</span> <span class="token operator">&amp;</span>size0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>myid <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Now the size is %d\n"</span><span class="token punctuation">,</span> size0<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// your code here</span><span class="token function">MPI_Group_free</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>group_world<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// end of your code</span><span class="token keyword">if</span><span class="token punctuation">(</span>myid <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>group_world <span class="token operator">==</span> MPI_GROUP_NULL<span class="token punctuation">)</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Now the group is freed.\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h3><p>有时候我们想要对两个进程组做最基本的判断，例如成员是否相同，次序是否一致等等。</p><p>MPI同样提供了这样的函数来完成这个功能。</p><h4 id="函数说明-14"><a href="#函数说明-14" class="headerlink" title="函数说明"></a>函数说明</h4><p>如果在两个组中成员和次序完全相等，返回MPI_IDENT。例如在group1和group2是同一句柄时就会发生这种情况。如果组成员相同而次序不同则返回MPI_SIMILAR，否则返回MPI_UNEQUAL</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">MPI_Group_compare</span><span class="token punctuation">(</span>MPI_Group group1<span class="token punctuation">,</span> MPI_Group group2<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>result<span class="token punctuation">)</span>MPI_Group group1： 要比较的组<span class="token number">1</span>；MPI_Group group2： 要比较的组<span class="token number">2</span>；<span class="token keyword">int</span> <span class="token operator">*</span>result：结果；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>int MPI_Group_compare(MPI_Group group1, MPI_Group group2, int *result)</code> 是一个MPI（Message Passing Interface，消息传递接口）函数，用于比较两个进程组是否相等。</p><p>参数：</p><ul><li><code>group1</code>：指向第一个要比较的进程组的指针。</li><li><code>group2</code>：指向第二个要比较的进程组的指针。</li><li><code>result</code>：指向一个整数的指针，用于存储比较结果。如果 <code>group1</code> 和 <code>group2</code> 相等，则 <code>*result</code> 的值为0；如果 <code>group1</code> 包含 <code>group2</code> 的所有进程，则 <code>*result</code> 的值为正数；如果 <code>group2</code> 包含 <code>group1</code> 的所有进程，则 <code>*result</code> 的值为负数；如果 <code>group1</code> 和 <code>group2</code> 没有共同的进程，则 <code>*result</code> 的值为正数且大于等于 <code>group1</code> 的大小。</li></ul><p>返回值：</p><ul><li>函数执行成功时返回0。</li><li>如果发生错误，则返回非零错误代码。</li></ul><h4 id="实验说明-11"><a href="#实验说明-11" class="headerlink" title="实验说明"></a>实验说明</h4><p>创建一个新的组，通过调整输出两个不同的结果。</p><p>输出结果格式应如下：<br>Now the groups are identical.<br>Now the groups are unequal.<br>…</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;mpi.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> myid<span class="token punctuation">,</span> numprocs<span class="token punctuation">;</span>MPI_Group group_world<span class="token punctuation">,</span> new_group_world<span class="token punctuation">;</span><span class="token keyword">int</span> members<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> result<span class="token punctuation">;</span><span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_rank</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>myid<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MPI_Comm_size</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>numprocs<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_group</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>group_world<span class="token punctuation">)</span><span class="token punctuation">;</span>members<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span><span class="token function">MPI_Group_incl</span><span class="token punctuation">(</span>group_world<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> members<span class="token punctuation">,</span> <span class="token operator">&amp;</span>new_group_world<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>myid <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// your code here</span><span class="token function">MPI_Group_compare</span><span class="token punctuation">(</span>group_world<span class="token punctuation">,</span> group_world<span class="token punctuation">,</span> <span class="token operator">&amp;</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// end of your code</span><span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> MPI_IDENT<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Now the groups are identical.\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> MPI_SIMILAR<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Now the groups are similar.\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Now the groups are unequal.\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// your code here</span><span class="token function">MPI_Group_compare</span><span class="token punctuation">(</span>group_world<span class="token punctuation">,</span> new_group_world<span class="token punctuation">,</span> <span class="token operator">&amp;</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// end of your code</span><span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> MPI_IDENT<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Now the groups are identical.\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> MPI_SIMILAR<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Now the groups are similar.\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Now the groups are unequal.\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="通信子的管理"><a href="#通信子的管理" class="headerlink" title="通信子的管理"></a>通信子的管理</h2><h3 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h3><p>在实际开发中，我们往往需要很多不同的通信子来满足需求，这时候就需要创建新的通信子。</p><h4 id="函数说明-15"><a href="#函数说明-15" class="headerlink" title="函数说明"></a>函数说明</h4><p>用由group所定义的通信组及一个新的上下文创建了一个新的通信子newcomm。对于不在group中的进程，函数返回MPI_COMM_NULL。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">MPI_Comm_create</span><span class="token punctuation">(</span>MPI_Comm comm<span class="token punctuation">,</span> MPI_Group group<span class="token punctuation">,</span> MPI_Comm <span class="token operator">*</span>newcomm<span class="token punctuation">)</span>MPI_Comm comm ： 旧的通信子；MPI_Group group ： 与comm相关联的组或其子集；MPI_Comm <span class="token operator">*</span>newcomm ： 新的通信子；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>int MPI_Comm_create(MPI_Comm comm, MPI_Group group, MPI_Comm *newcomm)</code> 是一个MPI（Message Passing Interface，消息传递接口）函数，用于创建一个新的通信器。</p><p>参数：</p><ul><li><code>comm</code>：指向现有通信器的指针</li><li><code>group</code>：指向要包含在新通信器中的进程组的指针</li><li><code>newcomm</code>：指向新创建的通信器的指针</li></ul><p>返回值：</p><ul><li>函数执行成功时返回0</li><li>如果发生错误，则返回非零错误代码</li></ul><h4 id="实验说明-12"><a href="#实验说明-12" class="headerlink" title="实验说明"></a>实验说明</h4><p>复制一个新的通信子，并以此为基础创建一个新的通信子。由于示例是用奇数编号的进程来创建通信子的，所以只在奇数进程中输出结果。</p><p>输出结果格式应如下：<br>The new comm’s size is 2.<br>The new comm’s size is 2.<br>…</p><p>注意，如果没有添加创建函数的代码，天河可能会由于超时返回长时间没有响应的提示信息。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;mpi.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> myid<span class="token punctuation">,</span> numprocs<span class="token punctuation">,</span> new_numprocs<span class="token punctuation">;</span>MPI_Group group_world<span class="token punctuation">,</span> odd_group<span class="token punctuation">;</span>MPI_Comm new_comm<span class="token punctuation">;</span><span class="token keyword">int</span> i<span class="token punctuation">;</span><span class="token keyword">int</span> members<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_rank</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>myid<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MPI_Comm_size</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>numprocs<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_group</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>group_world<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>numprocs<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>members<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">*</span>i<span class="token operator">+</span><span class="token number">1</span> <span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">MPI_Group_incl</span><span class="token punctuation">(</span>group_world<span class="token punctuation">,</span> numprocs<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span> members<span class="token punctuation">,</span> <span class="token operator">&amp;</span>odd_group<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// your code here</span><span class="token function">MPI_Comm_create</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> odd_group<span class="token punctuation">,</span> <span class="token operator">&amp;</span>new_comm<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// end of your code</span><span class="token keyword">if</span> <span class="token punctuation">(</span>myid <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">MPI_Comm_size</span><span class="token punctuation">(</span>new_comm<span class="token punctuation">,</span> <span class="token operator">&amp;</span>new_numprocs<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"The new comm's size is %d.\n"</span><span class="token punctuation">,</span> new_numprocs<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="复制"><a href="#复制" class="headerlink" title="复制"></a>复制</h3><p>在之前的学习中，我们经常使用系统帮助我们创建的初始组内通信子MPI_COMM_WORLD作为通信子的输入。</p><p>其实，还有两个系统默认创建的通信子，一个是COMM_SELF，另一个是COMM_NULL。<br>COMM_SELF仅仅包含了当前进程，而COMM_NULL则什么进程都没有包含。</p><p>在通信子的创建中，需要特别注意的是MPI中有一个”鸡生蛋, 蛋生鸡”的特点，即所有MPI通信子的创建都是由基础通信子，即MPI_COMM_WORLD（是在MPI的外部被定义的），创建的。而这些被创建的通信子又可以作为新的通信子创建的基础。</p><p>这个模型是经过讨论后确定的，目的是为了提高用MPI写程序的安全性。</p><h4 id="函数说明-16"><a href="#函数说明-16" class="headerlink" title="函数说明"></a>函数说明</h4><p>复制已存在的通信子comm。</p><pre class="line-numbers language-none"><code class="language-none">int MPI_Comm_dup(MPI_Comm comm,MPI_Comm *newcomm)MPI_Comm comm ： 旧的通信子；MPI_Comm *newcomm ： 新的通信子；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><code>int MPI_Comm_dup(MPI_Comm comm, MPI</code>int MPI_Comm_dup(MPI_Comm comm, MPI_Comm *newcomm)&#96; 是一个MPI（Message Passing Interface，消息传递接口）函数，用于复制一个现有的通信器。</p><p>参数：</p><ul><li><code>comm</code>：指向要复制的现有通信器的指针。</li><li><code>newcomm</code>：指向新创建的通信器的指针。</li></ul><p>返回值：</p><ul><li>函数执行成功时返回0。</li><li>如果发生错误，则返回非零错误代码。</li></ul><h4 id="实验说明-13"><a href="#实验说明-13" class="headerlink" title="实验说明"></a>实验说明</h4><p>复制一个新的通信子，需要特别说明的是，结果显示MPI_IDENT表示上下文(context)和组(group)都相同，MPI_CONGRUENT表示上下文不同(different)但组完全相同(identical)，MPI_SIMILAR表示上下文不同，组的成员相同但次序不同(similar)，否则就是MPI_UNEQUAL。</p><p>输出结果格式应如下：<br>The comms are congruent.<br>…</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;mpi.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> myid<span class="token punctuation">,</span> numprocs<span class="token punctuation">;</span>MPI_Comm new_comm<span class="token punctuation">;</span> <span class="token keyword">int</span> result<span class="token punctuation">;</span><span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_rank</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>myid<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MPI_Comm_size</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>numprocs<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// your code here</span><span class="token function">MPI_Comm_dup</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>new_comm<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// end of your code</span><span class="token function">MPI_Comm_compare</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> new_comm<span class="token punctuation">,</span> <span class="token operator">&amp;</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>myid <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span> result <span class="token operator">==</span> MPI_IDENT<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"The comms are identical.\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span> result <span class="token operator">==</span> MPI_CONGRUENT <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"The comms are congruent.\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span> result <span class="token operator">==</span> MPI_SIMILAR <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"The comms are similar.\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span> result <span class="token operator">==</span> MPI_UNEQUAL <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"The comms are unequal.\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="释放-1"><a href="#释放-1" class="headerlink" title="释放"></a>释放</h3><p>同样，通信子也存在析构的操作。</p><h4 id="函数说明：-1"><a href="#函数说明：-1" class="headerlink" title="函数说明："></a>函数说明：</h4><pre class="line-numbers language-none"><code class="language-none">int MPI_Comm_free(MPI_Comm *comm)MPI_Comm *comm ： 通信子；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>用由group所定义的通信组及一个新的上下文创建了一个新的通信子newcomm。对于不在group中的进程，函数返回MPI_COMM_NULL。</p><p><code>int MPI_Comm_free(MPI_Comm *comm)</code> <code>int MPI_Comm_free(MPI_Comm *comm)</code> 是一个MPI（Message Passing Interface，消息传递接口）函数，用于释放一个已经创建的通信器。</p><p>参数：</p><ul><li><code>comm</code>：指向要释放的通信器的指针。</li></ul><p>返回值：</p><ul><li>函数执行成功时返回0。</li><li>如果发生错误，则返回非零错误代码。</li></ul><h4 id="实验说明-14"><a href="#实验说明-14" class="headerlink" title="实验说明"></a>实验说明</h4><p>这是一个标志通信对象撤消的集合操作。值得注意的是，这个函数操作只是将句柄置为MPI_COMM_NULL，任何使用此通信子的挂起操作都会正常完成；仅当没有对此对象的活动引用时，它才会被实际撤消。</p><p>输出结果格式应如下：<br>The comm is freed.<br>…</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;mpi.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> myid<span class="token punctuation">,</span> numprocs<span class="token punctuation">;</span>MPI_Comm new_comm<span class="token punctuation">;</span><span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_rank</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>myid<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MPI_Comm_size</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>numprocs<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_dup</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>new_comm<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// your code here</span><span class="token function">MPI_Comm_free</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>new_comm<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// end of your code</span><span class="token keyword">if</span><span class="token punctuation">(</span>myid <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>new_comm <span class="token operator">==</span> MPI_COMM_NULL<span class="token punctuation">)</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Now the comm is freed.\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="划分"><a href="#划分" class="headerlink" title="划分"></a>划分</h3><p>有时候我们希望根据拓扑来创建不同的域，例如创建一个二维数组，显然一个个创建是很不方便的，这时候我们需要用到一个新的函数来进行划分。</p><h4 id="函数说明-17"><a href="#函数说明-17" class="headerlink" title="函数说明"></a>函数说明</h4><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">MPI_Comm_split</span><span class="token punctuation">(</span>MPI_Comm comm<span class="token punctuation">,</span> <span class="token keyword">int</span> color<span class="token punctuation">,</span> <span class="token keyword">int</span> key<span class="token punctuation">,</span> MPI_Comm <span class="token operator">*</span>newcomm<span class="token punctuation">)</span>MPI_Comm comm ： 旧的通信子，也就是被划分的域；<span class="token keyword">int</span> color ： 子域的标识，也就是被划分出来的每个子域都对应一个color，每一个子域包含具有同样color的所有进程；<span class="token keyword">int</span> key ： 在每一个子域内<span class="token punctuation">,</span> 进程按照key所定义的值的次序进行排列。MPI_Comm <span class="token operator">*</span>newcomm ： 新的通信子；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>函数将与comm相关的域划分为若干不相连的子域，根据color和key参数决定每个进程所处的位置。</p><p><code>int MPI_Comm_split(MPI_Comm comm, int color, int key, MPI_Comm *newcomm)</code> ，用于将一个通信器分割成两个子通信器。</p><p>参数：</p><ul><li><code>comm</code>：指向要分割的通信器的指针。</li><li><code>color</code>：一个整数，表示当前进程所属的子通信器。如果当前进程属于第一个子通信器，则<code>color</code>为0；如果当前进程属于第二个子通信器，则<code>color</code>为1。</li><li><code>key</code>：一个整数，用于确定如何将进程分配到子通信器中。通常，这个值应该是一个全局常量，以确保所有进程都使用相同的键值进行分割。</li><li><code>newcomm</code>：指向新创建的子通信器的指针。</li></ul><p>返回值：</p><ul><li>函数执行成功时返回0。</li><li>如果发生错误，则返回非零错误代码。</li></ul><h4 id="实验说明-15"><a href="#实验说明-15" class="headerlink" title="实验说明"></a>实验说明</h4><p>创建一个二维数组，根据行与列进行求和，在每个进程中输出坐标和求出的和。</p><p>输出结果格式应如下：<br>I’m process n, my coordinates are (x, y), row sum is p, column sum is q.<br>…</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;mpi.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> myid<span class="token punctuation">,</span> numprocs<span class="token punctuation">;</span>MPI_Comm row_comm<span class="token punctuation">,</span> column_comm<span class="token punctuation">;</span><span class="token keyword">int</span> myrow<span class="token punctuation">,</span> mycolumn<span class="token punctuation">;</span><span class="token keyword">int</span> color <span class="token operator">=</span> <span class="token number">3</span> <span class="token punctuation">;</span><span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_rank</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>myid<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MPI_Comm_size</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>numprocs<span class="token punctuation">)</span><span class="token punctuation">;</span>myrow <span class="token operator">=</span> myid <span class="token operator">/</span> color <span class="token punctuation">;</span>mycolumn <span class="token operator">=</span> myid <span class="token operator">%</span> color <span class="token punctuation">;</span><span class="token comment">// your code here</span><span class="token function">MPI_Comm_split</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> myrow<span class="token punctuation">,</span> mycolumn<span class="token punctuation">,</span> <span class="token operator">&amp;</span>row_comm<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">MPI_Comm_split</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> mycolumn<span class="token punctuation">,</span> myrow<span class="token punctuation">,</span> <span class="token operator">&amp;</span>column_comm<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// end of your code</span><span class="token keyword">int</span> rowsum<span class="token punctuation">,</span> columnsum<span class="token punctuation">;</span>rowsum <span class="token operator">=</span> myid<span class="token punctuation">;</span>columnsum <span class="token operator">=</span> myid<span class="token punctuation">;</span><span class="token function">MPI_Allreduce</span><span class="token punctuation">(</span>MPI_IN_PLACE<span class="token punctuation">,</span> <span class="token operator">&amp;</span>rowsum<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> MPI_INT<span class="token punctuation">,</span> MPI_SUM<span class="token punctuation">,</span> row_comm<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">MPI_Allreduce</span><span class="token punctuation">(</span>MPI_IN_PLACE<span class="token punctuation">,</span> <span class="token operator">&amp;</span>columnsum<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> MPI_INT<span class="token punctuation">,</span> MPI_SUM<span class="token punctuation">,</span> column_comm<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"I'm process %d, my coordinates are (%d, %d), row sum is %d, column sum is %d\n"</span><span class="token punctuation">,</span> myid<span class="token punctuation">,</span> myrow<span class="token punctuation">,</span> mycolumn<span class="token punctuation">,</span>  rowsum<span class="token punctuation">,</span> columnsum<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="获取处理器名"><a href="#获取处理器名" class="headerlink" title="获取处理器名"></a>获取处理器名</h2><p>有时候在实际处理中我们可能需要将进程迁移至不同的处理器，而MPI提供了获取处理器名的函数以简单地允许这种行为。</p><p>注意在MPI中不需要定义这种迁移。</p><h3 id="函数说明-18"><a href="#函数说明-18" class="headerlink" title="函数说明"></a>函数说明</h3><pre class="line-numbers language-none"><code class="language-none">int MPI_Get_processor_name ( char *name, int *resultlen)char *name : 实际节点的唯一说明字;int *resultlen：在name中返回结果的长度;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>返回调用时调用所在的处理器名。</p><blockquote><p><code>MPI_Get_processor_name</code> 是一个用于获取当前进程名称的 MPI（Message Passing Interface，消息传递接口）函数。它接受两个参数：一个字符指针 <code>name</code>，用于存储进程名称；一个整数指针 <code>resultlen</code>，用于存储实际存储在 <code>name</code> 中的进程名称长度。</p><p>函数原型如下：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">MPI_Get_processor_name</span> <span class="token punctuation">(</span> <span class="token keyword">char</span> <span class="token operator">*</span>name<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>resultlen <span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>示例代码：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;mpi.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token keyword">char</span> processor_name<span class="token punctuation">[</span>MPI_MAX_PROCESSOR_NAME<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">int</span> name_length<span class="token punctuation">;</span> <span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">MPI_Get_processor_name</span><span class="token punctuation">(</span>processor_name<span class="token punctuation">,</span> <span class="token operator">&amp;</span>name_length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">printf</span><span class="token punctuation">(</span>"Processor name<span class="token operator">:</span> <span class="token operator">%</span>s"<span class="token punctuation">,</span> processor_name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">printf</span><span class="token punctuation">(</span>"Name length<span class="token operator">:</span> <span class="token operator">%</span>d"<span class="token punctuation">,</span> name_length<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><h3 id="实验说明-16"><a href="#实验说明-16" class="headerlink" title="实验说明"></a>实验说明</h3><p>在每个进程中，使用函数MPI_Get_processor_name来获取当前进程的处理器名并打印出来。</p><p>Hello, world. I am PROCESS_NAME.</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;mpi.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> len<span class="token punctuation">;</span><span class="token keyword">char</span> name<span class="token punctuation">[</span>MPI_MAX_PROCESSOR_NAME<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//your code here</span>    <span class="token function">MPI_Get_processor_name</span> <span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token operator">&amp;</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//end of your code</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello, world. I am %s.\n"</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="地址偏移量"><a href="#地址偏移量" class="headerlink" title="地址偏移量"></a>地址偏移量</h2><p>在通信操作中，我们常常需要对地址进行传递或操作，例如传送&#x2F;接收缓冲区。</p><p>而一个位置在内存中的地址可以通过MPI_ADDRESS函数获得。</p><h3 id="函数说明-19"><a href="#函数说明-19" class="headerlink" title="函数说明"></a>函数说明</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">MPI_Address</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> location<span class="token punctuation">,</span> MPI_Aint <span class="token operator">*</span>address<span class="token punctuation">)</span><span class="token keyword">void</span><span class="token operator">*</span> location ： 调用者的内存位置<span class="token punctuation">;</span>MPI_Aint <span class="token operator">*</span>address：位置的对应地址<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>MPI_Address</code> 是一个用于获取内存地址的函数，它接受两个参数：一个指向内存位置的指针 <code>location</code> 和一个指向 <code>MPI_Aint</code> 类型的指针 <code>address</code>。<code>MPI_Aint</code> 是一个整数类型，用于表示任意大小的地址。</p><p>函数原型如下：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">MPI_Address</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> location<span class="token punctuation">,</span> MPI_Aint <span class="token operator">*</span>address<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>使用示例：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;mpi.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span> argv<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token keyword">int</span> rank<span class="token punctuation">;</span> <span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">MPI_Comm_rank</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>rank<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">int</span> local_variable <span class="token operator">=</span> <span class="token number">42</span><span class="token punctuation">;</span> MPI_Aint local_address<span class="token punctuation">;</span> <span class="token function">MPI_Address</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>local_variable<span class="token punctuation">,</span> <span class="token operator">&amp;</span>local_address<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Rank %d: Local variable address is %p"</span><span class="token punctuation">,</span> rank<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token punctuation">)</span>local_address<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个示例中，我们首先初始化 MPI 环境，然后获取当前进程的等级（<code>rank</code>）。接着，我们定义了一个局部变量 <code>local_variable</code>，并使用 <code>MPI_Address</code> 函数获取其内存地址。最后，我们将结果打印出来。</p></blockquote><p>###实验说明</p><p>给出三个临时变量a, b, c, 分别求出a与b、a与c之间的地址偏移量。</p><p>输出结果:</p><p>由于这里采用的变量类型为int，所以如果变量地址是连续的话应该是：<br>The distance between a and b is 4<br>The distance between a and c is 8</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;mpi.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> myid<span class="token punctuation">,</span> numprocs<span class="token punctuation">;</span>MPI_Aint address1<span class="token punctuation">,</span> address2<span class="token punctuation">,</span> address3<span class="token punctuation">;</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> dist1<span class="token punctuation">,</span> dist2<span class="token punctuation">;</span>a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>c <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_rank</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>myid<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MPI_Comm_size</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>numprocs<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// your code here</span><span class="token function">MPI_Address</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>a<span class="token punctuation">,</span> <span class="token operator">&amp;</span>address1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Address</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>b<span class="token punctuation">,</span> <span class="token operator">&amp;</span>address2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Address</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>c<span class="token punctuation">,</span> <span class="token operator">&amp;</span>address3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// end of your code</span>dist1 <span class="token operator">=</span> address2 <span class="token operator">-</span> address1 <span class="token punctuation">;</span>dist2 <span class="token operator">=</span> address3 <span class="token operator">-</span> address1 <span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>myid <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"The distance between a and b is %d\n"</span><span class="token punctuation">,</span> dist1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"The distance between a and c is %d\n"</span><span class="token punctuation">,</span> dist2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="数据的打包-pack"><a href="#数据的打包-pack" class="headerlink" title="数据的打包(pack)"></a>数据的打包(pack)</h2><p>有时候我们希望将不连续的数据或是不相同的数据类型的数据一起发送到其他进程，而不是效率很低地逐个发送。</p><p>一个解决这个问题的方案是将数据封装成包，再将数据包放到一个连续的缓冲区，发送到接收缓冲区后再提取出来尽心解包。</p><p>值得注意的是，打包&#x2F;解包函数有时候还会用来代替系统缓存策略。此外，对于在MPI顶层进一步开发附加的通信库会起到辅助的作用。</p><h3 id="函数说明：-2"><a href="#函数说明：-2" class="headerlink" title="函数说明："></a>函数说明：</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">MPI_Pack</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> inbuf<span class="token punctuation">,</span> <span class="token keyword">int</span> incount<span class="token punctuation">,</span> MPI_datatype datatype<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>outbuf<span class="token punctuation">,</span> <span class="token keyword">int</span> outcount<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>position<span class="token punctuation">,</span> MPI_Comm comm<span class="token punctuation">)</span> <span class="token keyword">void</span><span class="token operator">*</span> inbuf ： 输入缓冲区地址<span class="token punctuation">;</span><span class="token keyword">int</span> incount ：输入数据项数目<span class="token punctuation">;</span>MPI_datatype datatype ：数据项的类型<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token operator">*</span>outbuf ：输出缓冲区地址<span class="token punctuation">;</span><span class="token keyword">int</span> outcount ：输出缓冲区大小<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token operator">*</span>position ：缓冲区当前位置<span class="token punctuation">;</span>MPI_Comm comm ：通信子<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这是一个MPI（Message Passing Interface，消息传递接口）函数，用于将数据打包到输出缓冲区中。下面是对代码的解析：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">MPI_Pack</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> inbuf<span class="token punctuation">,</span> <span class="token keyword">int</span> incount<span class="token punctuation">,</span> MPI_datatype datatype<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>outbuf<span class="token punctuation">,</span> <span class="token keyword">int</span> outcount<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>position<span class="token punctuation">,</span> MPI_Comm comm<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><code>inbuf</code>: 输入缓冲区的指针，指向要打包的数据。</li><li><code>incount</code>: 输入缓冲区中要打包的元素数量。</li><li><code>datatype</code>: 数据类型的对象，指定了输入缓冲区中元素的类型。</li><li><code>outbuf</code>: 输出缓冲区的指针，指向打包后的数据存储位置。</li><li><code>outcount</code>: 输出缓冲区中可用的空间大小。</li><li><code>position</code>: 一个整数指针，用于返回当前在输出缓冲区中的位置。</li><li><code>comm</code>: 通信器对象，用于指定进程之间的通信。</li></ul><p>该函数的作用是将输入缓冲区中的数据按照指定的数据类型进行打包，并将打包后的数据存储到输出缓冲区中。打包后的数据可以在不同的进程之间传输或存储。</p><p>请注意，这只是一个函数声明，具体的实现细节和用法可能因使用的MPI库而有所不同。</p><h3 id="实验说明-17"><a href="#实验说明-17" class="headerlink" title="实验说明"></a>实验说明</h3><p>在源进程中打包发送一个数据包到进程1，进程1解包并打印出数据。</p><p>输出结果</p><p>The number is 1 and 2</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;mpi.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> myid<span class="token punctuation">,</span> numprocs<span class="token punctuation">,</span> source<span class="token punctuation">;</span>MPI_Status status<span class="token punctuation">;</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> position<span class="token punctuation">;</span><span class="token keyword">int</span> k<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> buf<span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_rank</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>myid<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MPI_Comm_size</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>numprocs<span class="token punctuation">)</span><span class="token punctuation">;</span>        i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    j <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>myid <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                position <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span>            <span class="token comment">// your code here</span>    <span class="token function">MPI_Pack</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> MPI_INT<span class="token punctuation">,</span> buf<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>position<span class="token punctuation">,</span> MPI_COMM_WORLD<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// end of your code</span>        <span class="token function">MPI_Send</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> position<span class="token punctuation">,</span> MPI_PACKED<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> MPI_COMM_WORLD<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>myid <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token function">MPI_Recv</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> MPI_INT<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>position <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span><span class="token function">MPI_Unpack</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>position<span class="token punctuation">,</span> <span class="token operator">&amp;</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> MPI_INT<span class="token punctuation">,</span> MPI_COMM_WORLD<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Unpack</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>position<span class="token punctuation">,</span> <span class="token operator">&amp;</span>j<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> MPI_INT<span class="token punctuation">,</span> MPI_COMM_WORLD<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"The number is %d and %d"</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="数据的解包-unpack"><a href="#数据的解包-unpack" class="headerlink" title="数据的解包(unpack)"></a>数据的解包(unpack)</h2><p>解包是对应于打包的MPI操作。</p><p>需要特别注意的是：MPI_RECV和MPI_UNPACK的区别: 在MPI_RECV中, count参数指明的是可以接收的最大项数. 实际接收的项数是由接收的消息的长度来决定的. 在MPI_UNPACK中, count参数指明实际打包的项数; 相应消息的”size”是position的增加值. 这种改动的原因是”输入消息的大小” 直到用户决定如何解包之前是不能预先确定的;从解包的项数来确定”消息大小”也是很困难的。</p><h3 id="函数说明-20"><a href="#函数说明-20" class="headerlink" title="函数说明"></a>函数说明</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">MPI_Unpack</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> inbuf<span class="token punctuation">,</span> <span class="token keyword">int</span> insize<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>position<span class="token punctuation">,</span> <span class="token keyword">void</span> <span class="token operator">*</span>outbuf<span class="token punctuation">,</span> <span class="token keyword">int</span> outcount<span class="token punctuation">,</span> MPI_Datatype datatype<span class="token punctuation">,</span> MPI_Comm comm<span class="token punctuation">)</span> <span class="token keyword">void</span><span class="token operator">*</span> inbuf ： 输入缓冲区地址<span class="token punctuation">;</span><span class="token keyword">int</span> insize ：输入数据项数目<span class="token punctuation">;</span>MPI_datatype datatype ：数据项的类型<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token operator">*</span>outbuf ：输出缓冲区地址<span class="token punctuation">;</span><span class="token keyword">int</span> outcount ：输出缓冲区大小<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token operator">*</span>position ：缓冲区当前位置<span class="token punctuation">;</span>MPI_Comm comm ：通信子<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>MPI_Unpack</code>函数用于将打包的数据从输入缓冲区解包到输出缓冲区。</p><p>参数说明：</p><ul><li><code>inbuf</code>：指向输入缓冲区的指针，其中包含要解包的数据。</li><li><code>insize</code>：输入缓冲区的大小（以字节为单位）。</li><li><code>position</code>：一个整数指针，用于返回当前在输入缓冲区中的位置。</li><li><code>outbuf</code>：指向输出缓冲区的指针，用于存储解包后的数据。</li><li><code>outcount</code>：输出缓冲区的大小（以元素为单位）。</li><li><code>datatype</code>：数据类型的对象，指定了输入缓冲区和输出缓冲区中元素的类型。</li><li><code>comm</code>：通信器对象，用于指定进程之间的通信。</li></ul><p>该函数的作用是将打包的数据从输入缓冲区解包到输出缓冲区，以便在不同的进程之间传输或存储。解包后的数据可以按照指定的数据类型进行解析和使用。</p><h3 id="实验说明-18"><a href="#实验说明-18" class="headerlink" title="实验说明"></a>实验说明</h3><p>在源进程中打包发送一个数据包到编号为1的进程，编号为1的进程解包并打印出数据。</p><p>输出结果</p><p>The number is 1 and 2</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;mpi.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> myid<span class="token punctuation">,</span> numprocs<span class="token punctuation">,</span> source<span class="token punctuation">;</span>MPI_Status status<span class="token punctuation">;</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> position<span class="token punctuation">;</span><span class="token keyword">int</span> k<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> buf<span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_rank</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>myid<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MPI_Comm_size</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>numprocs<span class="token punctuation">)</span><span class="token punctuation">;</span>        i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    j <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>myid <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                position <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span>            <span class="token function">MPI_Pack</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> MPI_INT<span class="token punctuation">,</span> buf<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>position<span class="token punctuation">,</span> MPI_COMM_WORLD<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token function">MPI_Pack</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>j<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> MPI_INT<span class="token punctuation">,</span> buf<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>position<span class="token punctuation">,</span> MPI_COMM_WORLD<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token function">MPI_Send</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> position<span class="token punctuation">,</span> MPI_PACKED<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> MPI_COMM_WORLD<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>myid <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token function">MPI_Recv</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> MPI_INT<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span>position <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span>i <span class="token operator">=</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">// your code here</span><span class="token function">MPI_Unpack</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>position<span class="token punctuation">,</span> <span class="token operator">&amp;</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> MPI_INT<span class="token punctuation">,</span> MPI_COMM_WORLD<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Unpack</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>position<span class="token punctuation">,</span> <span class="token operator">&amp;</span>j<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> MPI_INT<span class="token punctuation">,</span> MPI_COMM_WORLD<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// end of your code</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"The number is %d and %d"</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="组的管理-集合类操作"><a href="#组的管理-集合类操作" class="headerlink" title="组的管理-集合类操作"></a>组的管理-集合类操作</h2><p>对于两个集合，我们经常对其进行各种各样的集合操作，例如交&#x2F;并。</p><p>MPI同样提供了对组的集合类操作。</p><h3 id="函数说明-21"><a href="#函数说明-21" class="headerlink" title="函数说明"></a>函数说明</h3><pre class="line-numbers language-none"><code class="language-none">int MPI_Group_union(MPI_Group group1, MPI_Group group2, MPI_Group *newgroup)int MPI_Group_intersection(MPI_Group group1,MPI_Group group2,MPI_Group *newgroup) int MPI_Group_difference(MPI_Group group1,MPI_Group group2,MPI_Group *newgroup)MPI_Group group1 ： 要操作的组1；MPI_Group group2 ： 要操作的组2；MPI_Group *newgroup：新的组;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><code>MPI_Group_union</code>函数用于计算两个进程组的并集。它接受三个参数：</p><ul><li><code>group1</code>：第一个进程组。</li><li><code>group2</code>：第二个进程组。</li><li><code>newgroup</code>：指向新进程组的指针，该进程组将包含<code>group1</code>和<code>group2</code>的并集。</li></ul><p>该函数返回一个整数，表示操作的结果。如果成功，返回值为<code>MPI_SUCCESS</code>；否则，返回一个非零的错误代码。</p><p>以下是一个示例代码片段，演示如何使用<code>MPI_Group_union</code>函数：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;mpi.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 创建两个进程组</span>    MPI_Group group1<span class="token punctuation">,</span> group2<span class="token punctuation">;</span>    <span class="token function">MPI_Comm_group</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>group1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MPI_Comm_group</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>group2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 计算进程组的并集</span>    MPI_Group newgroup<span class="token punctuation">;</span>    <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token function">MPI_Group_union</span><span class="token punctuation">(</span>group1<span class="token punctuation">,</span> group2<span class="token punctuation">,</span> <span class="token operator">&amp;</span>newgroup<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">!=</span> MPI_SUCCESS<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Error: MPI_Group_union failed.\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 打印结果</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Process groups union successful.\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 释放资源</span>    <span class="token function">MPI_Group_free</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>group1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MPI_Group_free</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>group2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MPI_Group_free</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>newgroup<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>请注意，上述代码仅为示例，实际使用时需要根据具体情况进行适当的修改和错误处理。</p></blockquote><h3 id="实验说明-19"><a href="#实验说明-19" class="headerlink" title="实验说明"></a>实验说明</h3><p>将组按照编号的奇偶分为两个新的组，再用并操作将它们合起来，输出各个进程在新的组的编号。</p><p>输出结果</p><p>In process 0: union rank is 2<br>In process 1: union rank is 0<br>In process 2: union rank is 3<br>In process 3: union rank is 1</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;mpi.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> myid<span class="token punctuation">,</span> numprocs<span class="token punctuation">,</span> union_rank<span class="token punctuation">;</span>MPI_Group group_world<span class="token punctuation">,</span> odd_group<span class="token punctuation">,</span> even_group<span class="token punctuation">,</span> union_group<span class="token punctuation">;</span><span class="token keyword">int</span> i<span class="token punctuation">;</span><span class="token keyword">int</span> members<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">MPI_Init</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>argc<span class="token punctuation">,</span> <span class="token operator">&amp;</span>argv<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_rank</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>myid<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">MPI_Comm_size</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>numprocs<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Comm_group</span><span class="token punctuation">(</span>MPI_COMM_WORLD<span class="token punctuation">,</span> <span class="token operator">&amp;</span>group_world<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>numprocs<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>members<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">*</span>i<span class="token operator">+</span><span class="token number">1</span> <span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">MPI_Group_incl</span><span class="token punctuation">(</span>group_world<span class="token punctuation">,</span> numprocs<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span> members<span class="token punctuation">,</span> <span class="token operator">&amp;</span>odd_group<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Group_excl</span><span class="token punctuation">(</span>group_world<span class="token punctuation">,</span> numprocs<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span> members<span class="token punctuation">,</span> <span class="token operator">&amp;</span>even_group<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// your code here</span><span class="token function">MPI_Group_union</span><span class="token punctuation">(</span>odd_group<span class="token punctuation">,</span> even_group<span class="token punctuation">,</span> <span class="token operator">&amp;</span>union_group<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// end of your code</span><span class="token function">MPI_Group_rank</span><span class="token punctuation">(</span>union_group<span class="token punctuation">,</span> <span class="token operator">&amp;</span>union_rank<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"In process %d: union rank is %d\n"</span><span class="token punctuation">,</span> myid<span class="token punctuation">,</span> union_rank<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">MPI_Finalize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 分布式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分布式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>live2D看板娘</title>
      <link href="/posts/f571.html"/>
      <url>/posts/f571.html</url>
      
        <content type="html"><![CDATA[<h1 id="基础设置"><a href="#基础设置" class="headerlink" title="基础设置"></a>基础设置</h1><h2 id="1-模型插件"><a href="#1-模型插件" class="headerlink" title="1.模型插件"></a>1.模型插件</h2><p>在hexo根目录进入git bash，输入以下命令安装模型插件</p><pre class="line-numbers language-Text" data-language="Text"><code class="language-Text"># npm install --save hexo-helper-live2d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>卸载模型</p><pre class="line-numbers language-Text" data-language="Text"><code class="language-Text"># npm uninstall --save hexo-helper-live2d <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="2-挑选模型"><a href="#2-挑选模型" class="headerlink" title="2.挑选模型"></a>2.挑选模型</h2><p><a href="https://github.com/xiazeyu/live2d-widget-models">live2d模型仓库直达</a></p><h3 id="部分模型展示"><a href="#部分模型展示" class="headerlink" title="部分模型展示"></a>部分模型展示</h3><table>    <tr>        <td><center><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202401272109891.png"></center>        </td>        <td><center><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202401272122120.png"></center>        </td>    </tr></table>↓ 各个模型库使用 npm install {packagename}`安装模型<ul><li><code>live2d-widget-model-chitose</code></li><li><code>live2d-widget-model-epsilon2_1</code></li><li><code>live2d-widget-model-gf</code></li><li><code>live2d-widget-model-haru/01</code> (use <code>npm install --save live2d-widget-model-haru</code>)</li><li><code>live2d-widget-model-haru/02</code> (use <code>npm install --save live2d-widget-model-haru</code>)</li><li><code>live2d-widget-model-haruto</code></li><li><code>live2d-widget-model-hibiki</code></li><li><code>live2d-widget-model-hijiki</code></li><li><code>live2d-widget-model-izumi</code></li><li><code>live2d-widget-model-koharu</code></li><li><code>live2d-widget-model-miku</code></li><li><code>live2d-widget-model-ni-j</code></li><li><code>live2d-widget-model-nico</code></li><li><code>live2d-widget-model-nietzsche</code></li><li><code>live2d-widget-model-nipsilon</code></li><li><code>live2d-widget-model-nito</code></li><li><code>live2d-widget-model-shizuku</code></li><li><code>live2d-widget-model-tororo</code></li><li><code>live2d-widget-model-tsumiki</code></li><li><code>live2d-widget-model-unitychan</code></li><li><code>live2d-widget-model-wanko</code></li><li><code>live2d-widget-model-z16</code></li></ul><p>我用的是 <code>npm install live2d-widget-model-hibiki</code></p><h3 id="html实现多张图片同行"><a href="#html实现多张图片同行" class="headerlink" title="html实现多张图片同行"></a>html实现多张图片同行</h3><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>center</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202401272109891.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>图1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>center</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>center</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202401272122120.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>图2 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>center</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>原文链接：<a href="https://blog.csdn.net/qq_33826564/article/details/81303230">https://blog.csdn.net/qq_33826564/article/details/81303230</a></p><h3 id="3-详细配置"><a href="#3-详细配置" class="headerlink" title="3.详细配置"></a>3.详细配置</h3><p>1.提前在根目录下创建 <code>live2d_models</code> 目录</p><p><img src="https://diy-sprint.top/img/cjml.png" alt="img"></p><p>2.下载好的模型库会在根目录node_modules文件夹中，在该文件夹中搜索模型库名称<code>live2d-widget-model-hibiki</code>将里面的内容复制到提前创建好的目录下<code>live2d_models</code></p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202401272129897.png" alt="img"></p><p>3.开始配置根目录下的<code>_config.yml</code> 文件在底部添加如下操作</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token comment"># 看板娘</span><span class="token key atrule">live2d</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment">#enable: false</span>  <span class="token key atrule">scriptFrom</span><span class="token punctuation">:</span> local <span class="token comment"># 默认</span>  <span class="token key atrule">pluginRootPath</span><span class="token punctuation">:</span> live2dw/ <span class="token comment"># 插件在站点上的根目录(相对路径)</span>  <span class="token key atrule">pluginJsPath</span><span class="token punctuation">:</span> lib/ <span class="token comment"># 脚本文件相对与插件根目录路径</span>  <span class="token key atrule">pluginModelPath</span><span class="token punctuation">:</span> assets/ <span class="token comment"># 模型文件相对与插件根目录路径</span>  <span class="token comment"># scriptFrom: jsdelivr # jsdelivr CDN</span>  <span class="token comment"># scriptFrom: unpkg # unpkg CDN</span>  <span class="token comment"># scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url</span>  <span class="token key atrule">tagMode</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span>  <span class="token key atrule">debug</span><span class="token punctuation">:</span> <span class="token boolean important">false</span> <span class="token comment"># 调试, 是否在控制台输出日志</span>  <span class="token key atrule">model</span><span class="token punctuation">:</span>    <span class="token key atrule">use</span><span class="token punctuation">:</span> live2d<span class="token punctuation">-</span>widget<span class="token punctuation">-</span>model<span class="token punctuation">-</span>hibiki    <span class="token comment"># use: live2d-widget-model-wanko # npm-module package name</span>    <span class="token comment"># use: wanko # 博客根目录/live2d_models/ 下的目录名</span>    <span class="token comment"># use: ./wives/wanko # 相对于博客根目录的路径</span>    <span class="token comment"># use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url</span>  <span class="token key atrule">display</span><span class="token punctuation">:</span>    <span class="token key atrule">position</span><span class="token punctuation">:</span> right    <span class="token key atrule">width</span><span class="token punctuation">:</span> <span class="token number">145</span>    <span class="token key atrule">height</span><span class="token punctuation">:</span> <span class="token number">315</span>    <span class="token key atrule">hOffset</span><span class="token punctuation">:</span> <span class="token number">60</span> <span class="token comment"># 水平偏移 </span>    <span class="token key atrule">vOffset</span><span class="token punctuation">:</span> <span class="token number">5</span> <span class="token comment"># 垂直偏移</span>  <span class="token key atrule">mobile</span><span class="token punctuation">:</span>    <span class="token key atrule">show</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 是否在移动设备上显示</span>    <span class="token key atrule">scale</span><span class="token punctuation">:</span> <span class="token number">0.5</span> <span class="token comment"># 移动设备上的缩放       </span>  <span class="token key atrule">react</span><span class="token punctuation">:</span>    <span class="token key atrule">opacityDefault</span><span class="token punctuation">:</span> <span class="token number">0.7</span>    <span class="token key atrule">opacityOnHover</span><span class="token punctuation">:</span> <span class="token number">0.8</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>model:  use: live2d-widget-model-hibikiuse <code># 这里填你喜欢的模型</code></p></blockquote><h1 id="增强版设置"><a href="#增强版设置" class="headerlink" title="增强版设置"></a>增强版设置</h1><h3 id="1-先卸载helper-live2d"><a href="#1-先卸载helper-live2d" class="headerlink" title="1.先卸载helper-live2d"></a>1.先卸载helper-live2d</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">npm uninstall hexo<span class="token punctuation">-</span>helper<span class="token punctuation">-</span>live2d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="2-下载大神的配置"><a href="#2-下载大神的配置" class="headerlink" title="2.下载大神的配置"></a>2.<a href="https://github.com/stevenjoezhang/live2d-widget">下载大神的配置</a></h3><h3 id="3-解压配置"><a href="#3-解压配置" class="headerlink" title="3.解压配置"></a>3.解压配置</h3><p>解压到<code>\themes\主题\source</code>目录并改名为<code>live2d-widget</code></p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202401272138049.png" alt="img"></p><h3 id="4-修改路径"><a href="#4-修改路径" class="headerlink" title="4.修改路径"></a>4.修改路径</h3><p>修改<code>autoload.js</code>文件，将大神路径改为相对路径</p><pre class="line-numbers language-Text" data-language="Text"><code class="language-Text">&#x2F;&#x2F; 注意：live2d_path 参数应使用绝对路径&#x2F;&#x2F;const live2d_path &#x3D; &quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;stevenjoezhang&#x2F;live2d-widget@latest&#x2F;&quot;;const live2d_path &#x3D; &quot;&#x2F;live2d-widget&#x2F;&quot;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="5-修改代码"><a href="#5-修改代码" class="headerlink" title="5.修改代码"></a>5.修改代码</h3><p>修改<code>\themes\主题\layout\_partial</code>下的<code>head.ejs</code>，next主题在&#x2F;themes&#x2F;next&#x2F;layout&#x2F;_layout.swing目录下</p><pre class="line-numbers language-Text" data-language="Text"><code class="language-Text">&lt;!--看板娘--&gt;&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;jquery&#x2F;dist&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;&lt;script src&#x3D;&quot;&#x2F;live2d-widget&#x2F;autoload.js&quot;&gt;&lt;&#x2F;script&gt;&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;font-awesome&#x2F;css&#x2F;font-awesome.min.css&quot;&#x2F;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-启用配置"><a href="#6-启用配置" class="headerlink" title="6.启用配置"></a>6.启用配置</h3><p>在<code>_config.yml</code>全局配置文末添加</p><pre class="line-numbers language-Text" data-language="Text"><code class="language-Text">#自定义看板娘动画live2d: enable: true  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>想修改看板娘大小、位置、格式、文本内容等，可查看并修改 waifu-tips.js、waifu-tips.json、waifu.css文件。</p><h3 id="7-查看并部署"><a href="#7-查看并部署" class="headerlink" title="7.查看并部署"></a>7.查看并部署</h3><pre class="line-numbers language-none"><code class="language-none">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s &amp;&amp; hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这条命令会首先清除缓存 (<code>hexo clean</code>), 然后生成静态网页 (<code>hexo g</code>), 接着启动本地服务器预览 (<code>hexo s</code>)，最后部署到远程仓库 (<code>hexo d</code>)。请注意，在部署完成后，由于<code>hexo s</code>仍在运行，本地预览将会继续提供服务，直到你手动停止它(<code>Ctrl C</code>)</p><h3 id="8-演示效果"><a href="#8-演示效果" class="headerlink" title="8.演示效果"></a>8.演示效果</h3><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202401272151637.png" alt="image-20240127215123424"></p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p>本文参考以下大神的博文：</p><p>Onlooker：</p><ul><li><a href="https://diy-sprint.top/2021/050559226.html">https://diy-sprint.top/2021/050559226.html</a></li><li><a href="https://diy-sprint.top/2021/050635991.html">添加live2d看板动画(可对话，换装互动) | Onlooker (diy-sprint.top)</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> live2D </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客(一) ——基础搭建</title>
      <link href="/posts/15bb.html"/>
      <url>/posts/15bb.html</url>
      
        <content type="html"><![CDATA[<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="下载git"><a href="#下载git" class="headerlink" title="下载git"></a>下载git</h3><p>安装git for windows（或者其它git客户端）<a href="https://git-scm.com/downloads">git下载</a></p><p>验证git安装命令(cmd窗口或鼠标右键菜单的git bash 窗口)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token parameter variable">--version</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="下载node-js"><a href="#下载node-js" class="headerlink" title="下载node.js"></a>下载node.js</h3><p>在<a href="https://nodejs.org/zh-cn/">官网</a>下载node.js的安装程序，根据你电脑系统的配置信息，下载对应的安装程序。</p><p>验证node安装命令 (cmd窗口或鼠标右键菜单的git bash 窗口)</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">node</span> <span class="token parameter variable">--version</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="vscode安装"><a href="#vscode安装" class="headerlink" title="vscode安装"></a>vscode安装</h3><p>Visual Studio Code <a href="https://visualstudio.microsoft.com/zh-hans/">官网下载</a></p><h3 id="github账号"><a href="#github账号" class="headerlink" title="github账号"></a>github账号</h3><p>如果没有就注册一个：<a href="https://github.com/">https://github.com/</a></p><h2 id="Github-Pages创建"><a href="#Github-Pages创建" class="headerlink" title="Github Pages创建"></a>Github Pages创建</h2><h2 id="音乐页面"><a href="#音乐页面" class="headerlink" title="音乐页面"></a>音乐页面</h2><h2 id="书籍页面"><a href="#书籍页面" class="headerlink" title="书籍页面"></a>书籍页面</h2><h2 id="vlog页面"><a href="#vlog页面" class="headerlink" title="vlog页面"></a>vlog页面</h2><h2 id="导航页面"><a href="#导航页面" class="headerlink" title="导航页面"></a>导航页面</h2><h2 id="影视页面"><a href="#影视页面" class="headerlink" title="影视页面"></a>影视页面</h2><h2 id="生成电影卡"><a href="#生成电影卡" class="headerlink" title="生成电影卡#"></a>生成电影卡<a href="https://www.cnblogs.com/chendeqiang/p/12861726.html#880159318">#</a></h2><p>安装插件</p><pre class="line-numbers language-css" data-language="css"><code class="language-css">npm install hexo-tag-mtime --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>用法：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">&#123;</span>% mtime <span class="token number">218707</span> %<span class="token punctuation">&#125;</span>id可以在时光网 https://www.mtime.com 相应的电影网址获取<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>在站点目录下的<code>source</code>文件夹下，新建<code>movies</code>文件夹，然后在movies下新建<code>index.md</code>，粘贴以下代码</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><span class="token front-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> movies<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2023-10-05 19:31:28</span><span class="token key atrule">type</span><span class="token punctuation">:</span> movies</span><span class="token punctuation">---</span></span><span class="token title important"><span class="token punctuation">#</span> 电影推荐</span><span class="token title important"><span class="token punctuation">##</span>  教父</span>&#123;% mtime 10968 %&#125;<span class="token title important"><span class="token punctuation">##</span>  白日梦想家</span>&#123;% mtime 21250 %&#125;<span class="token title important"><span class="token punctuation">##</span> 海上钢琴师</span>&#123;% mtime 10746 %&#125;<span class="token title important"><span class="token punctuation">##</span> 闻香识女人</span>&#123;% mtime 13695 %&#125;id可以在时光网 https://www.mtime.com 相应的电影网址获取<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>找到matery主题的配置文件<code>_config.yml</code>，在menu中添加</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">movies:url: /moviesicon: fas fa-film<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>然后使用hexo s进行预览查看效果</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p><a href="https://blog.csdn.net/u013044713/article/details/120251025">hexo博客搭建及主题优化(二)_5ezuy.top-CSDN博客</a></p><ul><li>电影卡片</li><li>归档时间轴和时间列表</li><li>快捷导航</li><li>站点统计不显示</li></ul><p>buttrefly鼠标：</p><pre class="line-numbers language-none"><code class="language-none">* &#123;    cursor: url(data:image&#x2F;svg+xml,&lt;svg xmlns&#x3D;&#39;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&#39; viewBox&#x3D;&#39;0 0 8 8&#39; width&#x3D;&#39;8px&#39; height&#x3D;&#39;8px&#39;&gt;&lt;circle cx&#x3D;&#39;4&#39; cy&#x3D;&#39;4&#39; r&#x3D;&#39;4&#39; opacity&#x3D;&#39;1.0&#39; fill&#x3D;&#39;rgb(57, 197, 187)&#39;&#x2F;&gt;&lt;&#x2F;svg&gt;) 4 4, auto;&#125;data:image&#x2F;svg+xml,&lt;svg xmlns&#x3D;&#39;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&#39; viewBox&#x3D;&#39;0 0 8 8&#39; width&#x3D;&#39;8px&#39; height&#x3D;&#39;8px&#39;&gt;&lt;circle cx&#x3D;&#39;4&#39; cy&#x3D;&#39;4&#39; r&#x3D;&#39;4&#39; opacity&#x3D;&#39;1.0&#39; fill&#x3D;&#39;rgb(57, 197, 187)&#39;&#x2F;&gt;&lt;&#x2F;svg&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="https-seayj-cn"><a href="#https-seayj-cn" class="headerlink" title="https://seayj.cn/"></a><a href="https://seayj.cn/">https://seayj.cn/</a></h2><ul><li><p>footer-wave.css</p></li><li><p>matery.css</p></li><li><p>matery.js</p></li><li><p>cursor.css</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* build time:Sat Feb 03 2024 21:39:20 GMT+0800 (ä¸­å›½æ ‡å‡†æ—¶é—´)*/</span><span class="token selector">body,div,html,span</span> <span class="token punctuation">&#123;</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>/cursor/normal.png<span class="token punctuation">)</span></span><span class="token punctuation">,</span>auto<span class="token important">!important</span><span class="token punctuation">&#125;</span><span class="token selector">#vcomments svg,a,button</span> <span class="token punctuation">&#123;</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>/cursor/a.png<span class="token punctuation">)</span></span><span class="token punctuation">,</span>auto<span class="token important">!important</span><span class="token punctuation">&#125;</span><span class="token selector">::-moz-selection</span> <span class="token punctuation">&#123;</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>/cursor/love.png<span class="token punctuation">)</span></span><span class="token punctuation">,</span>auto<span class="token important">!important</span><span class="token punctuation">&#125;</span><span class="token selector">::selection,img,pre,select</span> <span class="token punctuation">&#123;</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>/cursor/love.png<span class="token punctuation">)</span></span><span class="token punctuation">,</span>auto<span class="token important">!important</span><span class="token punctuation">&#125;</span><span class="token selector">input,textarea</span> <span class="token punctuation">&#123;</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>/cursor/input.png<span class="token punctuation">)</span></span><span class="token punctuation">,</span>auto<span class="token important">!important</span><span class="token punctuation">&#125;</span><span class="token selector">.celeste canvas</span> <span class="token punctuation">&#123;</span>    <span class="token property">cursor</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>/cursor/move.png<span class="token punctuation">)</span></span><span class="token punctuation">,</span>auto<span class="token important">!important</span><span class="token punctuation">&#125;</span><span class="token comment">/* rebuild by neat */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>rightMenu.js</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// 初始化函数</span><span class="token keyword">let</span> rm <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">var</span> btf <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token function-variable function">scrollToDest</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">pos<span class="token punctuation">,</span> time</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>pos <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> time <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">const</span> currentPos <span class="token operator">=</span> window<span class="token punctuation">.</span>scrollY <span class="token operator">||</span> window<span class="token punctuation">.</span>screenTop    pos <span class="token operator">=</span> pos <span class="token operator">-</span> <span class="token number">70</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">'CSS'</span> <span class="token keyword">in</span> window <span class="token operator">&amp;&amp;</span> <span class="token constant">CSS</span><span class="token punctuation">.</span><span class="token function">supports</span><span class="token punctuation">(</span><span class="token string">'scroll-behavior'</span><span class="token punctuation">,</span> <span class="token string">'smooth'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">top</span><span class="token operator">:</span> pos<span class="token punctuation">,</span>        <span class="token literal-property property">behavior</span><span class="token operator">:</span> <span class="token string">'smooth'</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token keyword">return</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">let</span> start <span class="token operator">=</span> <span class="token keyword">null</span>    time <span class="token operator">=</span> time <span class="token operator">||</span> <span class="token number">500</span>    window<span class="token punctuation">.</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token function">step</span><span class="token punctuation">(</span><span class="token parameter">currentTime</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      start <span class="token operator">=</span> <span class="token operator">!</span>start <span class="token operator">?</span> currentTime <span class="token operator">:</span> start      <span class="token keyword">if</span> <span class="token punctuation">(</span>currentPos <span class="token operator">&lt;</span> pos<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> progress <span class="token operator">=</span> currentTime <span class="token operator">-</span> start        window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>pos <span class="token operator">-</span> currentPos<span class="token punctuation">)</span> <span class="token operator">*</span> progress <span class="token operator">/</span> time<span class="token punctuation">)</span> <span class="token operator">+</span> currentPos<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>progress <span class="token operator">&lt;</span> time<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          window<span class="token punctuation">.</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>step<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>          window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> pos<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> progress <span class="token operator">=</span> currentTime <span class="token operator">-</span> start        window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> currentPos <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>currentPos <span class="token operator">-</span> pos<span class="token punctuation">)</span> <span class="token operator">*</span> progress <span class="token operator">/</span> time<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>progress <span class="token operator">&lt;</span> time<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          window<span class="token punctuation">.</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>step<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>          window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> pos<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> heo <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 下载图片</span>  <span class="token function-variable function">downloadImage</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">imgsrc<span class="token punctuation">,</span> name</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">//下载图片地址和图片名</span>    rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>rm<span class="token punctuation">.</span>downloadimging <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      rm<span class="token punctuation">.</span>downloadimging <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">toast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token string">'&lt;span>正在下载中，请稍后&lt;/span>'</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 解决跨域 Canvas 污染问题</span>        image<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"crossOrigin"</span><span class="token punctuation">,</span> <span class="token string">"anonymous"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        image<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">let</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"canvas"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> image<span class="token punctuation">.</span>width<span class="token punctuation">;</span>          canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> image<span class="token punctuation">.</span>height<span class="token punctuation">;</span>          <span class="token keyword">let</span> context <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">"2d"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          context<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> image<span class="token punctuation">.</span>width<span class="token punctuation">,</span> image<span class="token punctuation">.</span>height<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">let</span> url <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token string">"image/png"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//得到图片的base64编码数据</span>          <span class="token keyword">let</span> a <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生成一个a元素</span>          <span class="token keyword">let</span> event <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MouseEvent</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 创建一个单击事件</span>          a<span class="token punctuation">.</span>download <span class="token operator">=</span> name <span class="token operator">||</span> <span class="token string">"photo"</span><span class="token punctuation">;</span> <span class="token comment">// 设置图片名称</span>          a<span class="token punctuation">.</span>href <span class="token operator">=</span> url<span class="token punctuation">;</span> <span class="token comment">// 将生成的URL设置为a.href属性</span>          a<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 触发a的单击事件</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        image<span class="token punctuation">.</span>src <span class="token operator">=</span> imgsrc<span class="token punctuation">;</span>        <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">toast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>          <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token string">'&lt;span>图片已添加盲水印，请遵守版权协议&lt;/span>'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        rm<span class="token punctuation">.</span>downloadimging <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token string">"10000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">toast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token string">'&lt;span>有正在进行中的下载，请稍后再试&lt;/span>'</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">//切换音乐播放状态</span>  <span class="token function-variable function">musicToggle</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"等待开发..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// let msgPlay = '&lt;i class="fa-solid fa-play">&lt;/i>&lt;span>播放音乐&lt;/span>' // 此處可以更改為你想要顯示的文字</span>    <span class="token comment">// let msgPause = '&lt;i class="fa-solid fa-pause">&lt;/i>&lt;span>暂停音乐&lt;/span>' // 同上，但兩處均不建議更改</span>    <span class="token comment">// if (heo_musicPlaying) &#123;</span>    <span class="token comment">//   document.querySelector("#nav-music").classList.remove("playing");</span>    <span class="token comment">//   document.getElementById("menu-music-toggle").innerHTML = msgPlay;</span>    <span class="token comment">//   document.getElementById("nav-music-hoverTips").innerHTML = "音乐已暂停";</span>    <span class="token comment">//   document.querySelector("#consoleMusic").classList.remove("on");</span>    <span class="token comment">//   heo_musicPlaying = false;</span>    <span class="token comment">// &#125; else &#123;</span>    <span class="token comment">//   document.querySelector("#nav-music").classList.add("playing");</span>    <span class="token comment">//   document.getElementById("menu-music-toggle").innerHTML = msgPause;</span>    <span class="token comment">//   document.querySelector("#consoleMusic").classList.add("on");</span>    <span class="token comment">//   heo_musicPlaying = true;</span>    <span class="token comment">// &#125;</span>    <span class="token comment">// document.querySelector('meting-js').aplayer.toggle();</span>    <span class="token comment">// rm.hideRightMenu();</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">//音乐上一曲</span>  <span class="token function-variable function">musicSkipBack</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"等待开发..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// document.querySelector('meting-js').aplayer.skipBack();</span>    <span class="token comment">// rm.hideRightMenu();</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">//音乐下一曲</span>  <span class="token function-variable function">musicSkipForward</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"等待开发..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// document.querySelector('meting-js').aplayer.skipForward();</span>    <span class="token comment">// rm.hideRightMenu();</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">//获取音乐中的名称</span>  <span class="token function-variable function">musicGetName</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"等待开发..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// var x = $('.aplayer-title')</span>    <span class="token comment">// // var x = document.getElementsByClassName('txt');</span>    <span class="token comment">// // for (var i = x.length - 1; i >= 0; i--) &#123;</span>    <span class="token comment">// // console.log(x[i].innerText)</span>    <span class="token comment">// // &#125;</span>    <span class="token comment">// var arr = []</span>    <span class="token comment">// for (var i = x.length - 1; i >= 0; i--) &#123;</span>    <span class="token comment">//   arr[i] = x[i].innerText</span>    <span class="token comment">//   // console.log(x[i].innerText)</span>    <span class="token comment">// &#125;</span>    <span class="token comment">// return arr[0]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//禁止图片拖拽</span>rm<span class="token punctuation">.</span>stopdragimg <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>rm<span class="token punctuation">.</span>stopdragimg<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"dragstart"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 显示菜单</span>rm<span class="token punctuation">.</span><span class="token function-variable function">showRightMenu</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">isTrue<span class="token punctuation">,</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">0</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> $rightMenu <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#rightMenu'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  $rightMenu<span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'top'</span><span class="token punctuation">,</span> x <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'left'</span><span class="token punctuation">,</span> y <span class="token operator">+</span> <span class="token string">'px'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>isTrue<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    $rightMenu<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">stopMaskScroll</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    $rightMenu<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 隐藏菜单</span>rm<span class="token punctuation">.</span><span class="token function-variable function">hideRightMenu</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  rm<span class="token punctuation">.</span><span class="token function">showRightMenu</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#rightmenu-mask'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'style'</span><span class="token punctuation">,</span> <span class="token string">'display: none'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 尺寸</span><span class="token keyword">let</span> rmWidth <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#rightMenu'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> rmHeight <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#rightMenu'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 重新定义尺寸</span>rm<span class="token punctuation">.</span><span class="token function-variable function">reloadrmSize</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  rmWidth <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#rightMenu'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  rmHeight <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#rightMenu'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 获取点击的href</span><span class="token keyword">let</span> domhref <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token keyword">let</span> domImgSrc <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span><span class="token keyword">let</span> globalEvent <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token comment">// 监听右键初始化</span>window<span class="token punctuation">.</span><span class="token function-variable function">oncontextmenu</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>clientWidth <span class="token operator">></span> <span class="token number">768</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> pageX <span class="token operator">=</span> event<span class="token punctuation">.</span>clientX <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">//加10是为了防止显示时鼠标遮在菜单上</span>    <span class="token keyword">let</span> pageY <span class="token operator">=</span> event<span class="token punctuation">.</span>clientY<span class="token punctuation">;</span>    <span class="token comment">// console.log(event);</span>    <span class="token comment">//其他额外菜单</span>    <span class="token keyword">let</span> $rightMenuOther <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.rightMenuOther'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuPlugin <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.rightMenuPlugin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuCopyText <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-copytext'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuPasteText <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-pastetext'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuCommentText <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-commenttext'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuNewWindow <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-newwindow'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuCopyLink <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-copylink'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuCopyImg <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-copyimg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuDownloadImg <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-downloadimg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuSearch <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-search'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuSearchBing <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-searchBing'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuMusicToggle <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-music-toggle'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuMusicBack <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-music-back'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuMusicForward <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-music-forward'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuMusicPlaylist <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-music-playlist'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> $rightMenuMusicCopyMusicName <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-music-copyMusicName'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> href <span class="token operator">=</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>href<span class="token punctuation">;</span>    <span class="token keyword">let</span> imgsrc <span class="token operator">=</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>currentSrc<span class="token punctuation">;</span>    <span class="token comment">// 判断模式 扩展模式为有事件</span>    <span class="token keyword">let</span> pluginMode <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    $rightMenuOther<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    globalEvent <span class="token operator">=</span> event<span class="token punctuation">;</span>    <span class="token comment">// 检查是否需要复制 是否有选中文本</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>selectTextNow <span class="token operator">&amp;&amp;</span> window<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      pluginMode <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      $rightMenuCopyText<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuCommentText<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuSearch<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuSearchBing<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      $rightMenuCopyText<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuCommentText<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuSearchBing<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuSearch<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//检查是否右键点击了链接a标签</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>href<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      pluginMode <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      $rightMenuNewWindow<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuCopyLink<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      domhref <span class="token operator">=</span> href<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      $rightMenuNewWindow<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuCopyLink<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//检查是否需要复制图片</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>imgsrc<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      pluginMode <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      $rightMenuCopyImg<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuDownloadImg<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      domImgSrc <span class="token operator">=</span> imgsrc<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      $rightMenuCopyImg<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuDownloadImg<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 判断是否为输入框</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>tagName<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'input'</span> <span class="token operator">||</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>tagName<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">'textarea'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'这是一个输入框'</span><span class="token punctuation">)</span>      pluginMode <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      $rightMenuPasteText<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      $rightMenuPasteText<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//判断是否是音乐</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>nodeName <span class="token operator">==</span> <span class="token string">"METING-JS"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'这是一个音乐'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      pluginMode <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>      $rightMenuMusicToggle<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuMusicBack<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuMusicForward<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuMusicPlaylist<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuMusicCopyMusicName<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      $rightMenuMusicToggle<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuMusicBack<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuMusicForward<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuMusicPlaylist<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuMusicCopyMusicName<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 如果不是扩展模式则隐藏扩展模块</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>pluginMode<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      $rightMenuOther<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      $rightMenuPlugin<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      $rightMenuPlugin<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    rm<span class="token punctuation">.</span><span class="token function">reloadrmSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// 鼠标默认显示在鼠标右下方，当鼠标靠右或考下时，将菜单显示在鼠标左方\上方</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>pageX <span class="token operator">+</span> rmWidth <span class="token operator">></span> window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      pageX <span class="token operator">-=</span> rmWidth <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>pageY <span class="token operator">+</span> rmHeight <span class="token operator">></span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      pageY <span class="token operator">-=</span> pageY <span class="token operator">+</span> rmHeight <span class="token operator">-</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    rm<span class="token punctuation">.</span><span class="token function">showRightMenu</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> pageY<span class="token punctuation">,</span> pageX<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#rightmenu-mask'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'style'</span><span class="token punctuation">,</span> <span class="token string">'display: flex'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 下载图片状态</span>rm<span class="token punctuation">.</span>downloadimging <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token comment">// 复制图片到剪贴板</span>rm<span class="token punctuation">.</span><span class="token function-variable function">writeClipImg</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">imgsrc</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// console.log('按下复制');</span>  rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">toast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token string">'&lt;span>正在下载中，请稍后&lt;/span>'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>rm<span class="token punctuation">.</span>downloadimging <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    rm<span class="token punctuation">.</span>downloadimging <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">copyImage</span><span class="token punctuation">(</span>imgsrc<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">toast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token string">'&lt;span>复制成功！图片已添加盲水印，请遵守版权协议&lt;/span>'</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      rm<span class="token punctuation">.</span>downloadimging <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token string">"10000"</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">imageToBlob</span><span class="token punctuation">(</span><span class="token parameter">imageURL</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> c <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"canvas"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> ctx <span class="token operator">=</span> c<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">"2d"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  img<span class="token punctuation">.</span>crossOrigin <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>  img<span class="token punctuation">.</span>src <span class="token operator">=</span> imageURL<span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    img<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      c<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>naturalWidth<span class="token punctuation">;</span>      c<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>naturalHeight<span class="token punctuation">;</span>      ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      c<span class="token punctuation">.</span><span class="token function">toBlob</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">blob</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token comment">// here the image is a blob</span>        <span class="token function">resolve</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token string">"image/png"</span><span class="token punctuation">,</span> <span class="token number">0.75</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">copyImage</span><span class="token punctuation">(</span><span class="token parameter">imageURL</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> blob <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">imageToBlob</span><span class="token punctuation">(</span>imageURL<span class="token punctuation">)</span>  <span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClipboardItem</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token string-property property">"image/png"</span><span class="token operator">:</span> blob  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  navigator<span class="token punctuation">.</span>clipboard<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>rm<span class="token punctuation">.</span><span class="token function-variable function">switchDarkMode</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">switchNightMode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>rm<span class="token punctuation">.</span><span class="token function-variable function">copyUrl</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span><span class="token string">"&lt;input id='copyVal'>&lt;/input>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> text <span class="token operator">=</span> id<span class="token punctuation">;</span>  <span class="token keyword">var</span> input <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"copyVal"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  input<span class="token punctuation">.</span>value <span class="token operator">=</span> text<span class="token punctuation">;</span>  input<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  input<span class="token punctuation">.</span><span class="token function">setSelectionRange</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> input<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>  document<span class="token punctuation">.</span><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token string">"copy"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#copyVal"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">stopMaskScroll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"rightmenu-mask"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> xscroll <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"rightmenu-mask"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    xscroll<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"mousewheel"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">//阻止浏览器默认方法</span>      rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// e.preventDefault();</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"rightMenu"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> xscroll <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"rightMenu"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    xscroll<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"mousewheel"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">//阻止浏览器默认方法</span>      rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// e.preventDefault();</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>rm<span class="token punctuation">.</span><span class="token function-variable function">rightmenuCopyText</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">txt</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>clipboard<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    navigator<span class="token punctuation">.</span>clipboard<span class="token punctuation">.</span><span class="token function">writeText</span><span class="token punctuation">(</span>txt<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>rm<span class="token punctuation">.</span><span class="token function-variable function">copyPageUrl</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> selURL <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token punctuation">;</span>  rm<span class="token punctuation">.</span><span class="token function">copyUrl</span><span class="token punctuation">(</span>selURL<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">toast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token string">'&lt;span>复制本页链接地址成功&lt;/span>'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>rm<span class="token punctuation">.</span><span class="token function-variable function">sharePage</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> content <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token punctuation">;</span>  rm<span class="token punctuation">.</span><span class="token function">copyUrl</span><span class="token punctuation">(</span>selURL<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">toast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token string">'&lt;span>复制本页链接地址成功&lt;/span>'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 复制当前选中文本</span><span class="token keyword">var</span> selectTextNow <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>document<span class="token punctuation">.</span>onmouseup <span class="token operator">=</span> document<span class="token punctuation">.</span>ondbclick <span class="token operator">=</span> selceText<span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">selceText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> txt<span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>selection<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    txt <span class="token operator">=</span> document<span class="token punctuation">.</span>selection<span class="token punctuation">.</span><span class="token function">createRange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>text<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    txt <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">''</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>txt<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    selectTextNow <span class="token operator">=</span> txt<span class="token punctuation">;</span>    <span class="token comment">// console.log(selectTextNow);</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    selectTextNow <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 读取剪切板</span>rm<span class="token punctuation">.</span><span class="token function-variable function">readClipboard</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>clipboard<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    navigator<span class="token punctuation">.</span>clipboard<span class="token punctuation">.</span><span class="token function">readText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">clipText</span> <span class="token operator">=></span> rm<span class="token punctuation">.</span><span class="token function">insertAtCaret</span><span class="token punctuation">(</span>globalEvent<span class="token punctuation">.</span>target<span class="token punctuation">,</span> clipText<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// 粘贴文本到焦点</span>rm<span class="token punctuation">.</span><span class="token function-variable function">insertAtCaret</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">elemt<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> startPos <span class="token operator">=</span> elemt<span class="token punctuation">.</span>selectionStart<span class="token punctuation">,</span>    endPos <span class="token operator">=</span> elemt<span class="token punctuation">.</span>selectionEnd<span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>selection<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    elemt<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> sel <span class="token operator">=</span> document<span class="token punctuation">.</span>selection<span class="token punctuation">.</span><span class="token function">createRange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    sel<span class="token punctuation">.</span>text <span class="token operator">=</span> value<span class="token punctuation">;</span>    elemt<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>startPos <span class="token operator">||</span> startPos <span class="token operator">==</span> <span class="token string">'0'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">var</span> scrollTop <span class="token operator">=</span> elemt<span class="token punctuation">.</span>scrollTop<span class="token punctuation">;</span>      elemt<span class="token punctuation">.</span>value <span class="token operator">=</span> elemt<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> startPos<span class="token punctuation">)</span> <span class="token operator">+</span> value <span class="token operator">+</span> elemt<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>endPos<span class="token punctuation">,</span> elemt<span class="token punctuation">.</span>value<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>      elemt<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      elemt<span class="token punctuation">.</span>selectionStart <span class="token operator">=</span> startPos <span class="token operator">+</span> value<span class="token punctuation">.</span>length<span class="token punctuation">;</span>      elemt<span class="token punctuation">.</span>selectionEnd <span class="token operator">=</span> startPos <span class="token operator">+</span> value<span class="token punctuation">.</span>length<span class="token punctuation">;</span>      elemt<span class="token punctuation">.</span>scrollTop <span class="token operator">=</span> scrollTop<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      elemt<span class="token punctuation">.</span>value <span class="token operator">+=</span> value<span class="token punctuation">;</span>      elemt<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">//粘贴文本</span>rm<span class="token punctuation">.</span><span class="token function-variable function">pasteText</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> result <span class="token operator">=</span> rm<span class="token punctuation">.</span><span class="token function">readClipboard</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">''</span><span class="token punctuation">;</span>  rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//引用到评论</span>rm<span class="token punctuation">.</span><span class="token function-variable function">rightMenuCommentText</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">txt</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> input <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'veditor'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> evt <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createEvent</span><span class="token punctuation">(</span><span class="token string">'HTMLEvents'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  evt<span class="token punctuation">.</span><span class="token function">initEvent</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> inputValue <span class="token operator">=</span> <span class="token function">replaceAll</span><span class="token punctuation">(</span>txt<span class="token punctuation">,</span> <span class="token string">'\n'</span><span class="token punctuation">,</span> <span class="token string">'\n> '</span><span class="token punctuation">)</span>  input<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">'> '</span> <span class="token operator">+</span> inputValue <span class="token operator">+</span> <span class="token string">'\n\n'</span><span class="token punctuation">;</span>  input<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span>evt<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> domTop <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"#vcomments"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>offsetTop<span class="token punctuation">;</span>  window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> domTop <span class="token operator">-</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  input<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  input<span class="token punctuation">.</span><span class="token function">setSelectionRange</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//替换所有内容</span><span class="token keyword">function</span> <span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token parameter">string<span class="token punctuation">,</span> search<span class="token punctuation">,</span> replace</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> string<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>search<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>replace<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// Bing搜索</span>rm<span class="token punctuation">.</span><span class="token function-variable function">searchBing</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">toast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token string">'&lt;span>即将跳转到必应搜索&lt;/span>'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'https://cn.bing.com/search?q='</span> <span class="token operator">+</span> selectTextNow<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token string">"1000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//分享链接</span>rm<span class="token punctuation">.</span><span class="token function-variable function">copyLink</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  rm<span class="token punctuation">.</span><span class="token function">rightmenuCopyText</span><span class="token punctuation">(</span>domhref<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">toast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token string">'&lt;span>已复制链接地址&lt;/span>'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">addRightMenuClickEvent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 添加点击事件</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-backward'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    window<span class="token punctuation">.</span>history<span class="token punctuation">.</span><span class="token function">back</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-forward'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    window<span class="token punctuation">.</span>history<span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-refresh'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    window<span class="token punctuation">.</span>location<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-top'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    btf<span class="token punctuation">.</span><span class="token function">scrollToDest</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.menu-link'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> rm<span class="token punctuation">.</span>hideRightMenu<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-darkmode'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> rm<span class="token punctuation">.</span>switchDarkMode<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-home'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">=</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>origin<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-randomPost'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">toRandomPost</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#rightmenu-mask'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> rm<span class="token punctuation">.</span>hideRightMenu<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#rightmenu-mask'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contextmenu</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-copy'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> rm<span class="token punctuation">.</span>copyPageUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-pastetext'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> rm<span class="token punctuation">.</span>pasteText<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-copytext'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    rm<span class="token punctuation">.</span><span class="token function">rightmenuCopyText</span><span class="token punctuation">(</span>selectTextNow<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">toast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token string">'&lt;span>复制成功，复制或转载请标注文本位置&lt;/span>'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-commenttext'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    rm<span class="token punctuation">.</span><span class="token function">rightMenuCommentText</span><span class="token punctuation">(</span>selectTextNow<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-newwindow'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>domhref<span class="token punctuation">)</span><span class="token punctuation">;</span>    rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-copylink'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> rm<span class="token punctuation">.</span>copyLink<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-downloadimg'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    heo<span class="token punctuation">.</span><span class="token function">downloadImage</span><span class="token punctuation">(</span>domImgSrc<span class="token punctuation">,</span> <span class="token string">'SeaYJImageDownload'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-copyimg'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    rm<span class="token punctuation">.</span><span class="token function">writeClipImg</span><span class="token punctuation">(</span>domImgSrc<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-search'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    rm<span class="token punctuation">.</span><span class="token function">hideRightMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#searchIcon'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> t <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'searchInput'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> evt <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createEvent</span><span class="token punctuation">(</span><span class="token string">'HTMLEvents'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    evt<span class="token punctuation">.</span><span class="token function">initEvent</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    t<span class="token punctuation">.</span>value <span class="token operator">=</span> selectTextNow<span class="token punctuation">;</span>    t<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span>evt<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-searchBing'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> rm<span class="token punctuation">.</span>searchBing<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//音乐</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-music-toggle'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> heo<span class="token punctuation">.</span>musicToggle<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-music-back'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> heo<span class="token punctuation">.</span>musicSkipBack<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-music-forward'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> heo<span class="token punctuation">.</span>musicSkipForward<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#menu-music-copyMusicName'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    rm<span class="token punctuation">.</span><span class="token function">rightmenuCopyText</span><span class="token punctuation">(</span>heo<span class="token punctuation">.</span><span class="token function">musicGetName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token constant">M</span><span class="token punctuation">.</span><span class="token function">toast</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token literal-property property">html</span><span class="token operator">:</span> <span class="token string">'&lt;span>复制歌曲名称成功&lt;/span>'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>lantern.js</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">Lantern</span> <span class="token punctuation">&#123;</span>    #startDate <span class="token operator">=</span> <span class="token string">'1-1'</span><span class="token punctuation">;</span>    #endDate <span class="token operator">=</span> <span class="token string">'1-31'</span><span class="token punctuation">;</span>    <span class="token function">#dateCheck</span><span class="token punctuation">(</span><span class="token parameter">date</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> $m <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> $d <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>$m <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">||</span> $m <span class="token operator">></span> <span class="token number">12</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>                <span class="token string">'ERROR: %s is a problem!The month can only be selected from 1~12!'</span><span class="token punctuation">,</span>                $m            <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>$d <span class="token operator">&lt;</span> <span class="token number">1</span> <span class="token operator">||</span> $d <span class="token operator">></span> <span class="token number">31</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>                <span class="token string">"ERROR: %s is a problem!Dates can only be selected from 1~31!You don't need to think about leap years, you just need to treat it as if every month is 31 days, and we'll do the rest!"</span><span class="token punctuation">,</span>                $d            <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">#dateCorrect</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token string">'date'</span> <span class="token keyword">in</span> obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            obj<span class="token punctuation">.</span>date <span class="token operator">=</span> <span class="token punctuation">&#123;</span>                <span class="token literal-property property">from</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#startDate<span class="token punctuation">,</span>                <span class="token literal-property property">to</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#endDate<span class="token punctuation">,</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token string">'from'</span> <span class="token keyword">in</span> obj<span class="token punctuation">.</span>date<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">#dateCheck</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>date<span class="token punctuation">.</span>from<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                obj<span class="token punctuation">.</span>date<span class="token punctuation">.</span>from <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#startDate<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token string">'to'</span> <span class="token keyword">in</span> obj<span class="token punctuation">.</span>date<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">#dateCheck</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>date<span class="token punctuation">.</span>to<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                obj<span class="token punctuation">.</span>date<span class="token punctuation">.</span>to <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#endDate<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">#CompareTime</span><span class="token punctuation">(</span><span class="token parameter">sDate<span class="token punctuation">,</span> eDate</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> $sM <span class="token operator">=</span> sDate<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> $sD <span class="token operator">=</span> sDate<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> $eM <span class="token operator">=</span> eDate<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> $eD <span class="token operator">=</span> eDate<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> $t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> $tM <span class="token operator">=</span> $t<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> $tD <span class="token operator">=</span> $t<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>$sM <span class="token operator">></span> $eM<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>$tM <span class="token operator">></span> $sM <span class="token operator">||</span> $tM <span class="token operator">&lt;</span> $eM<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>$tM <span class="token operator">==</span> $sM<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> $tD <span class="token operator">>=</span> $sD <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>$tM <span class="token operator">==</span> $eM<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> $tD <span class="token operator">&lt;=</span> $eD <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>$tM <span class="token operator">></span> $sM <span class="token operator">&amp;&amp;</span> $tM <span class="token operator">&lt;</span> $eM<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>$tM <span class="token operator">==</span> $sM <span class="token operator">&amp;&amp;</span> $tM <span class="token operator">!=</span> $eM<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> $tD <span class="token operator">>=</span> $sD <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>$tM <span class="token operator">==</span> $eM <span class="token operator">&amp;&amp;</span> $tM <span class="token operator">!=</span> $sM<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> $tD <span class="token operator">&lt;=</span> $eM <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>$tM <span class="token operator">==</span> $sM <span class="token operator">&amp;&amp;</span> $tM <span class="token operator">==</span> $eM<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> $tD <span class="token operator">>=</span> $sD <span class="token operator">&amp;&amp;</span> $tD <span class="token operator">&lt;=</span> $eD <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    #HTMLContent <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token constant">HTML</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token punctuation">(</span>                <span class="token string">'&lt;div class="lantern-container">&lt;div class="lantern-box0">&lt;div class="lantern">&lt;div class="lantern-handle">&lt;/div>&lt;div class="lantern-a">&lt;div class="lantern-b">&lt;div class="lantern-t">'</span> <span class="token operator">+</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>Text<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span>                <span class="token string">'&lt;/div>&lt;/div>&lt;/div>&lt;div class="lantern-spike lantern-spike-a">&lt;div class="lantern-spike-c">&lt;/div>&lt;div class="lantern-spike-b">&lt;/div>&lt;/div>&lt;/div>&lt;/div>&lt;div class="lantern-box1">&lt;div class="lantern">&lt;div class="lantern-handle">&lt;/div>&lt;div class="lantern-a">&lt;div class="lantern-b">&lt;div class="lantern-t">'</span> <span class="token operator">+</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>Text<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span>                <span class="token string">'&lt;/div>&lt;/div>&lt;/div>&lt;div class="lantern-spike lantern-spike-a">&lt;div class="lantern-spike-c">&lt;/div>&lt;div class="lantern-spike-b">&lt;/div>&lt;/div>&lt;/div>&lt;/div>&lt;div class="lantern-box2">&lt;div class="lantern">&lt;div class="lantern-handle">&lt;/div>&lt;div class="lantern-a">&lt;div class="lantern-b">&lt;div class="lantern-t">'</span> <span class="token operator">+</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>Text<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span>                <span class="token string">'&lt;/div>&lt;/div>&lt;/div>&lt;div class="lantern-spike lantern-spike-a">&lt;div class="lantern-spike-c">&lt;/div>&lt;div class="lantern-spike-b">&lt;/div>&lt;/div>&lt;/div>&lt;/div>&lt;div class="lantern-box3">&lt;div class="lantern">&lt;div class="lantern-handle">&lt;/div>&lt;div class="lantern-a">&lt;div class="lantern-b">&lt;div class="lantern-t">'</span> <span class="token operator">+</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>Text<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span>                <span class="token string">'&lt;/div>&lt;/div>&lt;/div>&lt;div class="lantern-spike lantern-spike-a">&lt;div class="lantern-spike-c">&lt;/div>&lt;div class="lantern-spike-b">&lt;/div>&lt;/div>&lt;/div>&lt;/div>&lt;/div>&lt;style type="text/css">@media only screen and (max-width:768px)&#123;.lantern-container&#123;display:none&#125;&#125;.lantern-box2&#123;position:fixed;top:'</span> <span class="token operator">+</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>lanternTop<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span>                <span class="token string">'px;right:'</span> <span class="token operator">+</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>lanternRL<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span>                <span class="token string">'px;z-index:'</span> <span class="token operator">+</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>zIndex <span class="token operator">+</span>                <span class="token string">';pointer-events:none&#125;.lantern-box3&#123;position:fixed;top:'</span> <span class="token operator">+</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>lanternTop<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span>                <span class="token string">'px;right:'</span> <span class="token operator">+</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>lanternRL<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">+</span>                <span class="token string">'px;z-index:'</span> <span class="token operator">+</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>zIndex <span class="token operator">+</span>                <span class="token string">';pointer-events:none&#125;.lantern-box1&#123;position:fixed;top:'</span> <span class="token operator">+</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>lanternTop<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span>                <span class="token string">'px;left:'</span> <span class="token operator">+</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>lanternRL<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span>                <span class="token string">'px;z-index:'</span> <span class="token operator">+</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>zIndex <span class="token operator">+</span>                <span class="token string">';pointer-events:none&#125;.lantern-box0&#123;position:fixed;top:'</span> <span class="token operator">+</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>lanternTop<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span>                <span class="token string">'px;left:'</span> <span class="token operator">+</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>lanternRL<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span>                <span class="token string">'px;z-index:'</span> <span class="token operator">+</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>zIndex <span class="token operator">+</span>                <span class="token string">';pointer-events:none&#125;.lantern-box3 .lantern,.lantern-box0 .lantern&#123;-webkit-animation:swing 5s infinite ease-in-out;box-shadow:-5px 5px 30px 4px#fc903d&#125;.lantern&#123;position:relative;width:120px;height:90px;margin:20px 50px 60px 50px;background:#d8000f;background:rgba(216,0,15,0.8);border-radius:50%50%;-webkit-transform-origin:50%-100px;-webkit-animation:swing 3s infinite ease-in-out;box-shadow:-5px 5px 50px 4px#fa6c00&#125;.lantern-a&#123;width:100px;height:90px;background:#d8000f;background:rgba(216,0,15,0.1);margin:12px 8px 8px 8px;border-radius:50%50%;border:2px solid#dc8f03&#125;.lantern-b&#123;width:45px;height:90px;background:#d8000f;background:rgba(216,0,15,0.1);margin:-4px 8px 8px 26px;border-radius:50%50%;border:2px solid#dc8f03&#125;.lantern-handle&#123;position:absolute;top:-20px;left:60px;width:2px;height:20px;background:#dc8f03&#125;.lantern-spike-a&#123;position:relative;width:5px;height:20px;margin:-5px 0 0 59px;-webkit-animation:swing 4s infinite ease-in-out;-webkit-transform-origin:50%-45px;background:orange;border-radius:0 0 5px 5px&#125;.lantern-spike-b&#123;position:absolute;top:14px;left:-2px;width:10px;height:10px;background:#dc8f03;border-radius:50%&#125;.lantern-spike-c&#123;position:absolute;top:18px;left:-2px;width:10px;height:35px;background:orange;border-radius:0 0 0 5px&#125;.lantern:before&#123;position:absolute;top:-7px;left:29px;height:12px;width:60px;content:" ";display:block;z-index:999;border-radius:5px 5px 0 0;border:solid 1px#dc8f03;background:orange;background:linear-gradient(to right,#dc8f03,orange,#dc8f03,orange,#dc8f03)&#125;.lantern:after&#123;position:absolute;bottom:-7px;left:10px;height:12px;width:60px;content:" ";display:block;margin-left:20px;border-radius:0 0 5px 5px;border:solid 1px#dc8f03;background:orange;background:linear-gradient(to right,#dc8f03,orange,#dc8f03,orange,#dc8f03)&#125;.lantern-t&#123;font-family:黑体,Arial,Lucida Grande,Tahoma,sans-serif;font-size:3.2rem;color:#dc8f03;font-weight:700;line-height:85px;text-align:center&#125;@-moz-keyframes swing&#123;0%&#123;-moz-transform:rotate(-10deg)&#125;50%&#123;-moz-transform:rotate(10deg)&#125;100%&#123;-moz-transform:rotate(-10deg)&#125;&#125;@-webkit-keyframes swing&#123;0%&#123;-webkit-transform:rotate(-10deg)&#125;50%&#123;-webkit-transform:rotate(10deg)&#125;100%&#123;-webkit-transform:rotate(-10deg)&#125;&#125;*[no-select]&#123;-webkit-user-select: none;-moz-user-select: none;-o-user-select: none;user-select: none;&#125;&lt;/style>'</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token literal-property property">Text</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'新'</span><span class="token punctuation">,</span> <span class="token string">'年'</span><span class="token punctuation">,</span> <span class="token string">'快'</span><span class="token punctuation">,</span> <span class="token string">'乐'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token literal-property property">zIndex</span><span class="token operator">:</span> <span class="token number">9999</span><span class="token punctuation">,</span>        <span class="token literal-property property">lanternRL</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token literal-property property">lanternTop</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token function">#postionCorrect</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">'postion'</span> <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">let</span> <span class="token punctuation">&#123;</span> postion <span class="token punctuation">&#125;</span> <span class="token operator">=</span> obj<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>#HTMLContent<span class="token punctuation">.</span>zIndex <span class="token operator">=</span> postion<span class="token punctuation">.</span>zIndex <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#HTMLContent<span class="token punctuation">.</span>zIndex<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>#HTMLContent<span class="token punctuation">.</span>lanternRL <span class="token operator">=</span> postion<span class="token punctuation">.</span>lanternRL <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#HTMLContent<span class="token punctuation">.</span>lanternRL<span class="token punctuation">;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>#HTMLContent<span class="token punctuation">.</span>lanternTop <span class="token operator">=</span> postion<span class="token punctuation">.</span>lanternTop <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#HTMLContent<span class="token punctuation">.</span>lanternTop<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">#contentCorrect</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">'content'</span> <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>#HTMLContent<span class="token punctuation">.</span>Text <span class="token operator">=</span> obj<span class="token punctuation">.</span>content<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">wrapperID<span class="token punctuation">,</span> initPara</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 显示日期处理</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">#dateCorrect</span><span class="token punctuation">(</span>initPara<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 显示位置处理</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">#postionCorrect</span><span class="token punctuation">(</span>initPara<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 显示内容处理</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">#contentCorrect</span><span class="token punctuation">(</span>initPara<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">let</span> $wrapper <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>wrapperID<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">#CompareTime</span><span class="token punctuation">(</span>initPara<span class="token punctuation">.</span>date<span class="token punctuation">.</span>from<span class="token punctuation">,</span> initPara<span class="token punctuation">.</span>date<span class="token punctuation">.</span>to<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            $wrapper<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#HTMLContent<span class="token punctuation">.</span><span class="token constant">HTML</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            $wrapper<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>3Dcard.js</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> cards <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"[Card3D]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// var images = document.querySelectorAll("[Card3DContent]");</span><span class="token comment">// var backgrounds = document.querySelectorAll("[Card3DConBG]");</span><span class="token keyword">var</span> range <span class="token operator">=</span> <span class="token number">40</span><span class="token punctuation">;</span><span class="token comment">// const calcValue = (a, b) => (((a * 100) / b) * (range / 100) -(range / 2)).toFixed(1);</span><span class="token keyword">var</span> <span class="token function-variable function">calcValue</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">calcValue</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token punctuation">(</span>a <span class="token operator">/</span> b <span class="token operator">*</span> range <span class="token operator">-</span> range <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span> <span class="token comment">// thanks @alice-mx</span><span class="token keyword">var</span> timeout <span class="token operator">=</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">;</span>document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'mousemove'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">_ref</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">var</span> x <span class="token operator">=</span> _ref<span class="token punctuation">.</span>x<span class="token punctuation">,</span>y <span class="token operator">=</span> _ref<span class="token punctuation">.</span>y<span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>timeout<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    window<span class="token punctuation">.</span><span class="token function">cancelAnimationFrame</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  timeout <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> yValue <span class="token operator">=</span> <span class="token function">calcValue</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> xValue <span class="token operator">=</span> <span class="token function">calcValue</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// console.log(xValue, yValue);</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>cards <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      cards<span class="token punctuation">.</span>style<span class="token punctuation">.</span>transform <span class="token operator">=</span> <span class="token string">"rotateX("</span> <span class="token operator">+</span> yValue <span class="token operator">+</span> <span class="token string">"deg) rotateY("</span> <span class="token operator">+</span> xValue <span class="token operator">+</span> <span class="token string">"deg)"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// [].forEach.call(images, function (image) &#123;</span>    <span class="token comment">//   image.style.transform = "translateX(" + -xValue + "px) translateY(" + yValue + "px)";</span>    <span class="token comment">// &#125;);</span>    <span class="token comment">// [].forEach.call(backgrounds, function (background) &#123;</span>    <span class="token comment">//   background.style.backgroundPosition = xValue * .45 + "px " + -yValue * .45 + "px";</span>    <span class="token comment">// &#125;);</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>butterfly的布局</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>页面加载动画</title>
      <link href="/posts/4b71.html"/>
      <url>/posts/4b71.html</url>
      
        <content type="html"><![CDATA[<h1 id="页面加载动画"><a href="#页面加载动画" class="headerlink" title="页面加载动画"></a>页面加载动画</h1><p>今天的主题是为博客添加页面加载动画。</p><p>下面是页面加载动画的详细作用：</p><ol><li><p><strong>视觉吸引力</strong>: 页面加载动画可以增加页面的吸引力，使用户在等待页面加载时感到更加愉悦和有趣。精美的加载动画可以提升用户体验，增加用户对网站的好感度。</p></li><li><p><strong>指示器</strong>: 加载动画可以作为页面加载的指示器，告诉用户页面正在加载中，以及加载进度如何。这可以帮助用户了解页面加载的状态，减少用户的不耐烦和不确定性。</p></li><li><p><strong>心理安慰</strong>: 在加载较慢的情况下，页面加载动画可以给用户一种心理上的安慰，让他们知道页面正在工作，而不是出现了问题。这有助于降低用户的焦虑和流失率。</p></li><li><p><strong>品牌展示</strong>: 页面加载动画也可以成为品牌的一部分，通过设计独特的加载动画来展示品牌的风格和特点，增强品牌形象。</p></li></ol><p>综上所述，页面加载动画在提升用户体验方面都发挥着重要作用，是网页设计中常用的元素之一。</p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202404292330622.gif" alt="loading"></p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><ol><li><p>在<code>matery\source\css</code>下新建<code>loading.css</code>，添加以下代码</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">:root</span> <span class="token punctuation">&#123;</span>    <span class="token property">--primary-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>    <span class="token comment">/* 使用变量定义主要颜色 */</span><span class="token punctuation">&#125;</span><span class="token selector">*</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">body</span> <span class="token punctuation">&#123;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.loader-wrapper</span> <span class="token punctuation">&#123;</span>    <span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>45deg<span class="token punctuation">,</span> <span class="token function">rgb</span><span class="token punctuation">(</span>90<span class="token punctuation">,</span> 54<span class="token punctuation">,</span> 148<span class="token punctuation">)</span> 0%<span class="token punctuation">,</span> <span class="token function">rgb</span><span class="token punctuation">(</span>19<span class="token punctuation">,</span> 189<span class="token punctuation">,</span> 206<span class="token punctuation">)</span> 33%<span class="token punctuation">,</span> <span class="token function">rgb</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 148<span class="token punctuation">,</span> 217<span class="token punctuation">)</span> 66%<span class="token punctuation">,</span> <span class="token function">rgb</span><span class="token punctuation">(</span>111<span class="token punctuation">,</span> 199<span class="token punctuation">,</span> 181<span class="token punctuation">)</span> 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">background-size</span><span class="token punctuation">:</span> 400%<span class="token punctuation">;</span>    <span class="token property">background-position</span><span class="token punctuation">:</span> 0% 100%<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> gradient 7.5s ease-in-out infinite<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.loader,.loader::before,.loader::after,.loader img</span> <span class="token punctuation">&#123;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 3px solid transparent<span class="token punctuation">;</span>    <span class="token property">border-top-color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--primary-color<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.loader</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 150px<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> -75px<span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span> -75px<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> spin 1.7s linear infinite<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.loader::before</span> <span class="token punctuation">&#123;</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> spin 0.6s linear infinite reverse<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.loader::after</span> <span class="token punctuation">&#123;</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> spin 1s linear infinite<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.loader img</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">object-fit</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> spin 1.7s linear infinite reverse<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.loader-text</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 36px<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 72%<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>-50%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 3<span class="token punctuation">;</span>    <span class="token property">user-select</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.loader-text div</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 36px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--primary-color<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 32px<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0 20px<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>180deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">animation</span><span class="token punctuation">:</span> move 2s linear infinite<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.loader-text div:nth-child(8)::before,.loader-text div:nth-child(9)::before,.loader-text div:nth-child(10)::before</span> <span class="token punctuation">&#123;</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--primary-color<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.loader-text div::after,.loader-text div:nth-child(8)::after,.loader-text div:nth-child(9)::after,.loader-text div:nth-child(10)::after</span> <span class="token punctuation">&#123;</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">""</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 5px<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0.15<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> -40px<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> -5px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.loader-text div:nth-child(8)::after,.loader-text div:nth-child(9)::after,.loader-text div:nth-child(10)::after</span> <span class="token punctuation">&#123;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">margin-left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.loader-text div:nth-child(2)</span> <span class="token punctuation">&#123;</span>    <span class="token property">animation-delay</span><span class="token punctuation">:</span> 0.2s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.loader-text div:nth-child(3)</span> <span class="token punctuation">&#123;</span>    <span class="token property">animation-delay</span><span class="token punctuation">:</span> 0.4s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.loader-text div:nth-child(4)</span> <span class="token punctuation">&#123;</span>    <span class="token property">animation-delay</span><span class="token punctuation">:</span> 0.6s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.loader-text div:nth-child(5)</span> <span class="token punctuation">&#123;</span>    <span class="token property">animation-delay</span><span class="token punctuation">:</span> 0.8s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.loader-text div:nth-child(6)</span> <span class="token punctuation">&#123;</span>    <span class="token property">animation-delay</span><span class="token punctuation">:</span> 1s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.loader-text div:nth-child(7)</span> <span class="token punctuation">&#123;</span>    <span class="token property">animation-delay</span><span class="token punctuation">:</span> 1.2s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.loader-text div:nth-child(8)</span> <span class="token punctuation">&#123;</span>    <span class="token property">animation-delay</span><span class="token punctuation">:</span> 1.4s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.loader-text div:nth-child(9)</span> <span class="token punctuation">&#123;</span>    <span class="token property">animation-delay</span><span class="token punctuation">:</span> 1.6s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.loader-text div:nth-child(10)</span> <span class="token punctuation">&#123;</span>    <span class="token property">animation-delay</span><span class="token punctuation">:</span> 1.8s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@keyframes</span> gradient</span> <span class="token punctuation">&#123;</span>    <span class="token selector">50%</span> <span class="token punctuation">&#123;</span>        <span class="token property">background-position</span><span class="token punctuation">:</span> 100% 0%<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@keyframes</span> spin</span> <span class="token punctuation">&#123;</span>    <span class="token selector">0%</span> <span class="token punctuation">&#123;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>360deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@keyframes</span> move</span> <span class="token punctuation">&#123;</span>    <span class="token selector">0%</span> <span class="token punctuation">&#123;</span>        <span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">35%</span> <span class="token punctuation">&#123;</span>        <span class="token property">right</span><span class="token punctuation">:</span> 41%<span class="token punctuation">;</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">65%</span> <span class="token punctuation">&#123;</span>        <span class="token property">right</span><span class="token punctuation">:</span> 59%<span class="token punctuation">;</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">100%</span> <span class="token punctuation">&#123;</span>        <span class="token property">right</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>        <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">rotate</span><span class="token punctuation">(</span>-180deg<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 小屏幕下(手机类)的样式 */</span><span class="token atrule"><span class="token rule">@media</span> <span class="token keyword">only</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 601px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>    <span class="token selector">.loader</span> <span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>        <span class="token property">margin-left</span><span class="token punctuation">:</span> -50px<span class="token punctuation">;</span>        <span class="token property">margin-top</span><span class="token punctuation">:</span> -50px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.loader img</span> <span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 45%<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 45%<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.loader-text</span> <span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 70%<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.loader-text div</span> <span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 18px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 中等屏幕下(平板类)的样式 */</span><span class="token atrule"><span class="token rule">@media</span> <span class="token keyword">only</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 600px<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 992px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>    <span class="token selector">.loader</span> <span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span>        <span class="token property">margin-left</span><span class="token punctuation">:</span> -60px<span class="token punctuation">;</span>        <span class="token property">margin-top</span><span class="token punctuation">:</span> -60px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.loader img</span> <span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.loader-text</span> <span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 60%<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 28px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.loader-text div</span> <span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 大屏幕下(桌面类)的样式 */</span><span class="token atrule"><span class="token rule">@media</span> <span class="token keyword">only</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 993px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>    <span class="token selector">.loader</span> <span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 180px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 180px<span class="token punctuation">;</span>        <span class="token property">margin-left</span><span class="token punctuation">:</span> -90px<span class="token punctuation">;</span>        <span class="token property">margin-top</span><span class="token punctuation">:</span> -90px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.loader img</span> <span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 60%<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 60%<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.loader-text</span> <span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 36px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">.loader-text div</span> <span class="token punctuation">&#123;</span>        <span class="token property">width</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> 36px<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> 32px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在<code>matery\layout\_partial</code>新建<code>loading.ejs</code></p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token keyword">if</span> <span class="token punctuation">(</span>theme<span class="token punctuation">.</span>loadingPages<span class="token punctuation">.</span>enable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> </span><span class="token delimiter punctuation">%></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loader-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        /* 你的 HTML 代码将放在这里 */        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loader-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loader<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  /* 填写你的头像路径 */            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>loader-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token comment">&lt;!-- 10个div --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>L<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>O<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>A<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>D<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>I<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>N<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>G<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">            <span class="token keyword">var</span> <span class="token function-variable function">endLoading</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>style<span class="token punctuation">.</span>overflow <span class="token operator">=</span> <span class="token string">'auto'</span><span class="token punctuation">;</span>                document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'loader-box'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'load'</span><span class="token punctuation">,</span> endLoading<span class="token punctuation">)</span><span class="token punctuation">;</span>        </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token ejs language-ejs"><span class="token delimiter punctuation">&lt;%</span><span class="token language-javascript"> <span class="token punctuation">&#125;</span> </span><span class="token delimiter punctuation">%></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>部署到本地，查看并调试效果</p></li></ol><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://seayj.cn/">SeaYJ’s Blog</a></li><li><a href="https://www.bilibili.com/video/BV1aZ4y1G7jp/">https://www.bilibili.com/video/BV1aZ4y1G7jp/</a></li></ul><h2 id="其他效果"><a href="#其他效果" class="headerlink" title="其他效果"></a>其他效果</h2><ul><li><a href="https://haoqi7.github.io/posts/ec74c60a.html">hexo添加页面加载动画 | HaoQi (haoqi7.github.io)</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 页面动画 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cuda 入门</title>
      <link href="/posts/c7d8.html"/>
      <url>/posts/c7d8.html</url>
      
        <content type="html"><![CDATA[<h1 id="CUDA入门"><a href="#CUDA入门" class="headerlink" title="CUDA入门"></a>CUDA入门</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>06年，NVIDIA公司发布了CUDA，它是建立在NVIDIA的GPU上的一个通用并行计算平台和编程模型。CUDA编程使得可以更高效地利用GPU的并行计算引擎来解决复杂的计算问题。近年来，GPU在深度学习领域取得了巨大成功，基于GPU的并行计算已成为训练深度学习模型的标准。</p><p>需要强调的是，GPU并非独立运行的计算平台，而是需要与CPU协同工作的。它可以视作CPU的协处理器，在提及GPU并行计算时，实际上指的是基于CPU+GPU的异构计算架构。在这种异构计算架构中，GPU与CPU通过PCIe总线连接在一起，协同完成计算任务。CPU所在位置被称为主机端（host），而GPU所在位置被称为设备端（device），如下图所示：</p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202312191415196.png" alt="image-20231219141540082" style="zoom:80%;" /><p>当比较GPU和CPU时，GPU拥有更多的计算核心，使其非常适合处理数据并行的计算密集型任务，例如大型矩阵运算。相比之下，CPU的核心数量较少，但它们擅长执行复杂的逻辑运算，适用于控制密集型任务。此外，CPU上的线程通常是重型的，导致较大的上下文切换开销，而GPU拥有许多轻量级线程。</p><p>因此，基于CPU+GPU的异构计算平台能够充分发挥优势。CPU负责处理串行程序中的逻辑复杂部分，而GPU则专注于处理数据密集型、并行计算的部分，这样能够实现最佳性能。</p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202312191433412.png" alt="image-20231219143336313" style="zoom:80%;" /><p>CUDA是NVIDIA公司开发的GPU编程模型，它提供了简单易用的接口，可用于构建基于GPU计算的应用程序。CUDA支持多种编程语言，如C&#x2F;C++、Python和Fortran等。下面我们将使用CUDA C&#x2F;C++接口来讲解CUDA编程。Windows系统下的CUDA安装教程可以参考给出的链接进行安装：<a href="https://blog.csdn.net/chen565884393/article/details/127905428">CUDA安装及环境配置——最新详细版-CSDN博客</a></p><h2 id="入门基础"><a href="#入门基础" class="headerlink" title="入门基础"></a>入门基础</h2><p>在CUDA编程模型中，涉及两个核心概念：host和device。</p><p>host代表着CPU及其相关内存，而device代表着GPU及其相关内存。CUDA程序中同时存在host程序和device程序，分别在CPU和GPU上运行。此外，host和device之间可以进行通信，允许数据在它们之间进行传输。</p><p>一般而言，典型的CUDA程序执行流程如下：</p><ol><li>分配host内存并对数据进行初始化</li><li>分配device内存，并将数据从host拷贝到device上</li><li>调用CUDA的核函数（kernel）在device上完成指定的并行运算</li><li>将device上计算得到的结果拷贝回host</li><li>释放device和host上分配的内存空间</li></ol><p>核函数（kernel）是CUDA中的关键概念，它是在device上并行执行的函数。核函数以 <code>__global__</code> 修饰符声明，在调用时需要使用 <code>&lt;&lt;&lt;grid, block&gt;&gt;&gt;</code> 来指定kernel要执行的线程数量。在CUDA中，每个线程都会执行核函数，并且每个线程都会有一个唯一的线程ID，可以通过核函数的内置变量 threadIdx 来获取。</p><p>由于GPU是异构计算模型，因此需要区分host和device上的代码。在CUDA中，可以通过函数类型限定词来区分host和device上的函数。主要的三种函数类型限定词如下：</p><ul><li><code>__global__</code>：在device上执行，可以从host调用（一些特定的GPU也能从device上调用）。返回类型必须是 void，不支持可变参数，也不能成为类的成员函数。需要注意的是，用 <code>__global__</code> 定义的kernel是异步执行的，这意味着host不会等待kernel执行完毕再执行下一步。</li><li><code>__device__</code>：在device上执行，仅可以从device中调用，不能与 <code>__global__</code> 同时使用。</li><li><code>__host__</code>：在host上执行，仅可以从host中调用。一般情况下，此修饰符可以省略不写。它不能与 <code>__global__</code> 同时使用，但可以与 <code>__device__</code> 结合使用，此时函数可在device和host上都编译。</li></ul><p>要深入理解kernel，需要对kernel的线程层次结构有清晰的认识。</p><ul><li>线程结构的第一层次：GPU上存在大量并行化的轻量级线程。当kernel在device上执行时，实际上是启动了大量线程，一个kernel启动的所有线程构成一个网格（grid）</li><li>第二个层次：在同一个网格内，一些线程共享相同的全局内存空间，网格被分为多个部分，每一个都是一个线程块（block）一个线程块包含多个线程。</li><li>第三个层次：在线程块内，线程被划分为更小的单元，称为线程（thread）。这是GPU上的最细粒度的并行层次。线程是执行计算的基本单元，它们共享线程块内的资源，包括寄存器文件和共享内存。通过合理的组织和协同工作，线程能够高效地执行各自的任务，实现更细致的并行化。</li></ul><p>线程的层次结构如下图所示，以二维的grid和block为例。grid和block都被定义为 dim3 类型的变量，dim3 可以看作包含三个无符号整数（x，y，z）成员的结构体变量，在定义时，缺省值默认为1。因此，grid和block可以灵活定义为1维、2维或3维结构。在CUDA编程中，这些概念和规则是关键，对于理解和利用GPU并行计算极为重要。</p><p>要调用kernel，必须通过执行配置 <code>&lt;&lt;&lt;grid, block&gt;&gt;&gt;</code> 来指定kernel所使用的线程数及结构。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">dim3 <span class="token function">grid</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>dim3 <span class="token function">block</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>kernel_fun<span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span> grid<span class="token punctuation">,</span> block <span class="token operator">>></span><span class="token operator">></span><span class="token punctuation">(</span>prams<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202312231222160.png" alt="Kernel的两层线程组织结构（2-dim）" style="zoom:67%;" /><p>所以，一个线程需要两个内置的坐标变量（blockIdx，threadIdx）来唯一标识，它们都是<code>dim3</code>类型变量，其中blockIdx指明线程所在grid中的位置，而threaIdx指明线程所在block中的位置，如图中的Thread (1,1)满足：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">threadIdx<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">1</span>threadIdx<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">1</span>blockIdx<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">1</span>blockIdx<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>在CUDA编程中，线程块（block）中的线程被分配到同一个流式多处理器（SM）上，但是每个SM的资源是有限的，因此线程块中的线程数量受到限制。现代GPU支持的线程块中的线程数量通常可达1024个。有时候，需要知道一个线程在block中的全局ID，这就需要了解block的组织结构，可以通过线程的内置变量 blockDim 来获取。它获取线程块在各个维度上的大小。对于一个2维的block( D<del>x</del>, D<del>y</del>)，线程(x, y)的ID值为 (x + y * D<del>x</del> )，如果是3维的block( D<del>x</del>, D<del>y</del>, D<del>z</del>)，线程(x, y, z)的ID值为 (x + y * D<del>x</del> + z * D<del>x</del> * D<del>y</del>)。此外，线程还具有内置变量 gridDim，用于获取网格块在各个维度上的大小。</p><p>kernel的这种线程组织结构天然适合vector、matrix等运算，如我们将利用上图2-dim结构实现两个矩阵的加法，每个线程负责处理每个位置的两个元素相加，代码如下所示。线程块大小为(16, 16)，然后将N * N大小的矩阵均分为不同的线程块来执行加法运算。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">__global__ <span class="token keyword">void</span> <span class="token function">matrixAddition</span><span class="token punctuation">(</span><span class="token keyword">float</span> <span class="token operator">*</span>a<span class="token punctuation">,</span> <span class="token keyword">float</span> <span class="token operator">*</span>b<span class="token punctuation">,</span> <span class="token keyword">float</span> <span class="token operator">*</span>c<span class="token punctuation">,</span> <span class="token keyword">int</span> N<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> row <span class="token operator">=</span> blockIdx<span class="token punctuation">.</span>y <span class="token operator">*</span> blockDim<span class="token punctuation">.</span>y <span class="token operator">+</span> threadIdx<span class="token punctuation">.</span>y<span class="token punctuation">;</span>    <span class="token keyword">int</span> col <span class="token operator">=</span> blockIdx<span class="token punctuation">.</span>x <span class="token operator">*</span> blockDim<span class="token punctuation">.</span>x <span class="token operator">+</span> threadIdx<span class="token punctuation">.</span>x<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>row <span class="token operator">&lt;</span> N <span class="token operator">&amp;&amp;</span> col <span class="token operator">&lt;</span> N<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> index <span class="token operator">=</span> row <span class="token operator">*</span> N <span class="token operator">+</span> col<span class="token punctuation">;</span>        c<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> a<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">+</span> b<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 其他代码...</span>    dim3 <span class="token function">blockSize</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    dim3 <span class="token function">gridSize</span><span class="token punctuation">(</span><span class="token punctuation">(</span>N <span class="token operator">+</span> blockSize<span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> blockSize<span class="token punctuation">.</span>x<span class="token punctuation">,</span> <span class="token punctuation">(</span>N <span class="token operator">+</span> blockSize<span class="token punctuation">.</span>y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> blockSize<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>    matrixAddition<span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span>gridSize<span class="token punctuation">,</span> blockSize<span class="token operator">>></span><span class="token operator">></span><span class="token punctuation">(</span>device_a<span class="token punctuation">,</span> device_b<span class="token punctuation">,</span> device_c<span class="token punctuation">,</span> N<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 其他代码...</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上代码中，kernel函数 matrixAddition 实现了矩阵加法操作。通过计算每个线程的行列索引，确保每个线程仅处理有效的矩阵元素。主函数中，根据矩阵大小 N 和设定的线程块大小，计算出适当的 grid 和 block 尺寸，并调用 kernel 函数执行矩阵加法。</p><h3 id="内存模型"><a href="#内存模型" class="headerlink" title="内存模型"></a>内存模型</h3><p>这里简单介绍一下CUDA的内存模型，如下图所示：</p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202312232011569.png" alt="CUDA内存模型" style="zoom: 67%;" /><p>可以看到，每个线程有自己的私有本地内存（Local Memory），而每个线程块有包含共享内存（Shared Memory）,可以被线程块中所有线程共享，其生命周期与线程块一致。此外，所有的线程都可以访问全局内存（Global Memory）。还可以访问一些只读内存块：常量内存（Constant Memory）和纹理内存（Texture Memory）</p><p>这些内存类型的特点如下：</p><ol><li><p><strong>私有本地内存（Local Memory）</strong>：每个线程都有自己的私有本地内存，用于存储线程私有的变量和数据。这些变量通常是在寄存器不足时或者动态分配内存时使用。访问本地内存的速度较慢，因此需要尽量减少对本地内存的访问，以提高性能。</p></li><li><p><strong>共享内存（Shared Memory）</strong>：每个线程块都拥有共享内存，它可以被该线程块中的所有线程共享。共享内存的生命周期与线程块一致，对于需要在线程块内多个线程之间共享的数据，可以存储在共享内存中。共享内存的访问速度比全局内存快得多，因此可以用于提高线程块内的数据访问效率和并行计算速度。</p></li><li><p><strong>全局内存（Global Memory）</strong>：所有的线程都可以访问全局内存，它是GPU中容量最大的内存类型。全局内存通常用于存储整个程序的数据，但其访问速度相对较慢。因此，在CUDA编程中，需要谨慎优化全局内存的访问，以最大化性能。</p></li><li><p><strong>常量内存（Constant Memory）</strong>：常量内存用于存储对所有线程只读的数据，其特点是具有缓存，提供对只读内存的快速访问，适用于线程内的数据共享。</p></li><li><p><strong>纹理内存（Texture Memory）</strong>：纹理内存是一种特殊的只读内存，适用于图形处理领域，提供对数据的高效访问和插值。它通常用于图像处理等应用场景。</p></li></ol><p>CUDA内存模型中不同类型的内存具有不同的访问特性和速度，合理地利用和管理这些内存类型可以对CUDA程序的性能产生显著影响。优化内存访问是CUDA编程中的一个重要方面，能够有效地提高程序的执行效率。</p><h3 id="硬件认识"><a href="#硬件认识" class="headerlink" title="硬件认识"></a>硬件认识</h3><p>还有重要一点，你需要对GPU的硬件实现有一个基本的认识。上面说到了kernel的线程组织层次，那么一个kernel实际上会启动很多线程，这些线程是逻辑上并行的，但是在物理层却并不一定。</p><p>在GPU硬件中，一个关键组件是SM（Streaming Multiprocessor，流式多处理器）。SM包含CUDA核心、共享内存、寄存器等。SM能够同时执行数百个线程，其并发能力取决于SM拥有的资源数量。当一个kernel被执行时，其线程块被分配到SM上。一个线程块只能在一个SM上被调度，而一个SM通常能够调度多个线程块，这取决于SM本身的能力。因此，一个kernel的线程块可能被分配到多个SM上，所以grid只是逻辑层，而SM才是执行的物理层。</p><p>SM采用的是<a href="https://link.zhihu.com/?target=http://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html%23simt-architecture">SIMT</a> (Single-Instruction, Multiple-Thread，单指令多线程)架构，基本的执行单元是线程束（warps)，每个线程束包含32个线程。这些线程同时执行相同的指令，但每个线程都有自己的指令地址计数器和寄存器状态，拥有独立的执行路径。因此，尽管线程束中的线程同时执行相同的指令，但它们可能具有不同的行为，特别是在遇到分支结构时，可能导致一些线程进入分支，而其他线程不执行，这些非执行的线程只能等待，因为GPU规定线程束中所有线程在同一周期执行相同的指令，线程束分化会导致性能下降。</p><p>当一个线程块被划分到SM上时，它会进一步划分为多个线程束，因为这才是SM的基本执行单元。然而，一个SM同时并发的线程束数量是有限的，这受限于资源分配，因为SM要为每个线程块分配共享内存，并为每个线程束中的线程分配独立的寄存器。因此，SM的配置会影响其所支持的线程块和线程束的并发数量。总的来说，虽然kernel的grid和block只是逻辑上的划分，但在物理层面，一个kernel的所有线程并非一定同时并发。因此，需要注意调整grid和block的配置，以充分发挥GPU的性能。此外，由于线程束的基本大小是32，因此block大小最好设置为32的倍数。</p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202312232017228.png" alt="逻辑层和物理层" style="zoom:67%;" /><h3 id="个人配置"><a href="#个人配置" class="headerlink" title="个人配置"></a>个人配置</h3><p>在进行CUDA编程前，可以先检查一下自己的GPU硬件配置，这样才能有的放矢，通过以下代码获得GPU的配置属性：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cuda_runtime.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    cudaDeviceProp deviceProp<span class="token punctuation">;</span>    <span class="token function">cudaGetDeviceProperties</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>deviceProp<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Device 0 information:\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"设备名称与型号: %s\n"</span><span class="token punctuation">,</span> deviceProp<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"显存大小: %d MB\n"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>deviceProp<span class="token punctuation">.</span>totalGlobalMem <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"计算能力: %d.%d\n"</span><span class="token punctuation">,</span> deviceProp<span class="token punctuation">.</span>major<span class="token punctuation">,</span> deviceProp<span class="token punctuation">.</span>minor<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"含有的SM数量: %d\n"</span><span class="token punctuation">,</span> deviceProp<span class="token punctuation">.</span>multiProcessorCount<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"CUDA CORE数量: %d\n"</span><span class="token punctuation">,</span> deviceProp<span class="token punctuation">.</span>multiProcessorCount <span class="token operator">*</span> <span class="token number">192</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"每个线程块的共享内存大小: %.2f KB\n"</span><span class="token punctuation">,</span> deviceProp<span class="token punctuation">.</span>sharedMemPerBlock <span class="token operator">/</span> <span class="token number">1024.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"每个线程块的最大线程数: %d\n"</span><span class="token punctuation">,</span> deviceProp<span class="token punctuation">.</span>maxThreadsPerBlock<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"每个EM的最大线程数: %d\n"</span><span class="token punctuation">,</span> deviceProp<span class="token punctuation">.</span>maxThreadsPerMultiProcessor<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"每个SM的最大线程束数: %d\n"</span><span class="token punctuation">,</span> deviceProp<span class="token punctuation">.</span>maxThreadsPerMultiProcessor <span class="token operator">/</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="向量加法实例"><a href="#向量加法实例" class="headerlink" title="向量加法实例"></a>向量加法实例</h2><p>知道了CUDA编程基础，我们就来个简单的实战，利用CUDA编程实现两个向量的加法，在实现之前，先简单介绍一下CUDA编程中内存管理API。</p><p>在CUDA编程中，内存管理是至关重要的。以下是常用的内存管理函数的简要介绍：</p><ol><li><p><strong>cudaMalloc() 函数</strong>：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">cudaError_t <span class="token function">cudaMalloc</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token operator">*</span> devPtr<span class="token punctuation">,</span> size_t size<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>cudaMalloc</code> 用于在设备（GPU）上分配内存。它类似于C语言中的 <code>malloc()</code> 函数，但是在GPU的全局内存中分配内存。<code>devPtr</code> 是指向分配内存起始位置的指针，<code>size</code> 表示要分配的内存字节数。分配成功时返回 <code>cudaSuccess</code>，否则返回相应的错误码。需要注意，使用完内存后，必须使用 <code>cudaFree()</code> 函数释放相应的设备内存，以避免内存泄漏。</p><p>这个函数和C语言中的malloc类似，但是在device上申请一定字节大小的显存，其中devPtr是指向所分配内存的指针。</p><p>同时要释放分配的内存使用cudaFree函数，这和C语言中的free函数对应。</p></li><li><p><strong>cudaFree() 函数</strong>：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">cudaError_t <span class="token function">cudaFree</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> devPtr<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>cudaFree</code> 用于释放之前由 <code>cudaMalloc</code> 分配的设备内存。传入的参数 <code>devPtr</code> 是之前分配的设备内存的指针。释放成功时返回 <code>cudaSuccess</code>，否则返回相应的错误码。</p></li><li><p><strong>cudaMemcpy() 函数</strong>：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">cudaError_t <span class="token function">cudaMemcpy</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span> dst<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">void</span><span class="token operator">*</span> src<span class="token punctuation">,</span> size_t count<span class="token punctuation">,</span> cudaMemcpyKind kind<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>cudaMemcpy</code> 用于在主机（host）和设备（device）之间进行数据传输。它可以控制数据的复制方向，例如从主机到设备、从设备到主机、设备到设备等。<code>dst</code> 和 <code>src</code> 分别是目标和源的指针，<code>count</code>表示要复制的字节数，<code>kind</code>指定了数据传输的方向。常用的传输方向有：<code>cudaMemcpyHostToHost</code>、<code>cudaMemcpyHostToDevice</code>、<code>cudaMemcpyDeviceToHost</code>、<code>cudaMemcpyDeviceToDevice</code>，根据英文即可知道传输方向。</p></li></ol><p>在CUDA程序中，合理使用这些函数进行内存分配和数据传输是保证程序正确性和性能的重要一步。</p><p>现在我们来实现一个向量加法的实例，这里grid和block都设计为1-dim，首先定义kernel如下：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">// 两个向量加法kernel，grid和block均为一维</span>__global__ <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token operator">*</span> x<span class="token punctuation">,</span> <span class="token keyword">float</span> <span class="token operator">*</span> y<span class="token punctuation">,</span> <span class="token keyword">float</span><span class="token operator">*</span> z<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">// 获取全局索引</span>    <span class="token keyword">int</span> index <span class="token operator">=</span> threadIdx<span class="token punctuation">.</span>x <span class="token operator">+</span> blockIdx<span class="token punctuation">.</span>x <span class="token operator">*</span> blockDim<span class="token punctuation">.</span>x<span class="token punctuation">;</span>    <span class="token comment">// 步长</span>    <span class="token keyword">int</span> stride <span class="token operator">=</span> blockDim<span class="token punctuation">.</span>x <span class="token operator">*</span> gridDim<span class="token punctuation">.</span>x<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> index<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i <span class="token operator">+=</span> stride<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        z<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> y<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中stride是整个grid的线程数，有时候向量的元素数很多，这时候可以将在每个线程实现多个元素（元素总数&#x2F;线程总数）的加法，相当于使用了多个grid来处理，这是一种<a href="https://link.zhihu.com/?target=https://devblogs.nvidia.com/cuda-pro-tip-write-flexible-kernels-grid-stride-loops/">grid-stride loop</a>方式，不过下面的例子一个线程只处理一个元素，所以kernel里面的循环是不执行的。</p><p>下面是一个简单的向量加法示例，使用CUDA编程中的基本概念和函数进行向量相加操作：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;math.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cuda_runtime.h></span></span><span class="token comment">// 两个向量加法kernel，grid和block均为一维</span>__global__ <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token operator">*</span> x<span class="token punctuation">,</span> <span class="token keyword">float</span><span class="token operator">*</span> y<span class="token punctuation">,</span> <span class="token keyword">float</span><span class="token operator">*</span> z<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 获取全局索引</span>    <span class="token keyword">int</span> index <span class="token operator">=</span> threadIdx<span class="token punctuation">.</span>x <span class="token operator">+</span> blockIdx<span class="token punctuation">.</span>x <span class="token operator">*</span> blockDim<span class="token punctuation">.</span>x<span class="token punctuation">;</span>    <span class="token comment">// 步长</span>    <span class="token keyword">int</span> stride <span class="token operator">=</span> blockDim<span class="token punctuation">.</span>x <span class="token operator">*</span> gridDim<span class="token punctuation">.</span>x<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> index<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i <span class="token operator">+=</span> stride<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        z<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> y<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> <span class="token comment">// 向量大小</span>    <span class="token keyword">int</span> nBytes <span class="token operator">=</span> n <span class="token operator">*</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token keyword">float</span> <span class="token operator">*</span>x<span class="token punctuation">,</span> <span class="token operator">*</span>y<span class="token punctuation">,</span> <span class="token operator">*</span>z<span class="token punctuation">;</span> <span class="token comment">// 定义主机上的向量指针</span>    <span class="token keyword">float</span> <span class="token operator">*</span>dev_x<span class="token punctuation">,</span> <span class="token operator">*</span>dev_y<span class="token punctuation">,</span> <span class="token operator">*</span>dev_z<span class="token punctuation">;</span> <span class="token comment">// 定义设备上的向量指针</span>    <span class="token comment">// 在主机上分配内存</span>    x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span>nBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>    y <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span>nBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>    z <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">float</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span>nBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 在设备上分配内存</span>    <span class="token function">cudaMalloc</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>dev_x<span class="token punctuation">,</span> nBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">cudaMalloc</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>dev_y<span class="token punctuation">,</span> nBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">cudaMalloc</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>dev_z<span class="token punctuation">,</span> nBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 初始化主机上的向量数据</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1.0f</span><span class="token punctuation">;</span>        y<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2.0f</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 将主机上的向量数据复制到设备</span>    <span class="token function">cudaMemcpy</span><span class="token punctuation">(</span>dev_x<span class="token punctuation">,</span> x<span class="token punctuation">,</span> nBytes<span class="token punctuation">,</span> cudaMemcpyHostToDevice<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">cudaMemcpy</span><span class="token punctuation">(</span>dev_y<span class="token punctuation">,</span> y<span class="token punctuation">,</span> nBytes<span class="token punctuation">,</span> cudaMemcpyHostToDevice<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 定义 grid 和 block 的大小</span>    <span class="token keyword">int</span> blockSize <span class="token operator">=</span> <span class="token number">256</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> numBlocks <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">+</span> blockSize <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> blockSize<span class="token punctuation">;</span>    <span class="token comment">// 调用 kernel 函数</span>    add<span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span>numBlocks<span class="token punctuation">,</span> blockSize<span class="token operator">>></span><span class="token operator">></span><span class="token punctuation">(</span>dev_x<span class="token punctuation">,</span> dev_y<span class="token punctuation">,</span> dev_z<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 将设备上的结果复制回主机</span>    <span class="token function">cudaMemcpy</span><span class="token punctuation">(</span>z<span class="token punctuation">,</span> dev_z<span class="token punctuation">,</span> nBytes<span class="token punctuation">,</span> cudaMemcpyDeviceToHost<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 验证结果</span>    <span class="token keyword">float</span> maxError <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        maxError <span class="token operator">=</span> <span class="token function">fmaxf</span><span class="token punctuation">(</span>maxError<span class="token punctuation">,</span> <span class="token function">fabsf</span><span class="token punctuation">(</span>z<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">3.0f</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"最大误差: %f\n"</span><span class="token punctuation">,</span> maxError<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 释放设备和主机上的内存</span>    <span class="token function">cudaFree</span><span class="token punctuation">(</span>dev_x<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">cudaFree</span><span class="token punctuation">(</span>dev_y<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">cudaFree</span><span class="token punctuation">(</span>dev_z<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">free</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">free</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">free</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这段代码实现了向量加法操作，它使用了CUDA的核函数 <code>add</code>，将两个向量 <code>x</code> 和 <code>y</code> 相加得到结果向量 <code>z</code>。在主机和设备之间进行内存分配、数据传输和核函数调用，最后将结果从设备复制回主机进行验证。这里的向量大小为1&lt;&lt;20，而block大小为256，grid大小是4096，kernel的线程层级结构如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202312232141601.png" alt="kernel的线程层次结构"></p><h2 id="nvprof"><a href="#nvprof" class="headerlink" title="nvprof"></a>nvprof</h2><p>NVIDIA nvprof &#x2F; nvvp工具是英伟达N卡GPU编程中用于观察的利器。全称是NVIDIA Visual Profiler，是由2008年起开始支持的性能分析器。交互性好，利于使用。其中记录运行日志时使用命令nvprof，可视化显示日志时使用命令nvvp。</p><p>不过在最近几年，英伟达官方推出了新的性能分析工具NSight，官方更加建议使用新的工具，给出的原因是NSight运行时消耗的资源更少，统计的数据更加贴近实际运行情况的数据。相比之下使用nvprof&#x2F;nvvp方式运行时消耗资源较多，数据统计容易不准确。</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p><code>nvprof</code> 是 NVIDIA 提供的一个用于分析 CUDA 应用程序性能的命令行工具。它可以用来收集和分析 CUDA 应用程序的性能数据，包括核函数执行时间、内存使用情况等。</p><p>使用 <code>nvprof</code> 工具来分析 CUDA 核函数运行情况的基本步骤：</p><ol><li><p><strong>编译代码</strong>：首先，确保代码已经被编译成可执行文件。</p></li><li><p>**运行 <code>nvprof</code>**：在命令行中运行 <code>nvprof</code> 并指定要分析的可执行文件。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nvprof ./your_executable<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这将启动您的 CUDA 可执行文件并开始收集性能数据。</p></li><li><p><strong>查看分析结果</strong>：<code>nvprof</code> 会输出核函数的执行时间、内存使用情况等相关信息。通常，您可以在输出中找到有关核函数执行时间、内存传输时间、资源使用情况等方面的详细信息。该输出可以帮助您确定哪些部分的代码可能需要优化或哪些操作占用了较多的时间和资源。</p></li><li><p><strong>选择特定的分析选项</strong>：<code>nvprof</code> 还提供了许多选项，可用于指定收集的数据类型、输出格式、分析范围等。您可以根据需要使用不同的选项进行详细的分析。</p></li></ol><p>例如，您可以通过以下方式使用 <code>nvprof</code> 对示例程序进行分析：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">nvprof ./your_executable<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这会收集并显示有关您的 CUDA 可执行文件的基本性能数据。您还可以使用其他选项来进行更详细的分析，例如收集内存信息、指定要分析的核函数等等。可以通过 <code>nvprof --help</code> 查看更多可用选项的详细信息。</p><p>请注意，<code>nvprof</code> 是一个强大的工具，可以帮助您深入了解 CUDA 应用程序的性能瓶颈和优化机会。</p><p>使用nvprof工具可以分析kernel运行情况，结果如下所示，可以看到kernel函数费时约1.5ms。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">nvprof cuda9.exe==7244== NVPROF is profiling process 7244, command: cuda9.exe最大误差: 4.31602e+008==7244== Profiling application: cuda9.exe==7244== Profiling result:            Type  Time(%)      Time     Calls       Avg       Min       Max  Name GPU activities:   67.57%  3.2256ms         2  1.6128ms  1.6017ms  1.6239ms  [CUDA memcpy HtoD]                   32.43%  1.5478ms         1  1.5478ms  1.5478ms  1.5478ms  add(float*, float*, float*, int)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>你调整block的大小，对比不同配置下的kernel运行情况，我这里测试的是当block为128时，kernel费时约1.6ms，而block为512时kernel费时约1.7ms，当block为64时，kernel费时约2.3ms。看来不是block越大越好，而要适当选择。</p><h2 id="统一内存管理"><a href="#统一内存管理" class="headerlink" title="统一内存管理"></a>统一内存管理</h2><p>在前面的实现中，我们需要单独在host和device上进行内存分配，并且要进行数据拷贝，这是很容易出错的。好在CUDA 6.0引入统一内存（<a href="https://link.zhihu.com/?target=http://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html%23um-unified-memory-programming-hd">Unified Memory</a>）来避免这种麻烦，简单来说就是统一内存使用一个托管内存来共同管理host和device中的内存，并且自动在host和device中进行数据传输。</p><p><code>cudaMallocManaged</code>是CUDA编程中用于动态分配内存的一个函数，它为设备和主机提供统一的、可共享的内存空间。这个函数属于CUDA运行时API的一部分。</p><p>函数：</p><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">cudaError_t cudaMallocManaged(void **devPtr, size_t size, unsigned int flags&#x3D;0);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参数解析：</p><ol><li><p><code>void **devPtr</code>：输出参数，指向设备内存的指针。调用成功后，<code>devPtr</code>将被设置为新分配内存区域的首地址，该内存区域可供GPU和CPU访问。</p></li><li><p><code>size_t size</code>：输入参数，要分配的内存大小（以字节为单位）。</p></li><li><p><code>unsigned int flags</code>：可选输入参数，默认值为0。可以使用此参数指定内存管理行为，例如：</p><ul><li><code>cudaMemAttachHost</code>: 表示内存应该同时对主机和设备可见，并且在需要时自动同步。</li><li><code>cudaMemAttachGlobal</code>: 与<code>cudaMemAttachHost</code>类似，但不保证内存始终驻留在主机上。</li></ul></li></ol><p>返回值：</p><ul><li><code>cudaSuccess</code>：如果成功分配了内存，则返回此状态。</li><li>其他错误代码（如<code>cudaErrorMemoryAllocation</code>等）：如果发生错误，如内存不足或其他CUDA运行时错误，则返回相应的错误代码。</li></ul><p>通过<code>cudaMallocManaged</code>分配的内存会遵循统一内存（Unified Memory）模型，使得开发者无需手动管理数据在主机和设备之间的迁移，大大简化了并行计算中的内存管理复杂度。然而，需要注意的是，尽管统一内存提供了便捷性，但在某些情况下可能会影响性能，因为它依赖于CUDA驱动程序和硬件进行透明的数据迁移。</p><p>利用统一内存，可以将前面的程序简化如下：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;math.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cuda_runtime.h></span></span>__global__ <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token operator">*</span> x<span class="token punctuation">,</span> <span class="token keyword">float</span><span class="token operator">*</span> y<span class="token punctuation">,</span> <span class="token keyword">float</span><span class="token operator">*</span> z<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> index <span class="token operator">=</span> threadIdx<span class="token punctuation">.</span>x <span class="token operator">+</span> blockIdx<span class="token punctuation">.</span>x <span class="token operator">*</span> blockDim<span class="token punctuation">.</span>x<span class="token punctuation">;</span>    <span class="token keyword">int</span> stride <span class="token operator">=</span> blockDim<span class="token punctuation">.</span>x <span class="token operator">*</span> gridDim<span class="token punctuation">.</span>x<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> index<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i <span class="token operator">+=</span> stride<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        z<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> y<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> <span class="token comment">// 向量大小</span>    <span class="token keyword">int</span> nBytes <span class="token operator">=</span> n <span class="token operator">*</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">float</span> <span class="token operator">*</span>z<span class="token punctuation">;</span> <span class="token comment">// 定义统一内存中的向量指针</span>    <span class="token comment">// 在统一内存中分配内存</span>    <span class="token function">cudaMallocManaged</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>z<span class="token punctuation">,</span> nBytes <span class="token operator">*</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 分配统一内存大小为三倍，包括 x, y, z</span>    <span class="token keyword">float</span> <span class="token operator">*</span>x <span class="token operator">=</span> z<span class="token punctuation">;</span> <span class="token comment">// x指针指向统一内存</span>    <span class="token keyword">float</span> <span class="token operator">*</span>y <span class="token operator">=</span> x <span class="token operator">+</span> n<span class="token punctuation">;</span> <span class="token comment">// y指针指向统一内存中x的末尾</span>    <span class="token keyword">float</span> <span class="token operator">*</span>dev_z <span class="token operator">=</span> y <span class="token operator">+</span> n<span class="token punctuation">;</span> <span class="token comment">// dev_z指针指向统一内存中y的末尾</span>    <span class="token comment">// 初始化主机上的向量数据</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        x<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1.0f</span><span class="token punctuation">;</span>        y<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2.0f</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 定义 grid 和 block 的大小</span>    <span class="token keyword">int</span> blockSize <span class="token operator">=</span> <span class="token number">256</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> numBlocks <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">+</span> blockSize <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> blockSize<span class="token punctuation">;</span>    <span class="token comment">// 调用 kernel 函数</span>    add<span class="token operator">&lt;&lt;</span><span class="token operator">&lt;</span>numBlocks<span class="token punctuation">,</span> blockSize<span class="token operator">>></span><span class="token operator">></span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> dev_z<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 同步device 保证结果能正确访问</span>    <span class="token function">cudaDeviceSynchronize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 验证结果</span>    <span class="token keyword">float</span> maxError <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        maxError <span class="token operator">=</span> <span class="token function">fmaxf</span><span class="token punctuation">(</span>maxError<span class="token punctuation">,</span> <span class="token function">fabsf</span><span class="token punctuation">(</span>dev_z<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">3.0f</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"最大误差: %f\n"</span><span class="token punctuation">,</span> maxError<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 释放统一内存</span>    <span class="token function">cudaFree</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>相比之前的代码，使用统一内存更简洁了，值得注意的是kernel执行是与host异步的，由于托管内存自动进行数据传输，这里要用cudaDeviceSynchronize()函数保证device和host同步，这样后面才可以正确访问kernel计算的结果。</p><h2 id="矩阵乘法实例"><a href="#矩阵乘法实例" class="headerlink" title="矩阵乘法实例"></a>矩阵乘法实例</h2><p>最后再实现一个稍微复杂一些的例子，就是两个矩阵的乘法，设输入矩阵为 A 和 B ，要得到 C&#x3D;A×B 。实现思路是每个线程计算 C的一个元素值 C<del>i,j</del> ，对于矩阵运算，应该选用grid和block为2-D的。首先定义矩阵的结构体：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">// 矩阵类型，行优先，M(row, col) = *(M.elements + row * M.width + col)</span><span class="token keyword">struct</span> <span class="token class-name">Matrix</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> width<span class="token punctuation">;</span>    <span class="token keyword">int</span> height<span class="token punctuation">;</span>    <span class="token keyword">float</span> <span class="token operator">*</span>elements<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202312232322858.png" alt="矩阵乘法" style="zoom: 67%;" /><p>然后实现矩阵乘法的核函数，这里定义了两个辅助的<code>__device__</code>函数分别用于获取矩阵的元素值和为矩阵元素赋值，具体代码如下：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">// 获取矩阵A的(row, col)元素</span>__device__ <span class="token keyword">float</span> <span class="token function">getElement</span><span class="token punctuation">(</span><span class="token keyword">const</span> Matrix<span class="token operator">*</span> A<span class="token punctuation">,</span> <span class="token keyword">int</span> row<span class="token punctuation">,</span> <span class="token keyword">int</span> col<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> A<span class="token operator">-></span>elements<span class="token punctuation">[</span>row <span class="token operator">*</span> A<span class="token operator">-></span>width <span class="token operator">+</span> col<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 为矩阵A的(row, col)元素赋值</span>__device__ <span class="token keyword">void</span> <span class="token function">setElement</span><span class="token punctuation">(</span>Matrix<span class="token operator">*</span> A<span class="token punctuation">,</span> <span class="token keyword">int</span> row<span class="token punctuation">,</span> <span class="token keyword">int</span> col<span class="token punctuation">,</span> <span class="token keyword">float</span> value<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    A<span class="token operator">-></span>elements<span class="token punctuation">[</span>row <span class="token operator">*</span> A<span class="token operator">-></span>width <span class="token operator">+</span> col<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 矩阵相乘kernel，2-D，每个线程计算一个元素</span>__global__ <span class="token keyword">void</span> <span class="token function">matMulKernel</span><span class="token punctuation">(</span><span class="token keyword">const</span> Matrix<span class="token operator">*</span> A<span class="token punctuation">,</span> <span class="token keyword">const</span> Matrix<span class="token operator">*</span> B<span class="token punctuation">,</span> Matrix<span class="token operator">*</span> C<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">float</span> Cvalue <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> row <span class="token operator">=</span> threadIdx<span class="token punctuation">.</span>y <span class="token operator">+</span> blockIdx<span class="token punctuation">.</span>y <span class="token operator">*</span> blockDim<span class="token punctuation">.</span>y<span class="token punctuation">;</span>    <span class="token keyword">int</span> col <span class="token operator">=</span> threadIdx<span class="token punctuation">.</span>x <span class="token operator">+</span> blockIdx<span class="token punctuation">.</span>x <span class="token operator">*</span> blockDim<span class="token punctuation">.</span>x<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> A<span class="token operator">-></span>width<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        Cvalue <span class="token operator">+=</span> <span class="token function">getElement</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span> row<span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token function">getElement</span><span class="token punctuation">(</span>B<span class="token punctuation">,</span> i<span class="token punctuation">,</span> col<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">setElement</span><span class="token punctuation">(</span>C<span class="token punctuation">,</span> row<span class="token punctuation">,</span> col<span class="token punctuation">,</span> Cvalue<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后采用统一内存编写矩阵相乘的测试实例：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> width <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> height <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span>    Matrix <span class="token operator">*</span>A<span class="token punctuation">,</span> <span class="token operator">*</span>B<span class="token punctuation">,</span> <span class="token operator">*</span>C<span class="token punctuation">;</span>    <span class="token comment">// 申请托管内存</span>    <span class="token function">cudaMallocManaged</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>A<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>Matrix<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">cudaMallocManaged</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>B<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>Matrix<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">cudaMallocManaged</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>C<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>Matrix<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> nBytes <span class="token operator">=</span> width <span class="token operator">*</span> height <span class="token operator">*</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">cudaMallocManaged</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>A<span class="token operator">-></span>elements<span class="token punctuation">,</span> nBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">cudaMallocManaged</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>B<span class="token operator">-></span>elements<span class="token punctuation">,</span> nBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">cudaMallocManaged</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>C<span class="token operator">-></span>elements<span class="token punctuation">,</span> nBytes<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 初始化数据</span>    A<span class="token operator">-></span>height <span class="token operator">=</span> height<span class="token punctuation">;</span>    A<span class="token operator">-></span>width <span class="token operator">=</span> width<span class="token punctuation">;</span>    B<span class="token operator">-></span>height <span class="token operator">=</span> height<span class="token punctuation">;</span>    B<span class="token operator">-></span>width <span class="token operator">=</span> width<span class="token punctuation">;</span>    C<span class="token operator">-></span>height <span class="token operator">=</span> height<span class="token punctuation">;</span>    C<span class="token operator">-></span>width <span class="token operator">=</span> width<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> width <span class="token operator">*</span> height<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        A<span class="token operator">-></span>elements<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">;</span>        B<span class="token operator">-></span>elements<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2.0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 定义kernel的执行配置</span>    dim3 <span class="token function">blockSize</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    dim3 <span class="token function">gridSize</span><span class="token punctuation">(</span><span class="token punctuation">(</span>width <span class="token operator">+</span> blockSize<span class="token punctuation">.</span>x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> blockSize<span class="token punctuation">.</span>x<span class="token punctuation">,</span>         <span class="token punctuation">(</span>height <span class="token operator">+</span> blockSize<span class="token punctuation">.</span>y <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> blockSize<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 执行kernel</span>    matMulKernel <span class="token operator">&lt;&lt;</span> <span class="token operator">&lt;</span> gridSize<span class="token punctuation">,</span> blockSize <span class="token operator">>></span> <span class="token operator">></span><span class="token punctuation">(</span>A<span class="token punctuation">,</span> B<span class="token punctuation">,</span> C<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 同步device 保证结果能正确访问</span>    <span class="token function">cudaDeviceSynchronize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 检查执行结果</span>    <span class="token keyword">float</span> maxError <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> width <span class="token operator">*</span> height<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>        maxError <span class="token operator">=</span> <span class="token function">fmax</span><span class="token punctuation">(</span>maxError<span class="token punctuation">,</span> <span class="token function">fabs</span><span class="token punctuation">(</span>C<span class="token operator">-></span>elements<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">2</span> <span class="token operator">*</span> width<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"最大误差: "</span> <span class="token operator">&lt;&lt;</span> maxError <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里矩阵大小为1024，设计的线程的block大小为(32, 32)，那么grid大小为(32, 32)，最终测试结果如下：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">nvprof cuda9.exe==16304== NVPROF is profiling process 16304, command: cuda9.exe最大误差: 0==16304== Profiling application: cuda9.exe==16304== Profiling result:            Type  Time(%)      Time     Calls       Avg       Min       Max  Name GPU activities:  100.00%  1.32752s         1  1.32752s  1.32752s  1.32752s  matMulKernel(Matrix*, Matrix*, Matrix*)      API calls:   83.11%  1.32762s         1  1.32762s  1.32762s  1.32762s  cudaDeviceSynchronize                   13.99%  223.40ms         6  37.233ms  37.341us  217.66ms  cudaMallocManaged                    2.81%  44.810ms         1  44.810ms  44.810ms  44.810ms  cudaLaunch                    0.08%  1.3300ms        94  14.149us       0ns  884.64us  cuDeviceGetAttribute                    0.01%  199.03us         1  199.03us  199.03us  199.03us  cuDeviceGetName                    0.00%  10.009us         1  10.009us  10.009us  10.009us  cuDeviceTotalMem                    0.00%  6.5440us         1  6.5440us  6.5440us  6.5440us  cudaConfigureCall                    0.00%  3.0800us         3  1.0260us     385ns  1.5400us  cudaSetupArgument                    0.00%  2.6940us         3     898ns     385ns  1.5390us  cuDeviceGetCount                    0.00%  1.9250us         2     962ns     385ns  1.5400us  cuDeviceGet==16304== Unified Memory profiling result:Device "GeForce GT 730 (0)"   Count  Avg Size  Min Size  Max Size  Total Size  Total Time  Name    2051  4.0000KB  4.0000KB  4.0000KB  8.011719MB  21.20721ms  Host To Device     270  45.570KB  4.0000KB  1.0000MB  12.01563MB  7.032508ms  Device To Host<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>CUDA编程入门相对简单，通过掌握基本的线程管理和内存操作，可以快速实现并行计算的基本应用。然而，随着问题复杂度的提升，深入CUDA领域则需面对更多挑战：例如动态并行性管理、流式多处理器的细粒度同步控制、全局内存与共享内存的有效利用（包括bank冲突处理）、纹理和常量内存优化、以及先进的并行算法设计如归约、扫瞄等。此外，针对现代GPU架构的特性进行性能调优，理解并解决内存层次结构带来的瓶颈，亦是深入CUDA技术栈的重要环节。只有不断钻研这些高级技术和最佳实践，才能在大规模并行计算中发挥出CUDA的真正威力，实现从“入门”到“精通”的跨越。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://zhuanlan.zhihu.com/p/34587739">CUDA编程入门极简教程 - 知乎 (zhihu.com)</a></p><p><a href="https://blog.csdn.net/TracelessLe/article/details/110880135">https://blog.csdn.net/TracelessLe/article/details/110880135</a></p>]]></content>
      
      
      <categories>
          
          <category> cuda </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cuda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>今日诗句-祝福前程</title>
      <link href="/posts/f97.html"/>
      <url>/posts/f97.html</url>
      
        <content type="html"><![CDATA[<h2 id="祝福前程"><a href="#祝福前程" class="headerlink" title="祝福前程"></a>祝福前程</h2><div class="ipage">   <div class="ititle">祝福前程</div>    <div class="izhengwen">      <p>        明年此日青云去，却笑人间举子忙 ——辛弃疾《鹧鸪天·送廓之秋试》<br>        莫愁前路无知己，天下谁人不识君 ——高适《别董大》<br>        天下谁非健者，我辈终为奇土 ——张翥《水调歌头·三十九年我》<br>        前程路险莫蹉跎 ——元姬翼《临江·岁月无情如电转》<br>        乘风破浪会有时，直挂云帆济沧海 ——李白《行路难》<br>        才子词人，自是白衣卿相 ——柳永《鹤冲天》<br>        大鹏一日同风起，扶摇直上九万里 ——李白《上李邕》<br>        春风得意马蹄疾，一日看尽长安花 ——孟郊《登科后》<br>        希君生羽翼，一化北溟鱼 ——李白《江夏使君叔席上赠史郎中》<br>         鹰击天风壮，鹏飞海浪春 ——司马光《之美举进士寓京师范此诗寄之》<br>         愿祝君如此山水，滔滔岌岌风云起 ——冯时行《遗夔门故书》<br>           </p>    </div> </div><p>​      </p>]]></content>
      
      
      <categories>
          
          <category> 诗词 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>优化分类页面</title>
      <link href="/posts/8bc.html"/>
      <url>/posts/8bc.html</url>
      
        <content type="html"><![CDATA[<h1 id="优化分类页面"><a href="#优化分类页面" class="headerlink" title="优化分类页面"></a>优化分类页面</h1><p>删除多余样式</p><p>添加样式</p><p>neko</p><p>修复分类卡片蒙板</p><p>优化分类雷达</p><p>参考：</p><p><a href="https://blog.17lai.site/categories/">分类 | 夜法之书 (17lai.site)</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 分类页面 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>添加行星特效</title>
      <link href="/posts/b04a.html"/>
      <url>/posts/b04a.html</url>
      
        <content type="html"><![CDATA[<h1 id="添加行星特效"><a href="#添加行星特效" class="headerlink" title="添加行星特效"></a>添加行星特效</h1><p>前几天在网上看到一个很好看的行星动画特效。于是就想着把它加入到自己的网站里，虽然会影响网站性能，但是对这种真的没有抵抗力！</p><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202404291955038.gif" alt="日日夜夜自转的行星"></p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><p>源码：<a href="https://nowjava.com/download/19419">html5 canvas绘制陨石围绕天体运动的动画特效源码 -HTML代码下载 -时代Java，与您同行！ (nowjava.com)</a></p><p>解压后的文件夹中应该包括：</p><ul><li>css文件夹，里面有1个css文件</li><li>js文件夹，里面有8个js文件</li><li>1个index.html文件</li><li>1个说明文件</li></ul><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li><p>找到matery下的配置文件<code>config.yml</code>，找到menu属性，添加页面名称和图标。这里是我的配置</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">name</span><span class="token punctuation">:</span> 碎星海<span class="token key atrule">url</span><span class="token punctuation">:</span> /asteroids<span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>meteor<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>在<code>themes\matery\layout</code>下新建<code>asteroids.ejs</code>，粘入上面提到的index.html代码</p></li><li><p>在<code>themes\matery\source\css</code>下新建<code>asteroids.css</code>，粘入上面的css代码</p></li><li><p>在<code>themes\matery\source\js</code>下新建<code>asteroids</code>文件夹，将上面的8个js文件夹放到该文件夹中</p></li></ol><p><strong>注意</strong>：</p><ol><li><p>需要根据自己的代码存放位置手动修改<code>index.html</code>代码中的路径</p></li><li><p>可能会出现页面渲染阻塞的情况，博主使用原代码，推送到网站后，就出现了动画效果卡顿的情况，这时候可以通过使用 <code>defer</code> 或 <code>async</code> 属性来实现异步加载，确保脚本不会阻塞页面的渲染。</p><p>这里记录一下代码的优化过程（已弃用，点击跳转到<a href="#%E6%9B%B4%E6%96%B0">最新解决方法</a>）<a href="#%E6%9B%B4%E6%96%B0">最新解决方法</a></p><ol><li><p>使用原代码（页面渲染阻塞）</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>乱石穿空<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/css/asteroids.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>/js/asteroids/three.min.js<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>/js/asteroids/CopyShader.js<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>/js/asteroids/EffectComposer.js<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>/js/asteroids/FilmPass.js<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>/js/asteroids/FilmShader.js<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>/js/asteroids/ShaderPass.js<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>/js/asteroids/RenderPass.js<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/js/asteroids/index.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>使用 <code>defer</code> 属性实现异步加载，确保脚本将在文档解析完毕后异步加载，并在文档完成解析后立即执行。这样可以确保页面加载不会被脚本的加载和执行所阻塞。之前一直以为是代码和原博客里的代码产生冲突，一直没能解决，成了萦绕在心头的一大问题，今日终于成功解决！ヾ(≧▽≦*)o</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>乱石穿空<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/css/asteroids.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>/js/asteroids/three.min.js<span class="token punctuation">'</span></span> <span class="token attr-name">defer</span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>/js/asteroids/CopyShader.js<span class="token punctuation">'</span></span> <span class="token attr-name">defer</span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>/js/asteroids/EffectComposer.js<span class="token punctuation">'</span></span> <span class="token attr-name">defer</span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>/js/asteroids/FilmPass.js<span class="token punctuation">'</span></span> <span class="token attr-name">defer</span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>/js/asteroids/FilmShader.js<span class="token punctuation">'</span></span> <span class="token attr-name">defer</span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>/js/asteroids/ShaderPass.js<span class="token punctuation">'</span></span> <span class="token attr-name">defer</span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>/js/asteroids/RenderPass.js<span class="token punctuation">'</span></span> <span class="token attr-name">defer</span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/js/asteroids/index.js<span class="token punctuation">"</span></span> <span class="token attr-name">defer</span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>感觉代码看起来有些冗杂，修改了一下，看起来更专业了😎</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>乱石穿空<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/css/asteroids.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'DOMContentLoaded'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token string">"/js/asteroids/"</span><span class="token punctuation">;</span>            <span class="token keyword">const</span> scripts <span class="token operator">=</span> <span class="token punctuation">[</span>                <span class="token string">'three.min.js'</span><span class="token punctuation">,</span>                <span class="token string">'CopyShader.js'</span><span class="token punctuation">,</span>                <span class="token string">'EffectComposer.js'</span><span class="token punctuation">,</span>                <span class="token string">'FilmPass.js'</span><span class="token punctuation">,</span>                <span class="token string">'FilmShader.js'</span><span class="token punctuation">,</span>                <span class="token string">'ShaderPass.js'</span><span class="token punctuation">,</span>                <span class="token string">'RenderPass.js'</span><span class="token punctuation">,</span>                <span class="token string">'index.js'</span>            <span class="token punctuation">]</span><span class="token punctuation">;</span>            scripts<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">script</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>                <span class="token keyword">const</span> scriptTag <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                scriptTag<span class="token punctuation">.</span>src <span class="token operator">=</span> path <span class="token operator">+</span> script<span class="token punctuation">;</span>                scriptTag<span class="token punctuation">.</span>defer <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>scriptTag<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol></li></ol><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p><span id="更新"></span></p><h3 id="链式加载"><a href="#链式加载" class="headerlink" title="链式加载"></a>链式加载</h3><p>最近发现行星页面变黑了，刷新了几次又好了，时灵时不灵。打开控制台发现如下报错</p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/THREE%E6%9C%AA%E5%AE%9A%E4%B9%89.png" alt="报错"></p><p>因为数组中其他js代码都是依赖于<code>Three.js</code>的，所以需要把<code>Three.js</code>在其他js代码文件之前加载。因为前面使用异步加载，所以我猜想可能是异步加载的顺序问题引发了这个问题。</p><p>尽管使用了<code>defer</code>属性，这意味着脚本会在文档解析完成后，DOMContentLoaded事件触发之前执行，但由于它们是并行加载的，所以并不能保证它们按照数组中的顺序执行完毕。</p><p>为了强制执行脚本的加载顺序，决定采取一种链式加载的方法，即只有当一个脚本加载并执行完成后，才开始加载下一个脚本。</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">function</span> <span class="token function">loadScript</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">>=</span> scripts<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token comment">// 所有脚本加载完毕</span>            <span class="token keyword">const</span> scriptTag <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'script'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            scriptTag<span class="token punctuation">.</span>src <span class="token operator">=</span> path <span class="token operator">+</span> scripts<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>            scriptTag<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// 当前脚本加载并执行完毕后，加载下一个脚本</span>                <span class="token function">loadScript</span><span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>            scriptTag<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Failed to load script </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>scripts<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>            document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>scriptTag<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token string">"/js/asteroids/"</span><span class="token punctuation">;</span>        <span class="token keyword">const</span> scripts <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token string">'three.min.js'</span><span class="token punctuation">,</span>            <span class="token string">'CopyShader.js'</span><span class="token punctuation">,</span>            <span class="token string">'EffectComposer.js'</span><span class="token punctuation">,</span>            <span class="token string">'FilmPass.js'</span><span class="token punctuation">,</span>            <span class="token string">'FilmShader.js'</span><span class="token punctuation">,</span>            <span class="token string">'ShaderPass.js'</span><span class="token punctuation">,</span>            <span class="token string">'RenderPass.js'</span><span class="token punctuation">,</span>            <span class="token string">'index.js'</span>        <span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment">// 开始加载脚本</span>        <span class="token function">loadScript</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改完后再次打开控制台，可以看到相关问题已经消失了，并且动画正常显示。YEAH!(～￣▽￣)～</p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/%E9%93%BE%E5%BC%8F%E5%8A%A0%E8%BD%BD.png" alt="链式加载"></p><h3 id="适配小屏"><a href="#适配小屏" class="headerlink" title="适配小屏"></a>适配小屏</h3><p>突然发现行星动画没有适配小屏幕，导致在小屏幕上出现这种情况</p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/%E6%9C%AA%E9%80%82%E9%85%8D%E5%B0%8F%E5%B1%8F.png" alt="未适配小屏"></p><p>修改样式的css代码</p><p>原样式代码</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">*</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">outline</span><span class="token punctuation">:</span> 0<span class="token punctuation">&#125;</span><span class="token selector">body,html</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> #000<span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">&#125;</span><span class="token selector">#container</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>添加响应式布局，以适应不同的屏幕尺寸</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 基础样式 */</span><span class="token selector">*</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">outline</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">html,body</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">background</span><span class="token punctuation">:</span> #000<span class="token punctuation">;</span>  <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#container</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 小屏幕（移动设备）的样式 */</span><span class="token atrule"><span class="token rule">@media</span> <span class="token keyword">only</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 600px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>  <span class="token selector">#container</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 中等屏幕（平板设备）的样式 */</span><span class="token atrule"><span class="token rule">@media</span> <span class="token keyword">only</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 601px<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 992px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>  <span class="token selector">#container</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">/* 大屏幕（桌面设备）的样式 */</span><span class="token atrule"><span class="token rule">@media</span> <span class="token keyword">only</span> screen <span class="token keyword">and</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 993px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>  <span class="token selector">#container</span> <span class="token punctuation">&#123;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改后正常显示(≧∇≦)ﾉ</p><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/%E9%80%82%E9%85%8D%E5%B0%8F%E5%B1%8F.png" alt="适配小屏"></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>当浏览器解析 HTML 文档时，遇到 <code>&lt;script&gt;</code> 标签时，它会停止解析文档并立即下载并执行脚本。在这个过程中，浏览器的渲染也会被阻塞，直到脚本加载和执行完成。这可能会导致页面加载速度变慢，特别是当页面中有多个脚本需要加载时。</p><p>为了解决这个问题，HTML5 引入了 <code>defer</code> 和 <code>async</code> 属性，这两个属性都是用来控制脚本的加载和执行方式的。</p><h3 id="defer-属性"><a href="#defer-属性" class="headerlink" title="defer 属性"></a>defer 属性</h3><p><code>defer</code> 属性告诉浏览器立即下载脚本文件，但延迟执行脚本，直到文档解析完成后再执行。具体来说：</p><ul><li>延迟执行脚本，意味着脚本会在文档解析完成后按照它们在文档中出现的顺序执行。</li><li>多个带有 defer 属性的脚本会按照它们在文档中的顺序顺序执行。</li><li>脚本会在 <code>DOMContentLoaded</code> 事件之前执行，确保它们在文档的其他内容加载之前执行。</li></ul><h3 id="async-属性"><a href="#async-属性" class="headerlink" title="async 属性"></a>async 属性</h3><p><code>async</code> 属性告诉浏览器立即下载脚本文件，并且异步执行脚本，不会阻止文档的解析。具体来说：</p><ul><li>异步执行脚本，意味着脚本会在下载完成后尽快执行，不会等待其他脚本或文档解析完成。</li><li>多个带有 async 属性的脚本的执行顺序是不确定的，谁先下载完成就会先执行谁。</li><li>脚本的执行可能在文档的其他内容加载之前或之后。</li></ul><h3 id="选择-defer-还是-async？"><a href="#选择-defer-还是-async？" class="headerlink" title="选择 defer 还是 async？"></a>选择 defer 还是 async？</h3><ul><li>如果脚本之间的执行顺序很重要，并且你希望它们在文档解析完成后按顺序执行，那么应该使用 defer 属性。</li><li>如果脚本之间的执行顺序不重要，并且你希望尽快执行脚本，不阻塞页面的渲染，那么可以使用 async 属性。</li><li>如果你有多个脚本需要异步加载，并且它们之间没有依赖关系，那么可以考虑使用 async 属性以提高页面加载性能。</li></ul><p>总之，defer 属性适用于需要保持脚本执行顺序的情况，而 async 属性适用于无序的异步加载脚本。</p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 行星特效 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Gmail分身</title>
      <link href="/posts/ae7f.html"/>
      <url>/posts/ae7f.html</url>
      
        <content type="html"><![CDATA[<p>今天要分享的一个方法，前面的邮箱跟原邮箱唯一的区别就是后面多了个<code>+c1</code>。我们只需要在原邮箱后面使用一个 <code>+</code> 号连接一个字符串 <code>c1</code>，后缀不变，你就有了一个新邮箱，使用该方法，你就可以开启分身大法了：</p><blockquote><p>原邮箱：t……<a href="mailto:&#100;&#64;&#103;&#109;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#111;&#109;">&#100;&#64;&#103;&#109;&#x61;&#x69;&#x6c;&#x2e;&#x63;&#111;&#109;</a><br>新邮箱一：t……<a href="mailto:&#100;&#43;&#x63;&#x31;&#64;&#x67;&#x6d;&#x61;&#105;&#x6c;&#46;&#99;&#x6f;&#109;">&#100;&#43;&#x63;&#x31;&#64;&#x67;&#x6d;&#x61;&#105;&#x6c;&#46;&#99;&#x6f;&#109;</a><br>新邮箱二：t……<a href="mailto:&#x64;&#x2b;&#x63;&#x32;&#64;&#x67;&#109;&#x61;&#105;&#108;&#46;&#x63;&#x6f;&#109;">&#x64;&#x2b;&#x63;&#x32;&#64;&#x67;&#109;&#x61;&#105;&#108;&#46;&#x63;&#x6f;&#109;</a></p></blockquote><p>原理是因为在 Gmail 的邮件地址里，<code>+</code> 号是一个特殊符号，地址中的 <code>+</code> 以及加号后面的部分，会被过滤掉。其实还有一个特殊符号 <code>.</code> 也是一样的，但是不太好用实用价值不大，这里就不详细介绍了。利用这个原理，我们需要注册某个平台的多个几账号时就可以非常方便的完成(例如某 GPT)。这比市面上很多所谓的临时邮箱或者邮箱分身用起来可安全可靠太多了，并且非常方便，在一个邮箱里面就能收到所有的邮件。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Gmail </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>123云盘资源</title>
      <link href="/posts/5d4b.html"/>
      <url>/posts/5d4b.html</url>
      
        <content type="html"><![CDATA[<p>Adobe全家桶：<a href="https://www.123pan.com/s/yS8UVv-NkFed.html">https://www.123pan.com/s/yS8UVv-NkFed.html</a> 提取码:6666</p><p>AutoCAD：<a href="https://www.123pan.com/s/yS8UVv-2kFed.html">https://www.123pan.com/s/yS8UVv-2kFed.html</a> 提取码:6666</p><p>专业软件：<a href="https://www.123pan.com/s/yS8UVv-rkFed.html">https://www.123pan.com/s/yS8UVv-rkFed.html</a> 提取码:6666</p><p>Unity：<a href="https://www.123pan.com/s/yS8UVv-skFed.html">https://www.123pan.com/s/yS8UVv-skFed.html</a> 提取码:6666</p><p>达芬奇：<a href="https://www.123pan.com/s/yS8UVv-WkFed.html">https://www.123pan.com/s/yS8UVv-WkFed.html</a> 提取码:6666</p><p>建模类：<a href="https://www.123pan.com/s/yS8UVv-CkFed.html">https://www.123pan.com/s/yS8UVv-CkFed.html</a> 提取码:6666</p><p>VMWare虚拟机：<a href="https://www.123pan.com/s/yS8UVv-OkFed.html">https://www.123pan.com/s/yS8UVv-OkFed.html</a> 提取码:6666</p><p>编程工具：<a href="https://www.123pan.com/s/yS8UVv-RkFed.html">https://www.123pan.com/s/yS8UVv-RkFed.html</a> 提取码:6666</p><p>电脑工具：<a href="https://www.123pan.com/s/yS8UVv-DkFed.html">https://www.123pan.com/s/yS8UVv-DkFed.html</a> 提取码:6666</p><p>下载工具：<a href="https://www.123pan.com/s/yS8UVv-nkFed.html">https://www.123pan.com/s/yS8UVv-nkFed.html</a> 提取码:6666</p><p>PS2024(Beta)_25.1总索引：<a href="https://www.123pan.com/s/yS8UVv-VcFed.html">https://www.123pan.com/s/yS8UVv-VcFed.html</a> 提取码:6666【含win+mac】</p><p>Adobe全家桶总索引：<a href="https://www.123pan.com/s/yS8UVv-HiFed.html">https://www.123pan.com/s/yS8UVv-HiFed.html</a> 提取码:6666【含大师版和SP版，win+mac】</p><p>PS：Adobe全家桶如果有解压密码，密码就是@vposy</p><p>【备用：Adobe全家桶：<a href="https://www.123pan.com/s/yS8UVv-hiFed.html">https://www.123pan.com/s/yS8UVv-hiFed.html</a> 提取码:6666】</p><p>音乐软件总索引：<a href="https://www.123pan.com/s/yS8UVv-u7Fed.html">https://www.123pan.com/s/yS8UVv-u7Fed.html</a> 提取码:6666【含win+mac】</p><p>Win_Al系列软件总索引：<a href="https://www.123pan.com/s/yS8UVv-h7Fed.html">https://www.123pan.com/s/yS8UVv-h7Fed.html</a> 提取码:6666【包含HitPaw全家桶，Topaz全家桶】</p><p>Mac_Al系列软件总索引：<a href="https://www.123pan.com/s/yS8UVv-niFed.html">https://www.123pan.com/s/yS8UVv-niFed.html</a> 提取码:6666【包含HitPaw全家桶，Topaz全家桶】</p><p>远程桌面RayLink官网<a href="https://www.raylink.live/">https://www.raylink.live/</a></p><p>Mac2024：<a href="https://www.123pan.com/s/yS8UVv-uIYed.html%E3%80%90">https://www.123pan.com/s/yS8UVv-uIYed.html【</a> 提取码:6666】</p><p>Win2024：<a href="https://www.123pan.com/s/yS8UVv-rIYed.html%E3%80%90">https://www.123pan.com/s/yS8UVv-rIYed.html【</a> 提取码:6666】</p><p>更多monkrus资源：<a href="https://www.123pan.com/s/yS8UVv-8IYed.html%E3%80%90">https://www.123pan.com/s/yS8UVv-8IYed.html【</a> 提取码:6666】</p><p>👉Adobe全家桶所有🐬：<a href="https://www.123pan.com/s/yS8UVv-hiFed.html%E3%80%90">https://www.123pan.com/s/yS8UVv-hiFed.html【</a> 提取码:6666】</p><p>Adobe全家桶：</p><p>【建议去总文件夹】：<a href="https://www.123pan.com/s/yS8UVv-NkFed.html">https://www.123pan.com/s/yS8UVv-NkFed.html</a> 提取码:6666</p><p>PS：<a href="https://www.123pan.com/s/yS8UVv-bkFed.html">https://www.123pan.com/s/yS8UVv-bkFed.html</a> 提取码:6666</p><p>PR：<a href="https://www.123pan.com/s/yS8UVv-ZkFed.html">https://www.123pan.com/s/yS8UVv-ZkFed.html</a> 提取码:6666</p><p>AE：<a href="https://www.123pan.com/s/yS8UVv-ckFed.html">https://www.123pan.com/s/yS8UVv-ckFed.html</a> 提取码:6666</p><p>Ai：<a href="https://www.123pan.com/s/yS8UVv-ekFed.html">https://www.123pan.com/s/yS8UVv-ekFed.html</a> 提取码:6666</p><p>ME：<a href="https://www.123pan.com/s/yS8UVv-tkFed.html">https://www.123pan.com/s/yS8UVv-tkFed.html</a> 提取码:6666</p><p>AU：<a href="https://www.123pan.com/s/yS8UVv-ikFed.html">https://www.123pan.com/s/yS8UVv-ikFed.html</a> 提取码:6666</p><p>An：<a href="https://www.123pan.com/s/yS8UVv-zkFed.html">https://www.123pan.com/s/yS8UVv-zkFed.html</a> 提取码:6666</p><p>AdobeAcrobat：<a href="https://www.123pan.com/s/yS8UVv-LkFed.html">https://www.123pan.com/s/yS8UVv-LkFed.html</a> 提取码:6666</p><p>AdobeBridge：<a href="https://www.123pan.com/s/yS8UVv-5kFed.html">https://www.123pan.com/s/yS8UVv-5kFed.html</a> 提取码:6666</p><p>AdobeDimension：<a href="https://www.123pan.com/s/yS8UVv-qkFed.html">https://www.123pan.com/s/yS8UVv-qkFed.html</a> 提取码:6666</p><p>AdobeDreamweaver：<a href="https://www.123pan.com/s/yS8UVv-6kFed.html">https://www.123pan.com/s/yS8UVv-6kFed.html</a> 提取码:6666</p><p>AdobeFlash：<a href="https://www.123pan.com/s/yS8UVv-ykFed.html">https://www.123pan.com/s/yS8UVv-ykFed.html</a> 提取码:6666</p><p>AdobeFrameMaker：<a href="https://www.123pan.com/s/yS8UVv-VkFed.html">https://www.123pan.com/s/yS8UVv-VkFed.html</a> 提取码:6666</p><p>AdobeInCopy：<a href="https://www.123pan.com/s/yS8UVv-jkFed.html">https://www.123pan.com/s/yS8UVv-jkFed.html</a> 提取码:6666</p><p>AdobeInDesign：<a href="https://www.123pan.com/s/yS8UVv-ToFed.html">https://www.123pan.com/s/yS8UVv-ToFed.html</a> 提取码:6666</p><p>AdobePrelude：<a href="https://www.123pan.com/s/yS8UVv-voFed.html">https://www.123pan.com/s/yS8UVv-voFed.html</a> 提取码:6666</p><p>CharacterAnimator：<a href="https://www.123pan.com/s/yS8UVv-doFed.html">https://www.123pan.com/s/yS8UVv-doFed.html</a> 提取码:6666</p><p>ExperienceDesign：<a href="https://www.123pan.com/s/yS8UVv-3oFed.html">https://www.123pan.com/s/yS8UVv-3oFed.html</a> 提取码:6666</p><p>LightroomClassic：<a href="https://www.123pan.com/s/yS8UVv-hoFed.html">https://www.123pan.com/s/yS8UVv-hoFed.html</a> 提取码:6666</p><p>PhotoshopElements：<a href="https://www.123pan.com/s/yS8UVv-HoFed.html">https://www.123pan.com/s/yS8UVv-HoFed.html</a> 提取码:6666</p><p>PremiereElements：<a href="https://www.123pan.com/s/yS8UVv-AoFed.html">https://www.123pan.com/s/yS8UVv-AoFed.html</a> 提取码:6666</p><p>PremiereRush：<a href="https://www.123pan.com/s/yS8UVv-9oFed.html">https://www.123pan.com/s/yS8UVv-9oFed.html</a> 提取码:6666</p><p>Substance3DDesignater：<a href="https://www.123pan.com/s/yS8UVv-QoFed.html">https://www.123pan.com/s/yS8UVv-QoFed.html</a> 提取码:6666</p><p>VMWare虚拟机：<a href="https://www.123pan.com/s/yS8UVv-OkFed.html">https://www.123pan.com/s/yS8UVv-OkFed.html</a> 提取码:6666</p><p>包含：16，17部分版本</p><p>VisualStudioCode(官网链接)：<a href="https://www.123pan.com/s/yS8UVv-EoFed.html">https://www.123pan.com/s/yS8UVv-EoFed.html</a> 提取码:6666</p><p>VisualStudio：<a href="https://www.123pan.com/s/yS8UVv-koFed.html">https://www.123pan.com/s/yS8UVv-koFed.html</a> 提取码:6666</p><p>包含：一些社区版，专业版，企业版</p><p>JetBrains家族：<a href="https://www.123pan.com/s/yS8UVv-ooFed.html">https://www.123pan.com/s/yS8UVv-ooFed.html</a> 提取码:6666</p><p>包含：IntelliJIDEA，JetBrainsWebStorm，PyCharm</p><p>IntelliJIDEA：<a href="https://www.123pan.com/s/yS8UVv-moFed.html">https://www.123pan.com/s/yS8UVv-moFed.html</a> 提取码:6666</p><p>JetBrainsWebStorm：<a href="https://www.123pan.com/s/yS8UVv-1oFed.html">https://www.123pan.com/s/yS8UVv-1oFed.html</a> 提取码:6666</p><p>PyCharm：<a href="https://www.123pan.com/s/yS8UVv-4oFed.html">https://www.123pan.com/s/yS8UVv-4oFed.html</a> 提取码:6666</p><p>Android：<a href="https://www.123pan.com/s/yS8UVv-xoFed.html">https://www.123pan.com/s/yS8UVv-xoFed.html</a> 提取码:6666</p><p>JAVA8，11部分JDK：<a href="https://www.123pan.com/s/yS8UVv-poFed.html">https://www.123pan.com/s/yS8UVv-poFed.html</a> 提取码:6666</p><p>JetBrains全家桶2022-2023年版：<a href="https://www.123pan.com/s/yS8UVv-F6Fed.html">https://www.123pan.com/s/yS8UVv-F6Fed.html</a> 提取码：6666</p><p>JetBrains全家桶2022.2版：<a href="https://www.123pan.com/s/yS8UVv-g6Fed.html">https://www.123pan.com/s/yS8UVv-g6Fed.html</a> 提取码：6666</p><p>电脑常用工具：<a href="https://www.123pan.com/s/yS8UVv-DkFed.html">https://www.123pan.com/s/yS8UVv-DkFed.html</a> 提取码:6666</p><p>包含：Bandizip，录屏工具，分区工具，硬盘清理工具，数据恢复，7-zip</p><p>bandizip：<a href="https://www.123pan.com/s/yS8UVv-foFed.html">https://www.123pan.com/s/yS8UVv-foFed.html</a> 提取码:6666</p><p>录屏工具：<a href="https://www.123pan.com/s/yS8UVv-aoFed.html">https://www.123pan.com/s/yS8UVv-aoFed.html</a> 提取码:6666</p><p>分区工具：<a href="https://www.123pan.com/s/yS8UVv-BoFed.html">https://www.123pan.com/s/yS8UVv-BoFed.html</a> 提取码:6666</p><p>硬盘清理工具：<a href="https://www.123pan.com/s/yS8UVv-JoFed.html">https://www.123pan.com/s/yS8UVv-JoFed.html</a> 提取码:6666</p><p>数据恢复：<a href="https://www.123pan.com/s/yS8UVv-IoFed.html">https://www.123pan.com/s/yS8UVv-IoFed.html</a> 提取码:6666</p><p>7-Zip：<a href="https://www.123pan.com/s/yS8UVv-MoFed.html">https://www.123pan.com/s/yS8UVv-MoFed.html</a> 提取码:6666</p><p>达芬奇：<a href="https://www.123pan.com/s/yS8UVv-WkFed.html">https://www.123pan.com/s/yS8UVv-WkFed.html</a> 提取码:6666</p><p>包含：14，15，16，1，18部分版本</p><p>建模类：<a href="https://www.123pan.com/s/yS8UVv-CkFed.html">https://www.123pan.com/s/yS8UVv-CkFed.html</a> 提取码:6666</p><p>包含：3dsMax，Maya，C4D，Blender，ZBrush…….</p><p>3DsMax：<a href="https://www.123pan.com/s/yS8UVv-woFed.html">https://www.123pan.com/s/yS8UVv-woFed.html</a> 提取码:6666</p><p>Maya：<a href="https://www.123pan.com/s/yS8UVv-goFed.html">https://www.123pan.com/s/yS8UVv-goFed.html</a> 提取码:6666</p><p>C4D：<a href="https://www.123pan.com/s/yS8UVv-FoFed.html">https://www.123pan.com/s/yS8UVv-FoFed.html</a> 提取码:6666</p><p>Blender自用：<a href="https://www.123pan.com/s/yS8UVv-YoFed.html">https://www.123pan.com/s/yS8UVv-YoFed.html</a> 提取码:6666</p><p>ZBrush：<a href="https://www.123pan.com/s/yS8UVv-GoFed.html">https://www.123pan.com/s/yS8UVv-GoFed.html</a> 提取码:6666</p><p>SketchUp草图大师：<a href="https://www.123pan.com/s/yS8UVv-PoFed.html">https://www.123pan.com/s/yS8UVv-PoFed.html</a> 提取码:6666</p><p>VrayforSketchUp：<a href="https://www.123pan.com/s/yS8UVv-XoFed.html">https://www.123pan.com/s/yS8UVv-XoFed.html</a> 提取码:6666</p><p>VrayforRhino：<a href="https://www.123pan.com/s/yS8UVv-noFed.html">https://www.123pan.com/s/yS8UVv-noFed.html</a> 提取码:6666</p><p>MarvelousDesigne：<a href="https://www.123pan.com/s/yS8UVv-2oFed.html">https://www.123pan.com/s/yS8UVv-2oFed.html</a> 提取码:6666</p><p>Lumion：<a href="https://www.123pan.com/s/yS8UVv-soFed.html">https://www.123pan.com/s/yS8UVv-soFed.html</a> 提取码:6666</p><p>Keyshot：<a href="https://www.123pan.com/s/yS8UVv-WoFed.html">https://www.123pan.com/s/yS8UVv-WoFed.html</a> 提取码:6666</p><p>Enscape：<a href="https://www.123pan.com/s/yS8UVv-CoFed.html">https://www.123pan.com/s/yS8UVv-CoFed.html</a> 提取码:6666</p><p>CorelCAD：<a href="https://www.123pan.com/s/yS8UVv-NoFed.html">https://www.123pan.com/s/yS8UVv-NoFed.html</a> 提取码:6666</p><p>Artlantis：<a href="https://www.123pan.com/s/yS8UVv-OoFed.html">https://www.123pan.com/s/yS8UVv-OoFed.html</a> 提取码:6666</p><p>CAD：<a href="https://www.123pan.com/s/yS8UVv-2kFed.html">https://www.123pan.com/s/yS8UVv-2kFed.html</a> 提取码:6666</p><p>包含：CAD，中望CAD，浩辰CAD等等多个版本</p><p>CAD：<a href="https://www.123pan.com/s/yS8UVv-RoFed.html">https://www.123pan.com/s/yS8UVv-RoFed.html</a> 提取码:6666</p><p>CAD精简版：<a href="https://www.123pan.com/s/yS8UVv-DoFed.html">https://www.123pan.com/s/yS8UVv-DoFed.html</a> 提取码:6666</p><p>CAD建筑版：<a href="https://www.123pan.com/s/yS8UVv-roFed.html">https://www.123pan.com/s/yS8UVv-roFed.html</a> 提取码:6666</p><p>CAD电气版：<a href="https://www.123pan.com/s/yS8UVv-8oFed.html">https://www.123pan.com/s/yS8UVv-8oFed.html</a> 提取码:6666</p><p>CAD机械版：<a href="https://www.123pan.com/s/yS8UVv-0oFed.html">https://www.123pan.com/s/yS8UVv-0oFed.html</a> 提取码:6666</p><p>中望CAD：<a href="https://www.123pan.com/s/yS8UVv-KoFed.html">https://www.123pan.com/s/yS8UVv-KoFed.html</a> 提取码:6666</p><p>中望CAD建筑版：<a href="https://www.123pan.com/s/yS8UVv-uoFed.html">https://www.123pan.com/s/yS8UVv-uoFed.html</a> 提取码:6666</p><p>中望CAD机械版：<a href="https://www.123pan.com/s/yS8UVv-UoFed.html">https://www.123pan.com/s/yS8UVv-UoFed.html</a> 提取码:6666</p><p>浩辰CAD：<a href="https://www.123pan.com/s/yS8UVv-ZoFed.html">https://www.123pan.com/s/yS8UVv-ZoFed.html</a> 提取码:6666</p><p>浩辰CAD电气版：<a href="https://www.123pan.com/s/yS8UVv-coFed.html">https://www.123pan.com/s/yS8UVv-coFed.html</a> 提取码:6666</p><p>浩辰CAD电力版：<a href="https://www.123pan.com/s/yS8UVv-eoFed.html">https://www.123pan.com/s/yS8UVv-eoFed.html</a> 提取码:6666</p><p>浩辰CAD建筑版：<a href="https://www.123pan.com/s/yS8UVv-toFed.html">https://www.123pan.com/s/yS8UVv-toFed.html</a> 提取码:6666</p><p>CAD迷你画图：<a href="https://www.123pan.com/s/yS8UVv-SoFed.html">https://www.123pan.com/s/yS8UVv-SoFed.html</a> 提取码:6666</p><p>CAXA3D实体设计：<a href="https://www.123pan.com/s/yS8UVv-loFed.html">https://www.123pan.com/s/yS8UVv-loFed.html</a> 提取码:6666</p><p>CAXA电子图板：<a href="https://www.123pan.com/s/yS8UVv-7oFed.html">https://www.123pan.com/s/yS8UVv-7oFed.html</a> 提取码:6666</p><p>CAXA工艺图表：<a href="https://www.123pan.com/s/yS8UVv-boFed.html">https://www.123pan.com/s/yS8UVv-boFed.html</a> 提取码:6666</p><p>T20天正电气：<a href="https://www.123pan.com/s/yS8UVv-ioFed.html">https://www.123pan.com/s/yS8UVv-ioFed.html</a> 提取码:6666</p><p>T20天正结构：<a href="https://www.123pan.com/s/yS8UVv-zoFed.html">https://www.123pan.com/s/yS8UVv-zoFed.html</a> 提取码:6666</p><p>T20天正暖通：<a href="https://www.123pan.com/s/yS8UVv-LoFed.html">https://www.123pan.com/s/yS8UVv-LoFed.html</a> 提取码:6666</p><p>T20天正建筑：<a href="https://www.123pan.com/s/yS8UVv-5oFed.html">https://www.123pan.com/s/yS8UVv-5oFed.html</a> 提取码:6666</p><p>T20天正给排水：<a href="https://www.123pan.com/s/yS8UVv-qoFed.html">https://www.123pan.com/s/yS8UVv-qoFed.html</a> 提取码:6666</p><p>下载工具：<a href="https://www.123pan.com/s/yS8UVv-nkFed.html">https://www.123pan.com/s/yS8UVv-nkFed.html</a> 提取码:6666</p><p>包含：IDM，比特彗星和一些视频下载工具</p><p>办公软件：<a href="https://www.123pan.com/s/yS8UVv-8kFed.html">https://www.123pan.com/s/yS8UVv-8kFed.html</a> 提取码:6666</p><p>包含：Office，Wps，PDF阅读、编辑器，Visio，Project，EndNote，LaTex</p><p>Office：<a href="https://www.123pan.com/s/yS8UVv-6oFed.html">https://www.123pan.com/s/yS8UVv-6oFed.html</a> 提取码:6666</p><p>Wps：<a href="https://www.123pan.com/s/yS8UVv-yoFed.html">https://www.123pan.com/s/yS8UVv-yoFed.html</a> 提取码:6666</p><p>Visio：<a href="https://www.123pan.com/s/yS8UVv-VoFed.html">https://www.123pan.com/s/yS8UVv-VoFed.html</a> 提取码:6666</p><p>Project：<a href="https://www.123pan.com/s/yS8UVv-joFed.html">https://www.123pan.com/s/yS8UVv-joFed.html</a> 提取码:6666</p><p>EndNote：<a href="https://www.123pan.com/s/yS8UVv-TmFed.html">https://www.123pan.com/s/yS8UVv-TmFed.html</a> 提取码:6666</p><p>LaTex：<a href="https://www.123pan.com/s/yS8UVv-vmFed.html">https://www.123pan.com/s/yS8UVv-vmFed.html</a> 提取码:6666</p><p>Foxit福昕PDF编辑器：<a href="https://www.123pan.com/s/yS8UVv-dmFed.html">https://www.123pan.com/s/yS8UVv-dmFed.html</a> 提取码:6666</p><p>Foxit福昕PDF阅读器：<a href="https://www.123pan.com/s/yS8UVv-3mFed.html">https://www.123pan.com/s/yS8UVv-3mFed.html</a> 提取码:6666</p><p>PDFelement万兴PDF专家：<a href="https://www.123pan.com/s/yS8UVv-HmFed.html">https://www.123pan.com/s/yS8UVv-HmFed.html</a> 提取码:6666</p><p>PDFXChangeEditor：<a href="https://www.123pan.com/s/yS8UVv-hmFed.html">https://www.123pan.com/s/yS8UVv-hmFed.html</a> 提取码:6666</p><p>媒体工具：<a href="https://www.123pan.com/s/yS8UVv-0kFed.html">https://www.123pan.com/s/yS8UVv-0kFed.html</a> 提取码:6666</p><p>包含：nuendo，Cubase</p><p>nuendo：<a href="https://www.123pan.com/s/yS8UVv-9mFed.html">https://www.123pan.com/s/yS8UVv-9mFed.html</a> 提取码:6666</p><p>Cubase：<a href="https://www.123pan.com/s/yS8UVv-AmFed.html">https://www.123pan.com/s/yS8UVv-AmFed.html</a> 提取码:6666</p><p>图像处理：<a href="https://www.123pan.com/s/yS8UVv-KkFed.html">https://www.123pan.com/s/yS8UVv-KkFed.html</a> 提取码:6666</p><p>包含：ACDSee，AffinityPhoto，CaptureOne，CorelPainter，亿图图示，SketchBook，EasyPaintToolSAI</p><p>ACDSee：<a href="https://www.123pan.com/s/yS8UVv-QmFed.html">https://www.123pan.com/s/yS8UVv-QmFed.html</a> 提取码:6666</p><p>AffinityPhoto：<a href="https://www.123pan.com/s/yS8UVv-EmFed.html">https://www.123pan.com/s/yS8UVv-EmFed.html</a> 提取码:6666</p><p>CaptureOne：<a href="https://www.123pan.com/s/yS8UVv-kmFed.html">https://www.123pan.com/s/yS8UVv-kmFed.html</a> 提取码:6666</p><p>CorelPainter：<a href="https://www.123pan.com/s/yS8UVv-omFed.html">https://www.123pan.com/s/yS8UVv-omFed.html</a> 提取码:6666</p><p>亿图图示：<a href="https://www.123pan.com/s/yS8UVv-1mFed.html">https://www.123pan.com/s/yS8UVv-1mFed.html</a> 提取码:6666</p><p>SketchBook：<a href="https://www.123pan.com/s/yS8UVv-4mFed.html">https://www.123pan.com/s/yS8UVv-4mFed.html</a> 提取码:6666</p><p>EasyPaintToolSAI：<a href="https://www.123pan.com/s/yS8UVv-mmFed.html">https://www.123pan.com/s/yS8UVv-mmFed.html</a> 提取码:6666</p><p>仿真模拟：<a href="https://www.123pan.com/s/yS8UVv-ukFed.html">https://www.123pan.com/s/yS8UVv-ukFed.html</a> 提取码:6666</p><p>包含：COMSOLMultiphysics，ANSYSElectronicsSuite，ANSYSProducts，AltairHyperWorks，AnsysMaxwell，MSCAdams，Abaqus，VeroVisi，Tecplot360EX，AutodeskMoldflow，MidasCivil，Dynaform</p><p>COMSOLMultiphysics：<a href="https://www.123pan.com/s/yS8UVv-ImFed.html">https://www.123pan.com/s/yS8UVv-ImFed.html</a> 提取码:6666</p><p>ANSYSElectronicsSuite：<a href="https://www.123pan.com/s/yS8UVv-JmFed.html">https://www.123pan.com/s/yS8UVv-JmFed.html</a> 提取码:6666</p><p>ANSYSProducts：<a href="https://www.123pan.com/s/yS8UVv-BmFed.html">https://www.123pan.com/s/yS8UVv-BmFed.html</a> 提取码:6666</p><p>AltairHyperWorks：<a href="https://www.123pan.com/s/yS8UVv-amFed.html">https://www.123pan.com/s/yS8UVv-amFed.html</a> 提取码:6666</p><p>AnsysMaxwell：<a href="https://www.123pan.com/s/yS8UVv-fmFed.html">https://www.123pan.com/s/yS8UVv-fmFed.html</a> 提取码:6666</p><p>MSCAdams：<a href="https://www.123pan.com/s/yS8UVv-pmFed.html">https://www.123pan.com/s/yS8UVv-pmFed.html</a> 提取码:6666</p><p>Abaqus：<a href="https://www.123pan.com/s/yS8UVv-xmFed.html">https://www.123pan.com/s/yS8UVv-xmFed.html</a> 提取码:6666</p><p>VeroVisi：<a href="https://www.123pan.com/s/yS8UVv-GmFed.html">https://www.123pan.com/s/yS8UVv-GmFed.html</a> 提取码:6666</p><p>Tecplot360EX：<a href="https://www.123pan.com/s/yS8UVv-FmFed.html">https://www.123pan.com/s/yS8UVv-FmFed.html</a> 提取码:6666</p><p>AutodeskMoldflow：<a href="https://www.123pan.com/s/yS8UVv-gmFed.html">https://www.123pan.com/s/yS8UVv-gmFed.html</a> 提取码:6666</p><p>MidasCivil：<a href="https://www.123pan.com/s/yS8UVv-wmFed.html">https://www.123pan.com/s/yS8UVv-wmFed.html</a> 提取码:6666</p><p>Dynaform：<a href="https://www.123pan.com/s/yS8UVv-MmFed.html">https://www.123pan.com/s/yS8UVv-MmFed.html</a> 提取码:6666</p><p>数据分析：<a href="https://www.123pan.com/s/yS8UVv-UkFed.html">https://www.123pan.com/s/yS8UVv-UkFed.html</a> 提取码:6666</p><p>包含：Matlab，MySQL，SQLServer，TableauDesktop，Stata，IBMSPSSStatistics，Origin，Minitab，Mathematica，Maple，Amos</p><p>Matlab：<a href="https://www.123pan.com/s/yS8UVv-nmFed.html">https://www.123pan.com/s/yS8UVv-nmFed.html</a> 提取码:6666</p><p>MySQL：<a href="https://www.123pan.com/s/yS8UVv-2mFed.html">https://www.123pan.com/s/yS8UVv-2mFed.html</a> 提取码:6666</p><p>SQLServer：<a href="https://www.123pan.com/s/yS8UVv-smFed.html">https://www.123pan.com/s/yS8UVv-smFed.html</a> 提取码:6666</p><p>TableauDesktop：<a href="https://www.123pan.com/s/yS8UVv-WmFed.html">https://www.123pan.com/s/yS8UVv-WmFed.html</a> 提取码:6666</p><p>Stata：<a href="https://www.123pan.com/s/yS8UVv-CmFed.html">https://www.123pan.com/s/yS8UVv-CmFed.html</a> 提取码:6666</p><p>IBMSPSSStatistics：<a href="https://www.123pan.com/s/yS8UVv-NmFed.html">https://www.123pan.com/s/yS8UVv-NmFed.html</a> 提取码:6666</p><p>Origin：<a href="https://www.123pan.com/s/yS8UVv-OmFed.html">https://www.123pan.com/s/yS8UVv-OmFed.html</a> 提取码:6666</p><p>Minitab：<a href="https://www.123pan.com/s/yS8UVv-RmFed.html">https://www.123pan.com/s/yS8UVv-RmFed.html</a> 提取码:6666</p><p>Mathematica：<a href="https://www.123pan.com/s/yS8UVv-DmFed.html">https://www.123pan.com/s/yS8UVv-DmFed.html</a> 提取码:6666</p><p>Maple：<a href="https://www.123pan.com/s/yS8UVv-rmFed.html">https://www.123pan.com/s/yS8UVv-rmFed.html</a> 提取码:6666</p><p>Amos：<a href="https://www.123pan.com/s/yS8UVv-8mFed.html">https://www.123pan.com/s/yS8UVv-8mFed.html</a> 提取码:6666</p><p>机械设计：<a href="https://www.123pan.com/s/yS8UVv-SkFed.html">https://www.123pan.com/s/yS8UVv-SkFed.html</a> 提取码:6666</p><p>包含：Rhinoceros犀牛，UnigraphicsNX(UGNX)，SolidWorks，PowerMill，Proe，Mastercam，Inventor，Creo，CATIAComposer，CATIA</p><p>Rhinoceros犀牛：<a href="https://www.123pan.com/s/yS8UVv-0mFed.html">https://www.123pan.com/s/yS8UVv-0mFed.html</a> 提取码:6666</p><p>UnigraphicsNX(UGNX)：<a href="https://www.123pan.com/s/yS8UVv-KmFed.html">https://www.123pan.com/s/yS8UVv-KmFed.html</a> 提取码:6666</p><p>SolidWorks：<a href="https://www.123pan.com/s/yS8UVv-umFed.html">https://www.123pan.com/s/yS8UVv-umFed.html</a> 提取码:6666</p><p>PowerMill：<a href="https://www.123pan.com/s/yS8UVv-UmFed.html">https://www.123pan.com/s/yS8UVv-UmFed.html</a> 提取码:6666</p><p>Proe：<a href="https://www.123pan.com/s/yS8UVv-SmFed.html">https://www.123pan.com/s/yS8UVv-SmFed.html</a> 提取码:6666</p><p>Mastercam：<a href="https://www.123pan.com/s/yS8UVv-lmFed.html">https://www.123pan.com/s/yS8UVv-lmFed.html</a> 提取码:6666</p><p>Inventor：<a href="https://www.123pan.com/s/yS8UVv-7mFed.html">https://www.123pan.com/s/yS8UVv-7mFed.html</a> 提取码:6666</p><p>Creo：<a href="https://www.123pan.com/s/yS8UVv-bmFed.html">https://www.123pan.com/s/yS8UVv-bmFed.html</a> 提取码:6666</p><p>CATIAComposer：<a href="https://www.123pan.com/s/yS8UVv-ZmFed.html">https://www.123pan.com/s/yS8UVv-ZmFed.html</a> 提取码:6666</p><p>CATIA：<a href="https://www.123pan.com/s/yS8UVv-cmFed.html">https://www.123pan.com/s/yS8UVv-cmFed.html</a> 提取码:6666</p><p>建筑设计：<a href="https://www.123pan.com/s/yS8UVv-lkFed.html">https://www.123pan.com/s/yS8UVv-lkFed.html</a> 提取码:6666</p><p>包含：AutodeskRevit，AutoCADCivil3D，NavisworksManage，TeklaStructures，Vectorworks</p><p>AutodeskRevit：<a href="https://www.123pan.com/s/yS8UVv-imFed.html">https://www.123pan.com/s/yS8UVv-imFed.html</a> 提取码:6666</p><p>AutoCADCivil3D：<a href="https://www.123pan.com/s/yS8UVv-emFed.html">https://www.123pan.com/s/yS8UVv-emFed.html</a> 提取码:6666</p><p>NavisworksManage：<a href="https://www.123pan.com/s/yS8UVv-tmFed.html">https://www.123pan.com/s/yS8UVv-tmFed.html</a> 提取码:6666</p><p>TeklaStructures：<a href="https://www.123pan.com/s/yS8UVv-zmFed.html">https://www.123pan.com/s/yS8UVv-zmFed.html</a> 提取码:6666</p><p>Vectorworks：<a href="https://www.123pan.com/s/yS8UVv-LmFed.html">https://www.123pan.com/s/yS8UVv-LmFed.html</a> 提取码:6666</p><p>电子电路：<a href="https://www.123pan.com/s/yS8UVv-7kFed.html">https://www.123pan.com/s/yS8UVv-7kFed.html</a> 提取码:6666</p><p>包含：Proteus，Multisim，AltiumDesigner</p><p>Proteus：<a href="https://www.123pan.com/s/yS8UVv-6mFed.html">https://www.123pan.com/s/yS8UVv-6mFed.html</a> 提取码:6666</p><p>Multisim：<a href="https://www.123pan.com/s/yS8UVv-qmFed.html">https://www.123pan.com/s/yS8UVv-qmFed.html</a> 提取码:6666</p><p>AltiumDesigner：<a href="https://www.123pan.com/s/yS8UVv-5mFed.html">https://www.123pan.com/s/yS8UVv-5mFed.html</a> 提取码:6666</p><p>MSDN：<a href="https://www.123pan.com/s/yS8UVv-ymFed.html">https://www.123pan.com/s/yS8UVv-ymFed.html</a> 提取码:6666</p><hr><p>Mac总索引：<a href="https://www.123pan.com/s/yS8UVv-bqged.html%E3%80%90">https://www.123pan.com/s/yS8UVv-bqged.html【</a> 提取码:6666】</p><p>ISO文件：<a href="https://www.123pan.com/s/yS8UVv-66Fed.html%E3%80%90">https://www.123pan.com/s/yS8UVv-66Fed.html【</a> 提取码:6666】</p><p>VMvare：<a href="https://www.123pan.com/s/yS8UVv-OkFed.html%E3%80%90">https://www.123pan.com/s/yS8UVv-OkFed.html【</a> 提取码:6666】</p><p>unlocker：<a href="https://www.123pan.com/s/yS8UVv-y6Fed.html%E3%80%90">https://www.123pan.com/s/yS8UVv-y6Fed.html【</a> 提取码:6666】</p><hr><p>MSDN新网站：next.itellyou.cn</p><p>提示：</p><p>Windows变正版工具KMS：<a href="https://wwi.lanzout.com/igcDdyru6if">https://wwi.lanzout.com/igcDdyru6if</a></p><p>我的蓝筹云KMS：<a href="https://wwcv.lanzouw.com/iyJBM0y2vtwj%E5%AF%86%E7%A0%81:crce">https://wwcv.lanzouw.com/iyJBM0y2vtwj密码:crce</a></p><p>其他正版工具参考：rjctx.com</p><p>必须注意：下载的系统文件必须校验，校验工具和Hash校验值，每个文件夹下都有</p><p>不校验，寄了又得重装系统。。。</p><p>【Windows系统】：</p><p>Win11：<a href="https://www.123pan.com/s/yS8UVv-sqged.html">https://www.123pan.com/s/yS8UVv-sqged.html</a> 提取码:6666</p><p>Win10：<a href="https://www.123pan.com/s/yS8UVv-Wqged.html">https://www.123pan.com/s/yS8UVv-Wqged.html</a> 提取码:6666</p><p>Win8.1：<a href="https://www.123pan.com/s/yS8UVv-Nqged.html">https://www.123pan.com/s/yS8UVv-Nqged.html</a> 提取码:6666</p><p>Win8：<a href="https://www.123pan.com/s/yS8UVv-Oqged.html">https://www.123pan.com/s/yS8UVv-Oqged.html</a> 提取码:6666</p><p>WinVista：<a href="https://www.123pan.com/s/yS8UVv-Dqged.html">https://www.123pan.com/s/yS8UVv-Dqged.html</a> 提取码:6666</p><p>Win7：<a href="https://www.123pan.com/s/yS8UVv-Cqged.html">https://www.123pan.com/s/yS8UVv-Cqged.html</a> 提取码:6666</p><p>WinXP：<a href="https://www.123pan.com/s/yS8UVv-Rqged.html">https://www.123pan.com/s/yS8UVv-Rqged.html</a> 提取码:6666</p><p>【Windows服务器】</p><p>WindowsServer2022：<a href="https://www.123pan.com/s/yS8UVv-rqged.html">https://www.123pan.com/s/yS8UVv-rqged.html</a> 提取码:6666</p><p>WindowsServer2019：<a href="https://www.123pan.com/s/yS8UVv-8qged.html">https://www.123pan.com/s/yS8UVv-8qged.html</a> 提取码:6666</p><p>WindowsServer2016：<a href="https://www.123pan.com/s/yS8UVv-0qged.html">https://www.123pan.com/s/yS8UVv-0qged.html</a> 提取码:6666</p><hr><p>Windows汇总：<a href="https://www.123pan.com/s/yS8UVv-cqged.html">https://www.123pan.com/s/yS8UVv-cqged.html</a> 提取码:6666</p><p>【Linux系统】：</p><p>CentOS：<a href="https://www.123pan.com/s/yS8UVv-lqged.html">https://www.123pan.com/s/yS8UVv-lqged.html</a> 提取码:6666</p><p>Ubuntu：<a href="https://www.123pan.com/s/yS8UVv-Sqged.html">https://www.123pan.com/s/yS8UVv-Sqged.html</a> 提取码:6666</p><p>Fedora：<a href="https://www.123pan.com/s/yS8UVv-7qged.html">https://www.123pan.com/s/yS8UVv-7qged.html</a> 提取码:6666</p><p>UOS：<a href="https://www.123pan.com/s/yS8UVv-Uqged.html">https://www.123pan.com/s/yS8UVv-Uqged.html</a> 提取码:6666</p><p>Deepin：<a href="https://www.123pan.com/s/yS8UVv-uqged.html">https://www.123pan.com/s/yS8UVv-uqged.html</a> 提取码:6666</p><hr><p>Linux汇总：<a href="https://www.123pan.com/s/yS8UVv-Zqged.html">https://www.123pan.com/s/yS8UVv-Zqged.html</a> 提取码:6666</p><p>【MacOS系统】：</p><p>MacOS汇总：<a href="https://www.123pan.com/s/yS8UVv-bqged.html">https://www.123pan.com/s/yS8UVv-bqged.html</a> 提取码:6666</p><p>【ChromiumOS系统】：</p><p>ChromiumOS汇总：<a href="https://www.123pan.com/s/yS8UVv-eqged.html">https://www.123pan.com/s/yS8UVv-eqged.html</a> 提取码:6666</p><p>【BSD系统】：</p><p>FreeBSD：<a href="https://www.123pan.com/s/yS8UVv-iqged.html">https://www.123pan.com/s/yS8UVv-iqged.html</a> 提取码:6666</p><p>NetBSD：<a href="https://www.123pan.com/s/yS8UVv-zqged.html">https://www.123pan.com/s/yS8UVv-zqged.html</a> 提取码:6666</p><p>OpenBSD：<a href="https://www.123pan.com/s/yS8UVv-Lqged.html">https://www.123pan.com/s/yS8UVv-Lqged.html</a> 提取码:6666</p><p>DragonFlyBSD：<a href="https://www.123pan.com/s/yS8UVv-5qged.html">https://www.123pan.com/s/yS8UVv-5qged.html</a> 提取码:6666</p><hr><p>BSD汇总：<a href="https://www.123pan.com/s/yS8UVv-tqged.html">https://www.123pan.com/s/yS8UVv-tqged.html</a> 提取码:6666</p><p>【【【PS：123网盘分享，全是文件夹，点进去自己选择下载版本】】】</p><p>软件主要来源：</p><p>考拉：rjctx.com，脚本之家：<a href="https://www.jb51.net，系统搬运自MSDN：https://msdn.itellyou.cn/，next.itellyou.cn">https://www.jb51.net，系统搬运自MSDN：https://msdn.itellyou.cn/，next.itellyou.cn</a></p>]]></content>
      
      
      <categories>
          
          <category> 资源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 资源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码块设置</title>
      <link href="/posts/23bb.html"/>
      <url>/posts/23bb.html</url>
      
        <content type="html"><![CDATA[<h1 id="代码块设置"><a href="#代码块设置" class="headerlink" title="代码块设置"></a>代码块设置</h1><p>以下是对代码块的有些设置</p><h2 id="添加折叠功能"><a href="#添加折叠功能" class="headerlink" title="添加折叠功能#"></a>添加折叠功能<a href="https://www.cnblogs.com/chendeqiang/p/12861726.html#540873996">#</a></h2><p><a href="https://www.cnblogs.com/chendeqiang/p/12861726.html">博客-hexo-matery主题改造笔记 - 多弗朗强哥 - 博客园 (cnblogs.com)</a></p><p>安装插件</p><pre class="line-numbers language-css" data-language="css"><code class="language-css">npm install hexo-sliding-spoiler --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>用法：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token punctuation">&#123;</span>% spoiler code %<span class="token punctuation">&#125;</span><span class="token selector">content</span><span class="token punctuation">&#123;</span>% endspoiler %<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><a href="https://blog.csdn.net/weixin_34015566/article/details/89939438">https://blog.csdn.net/weixin_34015566/article/details/89939438</a></p><h2 id="解决代码块复制不能换行"><a href="#解决代码块复制不能换行" class="headerlink" title="解决代码块复制不能换行"></a>解决代码块复制不能换行</h2><p>发现在代码块中复制的内容粘贴后总是挤成一团，而原来的代码格式失效，又试了几次后发现都是如此，然后上网查了一下，发现使用Matery主题的博客上复制内容都存在这个问题。幸运的是已经有大佬发现问题所在，并给出解决方案。</p><p>问题在于开启复制版权copyright，添加复制版权信息后，就会导致代码块复制内容换行失效。</p><p>大佬判断出问题出在添加复制版权信息的文件<code>themes\matery\layout\_partial\post-detail.ejs</code>中，具体问题在判断复制内容换行的判断语句</p><pre class="line-numbers language-ejs" data-language="ejs"><code class="language-ejs">// otherwise the text inside "pre" loses all the line breaks!if (selection.getRangeAt(0).commonAncestorContainer.nodeName === 'PRE') &#123;    newdiv.innerHTML = "<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">></span></span>" + newdiv.innerHTML + "<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">></span></span>";&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>使用<code>console.log()</code>查出在复制内容时<code>selection.getRangeAt(0).commonAncestorContainer.nodeName</code>并不是<code>PRE</code>，而是<code>CODE</code></p><p>所以是由于<code>if</code>判断的条件错误才导致复制内容不会换行，解决办法就是将其判断条件值改为<code>CODE</code>（大概在220行左右）。</p><p>修改完后重新部署博客，发现可以正常粘贴复制的内容了。</p><p>这里是<a href="https://blog.csdn.net/weixin_43571641/article/details/116034591">大佬的原文</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 代码块 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker入门</title>
      <link href="/posts/2bc5.html"/>
      <url>/posts/2bc5.html</url>
      
        <content type="html"><![CDATA[<h1 id="Docker入门"><a href="#Docker入门" class="headerlink" title="Docker入门"></a>Docker入门</h1><p><a href="https://www.runoob.com/docker/docker-tutorial.html">Docker 教程 | 菜鸟教程 (runoob.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WireShark基础使用</title>
      <link href="/posts/35b9.html"/>
      <url>/posts/35b9.html</url>
      
        <content type="html"><![CDATA[<h1 id="WireShark基础使用"><a href="#WireShark基础使用" class="headerlink" title="WireShark基础使用"></a>WireShark基础使用</h1><p><a href="https://xie.infoq.cn/article/c065340cbae0680afc7b984ee">【精选教程】四大网络抓包神器，总有一款适合你_雪奈椰子_InfoQ写作社区</a></p><p><a href="https://blog.csdn.net/zzwwhhpp/article/details/113077747">网络分析工具——WireShark的使用（超详细）-CSDN博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 抓包 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WireShark </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编语言</title>
      <link href="/posts/ec85.html"/>
      <url>/posts/ec85.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 汇编 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 汇编 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我曾七次鄙视自己的灵魂</title>
      <link href="/posts/essay-demo.html"/>
      <url>/posts/essay-demo.html</url>
      
        <content type="html"><![CDATA[<h3 id="我曾七次鄙视自己的灵魂"><a href="#我曾七次鄙视自己的灵魂" class="headerlink" title="我曾七次鄙视自己的灵魂"></a>我曾七次鄙视自己的灵魂</h3><div class="ipage">   <div class="ititle">节选自《Seven times have I despised my soul》- Kahlil Gibran</div>   <div class="izhengwen">     <p>    我曾七次鄙视自己的灵魂 - 纪伯伦<br>    The first time when I saw her being meek that she might attain height.<br>    第一次, 当它本可进取时, 却故作谦卑<br>    The second time when I saw her limping before the crippled.<br>    第二次, 当它空虚时, 用爱欲来填充<br>    The third time when she was given to choose between the hard and the easy, and she chose the easy.<br>    第三次, 在堕落和努力之间, 它选择了堕落<br>    The fourth time when she committed a wrong, and comforted herself that others also commit wrong.<br>    第四次, 它犯了错, 却藉由别人的错来宽慰自己<br>     The fifth time when she forbore for weakness, and attributed her patience to strength.<br>    第五次, 它自由软弱，却把它认为是生命的坚韧<br>    The sixth time when she despised the ugliness of a face and knew not that it was one of her own masks.<br>    第六次, 当它嘲笑他人愚蠢时, 却不知自己更是蠢材<br>    The seventh time when she sang a song of praise and deemed it a virtue.<br>    第七次, 它在泥潭时既彻底摆不了烂也不彻底甘心<br>    </p>   </div> </div>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo基础命令</title>
      <link href="/posts/ec85.html"/>
      <url>/posts/ec85.html</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-基础命令"><a href="#Hexo-基础命令" class="headerlink" title="Hexo 基础命令"></a>Hexo 基础命令</h1><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><pre class="line-numbers language-none"><code class="language-none">hexo new&quot;postName&quot;      新建文章 hexo new page&quot;pageName&quot; 新建页面 hexo generate           生成静态页面至public目录 hexo clean              清除生成内容 hexo server             开启预览访问（默认端口4000，&#39;ctrl + c&#39;关闭server） hexo deploy             将.deploy目录部署到指定空间 hexo help               查看帮助 hexo version            查看hexo的版本hexo server -p 5000 更改端口<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="缩写"><a href="#缩写" class="headerlink" title="缩写"></a>缩写</h2><pre class="line-numbers language-text" data-language="text"><code class="language-text">hexo g： hexo generatehexo cl：hexo cleanhexo s： hexo serverhexo d： hexo deployhexo n "我的博客"      hexo new "我的博客"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="组合"><a href="#组合" class="headerlink" title="组合"></a>组合</h2><pre class="line-numbers language-text" data-language="text"><code class="language-text">hexo s -g    生成并本地预览hexo d -g    生成并上传hexo clean &amp;&amp; hexo g -s 清除、生成、启动hexo clean &amp;&amp; hexo g -d 清除、生成、部署<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vi/vim入门使用</title>
      <link href="/posts/4836.html"/>
      <url>/posts/4836.html</url>
      
        <content type="html"><![CDATA[<h1 id="vim入门使用"><a href="#vim入门使用" class="headerlink" title="vim入门使用"></a>vim入门使用</h1><h2 id="vi-vim"><a href="#vi-vim" class="headerlink" title="vi&#x2F;vim"></a>vi&#x2F;vim</h2><p>所有的 Unix Like 系统都会内建 vi 文书编辑器，其他的文书编辑器则不一定会存在。</p><p>但是目前我们使用比较多的是 vim 编辑器。</p><p>vim 具有程序编辑的能力，可以主动的以字体颜色辨别语法的正确性，方便程序设计。</p><p>相关文章：<a href="https://www.runoob.com/w3cnote/all-vim-cheatsheat.html">史上最全Vim快捷键键位图 — 入门到进阶</a></p><p>Vim 是从 vi 发展出来的一个文本编辑器。代码补全、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。</p><p>简单的来说， vi 是老式的字处理器，不过功能已经很齐全了，但是还是有可以进步的地方。 vim 则可以说是程序开发者的一项很好用的工具。</p><p>连 vim 的官方网站 (<a href="https://www.vim.org/">https://www.vim.org/</a>) 自己也说 vim 是一个程序开发工具而不是文字处理软件。</p><h2 id="vi-vim-的使用"><a href="#vi-vim-的使用" class="headerlink" title="vi&#x2F;vim 的使用"></a>vi&#x2F;vim 的使用</h2><p>基本上 vi&#x2F;vim 共分为三种模式，<strong>命令模式（Command Mode）、输入模式（Insert Mode）和命令行模式（Command-Line Mode）</strong>。</p><h3 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h3><p><strong>用户刚刚启动 vi&#x2F;vim，便进入了命令模式。</strong></p><p>此状态下敲击键盘动作会被 Vim 识别为命令，而非输入字符，比如我们此时按下 <strong>i</strong>，并不会输入一个字符，<strong>i</strong> 被当作了一个命令。</p><p>以下是普通模式常用的几个命令：</p><ul><li><strong>i</strong> – 切换到输入模式，在光标当前位置开始输入文本。</li><li><strong>x</strong> – 删除当前光标所在处的字符。</li><li><strong>:</strong> – 切换到底线命令模式，以在最底一行输入命令。</li><li><strong>a</strong> – 进入插入模式，在光标下一个位置开始输入文本。</li><li><strong>o</strong>：在当前行的下方插入一个新行，并进入插入模式。</li><li><strong>O</strong> – 在当前行的上方插入一个新行，并进入插入模式。</li><li><strong>dd</strong> – 剪切当前行。</li><li><strong>yy</strong> – 复制当前行。</li><li><strong>p</strong>（小写） – 粘贴剪贴板内容到光标下方。</li><li><strong>P</strong>（大写）– 粘贴剪贴板内容到光标上方。</li><li><strong>u</strong> – 撤销上一次操作。</li><li><strong>Ctrl + r</strong> – 重做上一次撤销的操作。</li><li><strong>:w</strong> – 保存文件。</li><li><strong>:q</strong> – 退出 Vim 编辑器。</li><li><strong>:q!</strong> – 强制退出Vim 编辑器，不保存修改。</li></ul><p>若想要编辑文本，只需要启动 Vim，进入了命令模式，按下 <strong>i</strong> 切换到输入模式即可。</p><p>命令模式只有一些最基本的命令，因此仍要依靠<strong>底线命令行模式</strong>输入更多命令。</p><h3 id="输入模式"><a href="#输入模式" class="headerlink" title="输入模式"></a>输入模式</h3><p>在命令模式下按下 <strong>i</strong> 就进入了输入模式，使用 <strong>Esc</strong> 键可以返回到普通模式。</p><p>在输入模式中，可以使用以下按键：</p><ul><li><strong>字符按键以及Shift组合</strong>，输入字符</li><li><strong>ENTER</strong>，回车键，换行</li><li><strong>BACK SPACE</strong>，退格键，删除光标前一个字符</li><li><strong>DEL</strong>，删除键，删除光标后一个字符</li><li><strong>方向键</strong>，在文本中移动光标</li><li><strong>HOME</strong>&#x2F;<strong>END</strong>，移动光标到行首&#x2F;行尾</li><li><strong>Page Up</strong>&#x2F;<strong>Page Down</strong>，上&#x2F;下翻页</li><li><strong>Insert</strong>，切换光标为输入&#x2F;替换模式，光标将变成竖线&#x2F;下划线</li><li><strong>ESC</strong>，退出输入模式，切换到命令模式</li></ul><h3 id="底线命令模式"><a href="#底线命令模式" class="headerlink" title="底线命令模式"></a>底线命令模式</h3><p>在命令模式下按下 **:**（英文冒号）就进入了底线命令模式。</p><p>底线命令模式可以输入单个或多个字符的命令，可用的命令非常多。</p><p>在底线命令模式中，基本的命令有（已经省略了冒号）：</p><ul><li><code>:w</code>：保存文件。</li><li><code>:q</code>：退出 Vim 编辑器。</li><li><code>:wq</code>：保存文件并退出 Vim 编辑器。</li><li><code>:q!</code>：强制退出Vim编辑器，不保存修改。</li></ul><p>按 <strong>ESC</strong> 键可随时退出底线命令模式。</p><p>简单的说，我们可以将这三个模式想成底下的图标来表示：</p><p>学习自<a href="https://www.runoob.com/linux/linux-vim.html">Linux vi&#x2F;vim | 菜鸟教程 (runoob.com)</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>md语法</title>
      <link href="/posts/ec85.html"/>
      <url>/posts/ec85.html</url>
      
        <content type="html"><![CDATA[<h1 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h1><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>在单词或短语前面添加井号 (<code>#</code>) ：<code>#</code> 的数量代表了标题的级别。如，三个 <code>#</code> 表示三级标题 (<code>&lt;h3&gt;</code>)</p><pre class="line-numbers language-none"><code class="language-none"># 一级标题## 二级标题###### 六级标题<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h2><p>在行末添加两个或多个空格，然后按回车键，即可换行(<code>&lt;br&gt;</code>)<br>有争议的，因为很难在编辑器中直接看到空格，并且很多人在每个句子后面都会有意或无意地添加两个空格。由于这个原因，你可能要使用除结尾空格以外的其它方式来换行。幸运的是，几乎每个 Markdown 应用程序都支持另一种换行方式：HTML 的 <code>&lt;br&gt;</code> 标签。<br>为了兼容性，请在行尾添加“结尾空格”或 HTML 的 <code>&lt;br&gt;</code> 标签来实现换行。</p><pre class="line-numbers language-none"><code class="language-none">弃我去者昨日之日不可留&lt;br&gt;乱我心者今日之日多烦忧<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>弃我去者昨日之日不可留<br>乱我心者今日之日多烦忧</p><h2 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h2><h3 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a>粗体</h3><p>在需要加粗的部分<code>前后</code>各添加<code>两个</code>星号（asterisks）或下划线（underscores）</p><p>为兼容考虑，请使用星号（asterisks）</p><pre class="line-numbers language-none"><code class="language-none">**粗体**<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>粗体</strong></p><h3 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h3><p>在需要斜体的部分<code>前后</code>各添加<code>一个</code>星号（asterisks）或下划线（underscores）</p><p>为兼容考虑，请使用星号（asterisks）</p><pre class="line-numbers language-none"><code class="language-none">*斜体*<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><em>斜体</em></p><h3 id="斜体加粗"><a href="#斜体加粗" class="headerlink" title="斜体加粗"></a>斜体加粗</h3><p>在需要加粗的部分<code>前后</code>各添加<code>三个</code>星号（asterisks）或下划线（underscores）</p><p>为兼容考虑，请使用星号（asterisks）</p><pre class="line-numbers language-none"><code class="language-none">***斜体加粗***<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong><em>斜体加粗</em></strong></p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>要创建块引用，请在段落前添加一个 <code>&gt;</code> 符号</p><pre class="line-numbers language-none"><code class="language-none">&gt; 块引用<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>块引用</p></blockquote><h3 id="嵌套块引用"><a href="#嵌套块引用" class="headerlink" title="嵌套块引用"></a>嵌套块引用</h3><pre class="line-numbers language-none"><code class="language-none">&gt; 块引用&gt; 块引用<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>块引用</p><blockquote><p>块引用</p></blockquote></blockquote><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>在行头添加一个数字和一个英文句点，然后空格。数字不必按数学顺序排列，但是列表应当以数字 1 起始</p><ol><li>第一</li><li>第二</li><li>第三</li></ol><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>添加破折号 (-)、星号 (*) 或加号 (+) ，然后空格</p><ul><li>一花</li><li>二乃</li><li>三玖</li><li>四叶</li><li>五月</li></ul><h3 id="嵌套列表"><a href="#嵌套列表" class="headerlink" title="嵌套列表"></a>嵌套列表</h3><p>在列表项之下，输入<code>数字 英文句点</code> 或 <code>-</code> 、 <code>+</code> 、 <code>-</code>，然后输入 Tab 键缩进</p><pre class="line-numbers language-none"><code class="language-none">1. 五等分的花嫁- 一花- 二乃- 五等分的花嫁1. 三玖2. 四叶3. 五月<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>五等分的花嫁<ul><li>一花</li><li>二乃</li></ul></li></ol><ul><li>五等分的花嫁 <ol start="3"><li>三玖 </li><li>四叶</li><li>五月</li></ol></li></ul><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><h3 id="单行"><a href="#单行" class="headerlink" title="单行"></a>单行</h3><p>将单行代码放入两个反引号&#96;&#96;中</p><pre class="line-numbers language-none"><code class="language-none">&#96;print(&quot;Hello World!&quot;)&#96;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>print(&quot;Hello World!&quot;)</code></p><h3 id="多行"><a href="#多行" class="headerlink" title="多行"></a>多行</h3><p>代码块之前和之后的行上使用三个反引号**&#96;&#96;&#96;**或三个波浪号~ ~ ~,然后在后面跟上代码语言</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Hello World!"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="math公式"><a href="#math公式" class="headerlink" title="math公式"></a>math公式</h2><h3 id="行内公式"><a href="#行内公式" class="headerlink" title="行内公式"></a>行内公式</h3><p>在<code>$ $</code>之中填写公式</p><pre class="line-numbers language-wolfram" data-language="wolfram"><code class="language-wolfram">$<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>$<span class="token global-variable variable">$e</span><span class="token operator">^</span><span class="token punctuation">&#123;</span>x<span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">&#125;</span>\neq<span class="token punctuation">&#123;</span>e<span class="token operator">^</span>x<span class="token punctuation">&#125;</span><span class="token operator">^</span><span class="token number">2</span>$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>$e^{x^2}\neq{e^x}^2$</p><h3 id="块公式"><a href="#块公式" class="headerlink" title="块公式"></a>块公式</h3><p>在<code>$$ $$</code>中填写公式</p><pre class="line-numbers language-wolfram" data-language="wolfram"><code class="language-wolfram">$$<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>$$$<span class="token global-variable variable">$e</span><span class="token operator">^</span><span class="token punctuation">&#123;</span>x<span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">&#125;</span>\neq<span class="token punctuation">&#123;</span>e<span class="token operator">^</span>x<span class="token punctuation">&#125;</span><span class="token operator">^</span><span class="token number">2</span>$$$<span class="token global-variable variable">$H</span><span class="token punctuation">(</span>D_2<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span>\frac<span class="token punctuation">&#123;</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token number">4</span><span class="token punctuation">&#125;</span>\ log_2 \frac<span class="token punctuation">&#123;</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token number">4</span><span class="token punctuation">&#125;</span> <span class="token operator">+</span> \frac<span class="token punctuation">&#123;</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token number">4</span><span class="token punctuation">&#125;</span>\ log_2 \frac<span class="token punctuation">&#123;</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span><span class="token number">4</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span>$$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>$$e^{x^2}\neq{e^x}^2$$<br>$$H(D_2) &#x3D; -(\frac{2}{4}\ log_2 \frac{2}{4} + \frac{2}{4}\ log_2 \frac{2}{4}) &#x3D; 1$$</p><h3 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a>矩阵</h3><pre class="line-numbers language-wolfram" data-language="wolfram"><code class="language-wolfram">$$\begin<span class="token punctuation">&#123;</span>pmatrix<span class="token punctuation">&#125;</span>        <span class="token number">1</span> <span class="token operator">&amp;</span> a_1 <span class="token operator">&amp;</span> a_1<span class="token operator">^</span><span class="token number">2</span> <span class="token operator">&amp;</span> \cdots <span class="token operator">&amp;</span> a_1<span class="token operator">^</span>n \\        <span class="token number">1</span> <span class="token operator">&amp;</span> a_2 <span class="token operator">&amp;</span> a_2<span class="token operator">^</span><span class="token number">2</span> <span class="token operator">&amp;</span> \cdots <span class="token operator">&amp;</span> a_2<span class="token operator">^</span>n \\        \vdots <span class="token operator">&amp;</span> \vdots <span class="token operator">&amp;</span> \vdots <span class="token operator">&amp;</span> \ddots <span class="token operator">&amp;</span> \vdots \\        <span class="token number">1</span> <span class="token operator">&amp;</span> a_m <span class="token operator">&amp;</span> a_m<span class="token operator">^</span><span class="token number">2</span> <span class="token operator">&amp;</span> \cdots <span class="token operator">&amp;</span> a_m<span class="token operator">^</span>n \\        \end<span class="token punctuation">&#123;</span>pmatrix<span class="token punctuation">&#125;</span>$$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$$<br>\begin{pmatrix}<br>    1 &amp; a_1 &amp; a_1^2 &amp; \cdots &amp; a_1^n \<br>    1 &amp; a_2 &amp; a_2^2 &amp; \cdots &amp; a_2^n \<br>    \vdots &amp; \vdots &amp; \vdots &amp; \ddots &amp; \vdots \<br>    1 &amp; a_m &amp; a_m^2 &amp; \cdots &amp; a_m^n \<br>    \end{pmatrix}<br>$$</p><h3 id="行列式"><a href="#行列式" class="headerlink" title="行列式"></a>行列式</h3><pre class="line-numbers language-wolfram" data-language="wolfram"><code class="language-wolfram">$$\mathbf<span class="token punctuation">&#123;</span>V<span class="token punctuation">&#125;</span>_1 \times \mathbf<span class="token punctuation">&#123;</span>V<span class="token punctuation">&#125;</span>_2 <span class="token operator">=</span>  \begin<span class="token punctuation">&#123;</span>vmatrix<span class="token punctuation">&#125;</span>\mathbf<span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span> <span class="token operator">&amp;</span> \mathbf<span class="token punctuation">&#123;</span>j<span class="token punctuation">&#125;</span> <span class="token operator">&amp;</span> \mathbf<span class="token punctuation">&#123;</span>k<span class="token punctuation">&#125;</span> \\\frac<span class="token punctuation">&#123;</span>\partial X<span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>\partial u<span class="token punctuation">&#125;</span> <span class="token operator">&amp;</span>  \frac<span class="token punctuation">&#123;</span>\partial Y<span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>\partial u<span class="token punctuation">&#125;</span> <span class="token operator">&amp;</span> <span class="token number">0</span> \\\frac<span class="token punctuation">&#123;</span>\partial X<span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>\partial v<span class="token punctuation">&#125;</span> <span class="token operator">&amp;</span>  \frac<span class="token punctuation">&#123;</span>\partial Y<span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>\partial v<span class="token punctuation">&#125;</span> <span class="token operator">&amp;</span> <span class="token number">0</span> \\\end<span class="token punctuation">&#123;</span>vmatrix<span class="token punctuation">&#125;</span>$$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$$<br>\mathbf{V}_1 \times \mathbf{V}_2 &#x3D; \begin{vmatrix}<br>\mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \<br>\frac{\partial X}{\partial u} &amp; \frac{\partial Y}{\partial u} &amp; 0 \<br>\frac{\partial X}{\partial v} &amp; \frac{\partial Y}{\partial v} &amp; 0 \<br>\end{vmatrix}<br>$$</p><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>在单独一行上使用三个或多个星号 (<code>***</code>)、破折号 (<code>---</code>) 或下划线 (<code>___</code>) ，然后回车</p><p>为了兼容性，请在分隔线的前后均添加空白行</p><pre class="line-numbers language-none"><code class="language-none">***---___<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><hr><hr><h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h2><pre class="line-numbers language-text" data-language="text"><code class="language-text">~~明天开始努力~~ 现在开始！<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><del>明天开始努力</del> 现在开始！</p><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p>链接名放在中括号内，链接地址放在后面的括号中，链接 title 可选</p><p>超链接语法：<code>[超链接显示名](超链接地址 &quot;超链接title&quot;)</code></p><pre class="line-numbers language-none"><code class="language-none">[loyehのblog](https:&#x2F;&#x2F;lo-y-eh.github.io)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这是 <a href="https://lo-y-eh.github.io/">loyeh の blog</a></p><h3 id="title"><a href="#title" class="headerlink" title="title"></a>title</h3><p>链接 title 是当鼠标悬停在链接上时会出现的文字，是可选的，它放在圆括号中链接地址后面，跟链接地址之间以空格分隔</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">[Markdown语法](https://markdown.com.cn)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>[markdown 官方文档](<a href="https://markdown.com.cn/">Markdown 官方教程</a> “最好的 markdown 教程”)</p><h3 id="网址和-Email-地址"><a href="#网址和-Email-地址" class="headerlink" title="网址和 Email 地址"></a>网址和 Email 地址</h3><p>使用尖括号可以很方便地把 URL 或者 email 地址变成可点击的链接</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">&lt;https://markdown.com.cn>&lt;fake@example.com><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><a href="https://markdown.com.cn/">https://markdown.com.cn</a></p><p><a href="mailto:&#x66;&#x61;&#107;&#x65;&#x40;&#x65;&#x78;&#97;&#x6d;&#112;&#x6c;&#x65;&#x2e;&#99;&#111;&#x6d;">&#x66;&#x61;&#107;&#x65;&#x40;&#x65;&#x78;&#97;&#x6d;&#112;&#x6c;&#x65;&#x2e;&#99;&#111;&#x6d;</a></p><h3 id="带格式化的链接"><a href="#带格式化的链接" class="headerlink" title="带格式化的链接"></a>带格式化的链接</h3><blockquote><p>不同的 Markdown 应用程序处理 URL 中间的空格方式不一样。为了兼容，请尽量使用%20 代替空格</p></blockquote><ul><li><p>强调链接, 在链接语法前后增加星号</p><pre class="line-numbers language-none"><code class="language-none">This is the *[Markdown Guide](https:&#x2F;&#x2F;www.markdownguide.org)*.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>This is the <em><a href="https://www.markdownguide.org/">Markdown Guide</a></em></p></li><li><p>要将链接表示为代码，请在方括号中添加反引号</p><pre class="line-numbers language-none"><code class="language-none">See the section on [&#96;code&#96;](#code)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>See the section on <a href="https://markdown.com.cn/basic-syntax/links.html#code"><code>code</code></a>.</p></li></ul><h3 id="引用类型链接"><a href="#引用类型链接" class="headerlink" title="引用类型链接"></a>引用类型链接</h3><p>引用样式链接是一种特殊的链接，它使 URL 在 Markdown 中更易于显示和阅读</p><p>参考样式链接分为两部分：与文本保持内联的部分以及存储在文件中其他位置的部分，以使文本易于阅读</p><h4 id="链接的第一部分格式"><a href="#链接的第一部分格式" class="headerlink" title="链接的第一部分格式"></a>链接的第一部分格式</h4><p>引用类型的链接的第一部分使用两组括号进行格式设置。第一组方括号包围应显示为链接的文本。第二组括号显示了一个标签，该标签用于指向您存储在文档其他位置的链接。</p><p>尽管不是必需的，可以在第一组和第二组括号之间包含一个空格。第二组括号中的标签不区分大小写，可以包含字母，数字，空格或标点符号。</p><p>以下示例格式对于链接的第一部分效果相同：</p><ul><li><code>[hobbit-hole][1]</code></li><li><code>[hobbit-hole] [1]</code></li></ul><h4 id="链接的第二部分格式"><a href="#链接的第二部分格式" class="headerlink" title="链接的第二部分格式"></a>链接的第二部分格式</h4><p>引用类型链接的第二部分使用以下属性设置格式：</p><ol><li>放在括号中的标签，其后紧跟一个冒号和至少一个空格（例如<code>[label]:</code>）。</li><li>链接的 URL，可以选择将其括在尖括号中。</li><li>链接的可选标题，可以将其括在双引号，单引号或括号中。</li></ol><p>以下示例格式对于链接的第二部分效果相同：</p><ul><li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle</code></li><li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle &quot;Hobbit lifestyles&quot;</code></li><li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle &#39;Hobbit lifestyles&#39;</code></li><li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle (Hobbit lifestyles)</code></li><li><code>[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; &quot;Hobbit lifestyles&quot;</code></li><li><code>[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; &#39;Hobbit lifestyles&#39;</code></li><li><code>[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; (Hobbit lifestyles)</code></li></ul><p>可以将链接的第二部分放在 Markdown 文档中的任何位置。有些人将它们放在出现的段落之后，有些人则将它们放在文档的末尾（例如尾注或脚注）</p><h2 id="页面内跳转"><a href="#页面内跳转" class="headerlink" title="页面内跳转"></a>页面内跳转</h2><ol><li><p>跳转到标题：格式<code>[自定义名称](#id)</code>，比如跳转到上面的<code>标题</code>，则使用<code>[跳转到标题](#标题)</code>，<a href="#%E6%A0%87%E9%A2%98">跳转到标题</a></p></li><li><p>自由跳转：上述跳转有很大的局限性，如果想跳转到一个不是标题的位置（比如下面的竹子图片），则需要使用HTML语法在该位置附近自定义一个<code>锚</code>，实现自由跳转。<br>在图片的附近添加一个<code>锚点</code></p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>锚点<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后通过以下语句实现跳转</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">[页内自由跳转](#示例图)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="#%E7%AB%B9%E5%AD%90">跳转到竹子</a></p></li></ol><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>要添加图像，请使用感叹号 (<code>!</code>)，然后在方括号增加替代文本，图片链接放在圆括号里，括号里的链接后可以增加一个可选的图片标题文本。</p><p>插入图片 Markdown 语法代码：<code>![图片alt](图片链接 &quot;图片title&quot;)</code>。</p><p>对应的 HTML 代码：<code>&lt;img src=&quot;图片链接&quot; alt=&quot;图片alt&quot; title=&quot;图片title&quot;&gt;</code></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">![这是图片](https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402042011206.webp "Magic Gardens")<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402042011206.jpg" alt="这是图片"></p><h3 id="链接图片"><a href="#链接图片" class="headerlink" title="链接图片"></a>链接图片</h3><p>给图片增加链接，请将图像的 Markdown 括在方括号中，然后将链接添加在圆括号中。<span id="竹子"></span></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">[![竹子图片](/assets/img/bamboo.jpg "bamboo")](https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202310012338379.webp)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/Lo-Y-eH/image@main/image/202402042008019.webp" alt="竹子" title="Bamboo"></p><h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><p>以下字符都可以通过反斜杠字符达到转义目的</p><table><thead><tr><th align="center">character</th></tr></thead><tbody><tr><td align="center">\</td></tr><tr><td align="center">&#96;</td></tr><tr><td align="center">**</td></tr><tr><td align="center">_</td></tr><tr><td align="center">{}</td></tr><tr><td align="center">[]</td></tr><tr><td align="center">()</td></tr><tr><td align="center">#</td></tr><tr><td align="center">+</td></tr><tr><td align="center">-</td></tr><tr><td align="center">.</td></tr><tr><td align="center">!</td></tr><tr><td align="center">|</td></tr></tbody></table><h2 id="内嵌-HTML-标签"><a href="#内嵌-HTML-标签" class="headerlink" title="内嵌 HTML 标签"></a>内嵌 HTML 标签</h2><p>对于 Markdown 涵盖范围之外的标签，都可以直接在文件里面用 HTML 本身。如需使用 HTML，不需要额外标注这是 HTML 或是 Markdown，只需 HTML 标签添加到 Markdown 文本中即可。</p><h3 id="行级內联标签"><a href="#行级內联标签" class="headerlink" title="行级內联标签"></a>行级內联标签</h3><p>HTML 的行级內联标签如 <code>&lt;span&gt;</code>、<code>&lt;cite&gt;</code>、<code>&lt;del&gt;</code> 不受限制，可以在 Markdown 的段落、列表或是标题里任意使用。依照个人习惯，甚至可以不用 Markdown 格式，而采用 HTML 标签来格式化。例如：如果比较喜欢 HTML 的 <code>&lt;a&gt;</code> 或 <code>&lt;img&gt;</code> 标签，可以直接使用这些标签，而不用 Markdown 提供的链接或是图片语法。当你需要更改元素的属性时（例如为文本指定颜色或更改图像的宽度），使用 HTML 标签更方便些。</p><p>HTML 行级內联标签和区块标签不同，在內联标签的范围内， Markdown 的语法是可以解析的。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">This **word** is bold. This &lt;em>word&lt;/em> is italic.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>渲染效果如下:</p><p>This <strong>word</strong> is bold. This <em>word</em> is italic.</p><h3 id="区块标签"><a href="#区块标签" class="headerlink" title="区块标签"></a>区块标签</h3><p>区块元素 ── 比如 <code>&lt;div&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;pre&gt;</code>、<code>&lt;p&gt;</code> 等标签，必须在前后加上空行，以便于内容区分。而且这些元素的开始与结尾标签，不可以用 tab 或是空白来缩进。Markdown 会自动识别这区块元素，避免在区块标签前后加上没有必要的 <code>&lt;p&gt;</code> 标签。</p><p>例如，在 Markdown 文件里加上一段 HTML 表格：</p><pre class="line-numbers language-none"><code class="language-none">This is a regular paragraph.&lt;table&gt;    &lt;tr&gt;        &lt;td&gt;Foo&lt;&#x2F;td&gt;    &lt;&#x2F;tr&gt;&lt;&#x2F;table&gt;This is another regular paragraph.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>This is a regular paragraph.</p><table>    <tr>        <td>Foo</td>    </tr></table><p>This is another regular paragraph.</p><p>请注意，Markdown 语法在 HTML 区块标签中将不会被进行处理。例如，你无法在 HTML 区块内使用 Markdown 形式的<code>*强调*</code>。</p><h3 id="HTML-用法最佳实践"><a href="#HTML-用法最佳实践" class="headerlink" title="HTML 用法最佳实践"></a>HTML 用法最佳实践</h3><p>出于安全原因，并非所有 Markdown 应用程序都支持在 Markdown 文档中添加 HTML。如有疑问，请查看相应 Markdown 应用程序的手册。某些应用程序只支持 HTML 标签的子集。</p><p>对于 HTML 的块级元素 <code>&lt;div&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;pre&gt;</code> 和 <code>&lt;p&gt;</code>，请在其前后使用空行（blank lines）与其它内容进行分隔。尽量不要使用制表符（tabs）或空格（spaces）对 HTML 标签做缩进，否则将影响格式。</p><p>在 HTML 块级标签内不能使用 Markdown 语法。例如 <code>&lt;p&gt;italic and **bold**&lt;/p&gt;</code> 将不起作用。</p><h1 id="扩展语法"><a href="#扩展语法" class="headerlink" title="扩展语法"></a>扩展语法</h1><p><a href="https://markdown.com.cn/basic_syntax">基本语法</a>主要是为了应付大多数情况下的日常所需元素，但对于某些人来说还不够，这就是扩展语法的用武之地</p><h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h2><h3 id="可用性"><a href="#可用性" class="headerlink" title="可用性"></a>可用性</h3><p>并非所有Markdown应用程序都支持扩展语法元素。您需要检查您的应用程序所使用的轻量级标记语言是否支持您要使用的扩展语法元素。如果没有，那么仍然有可能在Markdown处理器中启用扩展。</p><h3 id="轻量标记语言"><a href="#轻量标记语言" class="headerlink" title="轻量标记语言"></a>轻量标记语言</h3><p>有几种轻量级标记语言是Markdown的超集。它们包含Gruber的基本语法，并通过添加其他元素（例如表，代码块，语法突出显示，URL自动链接和脚注）在此基础上构建。许多最受欢迎的Markdown应用程序使用以下轻量级标记语言之一：</p><ul><li><a href="https://commonmark.org/">CommonMark</a></li><li><a href="https://github.github.com/gfm/">GitHub Flavored Markdown (GFM)</a></li><li><a href="https://michelf.ca/projects/php-markdown/extra/">Markdown Extra</a></li><li><a href="https://fletcherpenney.net/multimarkdown/">MultiMarkdown</a></li><li><a href="https://rmarkdown.rstudio.com/">R Markdown</a></li></ul><h3 id="Markdown-处理器"><a href="#Markdown-处理器" class="headerlink" title="Markdown 处理器"></a>Markdown 处理器</h3><p>有许多<a href="https://github.com/markdown/markdown.github.com/wiki/Implementations">Markdown处理器</a>可用，它们中的许多允许您添加启用扩展语法元素的扩展。查看您所使用处理器的文档以获取更多信息。</p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>添加表格，使用三个或多个连字符（<code>---</code>）创建每列的标题，并使用管道（<code>|</code>）分隔每列。</p><pre class="line-numbers language-none"><code class="language-none">| Syntax      | Description || ----------- | ----------- || Header      | Title       || Paragraph   | Text        |<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th align="left">Syntax</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left">Header</td><td align="left">Title</td></tr><tr><td align="left">Paragraph</td><td align="left">Text</td></tr></tbody></table><p>单元格宽度可以变化，如下所示。呈现的输出将看起来相同。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">| Syntax | Description || --- | ----------- || Header | Title || Paragraph | Text |<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>Syntax</th><th>Description</th></tr></thead><tbody><tr><td>Header</td><td>Title</td></tr><tr><td>Paragraph</td><td>Text</td></tr></tbody></table><h3 id="对齐"><a href="#对齐" class="headerlink" title="对齐"></a>对齐</h3><p>您可以通过在标题行中的连字符的左侧，右侧或两侧添加冒号（<code>:</code>），将列中的文本对齐到左侧，右侧或中心。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">| Syntax      | Description | Test Text     || :---        |    :----:   |          ---: || Header      | Title       | Here's this   || Paragraph   | Text        | And more      |<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th align="left">Syntax</th><th align="center">Description</th><th align="right">Test Text</th></tr></thead><tbody><tr><td align="left">Header</td><td align="center">Title</td><td align="right">Here’s this</td></tr><tr><td align="left">Paragraph</td><td align="center">Text</td><td align="right">And more</td></tr></tbody></table><h3 id="表格中的文字"><a href="#表格中的文字" class="headerlink" title="表格中的文字"></a>表格中的文字</h3><p>可以在表格中设置文本格式。例如，可以添加链接，单行代码（仅反引号 &#96;&#96; ）和强调。</p><p>不能添加标题，块引用，列表，水平规则，图像或HTML标签。</p><h3 id="表中转义-“-”"><a href="#表中转义-“-”" class="headerlink" title="表中转义 “|”"></a>表中转义 “|”</h3><p>可以使用表格的HTML字符代码（<code>|</code>）在表中显示竖线（<code>|</code>）字符。</p><h2 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h2><p>脚注使您可以添加注释和参考，而不会使文档正文混乱。当您创建脚注时，带有脚注的上标数字会出现在您添加脚注参考的位置。读者可以单击链接以跳至页面底部的脚注内容。</p><p>要创建脚注参考，请在方括号（<code>[^1]</code>）内添加插入符号和标识符。标识符可以是数字或单词，但不能包含空格或制表符。标识符仅将脚注参考与脚注本身相关联-在输出中，脚注按顺序编号。</p><p>在括号内使用另一个插入符号和数字添加脚注，并用冒号和文本（<code>[^1]: My footnote.</code>）。您不必在文档末尾添加脚注。您可以将它们放在除列表，块引号和表之类的其他元素之外的任何位置。</p><pre class="line-numbers language-none"><code class="language-none">这是一个简单的脚注，[^1] [^1]: 这是第一个脚注这是一个更长的脚注，[^bignote][^bignote]: Here&#39;s one with multiple paragraphs and code.    Indent paragraphs to include them in the footnote.    &#96;&#123; my code &#125;&#96;    Add as many paragraphs as you like.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这是一个简单的脚注，<a href="%E8%BF%99%E6%98%AF%E7%AC%AC%E4%B8%80%E4%B8%AA%E8%84%9A%E6%B3%A8">^1</a> </p><p>这是一个更长的脚注，[^bignote]</p><p>[^bignote]: Here’s one with multiple paragraphs and code.</p><pre><code>Indent paragraphs to include them in the footnote.`&#123; my code &#125;`Add as many paragraphs as you like.</code></pre><p>脚注问题修复：[hexo<a href="https://seayj.cn/articles/33818/#shi-tian-jia-md-ding-yi-lie-biao">Matery] 玩转 Markdown | SeaYJ’s Blog</a></p><h2 id="标题ID"><a href="#标题ID" class="headerlink" title="标题ID"></a>标题ID</h2><p>许多Markdown处理器支持<code>标题</code>自定义ID，一些Markdown处理器会自动添加它们。添加自定义ID允许你直接链接到标题并使用CSS对其进行修改。要添加自定义标题ID，请在与标题相同的行上用大括号括起该自定义ID。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">### My Great Heading &#123;#custom-id&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>HTML看起来像这样：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>custom-id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>My Great Heading<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="链接到标题ID"><a href="#链接到标题ID" class="headerlink" title="链接到标题ID"></a>链接到标题ID</h3><p>通过创建带有数字符号（<code>#</code>）和自定义标题ID的<a href="(/basic-syntax/links.html">标准链接</a>，可以链接到文件中具有自定义ID的标题。</p><table><thead><tr><th>Markdown</th><th>HTML</th><th>预览效果</th></tr></thead><tbody><tr><td><code>[Heading IDs](#heading-ids)</code></td><td><code>&lt;a href=&quot;#heading-ids&quot;&gt;Heading IDs&lt;/a&gt;</code></td><td><a href="https://markdown.com.cn/extended-syntax/heading-ids.html#heading-ids">Heading IDs</a></td></tr></tbody></table><p>其他网站可以通过将自定义标题ID添加到网页的完整URL</p><h2 id="任务表"><a href="#任务表" class="headerlink" title="任务表"></a>任务表</h2><p>创建任务列表，在任务列表项之前添加破折号<code>-</code>和方括号<code>[ ]</code>，并在<code>[ ]</code>前面加上空格。要选择一个复选框，请在方括号<code>[x]</code>之间添加 x </p><pre class="line-numbers language-text" data-language="text"><code class="language-text">- [x] Write the press release- [ ] Update the website- [ ] Contact the media<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li><input checked="" disabled="" type="checkbox"> Write the press release</li><li><input disabled="" type="checkbox"> Update the website</li><li><input disabled="" type="checkbox"> Contact the media</li></ul><h2 id="Emoji"><a href="#Emoji" class="headerlink" title="Emoji"></a>Emoji</h2><p>有两种方法可以将表情符号添加到Markdown文件中：将表情符号复制并粘贴到Markdown格式的文本中，或者键入<em>emoji shortcodes</em>。</p><p>###复制和粘贴表情符号</p><p>在大多数情况下，您可以简单地从<a href="https://emojipedia.org/">Emojipedia</a> 等来源复制表情符号并将其粘贴到文档中。许多Markdown应用程序会自动以Markdown格式的文本显示表情符号。从Markdown应用程序导出的HTML和PDF文件应显示表情符号。</p><p><strong>Tip:</strong> 如果您使用的是静态网站生成器，请确保将HTML页面编码为UTF-8。.</p><p>###使用表情符号简码</p><p>一些Markdown应用程序允许您通过键入表情符号短代码来插入表情符号。这些以冒号开头和结尾，并包含表情符号的名称。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">去露营了！ :tent: 很快回来。真好笑！ :joy:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>效果如下：</p><p>去露营了！⛺很快回来。</p><p>真好笑！😂</p><p><strong>Note:</strong> 注意：您可以使用此<a href="https://gist.github.com/rxaviers/7360908">表情符号简码列表</a>，但请记住，表情符号简码因应用程序而异。</p><h1 id="自动网址链接"><a href="#自动网址链接" class="headerlink" title="自动网址链接"></a>自动网址链接</h1><p>许多Markdown处理器会自动将URL转换为链接。这意味着如果输入<a href="http://www.example.com，即使未[使用方括号](https://markdown.com.cn/basic-syntax/links.html)，也会自动将其转换为链接。">http://www.example.com，即使未[使用方括号](https://markdown.com.cn/basic-syntax/links.html)，也会自动将其转换为链接。</a></p><pre class="line-numbers language-text" data-language="text"><code class="language-text">http://www.example.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>呈现的输出如下所示：</p><p><a href="http://www.example.com/">http://www.example.com</a></p><h3 id="禁用自动URL链接"><a href="#禁用自动URL链接" class="headerlink" title="禁用自动URL链接"></a>禁用自动URL链接</h3><p>如果不希望自动链接URL，则可以使用反引号来禁止</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">`http://www.example.com`<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>呈现的输出如下所示：</p><p><code>http://www.example.com</code></p><h2 id="Diagrams"><a href="#Diagrams" class="headerlink" title="Diagrams"></a>Diagrams</h2>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> typora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/3eeb.html"/>
      <url>/posts/3eeb.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
